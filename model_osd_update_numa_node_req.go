/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OsdUpdateNumaNodeReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OsdUpdateNumaNodeReq{}

// OsdUpdateNumaNodeReq struct for OsdUpdateNumaNodeReq
type OsdUpdateNumaNodeReq struct {
	// apply policy in binding numa
	NumaApplyPolicy *string `json:"numa_apply_policy,omitempty"`
	// numa node id
	NumaNode *int64 `json:"numa_node,omitempty"`
}

// NewOsdUpdateNumaNodeReq instantiates a new OsdUpdateNumaNodeReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOsdUpdateNumaNodeReq() *OsdUpdateNumaNodeReq {
	this := OsdUpdateNumaNodeReq{}
	return &this
}

// NewOsdUpdateNumaNodeReqWithDefaults instantiates a new OsdUpdateNumaNodeReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOsdUpdateNumaNodeReqWithDefaults() *OsdUpdateNumaNodeReq {
	this := OsdUpdateNumaNodeReq{}
	return &this
}

// GetNumaApplyPolicy returns the NumaApplyPolicy field value if set, zero value otherwise.
func (o *OsdUpdateNumaNodeReq) GetNumaApplyPolicy() string {
	if o == nil || IsNil(o.NumaApplyPolicy) {
		var ret string
		return ret
	}
	return *o.NumaApplyPolicy
}

// GetNumaApplyPolicyOk returns a tuple with the NumaApplyPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsdUpdateNumaNodeReq) GetNumaApplyPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.NumaApplyPolicy) {
		return nil, false
	}
	return o.NumaApplyPolicy, true
}

// HasNumaApplyPolicy returns a boolean if a field has been set.
func (o *OsdUpdateNumaNodeReq) HasNumaApplyPolicy() bool {
	if o != nil && !IsNil(o.NumaApplyPolicy) {
		return true
	}

	return false
}

// SetNumaApplyPolicy gets a reference to the given string and assigns it to the NumaApplyPolicy field.
func (o *OsdUpdateNumaNodeReq) SetNumaApplyPolicy(v string) {
	o.NumaApplyPolicy = &v
}

// GetNumaNode returns the NumaNode field value if set, zero value otherwise.
func (o *OsdUpdateNumaNodeReq) GetNumaNode() int64 {
	if o == nil || IsNil(o.NumaNode) {
		var ret int64
		return ret
	}
	return *o.NumaNode
}

// GetNumaNodeOk returns a tuple with the NumaNode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsdUpdateNumaNodeReq) GetNumaNodeOk() (*int64, bool) {
	if o == nil || IsNil(o.NumaNode) {
		return nil, false
	}
	return o.NumaNode, true
}

// HasNumaNode returns a boolean if a field has been set.
func (o *OsdUpdateNumaNodeReq) HasNumaNode() bool {
	if o != nil && !IsNil(o.NumaNode) {
		return true
	}

	return false
}

// SetNumaNode gets a reference to the given int64 and assigns it to the NumaNode field.
func (o *OsdUpdateNumaNodeReq) SetNumaNode(v int64) {
	o.NumaNode = &v
}

func (o OsdUpdateNumaNodeReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OsdUpdateNumaNodeReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NumaApplyPolicy) {
		toSerialize["numa_apply_policy"] = o.NumaApplyPolicy
	}
	if !IsNil(o.NumaNode) {
		toSerialize["numa_node"] = o.NumaNode
	}
	return toSerialize, nil
}

type NullableOsdUpdateNumaNodeReq struct {
	value *OsdUpdateNumaNodeReq
	isSet bool
}

func (v NullableOsdUpdateNumaNodeReq) Get() *OsdUpdateNumaNodeReq {
	return v.value
}

func (v *NullableOsdUpdateNumaNodeReq) Set(val *OsdUpdateNumaNodeReq) {
	v.value = val
	v.isSet = true
}

func (v NullableOsdUpdateNumaNodeReq) IsSet() bool {
	return v.isSet
}

func (v *NullableOsdUpdateNumaNodeReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOsdUpdateNumaNodeReq(val *OsdUpdateNumaNodeReq) *NullableOsdUpdateNumaNodeReq {
	return &NullableOsdUpdateNumaNodeReq{value: val, isSet: true}
}

func (v NullableOsdUpdateNumaNodeReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOsdUpdateNumaNodeReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


