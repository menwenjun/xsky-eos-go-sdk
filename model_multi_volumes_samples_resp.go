/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MultiVolumesSamplesResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultiVolumesSamplesResp{}

// MultiVolumesSamplesResp struct for MultiVolumesSamplesResp
type MultiVolumesSamplesResp struct {
	BlockVolumesSamples []VolumeSamplesElem `json:"block_volumes_samples,omitempty"`
}

// NewMultiVolumesSamplesResp instantiates a new MultiVolumesSamplesResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultiVolumesSamplesResp() *MultiVolumesSamplesResp {
	this := MultiVolumesSamplesResp{}
	return &this
}

// NewMultiVolumesSamplesRespWithDefaults instantiates a new MultiVolumesSamplesResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultiVolumesSamplesRespWithDefaults() *MultiVolumesSamplesResp {
	this := MultiVolumesSamplesResp{}
	return &this
}

// GetBlockVolumesSamples returns the BlockVolumesSamples field value if set, zero value otherwise.
func (o *MultiVolumesSamplesResp) GetBlockVolumesSamples() []VolumeSamplesElem {
	if o == nil || IsNil(o.BlockVolumesSamples) {
		var ret []VolumeSamplesElem
		return ret
	}
	return o.BlockVolumesSamples
}

// GetBlockVolumesSamplesOk returns a tuple with the BlockVolumesSamples field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiVolumesSamplesResp) GetBlockVolumesSamplesOk() ([]VolumeSamplesElem, bool) {
	if o == nil || IsNil(o.BlockVolumesSamples) {
		return nil, false
	}
	return o.BlockVolumesSamples, true
}

// HasBlockVolumesSamples returns a boolean if a field has been set.
func (o *MultiVolumesSamplesResp) HasBlockVolumesSamples() bool {
	if o != nil && !IsNil(o.BlockVolumesSamples) {
		return true
	}

	return false
}

// SetBlockVolumesSamples gets a reference to the given []VolumeSamplesElem and assigns it to the BlockVolumesSamples field.
func (o *MultiVolumesSamplesResp) SetBlockVolumesSamples(v []VolumeSamplesElem) {
	o.BlockVolumesSamples = v
}

func (o MultiVolumesSamplesResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultiVolumesSamplesResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BlockVolumesSamples) {
		toSerialize["block_volumes_samples"] = o.BlockVolumesSamples
	}
	return toSerialize, nil
}

type NullableMultiVolumesSamplesResp struct {
	value *MultiVolumesSamplesResp
	isSet bool
}

func (v NullableMultiVolumesSamplesResp) Get() *MultiVolumesSamplesResp {
	return v.value
}

func (v *NullableMultiVolumesSamplesResp) Set(val *MultiVolumesSamplesResp) {
	v.value = val
	v.isSet = true
}

func (v NullableMultiVolumesSamplesResp) IsSet() bool {
	return v.isSet
}

func (v *NullableMultiVolumesSamplesResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultiVolumesSamplesResp(val *MultiVolumesSamplesResp) *NullableMultiVolumesSamplesResp {
	return &NullableMultiVolumesSamplesResp{value: val, isSet: true}
}

func (v NullableMultiVolumesSamplesResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultiVolumesSamplesResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


