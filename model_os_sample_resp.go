/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OSSampleResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OSSampleResp{}

// OSSampleResp struct for OSSampleResp
type OSSampleResp struct {
	OsSamples []map[string][]map[string]OSSample `json:"os_samples,omitempty"`
}

// NewOSSampleResp instantiates a new OSSampleResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOSSampleResp() *OSSampleResp {
	this := OSSampleResp{}
	return &this
}

// NewOSSampleRespWithDefaults instantiates a new OSSampleResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOSSampleRespWithDefaults() *OSSampleResp {
	this := OSSampleResp{}
	return &this
}

// GetOsSamples returns the OsSamples field value if set, zero value otherwise.
func (o *OSSampleResp) GetOsSamples() []map[string][]map[string]OSSample {
	if o == nil || IsNil(o.OsSamples) {
		var ret []map[string][]map[string]OSSample
		return ret
	}
	return o.OsSamples
}

// GetOsSamplesOk returns a tuple with the OsSamples field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSSampleResp) GetOsSamplesOk() ([]map[string][]map[string]OSSample, bool) {
	if o == nil || IsNil(o.OsSamples) {
		return nil, false
	}
	return o.OsSamples, true
}

// HasOsSamples returns a boolean if a field has been set.
func (o *OSSampleResp) HasOsSamples() bool {
	if o != nil && !IsNil(o.OsSamples) {
		return true
	}

	return false
}

// SetOsSamples gets a reference to the given []map[string][]map[string]OSSample and assigns it to the OsSamples field.
func (o *OSSampleResp) SetOsSamples(v []map[string][]map[string]OSSample) {
	o.OsSamples = v
}

func (o OSSampleResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OSSampleResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OsSamples) {
		toSerialize["os_samples"] = o.OsSamples
	}
	return toSerialize, nil
}

type NullableOSSampleResp struct {
	value *OSSampleResp
	isSet bool
}

func (v NullableOSSampleResp) Get() *OSSampleResp {
	return v.value
}

func (v *NullableOSSampleResp) Set(val *OSSampleResp) {
	v.value = val
	v.isSet = true
}

func (v NullableOSSampleResp) IsSet() bool {
	return v.isSet
}

func (v *NullableOSSampleResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSSampleResp(val *OSSampleResp) *NullableOSSampleResp {
	return &NullableOSSampleResp{value: val, isSet: true}
}

func (v NullableOSSampleResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSSampleResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


