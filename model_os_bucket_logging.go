/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the OSBucketLogging type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OSBucketLogging{}

// OSBucketLogging OSBucketLogging defines models of os bucket logging. +X:model:generate;
type OSBucketLogging struct {
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Prefix *string `json:"prefix,omitempty"`
	SourceBucketName *string `json:"source_bucket_name,omitempty"`
	TargetBucketName *string `json:"target_bucket_name,omitempty"`
	Update *time.Time `json:"update,omitempty"`
}

// NewOSBucketLogging instantiates a new OSBucketLogging object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOSBucketLogging() *OSBucketLogging {
	this := OSBucketLogging{}
	return &this
}

// NewOSBucketLoggingWithDefaults instantiates a new OSBucketLogging object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOSBucketLoggingWithDefaults() *OSBucketLogging {
	this := OSBucketLogging{}
	return &this
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *OSBucketLogging) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBucketLogging) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *OSBucketLogging) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *OSBucketLogging) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *OSBucketLogging) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBucketLogging) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *OSBucketLogging) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *OSBucketLogging) SetCreate(v time.Time) {
	o.Create = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OSBucketLogging) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBucketLogging) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OSBucketLogging) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *OSBucketLogging) SetId(v int64) {
	o.Id = &v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *OSBucketLogging) GetPrefix() string {
	if o == nil || IsNil(o.Prefix) {
		var ret string
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBucketLogging) GetPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.Prefix) {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *OSBucketLogging) HasPrefix() bool {
	if o != nil && !IsNil(o.Prefix) {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given string and assigns it to the Prefix field.
func (o *OSBucketLogging) SetPrefix(v string) {
	o.Prefix = &v
}

// GetSourceBucketName returns the SourceBucketName field value if set, zero value otherwise.
func (o *OSBucketLogging) GetSourceBucketName() string {
	if o == nil || IsNil(o.SourceBucketName) {
		var ret string
		return ret
	}
	return *o.SourceBucketName
}

// GetSourceBucketNameOk returns a tuple with the SourceBucketName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBucketLogging) GetSourceBucketNameOk() (*string, bool) {
	if o == nil || IsNil(o.SourceBucketName) {
		return nil, false
	}
	return o.SourceBucketName, true
}

// HasSourceBucketName returns a boolean if a field has been set.
func (o *OSBucketLogging) HasSourceBucketName() bool {
	if o != nil && !IsNil(o.SourceBucketName) {
		return true
	}

	return false
}

// SetSourceBucketName gets a reference to the given string and assigns it to the SourceBucketName field.
func (o *OSBucketLogging) SetSourceBucketName(v string) {
	o.SourceBucketName = &v
}

// GetTargetBucketName returns the TargetBucketName field value if set, zero value otherwise.
func (o *OSBucketLogging) GetTargetBucketName() string {
	if o == nil || IsNil(o.TargetBucketName) {
		var ret string
		return ret
	}
	return *o.TargetBucketName
}

// GetTargetBucketNameOk returns a tuple with the TargetBucketName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBucketLogging) GetTargetBucketNameOk() (*string, bool) {
	if o == nil || IsNil(o.TargetBucketName) {
		return nil, false
	}
	return o.TargetBucketName, true
}

// HasTargetBucketName returns a boolean if a field has been set.
func (o *OSBucketLogging) HasTargetBucketName() bool {
	if o != nil && !IsNil(o.TargetBucketName) {
		return true
	}

	return false
}

// SetTargetBucketName gets a reference to the given string and assigns it to the TargetBucketName field.
func (o *OSBucketLogging) SetTargetBucketName(v string) {
	o.TargetBucketName = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *OSBucketLogging) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBucketLogging) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *OSBucketLogging) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *OSBucketLogging) SetUpdate(v time.Time) {
	o.Update = &v
}

func (o OSBucketLogging) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OSBucketLogging) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Prefix) {
		toSerialize["prefix"] = o.Prefix
	}
	if !IsNil(o.SourceBucketName) {
		toSerialize["source_bucket_name"] = o.SourceBucketName
	}
	if !IsNil(o.TargetBucketName) {
		toSerialize["target_bucket_name"] = o.TargetBucketName
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	return toSerialize, nil
}

type NullableOSBucketLogging struct {
	value *OSBucketLogging
	isSet bool
}

func (v NullableOSBucketLogging) Get() *OSBucketLogging {
	return v.value
}

func (v *NullableOSBucketLogging) Set(val *OSBucketLogging) {
	v.value = val
	v.isSet = true
}

func (v NullableOSBucketLogging) IsSet() bool {
	return v.isSet
}

func (v *NullableOSBucketLogging) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSBucketLogging(val *OSBucketLogging) *NullableOSBucketLogging {
	return &NullableOSBucketLogging{value: val, isSet: true}
}

func (v NullableOSBucketLogging) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSBucketLogging) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


