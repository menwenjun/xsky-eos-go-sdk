/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the Region type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Region{}

// Region Region is the model of region +X:model:generate;
type Region struct {
	AccessToken *string `json:"access_token,omitempty"`
	AccessUrl *string `json:"access_url,omitempty"`
	// TODO(siming): removed in 602
	AdminNetwork *string `json:"admin_network,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	Id *int64 `json:"id,omitempty"`
	IsLocal *bool `json:"is_local,omitempty"`
	Name *string `json:"name,omitempty"`
	StatsReservedDays *int64 `json:"stats_reserved_days,omitempty"`
	Status *string `json:"status,omitempty"`
	Update *time.Time `json:"update,omitempty"`
	Uuid *string `json:"uuid,omitempty"`
}

// NewRegion instantiates a new Region object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegion() *Region {
	this := Region{}
	return &this
}

// NewRegionWithDefaults instantiates a new Region object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegionWithDefaults() *Region {
	this := Region{}
	return &this
}

// GetAccessToken returns the AccessToken field value if set, zero value otherwise.
func (o *Region) GetAccessToken() string {
	if o == nil || IsNil(o.AccessToken) {
		var ret string
		return ret
	}
	return *o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Region) GetAccessTokenOk() (*string, bool) {
	if o == nil || IsNil(o.AccessToken) {
		return nil, false
	}
	return o.AccessToken, true
}

// HasAccessToken returns a boolean if a field has been set.
func (o *Region) HasAccessToken() bool {
	if o != nil && !IsNil(o.AccessToken) {
		return true
	}

	return false
}

// SetAccessToken gets a reference to the given string and assigns it to the AccessToken field.
func (o *Region) SetAccessToken(v string) {
	o.AccessToken = &v
}

// GetAccessUrl returns the AccessUrl field value if set, zero value otherwise.
func (o *Region) GetAccessUrl() string {
	if o == nil || IsNil(o.AccessUrl) {
		var ret string
		return ret
	}
	return *o.AccessUrl
}

// GetAccessUrlOk returns a tuple with the AccessUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Region) GetAccessUrlOk() (*string, bool) {
	if o == nil || IsNil(o.AccessUrl) {
		return nil, false
	}
	return o.AccessUrl, true
}

// HasAccessUrl returns a boolean if a field has been set.
func (o *Region) HasAccessUrl() bool {
	if o != nil && !IsNil(o.AccessUrl) {
		return true
	}

	return false
}

// SetAccessUrl gets a reference to the given string and assigns it to the AccessUrl field.
func (o *Region) SetAccessUrl(v string) {
	o.AccessUrl = &v
}

// GetAdminNetwork returns the AdminNetwork field value if set, zero value otherwise.
func (o *Region) GetAdminNetwork() string {
	if o == nil || IsNil(o.AdminNetwork) {
		var ret string
		return ret
	}
	return *o.AdminNetwork
}

// GetAdminNetworkOk returns a tuple with the AdminNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Region) GetAdminNetworkOk() (*string, bool) {
	if o == nil || IsNil(o.AdminNetwork) {
		return nil, false
	}
	return o.AdminNetwork, true
}

// HasAdminNetwork returns a boolean if a field has been set.
func (o *Region) HasAdminNetwork() bool {
	if o != nil && !IsNil(o.AdminNetwork) {
		return true
	}

	return false
}

// SetAdminNetwork gets a reference to the given string and assigns it to the AdminNetwork field.
func (o *Region) SetAdminNetwork(v string) {
	o.AdminNetwork = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *Region) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Region) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *Region) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *Region) SetCreate(v time.Time) {
	o.Create = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Region) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Region) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Region) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *Region) SetId(v int64) {
	o.Id = &v
}

// GetIsLocal returns the IsLocal field value if set, zero value otherwise.
func (o *Region) GetIsLocal() bool {
	if o == nil || IsNil(o.IsLocal) {
		var ret bool
		return ret
	}
	return *o.IsLocal
}

// GetIsLocalOk returns a tuple with the IsLocal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Region) GetIsLocalOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLocal) {
		return nil, false
	}
	return o.IsLocal, true
}

// HasIsLocal returns a boolean if a field has been set.
func (o *Region) HasIsLocal() bool {
	if o != nil && !IsNil(o.IsLocal) {
		return true
	}

	return false
}

// SetIsLocal gets a reference to the given bool and assigns it to the IsLocal field.
func (o *Region) SetIsLocal(v bool) {
	o.IsLocal = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Region) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Region) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Region) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Region) SetName(v string) {
	o.Name = &v
}

// GetStatsReservedDays returns the StatsReservedDays field value if set, zero value otherwise.
func (o *Region) GetStatsReservedDays() int64 {
	if o == nil || IsNil(o.StatsReservedDays) {
		var ret int64
		return ret
	}
	return *o.StatsReservedDays
}

// GetStatsReservedDaysOk returns a tuple with the StatsReservedDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Region) GetStatsReservedDaysOk() (*int64, bool) {
	if o == nil || IsNil(o.StatsReservedDays) {
		return nil, false
	}
	return o.StatsReservedDays, true
}

// HasStatsReservedDays returns a boolean if a field has been set.
func (o *Region) HasStatsReservedDays() bool {
	if o != nil && !IsNil(o.StatsReservedDays) {
		return true
	}

	return false
}

// SetStatsReservedDays gets a reference to the given int64 and assigns it to the StatsReservedDays field.
func (o *Region) SetStatsReservedDays(v int64) {
	o.StatsReservedDays = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Region) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Region) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Region) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Region) SetStatus(v string) {
	o.Status = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *Region) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Region) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *Region) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *Region) SetUpdate(v time.Time) {
	o.Update = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *Region) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Region) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *Region) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *Region) SetUuid(v string) {
	o.Uuid = &v
}

func (o Region) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Region) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessToken) {
		toSerialize["access_token"] = o.AccessToken
	}
	if !IsNil(o.AccessUrl) {
		toSerialize["access_url"] = o.AccessUrl
	}
	if !IsNil(o.AdminNetwork) {
		toSerialize["admin_network"] = o.AdminNetwork
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IsLocal) {
		toSerialize["is_local"] = o.IsLocal
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.StatsReservedDays) {
		toSerialize["stats_reserved_days"] = o.StatsReservedDays
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	return toSerialize, nil
}

type NullableRegion struct {
	value *Region
	isSet bool
}

func (v NullableRegion) Get() *Region {
	return v.value
}

func (v *NullableRegion) Set(val *Region) {
	v.value = val
	v.isSet = true
}

func (v NullableRegion) IsSet() bool {
	return v.isSet
}

func (v *NullableRegion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegion(val *Region) *NullableRegion {
	return &NullableRegion{value: val, isSet: true}
}

func (v NullableRegion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


