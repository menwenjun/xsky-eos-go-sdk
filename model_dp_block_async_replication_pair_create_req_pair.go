/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DpBlockAsyncReplicationPairCreateReqPair type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DpBlockAsyncReplicationPairCreateReqPair{}

// DpBlockAsyncReplicationPairCreateReqPair struct for DpBlockAsyncReplicationPairCreateReqPair
type DpBlockAsyncReplicationPairCreateReqPair struct {
	// chain name
	ChainName string `json:"chain_name"`
	// group pair id
	GroupPairId int64 `json:"group_pair_id"`
	// master cluster fs id
	MasterClusterFsId string `json:"master_cluster_fs_id"`
	// gateway ip
	MasterGateway string `json:"master_gateway"`
	// master pair id
	MasterPairId int64 `json:"master_pair_id"`
	// master pool id
	MasterPoolId int64 `json:"master_pool_id"`
	// master pool name
	MasterPoolName string `json:"master_pool_name"`
	// master volume id
	MasterVolumeId int64 `json:"master_volume_id"`
	// master volume name
	MasterVolumeName string `json:"master_volume_name"`
	// volume size
	MasterVolumeSize int64 `json:"master_volume_size"`
	// master volume uuid
	MasterVolumeUuid *string `json:"master_volume_uuid,omitempty"`
	// policy cron
	PolicyCron string `json:"policy_cron"`
	// gateway ip
	SlaveGateway string `json:"slave_gateway"`
	// slave pool id
	SlavePoolId int64 `json:"slave_pool_id"`
	// slave pool name
	SlavePoolName string `json:"slave_pool_name"`
	// slave volume name
	SlaveVolumeName string `json:"slave_volume_name"`
}

type _DpBlockAsyncReplicationPairCreateReqPair DpBlockAsyncReplicationPairCreateReqPair

// NewDpBlockAsyncReplicationPairCreateReqPair instantiates a new DpBlockAsyncReplicationPairCreateReqPair object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDpBlockAsyncReplicationPairCreateReqPair(chainName string, groupPairId int64, masterClusterFsId string, masterGateway string, masterPairId int64, masterPoolId int64, masterPoolName string, masterVolumeId int64, masterVolumeName string, masterVolumeSize int64, policyCron string, slaveGateway string, slavePoolId int64, slavePoolName string, slaveVolumeName string) *DpBlockAsyncReplicationPairCreateReqPair {
	this := DpBlockAsyncReplicationPairCreateReqPair{}
	this.ChainName = chainName
	this.GroupPairId = groupPairId
	this.MasterClusterFsId = masterClusterFsId
	this.MasterGateway = masterGateway
	this.MasterPairId = masterPairId
	this.MasterPoolId = masterPoolId
	this.MasterPoolName = masterPoolName
	this.MasterVolumeId = masterVolumeId
	this.MasterVolumeName = masterVolumeName
	this.MasterVolumeSize = masterVolumeSize
	this.PolicyCron = policyCron
	this.SlaveGateway = slaveGateway
	this.SlavePoolId = slavePoolId
	this.SlavePoolName = slavePoolName
	this.SlaveVolumeName = slaveVolumeName
	return &this
}

// NewDpBlockAsyncReplicationPairCreateReqPairWithDefaults instantiates a new DpBlockAsyncReplicationPairCreateReqPair object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDpBlockAsyncReplicationPairCreateReqPairWithDefaults() *DpBlockAsyncReplicationPairCreateReqPair {
	this := DpBlockAsyncReplicationPairCreateReqPair{}
	return &this
}

// GetChainName returns the ChainName field value
func (o *DpBlockAsyncReplicationPairCreateReqPair) GetChainName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChainName
}

// GetChainNameOk returns a tuple with the ChainName field value
// and a boolean to check if the value has been set.
func (o *DpBlockAsyncReplicationPairCreateReqPair) GetChainNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChainName, true
}

// SetChainName sets field value
func (o *DpBlockAsyncReplicationPairCreateReqPair) SetChainName(v string) {
	o.ChainName = v
}

// GetGroupPairId returns the GroupPairId field value
func (o *DpBlockAsyncReplicationPairCreateReqPair) GetGroupPairId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.GroupPairId
}

// GetGroupPairIdOk returns a tuple with the GroupPairId field value
// and a boolean to check if the value has been set.
func (o *DpBlockAsyncReplicationPairCreateReqPair) GetGroupPairIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupPairId, true
}

// SetGroupPairId sets field value
func (o *DpBlockAsyncReplicationPairCreateReqPair) SetGroupPairId(v int64) {
	o.GroupPairId = v
}

// GetMasterClusterFsId returns the MasterClusterFsId field value
func (o *DpBlockAsyncReplicationPairCreateReqPair) GetMasterClusterFsId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MasterClusterFsId
}

// GetMasterClusterFsIdOk returns a tuple with the MasterClusterFsId field value
// and a boolean to check if the value has been set.
func (o *DpBlockAsyncReplicationPairCreateReqPair) GetMasterClusterFsIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MasterClusterFsId, true
}

// SetMasterClusterFsId sets field value
func (o *DpBlockAsyncReplicationPairCreateReqPair) SetMasterClusterFsId(v string) {
	o.MasterClusterFsId = v
}

// GetMasterGateway returns the MasterGateway field value
func (o *DpBlockAsyncReplicationPairCreateReqPair) GetMasterGateway() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MasterGateway
}

// GetMasterGatewayOk returns a tuple with the MasterGateway field value
// and a boolean to check if the value has been set.
func (o *DpBlockAsyncReplicationPairCreateReqPair) GetMasterGatewayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MasterGateway, true
}

// SetMasterGateway sets field value
func (o *DpBlockAsyncReplicationPairCreateReqPair) SetMasterGateway(v string) {
	o.MasterGateway = v
}

// GetMasterPairId returns the MasterPairId field value
func (o *DpBlockAsyncReplicationPairCreateReqPair) GetMasterPairId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.MasterPairId
}

// GetMasterPairIdOk returns a tuple with the MasterPairId field value
// and a boolean to check if the value has been set.
func (o *DpBlockAsyncReplicationPairCreateReqPair) GetMasterPairIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MasterPairId, true
}

// SetMasterPairId sets field value
func (o *DpBlockAsyncReplicationPairCreateReqPair) SetMasterPairId(v int64) {
	o.MasterPairId = v
}

// GetMasterPoolId returns the MasterPoolId field value
func (o *DpBlockAsyncReplicationPairCreateReqPair) GetMasterPoolId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.MasterPoolId
}

// GetMasterPoolIdOk returns a tuple with the MasterPoolId field value
// and a boolean to check if the value has been set.
func (o *DpBlockAsyncReplicationPairCreateReqPair) GetMasterPoolIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MasterPoolId, true
}

// SetMasterPoolId sets field value
func (o *DpBlockAsyncReplicationPairCreateReqPair) SetMasterPoolId(v int64) {
	o.MasterPoolId = v
}

// GetMasterPoolName returns the MasterPoolName field value
func (o *DpBlockAsyncReplicationPairCreateReqPair) GetMasterPoolName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MasterPoolName
}

// GetMasterPoolNameOk returns a tuple with the MasterPoolName field value
// and a boolean to check if the value has been set.
func (o *DpBlockAsyncReplicationPairCreateReqPair) GetMasterPoolNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MasterPoolName, true
}

// SetMasterPoolName sets field value
func (o *DpBlockAsyncReplicationPairCreateReqPair) SetMasterPoolName(v string) {
	o.MasterPoolName = v
}

// GetMasterVolumeId returns the MasterVolumeId field value
func (o *DpBlockAsyncReplicationPairCreateReqPair) GetMasterVolumeId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.MasterVolumeId
}

// GetMasterVolumeIdOk returns a tuple with the MasterVolumeId field value
// and a boolean to check if the value has been set.
func (o *DpBlockAsyncReplicationPairCreateReqPair) GetMasterVolumeIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MasterVolumeId, true
}

// SetMasterVolumeId sets field value
func (o *DpBlockAsyncReplicationPairCreateReqPair) SetMasterVolumeId(v int64) {
	o.MasterVolumeId = v
}

// GetMasterVolumeName returns the MasterVolumeName field value
func (o *DpBlockAsyncReplicationPairCreateReqPair) GetMasterVolumeName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MasterVolumeName
}

// GetMasterVolumeNameOk returns a tuple with the MasterVolumeName field value
// and a boolean to check if the value has been set.
func (o *DpBlockAsyncReplicationPairCreateReqPair) GetMasterVolumeNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MasterVolumeName, true
}

// SetMasterVolumeName sets field value
func (o *DpBlockAsyncReplicationPairCreateReqPair) SetMasterVolumeName(v string) {
	o.MasterVolumeName = v
}

// GetMasterVolumeSize returns the MasterVolumeSize field value
func (o *DpBlockAsyncReplicationPairCreateReqPair) GetMasterVolumeSize() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.MasterVolumeSize
}

// GetMasterVolumeSizeOk returns a tuple with the MasterVolumeSize field value
// and a boolean to check if the value has been set.
func (o *DpBlockAsyncReplicationPairCreateReqPair) GetMasterVolumeSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MasterVolumeSize, true
}

// SetMasterVolumeSize sets field value
func (o *DpBlockAsyncReplicationPairCreateReqPair) SetMasterVolumeSize(v int64) {
	o.MasterVolumeSize = v
}

// GetMasterVolumeUuid returns the MasterVolumeUuid field value if set, zero value otherwise.
func (o *DpBlockAsyncReplicationPairCreateReqPair) GetMasterVolumeUuid() string {
	if o == nil || IsNil(o.MasterVolumeUuid) {
		var ret string
		return ret
	}
	return *o.MasterVolumeUuid
}

// GetMasterVolumeUuidOk returns a tuple with the MasterVolumeUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpBlockAsyncReplicationPairCreateReqPair) GetMasterVolumeUuidOk() (*string, bool) {
	if o == nil || IsNil(o.MasterVolumeUuid) {
		return nil, false
	}
	return o.MasterVolumeUuid, true
}

// HasMasterVolumeUuid returns a boolean if a field has been set.
func (o *DpBlockAsyncReplicationPairCreateReqPair) HasMasterVolumeUuid() bool {
	if o != nil && !IsNil(o.MasterVolumeUuid) {
		return true
	}

	return false
}

// SetMasterVolumeUuid gets a reference to the given string and assigns it to the MasterVolumeUuid field.
func (o *DpBlockAsyncReplicationPairCreateReqPair) SetMasterVolumeUuid(v string) {
	o.MasterVolumeUuid = &v
}

// GetPolicyCron returns the PolicyCron field value
func (o *DpBlockAsyncReplicationPairCreateReqPair) GetPolicyCron() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PolicyCron
}

// GetPolicyCronOk returns a tuple with the PolicyCron field value
// and a boolean to check if the value has been set.
func (o *DpBlockAsyncReplicationPairCreateReqPair) GetPolicyCronOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PolicyCron, true
}

// SetPolicyCron sets field value
func (o *DpBlockAsyncReplicationPairCreateReqPair) SetPolicyCron(v string) {
	o.PolicyCron = v
}

// GetSlaveGateway returns the SlaveGateway field value
func (o *DpBlockAsyncReplicationPairCreateReqPair) GetSlaveGateway() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SlaveGateway
}

// GetSlaveGatewayOk returns a tuple with the SlaveGateway field value
// and a boolean to check if the value has been set.
func (o *DpBlockAsyncReplicationPairCreateReqPair) GetSlaveGatewayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SlaveGateway, true
}

// SetSlaveGateway sets field value
func (o *DpBlockAsyncReplicationPairCreateReqPair) SetSlaveGateway(v string) {
	o.SlaveGateway = v
}

// GetSlavePoolId returns the SlavePoolId field value
func (o *DpBlockAsyncReplicationPairCreateReqPair) GetSlavePoolId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.SlavePoolId
}

// GetSlavePoolIdOk returns a tuple with the SlavePoolId field value
// and a boolean to check if the value has been set.
func (o *DpBlockAsyncReplicationPairCreateReqPair) GetSlavePoolIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SlavePoolId, true
}

// SetSlavePoolId sets field value
func (o *DpBlockAsyncReplicationPairCreateReqPair) SetSlavePoolId(v int64) {
	o.SlavePoolId = v
}

// GetSlavePoolName returns the SlavePoolName field value
func (o *DpBlockAsyncReplicationPairCreateReqPair) GetSlavePoolName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SlavePoolName
}

// GetSlavePoolNameOk returns a tuple with the SlavePoolName field value
// and a boolean to check if the value has been set.
func (o *DpBlockAsyncReplicationPairCreateReqPair) GetSlavePoolNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SlavePoolName, true
}

// SetSlavePoolName sets field value
func (o *DpBlockAsyncReplicationPairCreateReqPair) SetSlavePoolName(v string) {
	o.SlavePoolName = v
}

// GetSlaveVolumeName returns the SlaveVolumeName field value
func (o *DpBlockAsyncReplicationPairCreateReqPair) GetSlaveVolumeName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SlaveVolumeName
}

// GetSlaveVolumeNameOk returns a tuple with the SlaveVolumeName field value
// and a boolean to check if the value has been set.
func (o *DpBlockAsyncReplicationPairCreateReqPair) GetSlaveVolumeNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SlaveVolumeName, true
}

// SetSlaveVolumeName sets field value
func (o *DpBlockAsyncReplicationPairCreateReqPair) SetSlaveVolumeName(v string) {
	o.SlaveVolumeName = v
}

func (o DpBlockAsyncReplicationPairCreateReqPair) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DpBlockAsyncReplicationPairCreateReqPair) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["chain_name"] = o.ChainName
	toSerialize["group_pair_id"] = o.GroupPairId
	toSerialize["master_cluster_fs_id"] = o.MasterClusterFsId
	toSerialize["master_gateway"] = o.MasterGateway
	toSerialize["master_pair_id"] = o.MasterPairId
	toSerialize["master_pool_id"] = o.MasterPoolId
	toSerialize["master_pool_name"] = o.MasterPoolName
	toSerialize["master_volume_id"] = o.MasterVolumeId
	toSerialize["master_volume_name"] = o.MasterVolumeName
	toSerialize["master_volume_size"] = o.MasterVolumeSize
	if !IsNil(o.MasterVolumeUuid) {
		toSerialize["master_volume_uuid"] = o.MasterVolumeUuid
	}
	toSerialize["policy_cron"] = o.PolicyCron
	toSerialize["slave_gateway"] = o.SlaveGateway
	toSerialize["slave_pool_id"] = o.SlavePoolId
	toSerialize["slave_pool_name"] = o.SlavePoolName
	toSerialize["slave_volume_name"] = o.SlaveVolumeName
	return toSerialize, nil
}

func (o *DpBlockAsyncReplicationPairCreateReqPair) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"chain_name",
		"group_pair_id",
		"master_cluster_fs_id",
		"master_gateway",
		"master_pair_id",
		"master_pool_id",
		"master_pool_name",
		"master_volume_id",
		"master_volume_name",
		"master_volume_size",
		"policy_cron",
		"slave_gateway",
		"slave_pool_id",
		"slave_pool_name",
		"slave_volume_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDpBlockAsyncReplicationPairCreateReqPair := _DpBlockAsyncReplicationPairCreateReqPair{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDpBlockAsyncReplicationPairCreateReqPair)

	if err != nil {
		return err
	}

	*o = DpBlockAsyncReplicationPairCreateReqPair(varDpBlockAsyncReplicationPairCreateReqPair)

	return err
}

type NullableDpBlockAsyncReplicationPairCreateReqPair struct {
	value *DpBlockAsyncReplicationPairCreateReqPair
	isSet bool
}

func (v NullableDpBlockAsyncReplicationPairCreateReqPair) Get() *DpBlockAsyncReplicationPairCreateReqPair {
	return v.value
}

func (v *NullableDpBlockAsyncReplicationPairCreateReqPair) Set(val *DpBlockAsyncReplicationPairCreateReqPair) {
	v.value = val
	v.isSet = true
}

func (v NullableDpBlockAsyncReplicationPairCreateReqPair) IsSet() bool {
	return v.isSet
}

func (v *NullableDpBlockAsyncReplicationPairCreateReqPair) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDpBlockAsyncReplicationPairCreateReqPair(val *DpBlockAsyncReplicationPairCreateReqPair) *NullableDpBlockAsyncReplicationPairCreateReqPair {
	return &NullableDpBlockAsyncReplicationPairCreateReqPair{value: val, isSet: true}
}

func (v NullableDpBlockAsyncReplicationPairCreateReqPair) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDpBlockAsyncReplicationPairCreateReqPair) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


