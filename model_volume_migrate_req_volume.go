/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the VolumeMigrateReqVolume type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeMigrateReqVolume{}

// VolumeMigrateReqVolume struct for VolumeMigrateReqVolume
type VolumeMigrateReqVolume struct {
	// migrate destination pool
	DestPoolId int64 `json:"dest_pool_id"`
	MigrationStripes *int64 `json:"migration_stripes,omitempty"`
}

type _VolumeMigrateReqVolume VolumeMigrateReqVolume

// NewVolumeMigrateReqVolume instantiates a new VolumeMigrateReqVolume object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeMigrateReqVolume(destPoolId int64) *VolumeMigrateReqVolume {
	this := VolumeMigrateReqVolume{}
	this.DestPoolId = destPoolId
	return &this
}

// NewVolumeMigrateReqVolumeWithDefaults instantiates a new VolumeMigrateReqVolume object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeMigrateReqVolumeWithDefaults() *VolumeMigrateReqVolume {
	this := VolumeMigrateReqVolume{}
	return &this
}

// GetDestPoolId returns the DestPoolId field value
func (o *VolumeMigrateReqVolume) GetDestPoolId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DestPoolId
}

// GetDestPoolIdOk returns a tuple with the DestPoolId field value
// and a boolean to check if the value has been set.
func (o *VolumeMigrateReqVolume) GetDestPoolIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestPoolId, true
}

// SetDestPoolId sets field value
func (o *VolumeMigrateReqVolume) SetDestPoolId(v int64) {
	o.DestPoolId = v
}

// GetMigrationStripes returns the MigrationStripes field value if set, zero value otherwise.
func (o *VolumeMigrateReqVolume) GetMigrationStripes() int64 {
	if o == nil || IsNil(o.MigrationStripes) {
		var ret int64
		return ret
	}
	return *o.MigrationStripes
}

// GetMigrationStripesOk returns a tuple with the MigrationStripes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeMigrateReqVolume) GetMigrationStripesOk() (*int64, bool) {
	if o == nil || IsNil(o.MigrationStripes) {
		return nil, false
	}
	return o.MigrationStripes, true
}

// HasMigrationStripes returns a boolean if a field has been set.
func (o *VolumeMigrateReqVolume) HasMigrationStripes() bool {
	if o != nil && !IsNil(o.MigrationStripes) {
		return true
	}

	return false
}

// SetMigrationStripes gets a reference to the given int64 and assigns it to the MigrationStripes field.
func (o *VolumeMigrateReqVolume) SetMigrationStripes(v int64) {
	o.MigrationStripes = &v
}

func (o VolumeMigrateReqVolume) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeMigrateReqVolume) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dest_pool_id"] = o.DestPoolId
	if !IsNil(o.MigrationStripes) {
		toSerialize["migration_stripes"] = o.MigrationStripes
	}
	return toSerialize, nil
}

func (o *VolumeMigrateReqVolume) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dest_pool_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVolumeMigrateReqVolume := _VolumeMigrateReqVolume{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVolumeMigrateReqVolume)

	if err != nil {
		return err
	}

	*o = VolumeMigrateReqVolume(varVolumeMigrateReqVolume)

	return err
}

type NullableVolumeMigrateReqVolume struct {
	value *VolumeMigrateReqVolume
	isSet bool
}

func (v NullableVolumeMigrateReqVolume) Get() *VolumeMigrateReqVolume {
	return v.value
}

func (v *NullableVolumeMigrateReqVolume) Set(val *VolumeMigrateReqVolume) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeMigrateReqVolume) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeMigrateReqVolume) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeMigrateReqVolume(val *VolumeMigrateReqVolume) *NullableVolumeMigrateReqVolume {
	return &NullableVolumeMigrateReqVolume{value: val, isSet: true}
}

func (v NullableVolumeMigrateReqVolume) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeMigrateReqVolume) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


