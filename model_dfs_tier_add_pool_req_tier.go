/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DfsTierAddPoolReqTier type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsTierAddPoolReqTier{}

// DfsTierAddPoolReqTier struct for DfsTierAddPoolReqTier
type DfsTierAddPoolReqTier struct {
	// active pool ids when add
	ActivePoolIds []int64 `json:"active_pool_ids,omitempty"`
	// pool ids to add/remove
	PoolIds []int64 `json:"pool_ids,omitempty"`
	// active pool policy to add
	PoolPolicies []PoolPolicy `json:"pool_policies,omitempty"`
}

// NewDfsTierAddPoolReqTier instantiates a new DfsTierAddPoolReqTier object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsTierAddPoolReqTier() *DfsTierAddPoolReqTier {
	this := DfsTierAddPoolReqTier{}
	return &this
}

// NewDfsTierAddPoolReqTierWithDefaults instantiates a new DfsTierAddPoolReqTier object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsTierAddPoolReqTierWithDefaults() *DfsTierAddPoolReqTier {
	this := DfsTierAddPoolReqTier{}
	return &this
}

// GetActivePoolIds returns the ActivePoolIds field value if set, zero value otherwise.
func (o *DfsTierAddPoolReqTier) GetActivePoolIds() []int64 {
	if o == nil || IsNil(o.ActivePoolIds) {
		var ret []int64
		return ret
	}
	return o.ActivePoolIds
}

// GetActivePoolIdsOk returns a tuple with the ActivePoolIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsTierAddPoolReqTier) GetActivePoolIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.ActivePoolIds) {
		return nil, false
	}
	return o.ActivePoolIds, true
}

// HasActivePoolIds returns a boolean if a field has been set.
func (o *DfsTierAddPoolReqTier) HasActivePoolIds() bool {
	if o != nil && !IsNil(o.ActivePoolIds) {
		return true
	}

	return false
}

// SetActivePoolIds gets a reference to the given []int64 and assigns it to the ActivePoolIds field.
func (o *DfsTierAddPoolReqTier) SetActivePoolIds(v []int64) {
	o.ActivePoolIds = v
}

// GetPoolIds returns the PoolIds field value if set, zero value otherwise.
func (o *DfsTierAddPoolReqTier) GetPoolIds() []int64 {
	if o == nil || IsNil(o.PoolIds) {
		var ret []int64
		return ret
	}
	return o.PoolIds
}

// GetPoolIdsOk returns a tuple with the PoolIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsTierAddPoolReqTier) GetPoolIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.PoolIds) {
		return nil, false
	}
	return o.PoolIds, true
}

// HasPoolIds returns a boolean if a field has been set.
func (o *DfsTierAddPoolReqTier) HasPoolIds() bool {
	if o != nil && !IsNil(o.PoolIds) {
		return true
	}

	return false
}

// SetPoolIds gets a reference to the given []int64 and assigns it to the PoolIds field.
func (o *DfsTierAddPoolReqTier) SetPoolIds(v []int64) {
	o.PoolIds = v
}

// GetPoolPolicies returns the PoolPolicies field value if set, zero value otherwise.
func (o *DfsTierAddPoolReqTier) GetPoolPolicies() []PoolPolicy {
	if o == nil || IsNil(o.PoolPolicies) {
		var ret []PoolPolicy
		return ret
	}
	return o.PoolPolicies
}

// GetPoolPoliciesOk returns a tuple with the PoolPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsTierAddPoolReqTier) GetPoolPoliciesOk() ([]PoolPolicy, bool) {
	if o == nil || IsNil(o.PoolPolicies) {
		return nil, false
	}
	return o.PoolPolicies, true
}

// HasPoolPolicies returns a boolean if a field has been set.
func (o *DfsTierAddPoolReqTier) HasPoolPolicies() bool {
	if o != nil && !IsNil(o.PoolPolicies) {
		return true
	}

	return false
}

// SetPoolPolicies gets a reference to the given []PoolPolicy and assigns it to the PoolPolicies field.
func (o *DfsTierAddPoolReqTier) SetPoolPolicies(v []PoolPolicy) {
	o.PoolPolicies = v
}

func (o DfsTierAddPoolReqTier) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsTierAddPoolReqTier) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActivePoolIds) {
		toSerialize["active_pool_ids"] = o.ActivePoolIds
	}
	if !IsNil(o.PoolIds) {
		toSerialize["pool_ids"] = o.PoolIds
	}
	if !IsNil(o.PoolPolicies) {
		toSerialize["pool_policies"] = o.PoolPolicies
	}
	return toSerialize, nil
}

type NullableDfsTierAddPoolReqTier struct {
	value *DfsTierAddPoolReqTier
	isSet bool
}

func (v NullableDfsTierAddPoolReqTier) Get() *DfsTierAddPoolReqTier {
	return v.value
}

func (v *NullableDfsTierAddPoolReqTier) Set(val *DfsTierAddPoolReqTier) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsTierAddPoolReqTier) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsTierAddPoolReqTier) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsTierAddPoolReqTier(val *DfsTierAddPoolReqTier) *NullableDfsTierAddPoolReqTier {
	return &NullableDfsTierAddPoolReqTier{value: val, isSet: true}
}

func (v NullableDfsTierAddPoolReqTier) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsTierAddPoolReqTier) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


