/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DomainUserValidatorCreateReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DomainUserValidatorCreateReq{}

// DomainUserValidatorCreateReq struct for DomainUserValidatorCreateReq
type DomainUserValidatorCreateReq struct {
	DomainUserValidator *DomainUserValidatorCreateReqValidator `json:"domain_user_validator,omitempty"`
}

// NewDomainUserValidatorCreateReq instantiates a new DomainUserValidatorCreateReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDomainUserValidatorCreateReq() *DomainUserValidatorCreateReq {
	this := DomainUserValidatorCreateReq{}
	return &this
}

// NewDomainUserValidatorCreateReqWithDefaults instantiates a new DomainUserValidatorCreateReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDomainUserValidatorCreateReqWithDefaults() *DomainUserValidatorCreateReq {
	this := DomainUserValidatorCreateReq{}
	return &this
}

// GetDomainUserValidator returns the DomainUserValidator field value if set, zero value otherwise.
func (o *DomainUserValidatorCreateReq) GetDomainUserValidator() DomainUserValidatorCreateReqValidator {
	if o == nil || IsNil(o.DomainUserValidator) {
		var ret DomainUserValidatorCreateReqValidator
		return ret
	}
	return *o.DomainUserValidator
}

// GetDomainUserValidatorOk returns a tuple with the DomainUserValidator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainUserValidatorCreateReq) GetDomainUserValidatorOk() (*DomainUserValidatorCreateReqValidator, bool) {
	if o == nil || IsNil(o.DomainUserValidator) {
		return nil, false
	}
	return o.DomainUserValidator, true
}

// HasDomainUserValidator returns a boolean if a field has been set.
func (o *DomainUserValidatorCreateReq) HasDomainUserValidator() bool {
	if o != nil && !IsNil(o.DomainUserValidator) {
		return true
	}

	return false
}

// SetDomainUserValidator gets a reference to the given DomainUserValidatorCreateReqValidator and assigns it to the DomainUserValidator field.
func (o *DomainUserValidatorCreateReq) SetDomainUserValidator(v DomainUserValidatorCreateReqValidator) {
	o.DomainUserValidator = &v
}

func (o DomainUserValidatorCreateReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DomainUserValidatorCreateReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DomainUserValidator) {
		toSerialize["domain_user_validator"] = o.DomainUserValidator
	}
	return toSerialize, nil
}

type NullableDomainUserValidatorCreateReq struct {
	value *DomainUserValidatorCreateReq
	isSet bool
}

func (v NullableDomainUserValidatorCreateReq) Get() *DomainUserValidatorCreateReq {
	return v.value
}

func (v *NullableDomainUserValidatorCreateReq) Set(val *DomainUserValidatorCreateReq) {
	v.value = val
	v.isSet = true
}

func (v NullableDomainUserValidatorCreateReq) IsSet() bool {
	return v.isSet
}

func (v *NullableDomainUserValidatorCreateReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDomainUserValidatorCreateReq(val *DomainUserValidatorCreateReq) *NullableDomainUserValidatorCreateReq {
	return &NullableDomainUserValidatorCreateReq{value: val, isSet: true}
}

func (v NullableDomainUserValidatorCreateReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDomainUserValidatorCreateReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


