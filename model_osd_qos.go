/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OsdQos type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OsdQos{}

// OsdQos OsdQos defines qos for osd
type OsdQos struct {
	// unit byte
	Bandwidth *int64 `json:"bandwidth,omitempty"`
	// unit byte
	BandwidthMax *int64 `json:"bandwidth_max,omitempty"`
	// unit byte
	ClientThreshold *int64 `json:"client_threshold,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Mode *int64 `json:"mode,omitempty"`
	RecoveryRateType *string `json:"recovery_rate_type,omitempty"`
}

// NewOsdQos instantiates a new OsdQos object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOsdQos() *OsdQos {
	this := OsdQos{}
	return &this
}

// NewOsdQosWithDefaults instantiates a new OsdQos object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOsdQosWithDefaults() *OsdQos {
	this := OsdQos{}
	return &this
}

// GetBandwidth returns the Bandwidth field value if set, zero value otherwise.
func (o *OsdQos) GetBandwidth() int64 {
	if o == nil || IsNil(o.Bandwidth) {
		var ret int64
		return ret
	}
	return *o.Bandwidth
}

// GetBandwidthOk returns a tuple with the Bandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsdQos) GetBandwidthOk() (*int64, bool) {
	if o == nil || IsNil(o.Bandwidth) {
		return nil, false
	}
	return o.Bandwidth, true
}

// HasBandwidth returns a boolean if a field has been set.
func (o *OsdQos) HasBandwidth() bool {
	if o != nil && !IsNil(o.Bandwidth) {
		return true
	}

	return false
}

// SetBandwidth gets a reference to the given int64 and assigns it to the Bandwidth field.
func (o *OsdQos) SetBandwidth(v int64) {
	o.Bandwidth = &v
}

// GetBandwidthMax returns the BandwidthMax field value if set, zero value otherwise.
func (o *OsdQos) GetBandwidthMax() int64 {
	if o == nil || IsNil(o.BandwidthMax) {
		var ret int64
		return ret
	}
	return *o.BandwidthMax
}

// GetBandwidthMaxOk returns a tuple with the BandwidthMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsdQos) GetBandwidthMaxOk() (*int64, bool) {
	if o == nil || IsNil(o.BandwidthMax) {
		return nil, false
	}
	return o.BandwidthMax, true
}

// HasBandwidthMax returns a boolean if a field has been set.
func (o *OsdQos) HasBandwidthMax() bool {
	if o != nil && !IsNil(o.BandwidthMax) {
		return true
	}

	return false
}

// SetBandwidthMax gets a reference to the given int64 and assigns it to the BandwidthMax field.
func (o *OsdQos) SetBandwidthMax(v int64) {
	o.BandwidthMax = &v
}

// GetClientThreshold returns the ClientThreshold field value if set, zero value otherwise.
func (o *OsdQos) GetClientThreshold() int64 {
	if o == nil || IsNil(o.ClientThreshold) {
		var ret int64
		return ret
	}
	return *o.ClientThreshold
}

// GetClientThresholdOk returns a tuple with the ClientThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsdQos) GetClientThresholdOk() (*int64, bool) {
	if o == nil || IsNil(o.ClientThreshold) {
		return nil, false
	}
	return o.ClientThreshold, true
}

// HasClientThreshold returns a boolean if a field has been set.
func (o *OsdQos) HasClientThreshold() bool {
	if o != nil && !IsNil(o.ClientThreshold) {
		return true
	}

	return false
}

// SetClientThreshold gets a reference to the given int64 and assigns it to the ClientThreshold field.
func (o *OsdQos) SetClientThreshold(v int64) {
	o.ClientThreshold = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OsdQos) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsdQos) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OsdQos) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *OsdQos) SetId(v int64) {
	o.Id = &v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *OsdQos) GetMode() int64 {
	if o == nil || IsNil(o.Mode) {
		var ret int64
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsdQos) GetModeOk() (*int64, bool) {
	if o == nil || IsNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *OsdQos) HasMode() bool {
	if o != nil && !IsNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given int64 and assigns it to the Mode field.
func (o *OsdQos) SetMode(v int64) {
	o.Mode = &v
}

// GetRecoveryRateType returns the RecoveryRateType field value if set, zero value otherwise.
func (o *OsdQos) GetRecoveryRateType() string {
	if o == nil || IsNil(o.RecoveryRateType) {
		var ret string
		return ret
	}
	return *o.RecoveryRateType
}

// GetRecoveryRateTypeOk returns a tuple with the RecoveryRateType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsdQos) GetRecoveryRateTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecoveryRateType) {
		return nil, false
	}
	return o.RecoveryRateType, true
}

// HasRecoveryRateType returns a boolean if a field has been set.
func (o *OsdQos) HasRecoveryRateType() bool {
	if o != nil && !IsNil(o.RecoveryRateType) {
		return true
	}

	return false
}

// SetRecoveryRateType gets a reference to the given string and assigns it to the RecoveryRateType field.
func (o *OsdQos) SetRecoveryRateType(v string) {
	o.RecoveryRateType = &v
}

func (o OsdQos) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OsdQos) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Bandwidth) {
		toSerialize["bandwidth"] = o.Bandwidth
	}
	if !IsNil(o.BandwidthMax) {
		toSerialize["bandwidth_max"] = o.BandwidthMax
	}
	if !IsNil(o.ClientThreshold) {
		toSerialize["client_threshold"] = o.ClientThreshold
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	if !IsNil(o.RecoveryRateType) {
		toSerialize["recovery_rate_type"] = o.RecoveryRateType
	}
	return toSerialize, nil
}

type NullableOsdQos struct {
	value *OsdQos
	isSet bool
}

func (v NullableOsdQos) Get() *OsdQos {
	return v.value
}

func (v *NullableOsdQos) Set(val *OsdQos) {
	v.value = val
	v.isSet = true
}

func (v NullableOsdQos) IsSet() bool {
	return v.isSet
}

func (v *NullableOsdQos) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOsdQos(val *OsdQos) *NullableOsdQos {
	return &NullableOsdQos{value: val, isSet: true}
}

func (v NullableOsdQos) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOsdQos) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


