/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the VolumeIOLatency type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeIOLatency{}

// VolumeIOLatency VolumeIOLatency defines volume io size latency
type VolumeIOLatency struct {
	Var04kUs *float64 `json:"0_4k_us,omitempty"`
	Var3264kUs *float64 `json:"32_64k_us,omitempty"`
	Var48kUs *float64 `json:"4_8k_us,omitempty"`
	Var64512kUs *float64 `json:"64_512k_us,omitempty"`
	Var832kUs *float64 `json:"8_32k_us,omitempty"`
	Above512kUs *float64 `json:"above_512k_us,omitempty"`
}

// NewVolumeIOLatency instantiates a new VolumeIOLatency object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeIOLatency() *VolumeIOLatency {
	this := VolumeIOLatency{}
	return &this
}

// NewVolumeIOLatencyWithDefaults instantiates a new VolumeIOLatency object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeIOLatencyWithDefaults() *VolumeIOLatency {
	this := VolumeIOLatency{}
	return &this
}

// GetVar04kUs returns the Var04kUs field value if set, zero value otherwise.
func (o *VolumeIOLatency) GetVar04kUs() float64 {
	if o == nil || IsNil(o.Var04kUs) {
		var ret float64
		return ret
	}
	return *o.Var04kUs
}

// GetVar04kUsOk returns a tuple with the Var04kUs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeIOLatency) GetVar04kUsOk() (*float64, bool) {
	if o == nil || IsNil(o.Var04kUs) {
		return nil, false
	}
	return o.Var04kUs, true
}

// HasVar04kUs returns a boolean if a field has been set.
func (o *VolumeIOLatency) HasVar04kUs() bool {
	if o != nil && !IsNil(o.Var04kUs) {
		return true
	}

	return false
}

// SetVar04kUs gets a reference to the given float64 and assigns it to the Var04kUs field.
func (o *VolumeIOLatency) SetVar04kUs(v float64) {
	o.Var04kUs = &v
}

// GetVar3264kUs returns the Var3264kUs field value if set, zero value otherwise.
func (o *VolumeIOLatency) GetVar3264kUs() float64 {
	if o == nil || IsNil(o.Var3264kUs) {
		var ret float64
		return ret
	}
	return *o.Var3264kUs
}

// GetVar3264kUsOk returns a tuple with the Var3264kUs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeIOLatency) GetVar3264kUsOk() (*float64, bool) {
	if o == nil || IsNil(o.Var3264kUs) {
		return nil, false
	}
	return o.Var3264kUs, true
}

// HasVar3264kUs returns a boolean if a field has been set.
func (o *VolumeIOLatency) HasVar3264kUs() bool {
	if o != nil && !IsNil(o.Var3264kUs) {
		return true
	}

	return false
}

// SetVar3264kUs gets a reference to the given float64 and assigns it to the Var3264kUs field.
func (o *VolumeIOLatency) SetVar3264kUs(v float64) {
	o.Var3264kUs = &v
}

// GetVar48kUs returns the Var48kUs field value if set, zero value otherwise.
func (o *VolumeIOLatency) GetVar48kUs() float64 {
	if o == nil || IsNil(o.Var48kUs) {
		var ret float64
		return ret
	}
	return *o.Var48kUs
}

// GetVar48kUsOk returns a tuple with the Var48kUs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeIOLatency) GetVar48kUsOk() (*float64, bool) {
	if o == nil || IsNil(o.Var48kUs) {
		return nil, false
	}
	return o.Var48kUs, true
}

// HasVar48kUs returns a boolean if a field has been set.
func (o *VolumeIOLatency) HasVar48kUs() bool {
	if o != nil && !IsNil(o.Var48kUs) {
		return true
	}

	return false
}

// SetVar48kUs gets a reference to the given float64 and assigns it to the Var48kUs field.
func (o *VolumeIOLatency) SetVar48kUs(v float64) {
	o.Var48kUs = &v
}

// GetVar64512kUs returns the Var64512kUs field value if set, zero value otherwise.
func (o *VolumeIOLatency) GetVar64512kUs() float64 {
	if o == nil || IsNil(o.Var64512kUs) {
		var ret float64
		return ret
	}
	return *o.Var64512kUs
}

// GetVar64512kUsOk returns a tuple with the Var64512kUs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeIOLatency) GetVar64512kUsOk() (*float64, bool) {
	if o == nil || IsNil(o.Var64512kUs) {
		return nil, false
	}
	return o.Var64512kUs, true
}

// HasVar64512kUs returns a boolean if a field has been set.
func (o *VolumeIOLatency) HasVar64512kUs() bool {
	if o != nil && !IsNil(o.Var64512kUs) {
		return true
	}

	return false
}

// SetVar64512kUs gets a reference to the given float64 and assigns it to the Var64512kUs field.
func (o *VolumeIOLatency) SetVar64512kUs(v float64) {
	o.Var64512kUs = &v
}

// GetVar832kUs returns the Var832kUs field value if set, zero value otherwise.
func (o *VolumeIOLatency) GetVar832kUs() float64 {
	if o == nil || IsNil(o.Var832kUs) {
		var ret float64
		return ret
	}
	return *o.Var832kUs
}

// GetVar832kUsOk returns a tuple with the Var832kUs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeIOLatency) GetVar832kUsOk() (*float64, bool) {
	if o == nil || IsNil(o.Var832kUs) {
		return nil, false
	}
	return o.Var832kUs, true
}

// HasVar832kUs returns a boolean if a field has been set.
func (o *VolumeIOLatency) HasVar832kUs() bool {
	if o != nil && !IsNil(o.Var832kUs) {
		return true
	}

	return false
}

// SetVar832kUs gets a reference to the given float64 and assigns it to the Var832kUs field.
func (o *VolumeIOLatency) SetVar832kUs(v float64) {
	o.Var832kUs = &v
}

// GetAbove512kUs returns the Above512kUs field value if set, zero value otherwise.
func (o *VolumeIOLatency) GetAbove512kUs() float64 {
	if o == nil || IsNil(o.Above512kUs) {
		var ret float64
		return ret
	}
	return *o.Above512kUs
}

// GetAbove512kUsOk returns a tuple with the Above512kUs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeIOLatency) GetAbove512kUsOk() (*float64, bool) {
	if o == nil || IsNil(o.Above512kUs) {
		return nil, false
	}
	return o.Above512kUs, true
}

// HasAbove512kUs returns a boolean if a field has been set.
func (o *VolumeIOLatency) HasAbove512kUs() bool {
	if o != nil && !IsNil(o.Above512kUs) {
		return true
	}

	return false
}

// SetAbove512kUs gets a reference to the given float64 and assigns it to the Above512kUs field.
func (o *VolumeIOLatency) SetAbove512kUs(v float64) {
	o.Above512kUs = &v
}

func (o VolumeIOLatency) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeIOLatency) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Var04kUs) {
		toSerialize["0_4k_us"] = o.Var04kUs
	}
	if !IsNil(o.Var3264kUs) {
		toSerialize["32_64k_us"] = o.Var3264kUs
	}
	if !IsNil(o.Var48kUs) {
		toSerialize["4_8k_us"] = o.Var48kUs
	}
	if !IsNil(o.Var64512kUs) {
		toSerialize["64_512k_us"] = o.Var64512kUs
	}
	if !IsNil(o.Var832kUs) {
		toSerialize["8_32k_us"] = o.Var832kUs
	}
	if !IsNil(o.Above512kUs) {
		toSerialize["above_512k_us"] = o.Above512kUs
	}
	return toSerialize, nil
}

type NullableVolumeIOLatency struct {
	value *VolumeIOLatency
	isSet bool
}

func (v NullableVolumeIOLatency) Get() *VolumeIOLatency {
	return v.value
}

func (v *NullableVolumeIOLatency) Set(val *VolumeIOLatency) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeIOLatency) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeIOLatency) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeIOLatency(val *VolumeIOLatency) *NullableVolumeIOLatency {
	return &NullableVolumeIOLatency{value: val, isSet: true}
}

func (v NullableVolumeIOLatency) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeIOLatency) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


