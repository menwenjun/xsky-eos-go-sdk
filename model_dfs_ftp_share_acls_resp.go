/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DfsFTPShareACLsResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsFTPShareACLsResp{}

// DfsFTPShareACLsResp struct for DfsFTPShareACLsResp
type DfsFTPShareACLsResp struct {
	// dfs ftp share acls
	DfsFtpShareAcls []DfsFTPShareACL `json:"dfs_ftp_share_acls"`
}

type _DfsFTPShareACLsResp DfsFTPShareACLsResp

// NewDfsFTPShareACLsResp instantiates a new DfsFTPShareACLsResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsFTPShareACLsResp(dfsFtpShareAcls []DfsFTPShareACL) *DfsFTPShareACLsResp {
	this := DfsFTPShareACLsResp{}
	this.DfsFtpShareAcls = dfsFtpShareAcls
	return &this
}

// NewDfsFTPShareACLsRespWithDefaults instantiates a new DfsFTPShareACLsResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsFTPShareACLsRespWithDefaults() *DfsFTPShareACLsResp {
	this := DfsFTPShareACLsResp{}
	return &this
}

// GetDfsFtpShareAcls returns the DfsFtpShareAcls field value
func (o *DfsFTPShareACLsResp) GetDfsFtpShareAcls() []DfsFTPShareACL {
	if o == nil {
		var ret []DfsFTPShareACL
		return ret
	}

	return o.DfsFtpShareAcls
}

// GetDfsFtpShareAclsOk returns a tuple with the DfsFtpShareAcls field value
// and a boolean to check if the value has been set.
func (o *DfsFTPShareACLsResp) GetDfsFtpShareAclsOk() ([]DfsFTPShareACL, bool) {
	if o == nil {
		return nil, false
	}
	return o.DfsFtpShareAcls, true
}

// SetDfsFtpShareAcls sets field value
func (o *DfsFTPShareACLsResp) SetDfsFtpShareAcls(v []DfsFTPShareACL) {
	o.DfsFtpShareAcls = v
}

func (o DfsFTPShareACLsResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsFTPShareACLsResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dfs_ftp_share_acls"] = o.DfsFtpShareAcls
	return toSerialize, nil
}

func (o *DfsFTPShareACLsResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dfs_ftp_share_acls",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDfsFTPShareACLsResp := _DfsFTPShareACLsResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDfsFTPShareACLsResp)

	if err != nil {
		return err
	}

	*o = DfsFTPShareACLsResp(varDfsFTPShareACLsResp)

	return err
}

type NullableDfsFTPShareACLsResp struct {
	value *DfsFTPShareACLsResp
	isSet bool
}

func (v NullableDfsFTPShareACLsResp) Get() *DfsFTPShareACLsResp {
	return v.value
}

func (v *NullableDfsFTPShareACLsResp) Set(val *DfsFTPShareACLsResp) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsFTPShareACLsResp) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsFTPShareACLsResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsFTPShareACLsResp(val *DfsFTPShareACLsResp) *NullableDfsFTPShareACLsResp {
	return &NullableDfsFTPShareACLsResp{value: val, isSet: true}
}

func (v NullableDfsFTPShareACLsResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsFTPShareACLsResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


