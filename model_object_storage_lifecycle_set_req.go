/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ObjectStorageLifecycleSetReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ObjectStorageLifecycleSetReq{}

// ObjectStorageLifecycleSetReq struct for ObjectStorageLifecycleSetReq
type ObjectStorageLifecycleSetReq struct {
	LifecycleRules []LifecycleRule `json:"lifecycle_rules,omitempty"`
}

// NewObjectStorageLifecycleSetReq instantiates a new ObjectStorageLifecycleSetReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectStorageLifecycleSetReq() *ObjectStorageLifecycleSetReq {
	this := ObjectStorageLifecycleSetReq{}
	return &this
}

// NewObjectStorageLifecycleSetReqWithDefaults instantiates a new ObjectStorageLifecycleSetReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectStorageLifecycleSetReqWithDefaults() *ObjectStorageLifecycleSetReq {
	this := ObjectStorageLifecycleSetReq{}
	return &this
}

// GetLifecycleRules returns the LifecycleRules field value if set, zero value otherwise.
func (o *ObjectStorageLifecycleSetReq) GetLifecycleRules() []LifecycleRule {
	if o == nil || IsNil(o.LifecycleRules) {
		var ret []LifecycleRule
		return ret
	}
	return o.LifecycleRules
}

// GetLifecycleRulesOk returns a tuple with the LifecycleRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageLifecycleSetReq) GetLifecycleRulesOk() ([]LifecycleRule, bool) {
	if o == nil || IsNil(o.LifecycleRules) {
		return nil, false
	}
	return o.LifecycleRules, true
}

// HasLifecycleRules returns a boolean if a field has been set.
func (o *ObjectStorageLifecycleSetReq) HasLifecycleRules() bool {
	if o != nil && !IsNil(o.LifecycleRules) {
		return true
	}

	return false
}

// SetLifecycleRules gets a reference to the given []LifecycleRule and assigns it to the LifecycleRules field.
func (o *ObjectStorageLifecycleSetReq) SetLifecycleRules(v []LifecycleRule) {
	o.LifecycleRules = v
}

func (o ObjectStorageLifecycleSetReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ObjectStorageLifecycleSetReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LifecycleRules) {
		toSerialize["lifecycle_rules"] = o.LifecycleRules
	}
	return toSerialize, nil
}

type NullableObjectStorageLifecycleSetReq struct {
	value *ObjectStorageLifecycleSetReq
	isSet bool
}

func (v NullableObjectStorageLifecycleSetReq) Get() *ObjectStorageLifecycleSetReq {
	return v.value
}

func (v *NullableObjectStorageLifecycleSetReq) Set(val *ObjectStorageLifecycleSetReq) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectStorageLifecycleSetReq) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectStorageLifecycleSetReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectStorageLifecycleSetReq(val *ObjectStorageLifecycleSetReq) *NullableObjectStorageLifecycleSetReq {
	return &NullableObjectStorageLifecycleSetReq{value: val, isSet: true}
}

func (v NullableObjectStorageLifecycleSetReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectStorageLifecycleSetReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


