/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the DfsQosPolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsQosPolicy{}

// DfsQosPolicy DfsQosPolicy defines model of dfs qos policy
type DfsQosPolicy struct {
	ActionStatus *string `json:"action_status,omitempty"`
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	Description *string `json:"description,omitempty"`
	DirNum *int64 `json:"dir_num,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	ReadBandwidth *int64 `json:"read_bandwidth,omitempty"`
	ReadObject *int64 `json:"read_object,omitempty"`
	TotalBandwidth *int64 `json:"total_bandwidth,omitempty"`
	TotalObject *int64 `json:"total_object,omitempty"`
	Update *time.Time `json:"update,omitempty"`
	WriteBandwidth *int64 `json:"write_bandwidth,omitempty"`
	WriteObject *int64 `json:"write_object,omitempty"`
}

// NewDfsQosPolicy instantiates a new DfsQosPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsQosPolicy() *DfsQosPolicy {
	this := DfsQosPolicy{}
	return &this
}

// NewDfsQosPolicyWithDefaults instantiates a new DfsQosPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsQosPolicyWithDefaults() *DfsQosPolicy {
	this := DfsQosPolicy{}
	return &this
}

// GetActionStatus returns the ActionStatus field value if set, zero value otherwise.
func (o *DfsQosPolicy) GetActionStatus() string {
	if o == nil || IsNil(o.ActionStatus) {
		var ret string
		return ret
	}
	return *o.ActionStatus
}

// GetActionStatusOk returns a tuple with the ActionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQosPolicy) GetActionStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ActionStatus) {
		return nil, false
	}
	return o.ActionStatus, true
}

// HasActionStatus returns a boolean if a field has been set.
func (o *DfsQosPolicy) HasActionStatus() bool {
	if o != nil && !IsNil(o.ActionStatus) {
		return true
	}

	return false
}

// SetActionStatus gets a reference to the given string and assigns it to the ActionStatus field.
func (o *DfsQosPolicy) SetActionStatus(v string) {
	o.ActionStatus = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *DfsQosPolicy) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQosPolicy) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *DfsQosPolicy) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *DfsQosPolicy) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *DfsQosPolicy) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQosPolicy) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *DfsQosPolicy) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *DfsQosPolicy) SetCreate(v time.Time) {
	o.Create = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *DfsQosPolicy) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQosPolicy) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *DfsQosPolicy) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DfsQosPolicy) SetDescription(v string) {
	o.Description = &v
}

// GetDirNum returns the DirNum field value if set, zero value otherwise.
func (o *DfsQosPolicy) GetDirNum() int64 {
	if o == nil || IsNil(o.DirNum) {
		var ret int64
		return ret
	}
	return *o.DirNum
}

// GetDirNumOk returns a tuple with the DirNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQosPolicy) GetDirNumOk() (*int64, bool) {
	if o == nil || IsNil(o.DirNum) {
		return nil, false
	}
	return o.DirNum, true
}

// HasDirNum returns a boolean if a field has been set.
func (o *DfsQosPolicy) HasDirNum() bool {
	if o != nil && !IsNil(o.DirNum) {
		return true
	}

	return false
}

// SetDirNum gets a reference to the given int64 and assigns it to the DirNum field.
func (o *DfsQosPolicy) SetDirNum(v int64) {
	o.DirNum = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DfsQosPolicy) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQosPolicy) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DfsQosPolicy) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *DfsQosPolicy) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DfsQosPolicy) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQosPolicy) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DfsQosPolicy) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DfsQosPolicy) SetName(v string) {
	o.Name = &v
}

// GetReadBandwidth returns the ReadBandwidth field value if set, zero value otherwise.
func (o *DfsQosPolicy) GetReadBandwidth() int64 {
	if o == nil || IsNil(o.ReadBandwidth) {
		var ret int64
		return ret
	}
	return *o.ReadBandwidth
}

// GetReadBandwidthOk returns a tuple with the ReadBandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQosPolicy) GetReadBandwidthOk() (*int64, bool) {
	if o == nil || IsNil(o.ReadBandwidth) {
		return nil, false
	}
	return o.ReadBandwidth, true
}

// HasReadBandwidth returns a boolean if a field has been set.
func (o *DfsQosPolicy) HasReadBandwidth() bool {
	if o != nil && !IsNil(o.ReadBandwidth) {
		return true
	}

	return false
}

// SetReadBandwidth gets a reference to the given int64 and assigns it to the ReadBandwidth field.
func (o *DfsQosPolicy) SetReadBandwidth(v int64) {
	o.ReadBandwidth = &v
}

// GetReadObject returns the ReadObject field value if set, zero value otherwise.
func (o *DfsQosPolicy) GetReadObject() int64 {
	if o == nil || IsNil(o.ReadObject) {
		var ret int64
		return ret
	}
	return *o.ReadObject
}

// GetReadObjectOk returns a tuple with the ReadObject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQosPolicy) GetReadObjectOk() (*int64, bool) {
	if o == nil || IsNil(o.ReadObject) {
		return nil, false
	}
	return o.ReadObject, true
}

// HasReadObject returns a boolean if a field has been set.
func (o *DfsQosPolicy) HasReadObject() bool {
	if o != nil && !IsNil(o.ReadObject) {
		return true
	}

	return false
}

// SetReadObject gets a reference to the given int64 and assigns it to the ReadObject field.
func (o *DfsQosPolicy) SetReadObject(v int64) {
	o.ReadObject = &v
}

// GetTotalBandwidth returns the TotalBandwidth field value if set, zero value otherwise.
func (o *DfsQosPolicy) GetTotalBandwidth() int64 {
	if o == nil || IsNil(o.TotalBandwidth) {
		var ret int64
		return ret
	}
	return *o.TotalBandwidth
}

// GetTotalBandwidthOk returns a tuple with the TotalBandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQosPolicy) GetTotalBandwidthOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalBandwidth) {
		return nil, false
	}
	return o.TotalBandwidth, true
}

// HasTotalBandwidth returns a boolean if a field has been set.
func (o *DfsQosPolicy) HasTotalBandwidth() bool {
	if o != nil && !IsNil(o.TotalBandwidth) {
		return true
	}

	return false
}

// SetTotalBandwidth gets a reference to the given int64 and assigns it to the TotalBandwidth field.
func (o *DfsQosPolicy) SetTotalBandwidth(v int64) {
	o.TotalBandwidth = &v
}

// GetTotalObject returns the TotalObject field value if set, zero value otherwise.
func (o *DfsQosPolicy) GetTotalObject() int64 {
	if o == nil || IsNil(o.TotalObject) {
		var ret int64
		return ret
	}
	return *o.TotalObject
}

// GetTotalObjectOk returns a tuple with the TotalObject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQosPolicy) GetTotalObjectOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalObject) {
		return nil, false
	}
	return o.TotalObject, true
}

// HasTotalObject returns a boolean if a field has been set.
func (o *DfsQosPolicy) HasTotalObject() bool {
	if o != nil && !IsNil(o.TotalObject) {
		return true
	}

	return false
}

// SetTotalObject gets a reference to the given int64 and assigns it to the TotalObject field.
func (o *DfsQosPolicy) SetTotalObject(v int64) {
	o.TotalObject = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *DfsQosPolicy) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQosPolicy) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *DfsQosPolicy) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *DfsQosPolicy) SetUpdate(v time.Time) {
	o.Update = &v
}

// GetWriteBandwidth returns the WriteBandwidth field value if set, zero value otherwise.
func (o *DfsQosPolicy) GetWriteBandwidth() int64 {
	if o == nil || IsNil(o.WriteBandwidth) {
		var ret int64
		return ret
	}
	return *o.WriteBandwidth
}

// GetWriteBandwidthOk returns a tuple with the WriteBandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQosPolicy) GetWriteBandwidthOk() (*int64, bool) {
	if o == nil || IsNil(o.WriteBandwidth) {
		return nil, false
	}
	return o.WriteBandwidth, true
}

// HasWriteBandwidth returns a boolean if a field has been set.
func (o *DfsQosPolicy) HasWriteBandwidth() bool {
	if o != nil && !IsNil(o.WriteBandwidth) {
		return true
	}

	return false
}

// SetWriteBandwidth gets a reference to the given int64 and assigns it to the WriteBandwidth field.
func (o *DfsQosPolicy) SetWriteBandwidth(v int64) {
	o.WriteBandwidth = &v
}

// GetWriteObject returns the WriteObject field value if set, zero value otherwise.
func (o *DfsQosPolicy) GetWriteObject() int64 {
	if o == nil || IsNil(o.WriteObject) {
		var ret int64
		return ret
	}
	return *o.WriteObject
}

// GetWriteObjectOk returns a tuple with the WriteObject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQosPolicy) GetWriteObjectOk() (*int64, bool) {
	if o == nil || IsNil(o.WriteObject) {
		return nil, false
	}
	return o.WriteObject, true
}

// HasWriteObject returns a boolean if a field has been set.
func (o *DfsQosPolicy) HasWriteObject() bool {
	if o != nil && !IsNil(o.WriteObject) {
		return true
	}

	return false
}

// SetWriteObject gets a reference to the given int64 and assigns it to the WriteObject field.
func (o *DfsQosPolicy) SetWriteObject(v int64) {
	o.WriteObject = &v
}

func (o DfsQosPolicy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsQosPolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActionStatus) {
		toSerialize["action_status"] = o.ActionStatus
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DirNum) {
		toSerialize["dir_num"] = o.DirNum
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ReadBandwidth) {
		toSerialize["read_bandwidth"] = o.ReadBandwidth
	}
	if !IsNil(o.ReadObject) {
		toSerialize["read_object"] = o.ReadObject
	}
	if !IsNil(o.TotalBandwidth) {
		toSerialize["total_bandwidth"] = o.TotalBandwidth
	}
	if !IsNil(o.TotalObject) {
		toSerialize["total_object"] = o.TotalObject
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	if !IsNil(o.WriteBandwidth) {
		toSerialize["write_bandwidth"] = o.WriteBandwidth
	}
	if !IsNil(o.WriteObject) {
		toSerialize["write_object"] = o.WriteObject
	}
	return toSerialize, nil
}

type NullableDfsQosPolicy struct {
	value *DfsQosPolicy
	isSet bool
}

func (v NullableDfsQosPolicy) Get() *DfsQosPolicy {
	return v.value
}

func (v *NullableDfsQosPolicy) Set(val *DfsQosPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsQosPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsQosPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsQosPolicy(val *DfsQosPolicy) *NullableDfsQosPolicy {
	return &NullableDfsQosPolicy{value: val, isSet: true}
}

func (v NullableDfsQosPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsQosPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


