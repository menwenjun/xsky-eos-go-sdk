/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the HostStat type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HostStat{}

// HostStat HostStat define the host statistics
type HostStat struct {
	ContextSwitchPs *float64 `json:"context_switch_ps,omitempty"`
	CpuUtil *float64 `json:"cpu_util,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	InterruptsPs *float64 `json:"interrupts_ps,omitempty"`
	Load15min *float64 `json:"load15min,omitempty"`
	Load1min *float64 `json:"load1min,omitempty"`
	Load5min *float64 `json:"load5min,omitempty"`
	MemUsagePercent *float64 `json:"mem_usage_percent,omitempty"`
	MetaDockerUsedKbyte *float64 `json:"meta_docker_used_kbyte,omitempty"`
	MetaElasticsearchUsedKbyte *float64 `json:"meta_elasticsearch_used_kbyte,omitempty"`
	MetaEtcdUsedKbyte *float64 `json:"meta_etcd_used_kbyte,omitempty"`
	MetaLogUsedKbyte *float64 `json:"meta_log_used_kbyte,omitempty"`
	MetaMonUsedKbyte *float64 `json:"meta_mon_used_kbyte,omitempty"`
	MetaPostgresUsedKbyte *float64 `json:"meta_postgres_used_kbyte,omitempty"`
	MetaPrometheusUsedKbyte *float64 `json:"meta_prometheus_used_kbyte,omitempty"`
	NetworkDropPps *float64 `json:"network_drop_pps,omitempty"`
	NetworkDropRatio *float64 `json:"network_drop_ratio,omitempty"`
	NetworkErrorPps *float64 `json:"network_error_pps,omitempty"`
	NetworkErrorRatio *float64 `json:"network_error_ratio,omitempty"`
	NetworkRxBandwidthKbyte *float64 `json:"network_rx_bandwidth_kbyte,omitempty"`
	NetworkRxDropPps *float64 `json:"network_rx_drop_pps,omitempty"`
	NetworkRxDropRatio *float64 `json:"network_rx_drop_ratio,omitempty"`
	NetworkRxErrorPps *float64 `json:"network_rx_error_pps,omitempty"`
	NetworkRxErrorRatio *float64 `json:"network_rx_error_ratio,omitempty"`
	NetworkRxPps *float64 `json:"network_rx_pps,omitempty"`
	NetworkTxBandwidthKbyte *float64 `json:"network_tx_bandwidth_kbyte,omitempty"`
	NetworkTxDropPps *float64 `json:"network_tx_drop_pps,omitempty"`
	NetworkTxDropRatio *float64 `json:"network_tx_drop_ratio,omitempty"`
	NetworkTxErrorPps *float64 `json:"network_tx_error_pps,omitempty"`
	NetworkTxErrorRatio *float64 `json:"network_tx_error_ratio,omitempty"`
	NetworkTxPps *float64 `json:"network_tx_pps,omitempty"`
	PagePagingPs *float64 `json:"page_paging_ps,omitempty"`
}

// NewHostStat instantiates a new HostStat object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHostStat() *HostStat {
	this := HostStat{}
	return &this
}

// NewHostStatWithDefaults instantiates a new HostStat object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHostStatWithDefaults() *HostStat {
	this := HostStat{}
	return &this
}

// GetContextSwitchPs returns the ContextSwitchPs field value if set, zero value otherwise.
func (o *HostStat) GetContextSwitchPs() float64 {
	if o == nil || IsNil(o.ContextSwitchPs) {
		var ret float64
		return ret
	}
	return *o.ContextSwitchPs
}

// GetContextSwitchPsOk returns a tuple with the ContextSwitchPs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostStat) GetContextSwitchPsOk() (*float64, bool) {
	if o == nil || IsNil(o.ContextSwitchPs) {
		return nil, false
	}
	return o.ContextSwitchPs, true
}

// HasContextSwitchPs returns a boolean if a field has been set.
func (o *HostStat) HasContextSwitchPs() bool {
	if o != nil && !IsNil(o.ContextSwitchPs) {
		return true
	}

	return false
}

// SetContextSwitchPs gets a reference to the given float64 and assigns it to the ContextSwitchPs field.
func (o *HostStat) SetContextSwitchPs(v float64) {
	o.ContextSwitchPs = &v
}

// GetCpuUtil returns the CpuUtil field value if set, zero value otherwise.
func (o *HostStat) GetCpuUtil() float64 {
	if o == nil || IsNil(o.CpuUtil) {
		var ret float64
		return ret
	}
	return *o.CpuUtil
}

// GetCpuUtilOk returns a tuple with the CpuUtil field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostStat) GetCpuUtilOk() (*float64, bool) {
	if o == nil || IsNil(o.CpuUtil) {
		return nil, false
	}
	return o.CpuUtil, true
}

// HasCpuUtil returns a boolean if a field has been set.
func (o *HostStat) HasCpuUtil() bool {
	if o != nil && !IsNil(o.CpuUtil) {
		return true
	}

	return false
}

// SetCpuUtil gets a reference to the given float64 and assigns it to the CpuUtil field.
func (o *HostStat) SetCpuUtil(v float64) {
	o.CpuUtil = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *HostStat) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostStat) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *HostStat) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *HostStat) SetCreate(v time.Time) {
	o.Create = &v
}

// GetInterruptsPs returns the InterruptsPs field value if set, zero value otherwise.
func (o *HostStat) GetInterruptsPs() float64 {
	if o == nil || IsNil(o.InterruptsPs) {
		var ret float64
		return ret
	}
	return *o.InterruptsPs
}

// GetInterruptsPsOk returns a tuple with the InterruptsPs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostStat) GetInterruptsPsOk() (*float64, bool) {
	if o == nil || IsNil(o.InterruptsPs) {
		return nil, false
	}
	return o.InterruptsPs, true
}

// HasInterruptsPs returns a boolean if a field has been set.
func (o *HostStat) HasInterruptsPs() bool {
	if o != nil && !IsNil(o.InterruptsPs) {
		return true
	}

	return false
}

// SetInterruptsPs gets a reference to the given float64 and assigns it to the InterruptsPs field.
func (o *HostStat) SetInterruptsPs(v float64) {
	o.InterruptsPs = &v
}

// GetLoad15min returns the Load15min field value if set, zero value otherwise.
func (o *HostStat) GetLoad15min() float64 {
	if o == nil || IsNil(o.Load15min) {
		var ret float64
		return ret
	}
	return *o.Load15min
}

// GetLoad15minOk returns a tuple with the Load15min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostStat) GetLoad15minOk() (*float64, bool) {
	if o == nil || IsNil(o.Load15min) {
		return nil, false
	}
	return o.Load15min, true
}

// HasLoad15min returns a boolean if a field has been set.
func (o *HostStat) HasLoad15min() bool {
	if o != nil && !IsNil(o.Load15min) {
		return true
	}

	return false
}

// SetLoad15min gets a reference to the given float64 and assigns it to the Load15min field.
func (o *HostStat) SetLoad15min(v float64) {
	o.Load15min = &v
}

// GetLoad1min returns the Load1min field value if set, zero value otherwise.
func (o *HostStat) GetLoad1min() float64 {
	if o == nil || IsNil(o.Load1min) {
		var ret float64
		return ret
	}
	return *o.Load1min
}

// GetLoad1minOk returns a tuple with the Load1min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostStat) GetLoad1minOk() (*float64, bool) {
	if o == nil || IsNil(o.Load1min) {
		return nil, false
	}
	return o.Load1min, true
}

// HasLoad1min returns a boolean if a field has been set.
func (o *HostStat) HasLoad1min() bool {
	if o != nil && !IsNil(o.Load1min) {
		return true
	}

	return false
}

// SetLoad1min gets a reference to the given float64 and assigns it to the Load1min field.
func (o *HostStat) SetLoad1min(v float64) {
	o.Load1min = &v
}

// GetLoad5min returns the Load5min field value if set, zero value otherwise.
func (o *HostStat) GetLoad5min() float64 {
	if o == nil || IsNil(o.Load5min) {
		var ret float64
		return ret
	}
	return *o.Load5min
}

// GetLoad5minOk returns a tuple with the Load5min field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostStat) GetLoad5minOk() (*float64, bool) {
	if o == nil || IsNil(o.Load5min) {
		return nil, false
	}
	return o.Load5min, true
}

// HasLoad5min returns a boolean if a field has been set.
func (o *HostStat) HasLoad5min() bool {
	if o != nil && !IsNil(o.Load5min) {
		return true
	}

	return false
}

// SetLoad5min gets a reference to the given float64 and assigns it to the Load5min field.
func (o *HostStat) SetLoad5min(v float64) {
	o.Load5min = &v
}

// GetMemUsagePercent returns the MemUsagePercent field value if set, zero value otherwise.
func (o *HostStat) GetMemUsagePercent() float64 {
	if o == nil || IsNil(o.MemUsagePercent) {
		var ret float64
		return ret
	}
	return *o.MemUsagePercent
}

// GetMemUsagePercentOk returns a tuple with the MemUsagePercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostStat) GetMemUsagePercentOk() (*float64, bool) {
	if o == nil || IsNil(o.MemUsagePercent) {
		return nil, false
	}
	return o.MemUsagePercent, true
}

// HasMemUsagePercent returns a boolean if a field has been set.
func (o *HostStat) HasMemUsagePercent() bool {
	if o != nil && !IsNil(o.MemUsagePercent) {
		return true
	}

	return false
}

// SetMemUsagePercent gets a reference to the given float64 and assigns it to the MemUsagePercent field.
func (o *HostStat) SetMemUsagePercent(v float64) {
	o.MemUsagePercent = &v
}

// GetMetaDockerUsedKbyte returns the MetaDockerUsedKbyte field value if set, zero value otherwise.
func (o *HostStat) GetMetaDockerUsedKbyte() float64 {
	if o == nil || IsNil(o.MetaDockerUsedKbyte) {
		var ret float64
		return ret
	}
	return *o.MetaDockerUsedKbyte
}

// GetMetaDockerUsedKbyteOk returns a tuple with the MetaDockerUsedKbyte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostStat) GetMetaDockerUsedKbyteOk() (*float64, bool) {
	if o == nil || IsNil(o.MetaDockerUsedKbyte) {
		return nil, false
	}
	return o.MetaDockerUsedKbyte, true
}

// HasMetaDockerUsedKbyte returns a boolean if a field has been set.
func (o *HostStat) HasMetaDockerUsedKbyte() bool {
	if o != nil && !IsNil(o.MetaDockerUsedKbyte) {
		return true
	}

	return false
}

// SetMetaDockerUsedKbyte gets a reference to the given float64 and assigns it to the MetaDockerUsedKbyte field.
func (o *HostStat) SetMetaDockerUsedKbyte(v float64) {
	o.MetaDockerUsedKbyte = &v
}

// GetMetaElasticsearchUsedKbyte returns the MetaElasticsearchUsedKbyte field value if set, zero value otherwise.
func (o *HostStat) GetMetaElasticsearchUsedKbyte() float64 {
	if o == nil || IsNil(o.MetaElasticsearchUsedKbyte) {
		var ret float64
		return ret
	}
	return *o.MetaElasticsearchUsedKbyte
}

// GetMetaElasticsearchUsedKbyteOk returns a tuple with the MetaElasticsearchUsedKbyte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostStat) GetMetaElasticsearchUsedKbyteOk() (*float64, bool) {
	if o == nil || IsNil(o.MetaElasticsearchUsedKbyte) {
		return nil, false
	}
	return o.MetaElasticsearchUsedKbyte, true
}

// HasMetaElasticsearchUsedKbyte returns a boolean if a field has been set.
func (o *HostStat) HasMetaElasticsearchUsedKbyte() bool {
	if o != nil && !IsNil(o.MetaElasticsearchUsedKbyte) {
		return true
	}

	return false
}

// SetMetaElasticsearchUsedKbyte gets a reference to the given float64 and assigns it to the MetaElasticsearchUsedKbyte field.
func (o *HostStat) SetMetaElasticsearchUsedKbyte(v float64) {
	o.MetaElasticsearchUsedKbyte = &v
}

// GetMetaEtcdUsedKbyte returns the MetaEtcdUsedKbyte field value if set, zero value otherwise.
func (o *HostStat) GetMetaEtcdUsedKbyte() float64 {
	if o == nil || IsNil(o.MetaEtcdUsedKbyte) {
		var ret float64
		return ret
	}
	return *o.MetaEtcdUsedKbyte
}

// GetMetaEtcdUsedKbyteOk returns a tuple with the MetaEtcdUsedKbyte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostStat) GetMetaEtcdUsedKbyteOk() (*float64, bool) {
	if o == nil || IsNil(o.MetaEtcdUsedKbyte) {
		return nil, false
	}
	return o.MetaEtcdUsedKbyte, true
}

// HasMetaEtcdUsedKbyte returns a boolean if a field has been set.
func (o *HostStat) HasMetaEtcdUsedKbyte() bool {
	if o != nil && !IsNil(o.MetaEtcdUsedKbyte) {
		return true
	}

	return false
}

// SetMetaEtcdUsedKbyte gets a reference to the given float64 and assigns it to the MetaEtcdUsedKbyte field.
func (o *HostStat) SetMetaEtcdUsedKbyte(v float64) {
	o.MetaEtcdUsedKbyte = &v
}

// GetMetaLogUsedKbyte returns the MetaLogUsedKbyte field value if set, zero value otherwise.
func (o *HostStat) GetMetaLogUsedKbyte() float64 {
	if o == nil || IsNil(o.MetaLogUsedKbyte) {
		var ret float64
		return ret
	}
	return *o.MetaLogUsedKbyte
}

// GetMetaLogUsedKbyteOk returns a tuple with the MetaLogUsedKbyte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostStat) GetMetaLogUsedKbyteOk() (*float64, bool) {
	if o == nil || IsNil(o.MetaLogUsedKbyte) {
		return nil, false
	}
	return o.MetaLogUsedKbyte, true
}

// HasMetaLogUsedKbyte returns a boolean if a field has been set.
func (o *HostStat) HasMetaLogUsedKbyte() bool {
	if o != nil && !IsNil(o.MetaLogUsedKbyte) {
		return true
	}

	return false
}

// SetMetaLogUsedKbyte gets a reference to the given float64 and assigns it to the MetaLogUsedKbyte field.
func (o *HostStat) SetMetaLogUsedKbyte(v float64) {
	o.MetaLogUsedKbyte = &v
}

// GetMetaMonUsedKbyte returns the MetaMonUsedKbyte field value if set, zero value otherwise.
func (o *HostStat) GetMetaMonUsedKbyte() float64 {
	if o == nil || IsNil(o.MetaMonUsedKbyte) {
		var ret float64
		return ret
	}
	return *o.MetaMonUsedKbyte
}

// GetMetaMonUsedKbyteOk returns a tuple with the MetaMonUsedKbyte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostStat) GetMetaMonUsedKbyteOk() (*float64, bool) {
	if o == nil || IsNil(o.MetaMonUsedKbyte) {
		return nil, false
	}
	return o.MetaMonUsedKbyte, true
}

// HasMetaMonUsedKbyte returns a boolean if a field has been set.
func (o *HostStat) HasMetaMonUsedKbyte() bool {
	if o != nil && !IsNil(o.MetaMonUsedKbyte) {
		return true
	}

	return false
}

// SetMetaMonUsedKbyte gets a reference to the given float64 and assigns it to the MetaMonUsedKbyte field.
func (o *HostStat) SetMetaMonUsedKbyte(v float64) {
	o.MetaMonUsedKbyte = &v
}

// GetMetaPostgresUsedKbyte returns the MetaPostgresUsedKbyte field value if set, zero value otherwise.
func (o *HostStat) GetMetaPostgresUsedKbyte() float64 {
	if o == nil || IsNil(o.MetaPostgresUsedKbyte) {
		var ret float64
		return ret
	}
	return *o.MetaPostgresUsedKbyte
}

// GetMetaPostgresUsedKbyteOk returns a tuple with the MetaPostgresUsedKbyte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostStat) GetMetaPostgresUsedKbyteOk() (*float64, bool) {
	if o == nil || IsNil(o.MetaPostgresUsedKbyte) {
		return nil, false
	}
	return o.MetaPostgresUsedKbyte, true
}

// HasMetaPostgresUsedKbyte returns a boolean if a field has been set.
func (o *HostStat) HasMetaPostgresUsedKbyte() bool {
	if o != nil && !IsNil(o.MetaPostgresUsedKbyte) {
		return true
	}

	return false
}

// SetMetaPostgresUsedKbyte gets a reference to the given float64 and assigns it to the MetaPostgresUsedKbyte field.
func (o *HostStat) SetMetaPostgresUsedKbyte(v float64) {
	o.MetaPostgresUsedKbyte = &v
}

// GetMetaPrometheusUsedKbyte returns the MetaPrometheusUsedKbyte field value if set, zero value otherwise.
func (o *HostStat) GetMetaPrometheusUsedKbyte() float64 {
	if o == nil || IsNil(o.MetaPrometheusUsedKbyte) {
		var ret float64
		return ret
	}
	return *o.MetaPrometheusUsedKbyte
}

// GetMetaPrometheusUsedKbyteOk returns a tuple with the MetaPrometheusUsedKbyte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostStat) GetMetaPrometheusUsedKbyteOk() (*float64, bool) {
	if o == nil || IsNil(o.MetaPrometheusUsedKbyte) {
		return nil, false
	}
	return o.MetaPrometheusUsedKbyte, true
}

// HasMetaPrometheusUsedKbyte returns a boolean if a field has been set.
func (o *HostStat) HasMetaPrometheusUsedKbyte() bool {
	if o != nil && !IsNil(o.MetaPrometheusUsedKbyte) {
		return true
	}

	return false
}

// SetMetaPrometheusUsedKbyte gets a reference to the given float64 and assigns it to the MetaPrometheusUsedKbyte field.
func (o *HostStat) SetMetaPrometheusUsedKbyte(v float64) {
	o.MetaPrometheusUsedKbyte = &v
}

// GetNetworkDropPps returns the NetworkDropPps field value if set, zero value otherwise.
func (o *HostStat) GetNetworkDropPps() float64 {
	if o == nil || IsNil(o.NetworkDropPps) {
		var ret float64
		return ret
	}
	return *o.NetworkDropPps
}

// GetNetworkDropPpsOk returns a tuple with the NetworkDropPps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostStat) GetNetworkDropPpsOk() (*float64, bool) {
	if o == nil || IsNil(o.NetworkDropPps) {
		return nil, false
	}
	return o.NetworkDropPps, true
}

// HasNetworkDropPps returns a boolean if a field has been set.
func (o *HostStat) HasNetworkDropPps() bool {
	if o != nil && !IsNil(o.NetworkDropPps) {
		return true
	}

	return false
}

// SetNetworkDropPps gets a reference to the given float64 and assigns it to the NetworkDropPps field.
func (o *HostStat) SetNetworkDropPps(v float64) {
	o.NetworkDropPps = &v
}

// GetNetworkDropRatio returns the NetworkDropRatio field value if set, zero value otherwise.
func (o *HostStat) GetNetworkDropRatio() float64 {
	if o == nil || IsNil(o.NetworkDropRatio) {
		var ret float64
		return ret
	}
	return *o.NetworkDropRatio
}

// GetNetworkDropRatioOk returns a tuple with the NetworkDropRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostStat) GetNetworkDropRatioOk() (*float64, bool) {
	if o == nil || IsNil(o.NetworkDropRatio) {
		return nil, false
	}
	return o.NetworkDropRatio, true
}

// HasNetworkDropRatio returns a boolean if a field has been set.
func (o *HostStat) HasNetworkDropRatio() bool {
	if o != nil && !IsNil(o.NetworkDropRatio) {
		return true
	}

	return false
}

// SetNetworkDropRatio gets a reference to the given float64 and assigns it to the NetworkDropRatio field.
func (o *HostStat) SetNetworkDropRatio(v float64) {
	o.NetworkDropRatio = &v
}

// GetNetworkErrorPps returns the NetworkErrorPps field value if set, zero value otherwise.
func (o *HostStat) GetNetworkErrorPps() float64 {
	if o == nil || IsNil(o.NetworkErrorPps) {
		var ret float64
		return ret
	}
	return *o.NetworkErrorPps
}

// GetNetworkErrorPpsOk returns a tuple with the NetworkErrorPps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostStat) GetNetworkErrorPpsOk() (*float64, bool) {
	if o == nil || IsNil(o.NetworkErrorPps) {
		return nil, false
	}
	return o.NetworkErrorPps, true
}

// HasNetworkErrorPps returns a boolean if a field has been set.
func (o *HostStat) HasNetworkErrorPps() bool {
	if o != nil && !IsNil(o.NetworkErrorPps) {
		return true
	}

	return false
}

// SetNetworkErrorPps gets a reference to the given float64 and assigns it to the NetworkErrorPps field.
func (o *HostStat) SetNetworkErrorPps(v float64) {
	o.NetworkErrorPps = &v
}

// GetNetworkErrorRatio returns the NetworkErrorRatio field value if set, zero value otherwise.
func (o *HostStat) GetNetworkErrorRatio() float64 {
	if o == nil || IsNil(o.NetworkErrorRatio) {
		var ret float64
		return ret
	}
	return *o.NetworkErrorRatio
}

// GetNetworkErrorRatioOk returns a tuple with the NetworkErrorRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostStat) GetNetworkErrorRatioOk() (*float64, bool) {
	if o == nil || IsNil(o.NetworkErrorRatio) {
		return nil, false
	}
	return o.NetworkErrorRatio, true
}

// HasNetworkErrorRatio returns a boolean if a field has been set.
func (o *HostStat) HasNetworkErrorRatio() bool {
	if o != nil && !IsNil(o.NetworkErrorRatio) {
		return true
	}

	return false
}

// SetNetworkErrorRatio gets a reference to the given float64 and assigns it to the NetworkErrorRatio field.
func (o *HostStat) SetNetworkErrorRatio(v float64) {
	o.NetworkErrorRatio = &v
}

// GetNetworkRxBandwidthKbyte returns the NetworkRxBandwidthKbyte field value if set, zero value otherwise.
func (o *HostStat) GetNetworkRxBandwidthKbyte() float64 {
	if o == nil || IsNil(o.NetworkRxBandwidthKbyte) {
		var ret float64
		return ret
	}
	return *o.NetworkRxBandwidthKbyte
}

// GetNetworkRxBandwidthKbyteOk returns a tuple with the NetworkRxBandwidthKbyte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostStat) GetNetworkRxBandwidthKbyteOk() (*float64, bool) {
	if o == nil || IsNil(o.NetworkRxBandwidthKbyte) {
		return nil, false
	}
	return o.NetworkRxBandwidthKbyte, true
}

// HasNetworkRxBandwidthKbyte returns a boolean if a field has been set.
func (o *HostStat) HasNetworkRxBandwidthKbyte() bool {
	if o != nil && !IsNil(o.NetworkRxBandwidthKbyte) {
		return true
	}

	return false
}

// SetNetworkRxBandwidthKbyte gets a reference to the given float64 and assigns it to the NetworkRxBandwidthKbyte field.
func (o *HostStat) SetNetworkRxBandwidthKbyte(v float64) {
	o.NetworkRxBandwidthKbyte = &v
}

// GetNetworkRxDropPps returns the NetworkRxDropPps field value if set, zero value otherwise.
func (o *HostStat) GetNetworkRxDropPps() float64 {
	if o == nil || IsNil(o.NetworkRxDropPps) {
		var ret float64
		return ret
	}
	return *o.NetworkRxDropPps
}

// GetNetworkRxDropPpsOk returns a tuple with the NetworkRxDropPps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostStat) GetNetworkRxDropPpsOk() (*float64, bool) {
	if o == nil || IsNil(o.NetworkRxDropPps) {
		return nil, false
	}
	return o.NetworkRxDropPps, true
}

// HasNetworkRxDropPps returns a boolean if a field has been set.
func (o *HostStat) HasNetworkRxDropPps() bool {
	if o != nil && !IsNil(o.NetworkRxDropPps) {
		return true
	}

	return false
}

// SetNetworkRxDropPps gets a reference to the given float64 and assigns it to the NetworkRxDropPps field.
func (o *HostStat) SetNetworkRxDropPps(v float64) {
	o.NetworkRxDropPps = &v
}

// GetNetworkRxDropRatio returns the NetworkRxDropRatio field value if set, zero value otherwise.
func (o *HostStat) GetNetworkRxDropRatio() float64 {
	if o == nil || IsNil(o.NetworkRxDropRatio) {
		var ret float64
		return ret
	}
	return *o.NetworkRxDropRatio
}

// GetNetworkRxDropRatioOk returns a tuple with the NetworkRxDropRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostStat) GetNetworkRxDropRatioOk() (*float64, bool) {
	if o == nil || IsNil(o.NetworkRxDropRatio) {
		return nil, false
	}
	return o.NetworkRxDropRatio, true
}

// HasNetworkRxDropRatio returns a boolean if a field has been set.
func (o *HostStat) HasNetworkRxDropRatio() bool {
	if o != nil && !IsNil(o.NetworkRxDropRatio) {
		return true
	}

	return false
}

// SetNetworkRxDropRatio gets a reference to the given float64 and assigns it to the NetworkRxDropRatio field.
func (o *HostStat) SetNetworkRxDropRatio(v float64) {
	o.NetworkRxDropRatio = &v
}

// GetNetworkRxErrorPps returns the NetworkRxErrorPps field value if set, zero value otherwise.
func (o *HostStat) GetNetworkRxErrorPps() float64 {
	if o == nil || IsNil(o.NetworkRxErrorPps) {
		var ret float64
		return ret
	}
	return *o.NetworkRxErrorPps
}

// GetNetworkRxErrorPpsOk returns a tuple with the NetworkRxErrorPps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostStat) GetNetworkRxErrorPpsOk() (*float64, bool) {
	if o == nil || IsNil(o.NetworkRxErrorPps) {
		return nil, false
	}
	return o.NetworkRxErrorPps, true
}

// HasNetworkRxErrorPps returns a boolean if a field has been set.
func (o *HostStat) HasNetworkRxErrorPps() bool {
	if o != nil && !IsNil(o.NetworkRxErrorPps) {
		return true
	}

	return false
}

// SetNetworkRxErrorPps gets a reference to the given float64 and assigns it to the NetworkRxErrorPps field.
func (o *HostStat) SetNetworkRxErrorPps(v float64) {
	o.NetworkRxErrorPps = &v
}

// GetNetworkRxErrorRatio returns the NetworkRxErrorRatio field value if set, zero value otherwise.
func (o *HostStat) GetNetworkRxErrorRatio() float64 {
	if o == nil || IsNil(o.NetworkRxErrorRatio) {
		var ret float64
		return ret
	}
	return *o.NetworkRxErrorRatio
}

// GetNetworkRxErrorRatioOk returns a tuple with the NetworkRxErrorRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostStat) GetNetworkRxErrorRatioOk() (*float64, bool) {
	if o == nil || IsNil(o.NetworkRxErrorRatio) {
		return nil, false
	}
	return o.NetworkRxErrorRatio, true
}

// HasNetworkRxErrorRatio returns a boolean if a field has been set.
func (o *HostStat) HasNetworkRxErrorRatio() bool {
	if o != nil && !IsNil(o.NetworkRxErrorRatio) {
		return true
	}

	return false
}

// SetNetworkRxErrorRatio gets a reference to the given float64 and assigns it to the NetworkRxErrorRatio field.
func (o *HostStat) SetNetworkRxErrorRatio(v float64) {
	o.NetworkRxErrorRatio = &v
}

// GetNetworkRxPps returns the NetworkRxPps field value if set, zero value otherwise.
func (o *HostStat) GetNetworkRxPps() float64 {
	if o == nil || IsNil(o.NetworkRxPps) {
		var ret float64
		return ret
	}
	return *o.NetworkRxPps
}

// GetNetworkRxPpsOk returns a tuple with the NetworkRxPps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostStat) GetNetworkRxPpsOk() (*float64, bool) {
	if o == nil || IsNil(o.NetworkRxPps) {
		return nil, false
	}
	return o.NetworkRxPps, true
}

// HasNetworkRxPps returns a boolean if a field has been set.
func (o *HostStat) HasNetworkRxPps() bool {
	if o != nil && !IsNil(o.NetworkRxPps) {
		return true
	}

	return false
}

// SetNetworkRxPps gets a reference to the given float64 and assigns it to the NetworkRxPps field.
func (o *HostStat) SetNetworkRxPps(v float64) {
	o.NetworkRxPps = &v
}

// GetNetworkTxBandwidthKbyte returns the NetworkTxBandwidthKbyte field value if set, zero value otherwise.
func (o *HostStat) GetNetworkTxBandwidthKbyte() float64 {
	if o == nil || IsNil(o.NetworkTxBandwidthKbyte) {
		var ret float64
		return ret
	}
	return *o.NetworkTxBandwidthKbyte
}

// GetNetworkTxBandwidthKbyteOk returns a tuple with the NetworkTxBandwidthKbyte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostStat) GetNetworkTxBandwidthKbyteOk() (*float64, bool) {
	if o == nil || IsNil(o.NetworkTxBandwidthKbyte) {
		return nil, false
	}
	return o.NetworkTxBandwidthKbyte, true
}

// HasNetworkTxBandwidthKbyte returns a boolean if a field has been set.
func (o *HostStat) HasNetworkTxBandwidthKbyte() bool {
	if o != nil && !IsNil(o.NetworkTxBandwidthKbyte) {
		return true
	}

	return false
}

// SetNetworkTxBandwidthKbyte gets a reference to the given float64 and assigns it to the NetworkTxBandwidthKbyte field.
func (o *HostStat) SetNetworkTxBandwidthKbyte(v float64) {
	o.NetworkTxBandwidthKbyte = &v
}

// GetNetworkTxDropPps returns the NetworkTxDropPps field value if set, zero value otherwise.
func (o *HostStat) GetNetworkTxDropPps() float64 {
	if o == nil || IsNil(o.NetworkTxDropPps) {
		var ret float64
		return ret
	}
	return *o.NetworkTxDropPps
}

// GetNetworkTxDropPpsOk returns a tuple with the NetworkTxDropPps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostStat) GetNetworkTxDropPpsOk() (*float64, bool) {
	if o == nil || IsNil(o.NetworkTxDropPps) {
		return nil, false
	}
	return o.NetworkTxDropPps, true
}

// HasNetworkTxDropPps returns a boolean if a field has been set.
func (o *HostStat) HasNetworkTxDropPps() bool {
	if o != nil && !IsNil(o.NetworkTxDropPps) {
		return true
	}

	return false
}

// SetNetworkTxDropPps gets a reference to the given float64 and assigns it to the NetworkTxDropPps field.
func (o *HostStat) SetNetworkTxDropPps(v float64) {
	o.NetworkTxDropPps = &v
}

// GetNetworkTxDropRatio returns the NetworkTxDropRatio field value if set, zero value otherwise.
func (o *HostStat) GetNetworkTxDropRatio() float64 {
	if o == nil || IsNil(o.NetworkTxDropRatio) {
		var ret float64
		return ret
	}
	return *o.NetworkTxDropRatio
}

// GetNetworkTxDropRatioOk returns a tuple with the NetworkTxDropRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostStat) GetNetworkTxDropRatioOk() (*float64, bool) {
	if o == nil || IsNil(o.NetworkTxDropRatio) {
		return nil, false
	}
	return o.NetworkTxDropRatio, true
}

// HasNetworkTxDropRatio returns a boolean if a field has been set.
func (o *HostStat) HasNetworkTxDropRatio() bool {
	if o != nil && !IsNil(o.NetworkTxDropRatio) {
		return true
	}

	return false
}

// SetNetworkTxDropRatio gets a reference to the given float64 and assigns it to the NetworkTxDropRatio field.
func (o *HostStat) SetNetworkTxDropRatio(v float64) {
	o.NetworkTxDropRatio = &v
}

// GetNetworkTxErrorPps returns the NetworkTxErrorPps field value if set, zero value otherwise.
func (o *HostStat) GetNetworkTxErrorPps() float64 {
	if o == nil || IsNil(o.NetworkTxErrorPps) {
		var ret float64
		return ret
	}
	return *o.NetworkTxErrorPps
}

// GetNetworkTxErrorPpsOk returns a tuple with the NetworkTxErrorPps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostStat) GetNetworkTxErrorPpsOk() (*float64, bool) {
	if o == nil || IsNil(o.NetworkTxErrorPps) {
		return nil, false
	}
	return o.NetworkTxErrorPps, true
}

// HasNetworkTxErrorPps returns a boolean if a field has been set.
func (o *HostStat) HasNetworkTxErrorPps() bool {
	if o != nil && !IsNil(o.NetworkTxErrorPps) {
		return true
	}

	return false
}

// SetNetworkTxErrorPps gets a reference to the given float64 and assigns it to the NetworkTxErrorPps field.
func (o *HostStat) SetNetworkTxErrorPps(v float64) {
	o.NetworkTxErrorPps = &v
}

// GetNetworkTxErrorRatio returns the NetworkTxErrorRatio field value if set, zero value otherwise.
func (o *HostStat) GetNetworkTxErrorRatio() float64 {
	if o == nil || IsNil(o.NetworkTxErrorRatio) {
		var ret float64
		return ret
	}
	return *o.NetworkTxErrorRatio
}

// GetNetworkTxErrorRatioOk returns a tuple with the NetworkTxErrorRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostStat) GetNetworkTxErrorRatioOk() (*float64, bool) {
	if o == nil || IsNil(o.NetworkTxErrorRatio) {
		return nil, false
	}
	return o.NetworkTxErrorRatio, true
}

// HasNetworkTxErrorRatio returns a boolean if a field has been set.
func (o *HostStat) HasNetworkTxErrorRatio() bool {
	if o != nil && !IsNil(o.NetworkTxErrorRatio) {
		return true
	}

	return false
}

// SetNetworkTxErrorRatio gets a reference to the given float64 and assigns it to the NetworkTxErrorRatio field.
func (o *HostStat) SetNetworkTxErrorRatio(v float64) {
	o.NetworkTxErrorRatio = &v
}

// GetNetworkTxPps returns the NetworkTxPps field value if set, zero value otherwise.
func (o *HostStat) GetNetworkTxPps() float64 {
	if o == nil || IsNil(o.NetworkTxPps) {
		var ret float64
		return ret
	}
	return *o.NetworkTxPps
}

// GetNetworkTxPpsOk returns a tuple with the NetworkTxPps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostStat) GetNetworkTxPpsOk() (*float64, bool) {
	if o == nil || IsNil(o.NetworkTxPps) {
		return nil, false
	}
	return o.NetworkTxPps, true
}

// HasNetworkTxPps returns a boolean if a field has been set.
func (o *HostStat) HasNetworkTxPps() bool {
	if o != nil && !IsNil(o.NetworkTxPps) {
		return true
	}

	return false
}

// SetNetworkTxPps gets a reference to the given float64 and assigns it to the NetworkTxPps field.
func (o *HostStat) SetNetworkTxPps(v float64) {
	o.NetworkTxPps = &v
}

// GetPagePagingPs returns the PagePagingPs field value if set, zero value otherwise.
func (o *HostStat) GetPagePagingPs() float64 {
	if o == nil || IsNil(o.PagePagingPs) {
		var ret float64
		return ret
	}
	return *o.PagePagingPs
}

// GetPagePagingPsOk returns a tuple with the PagePagingPs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostStat) GetPagePagingPsOk() (*float64, bool) {
	if o == nil || IsNil(o.PagePagingPs) {
		return nil, false
	}
	return o.PagePagingPs, true
}

// HasPagePagingPs returns a boolean if a field has been set.
func (o *HostStat) HasPagePagingPs() bool {
	if o != nil && !IsNil(o.PagePagingPs) {
		return true
	}

	return false
}

// SetPagePagingPs gets a reference to the given float64 and assigns it to the PagePagingPs field.
func (o *HostStat) SetPagePagingPs(v float64) {
	o.PagePagingPs = &v
}

func (o HostStat) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HostStat) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContextSwitchPs) {
		toSerialize["context_switch_ps"] = o.ContextSwitchPs
	}
	if !IsNil(o.CpuUtil) {
		toSerialize["cpu_util"] = o.CpuUtil
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.InterruptsPs) {
		toSerialize["interrupts_ps"] = o.InterruptsPs
	}
	if !IsNil(o.Load15min) {
		toSerialize["load15min"] = o.Load15min
	}
	if !IsNil(o.Load1min) {
		toSerialize["load1min"] = o.Load1min
	}
	if !IsNil(o.Load5min) {
		toSerialize["load5min"] = o.Load5min
	}
	if !IsNil(o.MemUsagePercent) {
		toSerialize["mem_usage_percent"] = o.MemUsagePercent
	}
	if !IsNil(o.MetaDockerUsedKbyte) {
		toSerialize["meta_docker_used_kbyte"] = o.MetaDockerUsedKbyte
	}
	if !IsNil(o.MetaElasticsearchUsedKbyte) {
		toSerialize["meta_elasticsearch_used_kbyte"] = o.MetaElasticsearchUsedKbyte
	}
	if !IsNil(o.MetaEtcdUsedKbyte) {
		toSerialize["meta_etcd_used_kbyte"] = o.MetaEtcdUsedKbyte
	}
	if !IsNil(o.MetaLogUsedKbyte) {
		toSerialize["meta_log_used_kbyte"] = o.MetaLogUsedKbyte
	}
	if !IsNil(o.MetaMonUsedKbyte) {
		toSerialize["meta_mon_used_kbyte"] = o.MetaMonUsedKbyte
	}
	if !IsNil(o.MetaPostgresUsedKbyte) {
		toSerialize["meta_postgres_used_kbyte"] = o.MetaPostgresUsedKbyte
	}
	if !IsNil(o.MetaPrometheusUsedKbyte) {
		toSerialize["meta_prometheus_used_kbyte"] = o.MetaPrometheusUsedKbyte
	}
	if !IsNil(o.NetworkDropPps) {
		toSerialize["network_drop_pps"] = o.NetworkDropPps
	}
	if !IsNil(o.NetworkDropRatio) {
		toSerialize["network_drop_ratio"] = o.NetworkDropRatio
	}
	if !IsNil(o.NetworkErrorPps) {
		toSerialize["network_error_pps"] = o.NetworkErrorPps
	}
	if !IsNil(o.NetworkErrorRatio) {
		toSerialize["network_error_ratio"] = o.NetworkErrorRatio
	}
	if !IsNil(o.NetworkRxBandwidthKbyte) {
		toSerialize["network_rx_bandwidth_kbyte"] = o.NetworkRxBandwidthKbyte
	}
	if !IsNil(o.NetworkRxDropPps) {
		toSerialize["network_rx_drop_pps"] = o.NetworkRxDropPps
	}
	if !IsNil(o.NetworkRxDropRatio) {
		toSerialize["network_rx_drop_ratio"] = o.NetworkRxDropRatio
	}
	if !IsNil(o.NetworkRxErrorPps) {
		toSerialize["network_rx_error_pps"] = o.NetworkRxErrorPps
	}
	if !IsNil(o.NetworkRxErrorRatio) {
		toSerialize["network_rx_error_ratio"] = o.NetworkRxErrorRatio
	}
	if !IsNil(o.NetworkRxPps) {
		toSerialize["network_rx_pps"] = o.NetworkRxPps
	}
	if !IsNil(o.NetworkTxBandwidthKbyte) {
		toSerialize["network_tx_bandwidth_kbyte"] = o.NetworkTxBandwidthKbyte
	}
	if !IsNil(o.NetworkTxDropPps) {
		toSerialize["network_tx_drop_pps"] = o.NetworkTxDropPps
	}
	if !IsNil(o.NetworkTxDropRatio) {
		toSerialize["network_tx_drop_ratio"] = o.NetworkTxDropRatio
	}
	if !IsNil(o.NetworkTxErrorPps) {
		toSerialize["network_tx_error_pps"] = o.NetworkTxErrorPps
	}
	if !IsNil(o.NetworkTxErrorRatio) {
		toSerialize["network_tx_error_ratio"] = o.NetworkTxErrorRatio
	}
	if !IsNil(o.NetworkTxPps) {
		toSerialize["network_tx_pps"] = o.NetworkTxPps
	}
	if !IsNil(o.PagePagingPs) {
		toSerialize["page_paging_ps"] = o.PagePagingPs
	}
	return toSerialize, nil
}

type NullableHostStat struct {
	value *HostStat
	isSet bool
}

func (v NullableHostStat) Get() *HostStat {
	return v.value
}

func (v *NullableHostStat) Set(val *HostStat) {
	v.value = val
	v.isSet = true
}

func (v NullableHostStat) IsSet() bool {
	return v.isSet
}

func (v *NullableHostStat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHostStat(val *HostStat) *NullableHostStat {
	return &NullableHostStat{value: val, isSet: true}
}

func (v NullableHostStat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHostStat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


