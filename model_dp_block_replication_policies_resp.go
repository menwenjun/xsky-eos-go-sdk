/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DpBlockReplicationPoliciesResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DpBlockReplicationPoliciesResp{}

// DpBlockReplicationPoliciesResp struct for DpBlockReplicationPoliciesResp
type DpBlockReplicationPoliciesResp struct {
	DpBlockReplicationPolicies []DpBlockReplicationPolicy `json:"dp_block_replication_policies,omitempty"`
}

// NewDpBlockReplicationPoliciesResp instantiates a new DpBlockReplicationPoliciesResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDpBlockReplicationPoliciesResp() *DpBlockReplicationPoliciesResp {
	this := DpBlockReplicationPoliciesResp{}
	return &this
}

// NewDpBlockReplicationPoliciesRespWithDefaults instantiates a new DpBlockReplicationPoliciesResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDpBlockReplicationPoliciesRespWithDefaults() *DpBlockReplicationPoliciesResp {
	this := DpBlockReplicationPoliciesResp{}
	return &this
}

// GetDpBlockReplicationPolicies returns the DpBlockReplicationPolicies field value if set, zero value otherwise.
func (o *DpBlockReplicationPoliciesResp) GetDpBlockReplicationPolicies() []DpBlockReplicationPolicy {
	if o == nil || IsNil(o.DpBlockReplicationPolicies) {
		var ret []DpBlockReplicationPolicy
		return ret
	}
	return o.DpBlockReplicationPolicies
}

// GetDpBlockReplicationPoliciesOk returns a tuple with the DpBlockReplicationPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpBlockReplicationPoliciesResp) GetDpBlockReplicationPoliciesOk() ([]DpBlockReplicationPolicy, bool) {
	if o == nil || IsNil(o.DpBlockReplicationPolicies) {
		return nil, false
	}
	return o.DpBlockReplicationPolicies, true
}

// HasDpBlockReplicationPolicies returns a boolean if a field has been set.
func (o *DpBlockReplicationPoliciesResp) HasDpBlockReplicationPolicies() bool {
	if o != nil && !IsNil(o.DpBlockReplicationPolicies) {
		return true
	}

	return false
}

// SetDpBlockReplicationPolicies gets a reference to the given []DpBlockReplicationPolicy and assigns it to the DpBlockReplicationPolicies field.
func (o *DpBlockReplicationPoliciesResp) SetDpBlockReplicationPolicies(v []DpBlockReplicationPolicy) {
	o.DpBlockReplicationPolicies = v
}

func (o DpBlockReplicationPoliciesResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DpBlockReplicationPoliciesResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DpBlockReplicationPolicies) {
		toSerialize["dp_block_replication_policies"] = o.DpBlockReplicationPolicies
	}
	return toSerialize, nil
}

type NullableDpBlockReplicationPoliciesResp struct {
	value *DpBlockReplicationPoliciesResp
	isSet bool
}

func (v NullableDpBlockReplicationPoliciesResp) Get() *DpBlockReplicationPoliciesResp {
	return v.value
}

func (v *NullableDpBlockReplicationPoliciesResp) Set(val *DpBlockReplicationPoliciesResp) {
	v.value = val
	v.isSet = true
}

func (v NullableDpBlockReplicationPoliciesResp) IsSet() bool {
	return v.isSet
}

func (v *NullableDpBlockReplicationPoliciesResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDpBlockReplicationPoliciesResp(val *DpBlockReplicationPoliciesResp) *NullableDpBlockReplicationPoliciesResp {
	return &NullableDpBlockReplicationPoliciesResp{value: val, isSet: true}
}

func (v NullableDpBlockReplicationPoliciesResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDpBlockReplicationPoliciesResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


