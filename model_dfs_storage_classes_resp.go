/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DfsStorageClassesResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsStorageClassesResp{}

// DfsStorageClassesResp struct for DfsStorageClassesResp
type DfsStorageClassesResp struct {
	// dfs storage class records
	DfsStorageClasses []DfsTierRecord `json:"dfs_storage_classes"`
}

type _DfsStorageClassesResp DfsStorageClassesResp

// NewDfsStorageClassesResp instantiates a new DfsStorageClassesResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsStorageClassesResp(dfsStorageClasses []DfsTierRecord) *DfsStorageClassesResp {
	this := DfsStorageClassesResp{}
	this.DfsStorageClasses = dfsStorageClasses
	return &this
}

// NewDfsStorageClassesRespWithDefaults instantiates a new DfsStorageClassesResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsStorageClassesRespWithDefaults() *DfsStorageClassesResp {
	this := DfsStorageClassesResp{}
	return &this
}

// GetDfsStorageClasses returns the DfsStorageClasses field value
func (o *DfsStorageClassesResp) GetDfsStorageClasses() []DfsTierRecord {
	if o == nil {
		var ret []DfsTierRecord
		return ret
	}

	return o.DfsStorageClasses
}

// GetDfsStorageClassesOk returns a tuple with the DfsStorageClasses field value
// and a boolean to check if the value has been set.
func (o *DfsStorageClassesResp) GetDfsStorageClassesOk() ([]DfsTierRecord, bool) {
	if o == nil {
		return nil, false
	}
	return o.DfsStorageClasses, true
}

// SetDfsStorageClasses sets field value
func (o *DfsStorageClassesResp) SetDfsStorageClasses(v []DfsTierRecord) {
	o.DfsStorageClasses = v
}

func (o DfsStorageClassesResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsStorageClassesResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dfs_storage_classes"] = o.DfsStorageClasses
	return toSerialize, nil
}

func (o *DfsStorageClassesResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dfs_storage_classes",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDfsStorageClassesResp := _DfsStorageClassesResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDfsStorageClassesResp)

	if err != nil {
		return err
	}

	*o = DfsStorageClassesResp(varDfsStorageClassesResp)

	return err
}

type NullableDfsStorageClassesResp struct {
	value *DfsStorageClassesResp
	isSet bool
}

func (v NullableDfsStorageClassesResp) Get() *DfsStorageClassesResp {
	return v.value
}

func (v *NullableDfsStorageClassesResp) Set(val *DfsStorageClassesResp) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsStorageClassesResp) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsStorageClassesResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsStorageClassesResp(val *DfsStorageClassesResp) *NullableDfsStorageClassesResp {
	return &NullableDfsStorageClassesResp{value: val, isSet: true}
}

func (v NullableDfsStorageClassesResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsStorageClassesResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


