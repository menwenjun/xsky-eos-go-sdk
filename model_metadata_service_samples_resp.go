/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MetadataServiceSamplesResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetadataServiceSamplesResp{}

// MetadataServiceSamplesResp struct for MetadataServiceSamplesResp
type MetadataServiceSamplesResp struct {
	MetadataServiceSamples []MetadataServiceStat `json:"metadata_service_samples"`
}

type _MetadataServiceSamplesResp MetadataServiceSamplesResp

// NewMetadataServiceSamplesResp instantiates a new MetadataServiceSamplesResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetadataServiceSamplesResp(metadataServiceSamples []MetadataServiceStat) *MetadataServiceSamplesResp {
	this := MetadataServiceSamplesResp{}
	this.MetadataServiceSamples = metadataServiceSamples
	return &this
}

// NewMetadataServiceSamplesRespWithDefaults instantiates a new MetadataServiceSamplesResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetadataServiceSamplesRespWithDefaults() *MetadataServiceSamplesResp {
	this := MetadataServiceSamplesResp{}
	return &this
}

// GetMetadataServiceSamples returns the MetadataServiceSamples field value
func (o *MetadataServiceSamplesResp) GetMetadataServiceSamples() []MetadataServiceStat {
	if o == nil {
		var ret []MetadataServiceStat
		return ret
	}

	return o.MetadataServiceSamples
}

// GetMetadataServiceSamplesOk returns a tuple with the MetadataServiceSamples field value
// and a boolean to check if the value has been set.
func (o *MetadataServiceSamplesResp) GetMetadataServiceSamplesOk() ([]MetadataServiceStat, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetadataServiceSamples, true
}

// SetMetadataServiceSamples sets field value
func (o *MetadataServiceSamplesResp) SetMetadataServiceSamples(v []MetadataServiceStat) {
	o.MetadataServiceSamples = v
}

func (o MetadataServiceSamplesResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetadataServiceSamplesResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["metadata_service_samples"] = o.MetadataServiceSamples
	return toSerialize, nil
}

func (o *MetadataServiceSamplesResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"metadata_service_samples",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMetadataServiceSamplesResp := _MetadataServiceSamplesResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMetadataServiceSamplesResp)

	if err != nil {
		return err
	}

	*o = MetadataServiceSamplesResp(varMetadataServiceSamplesResp)

	return err
}

type NullableMetadataServiceSamplesResp struct {
	value *MetadataServiceSamplesResp
	isSet bool
}

func (v NullableMetadataServiceSamplesResp) Get() *MetadataServiceSamplesResp {
	return v.value
}

func (v *NullableMetadataServiceSamplesResp) Set(val *MetadataServiceSamplesResp) {
	v.value = val
	v.isSet = true
}

func (v NullableMetadataServiceSamplesResp) IsSet() bool {
	return v.isSet
}

func (v *NullableMetadataServiceSamplesResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetadataServiceSamplesResp(val *MetadataServiceSamplesResp) *NullableMetadataServiceSamplesResp {
	return &NullableMetadataServiceSamplesResp{value: val, isSet: true}
}

func (v NullableMetadataServiceSamplesResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetadataServiceSamplesResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


