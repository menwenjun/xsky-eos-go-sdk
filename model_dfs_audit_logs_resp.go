/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DfsAuditLogsResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsAuditLogsResp{}

// DfsAuditLogsResp struct for DfsAuditLogsResp
type DfsAuditLogsResp struct {
	DfsAuditLogs []DfsAuditLog `json:"dfs_audit_logs"`
}

type _DfsAuditLogsResp DfsAuditLogsResp

// NewDfsAuditLogsResp instantiates a new DfsAuditLogsResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsAuditLogsResp(dfsAuditLogs []DfsAuditLog) *DfsAuditLogsResp {
	this := DfsAuditLogsResp{}
	this.DfsAuditLogs = dfsAuditLogs
	return &this
}

// NewDfsAuditLogsRespWithDefaults instantiates a new DfsAuditLogsResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsAuditLogsRespWithDefaults() *DfsAuditLogsResp {
	this := DfsAuditLogsResp{}
	return &this
}

// GetDfsAuditLogs returns the DfsAuditLogs field value
func (o *DfsAuditLogsResp) GetDfsAuditLogs() []DfsAuditLog {
	if o == nil {
		var ret []DfsAuditLog
		return ret
	}

	return o.DfsAuditLogs
}

// GetDfsAuditLogsOk returns a tuple with the DfsAuditLogs field value
// and a boolean to check if the value has been set.
func (o *DfsAuditLogsResp) GetDfsAuditLogsOk() ([]DfsAuditLog, bool) {
	if o == nil {
		return nil, false
	}
	return o.DfsAuditLogs, true
}

// SetDfsAuditLogs sets field value
func (o *DfsAuditLogsResp) SetDfsAuditLogs(v []DfsAuditLog) {
	o.DfsAuditLogs = v
}

func (o DfsAuditLogsResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsAuditLogsResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dfs_audit_logs"] = o.DfsAuditLogs
	return toSerialize, nil
}

func (o *DfsAuditLogsResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dfs_audit_logs",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDfsAuditLogsResp := _DfsAuditLogsResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDfsAuditLogsResp)

	if err != nil {
		return err
	}

	*o = DfsAuditLogsResp(varDfsAuditLogsResp)

	return err
}

type NullableDfsAuditLogsResp struct {
	value *DfsAuditLogsResp
	isSet bool
}

func (v NullableDfsAuditLogsResp) Get() *DfsAuditLogsResp {
	return v.value
}

func (v *NullableDfsAuditLogsResp) Set(val *DfsAuditLogsResp) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsAuditLogsResp) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsAuditLogsResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsAuditLogsResp(val *DfsAuditLogsResp) *NullableDfsAuditLogsResp {
	return &NullableDfsAuditLogsResp{value: val, isSet: true}
}

func (v NullableDfsAuditLogsResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsAuditLogsResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


