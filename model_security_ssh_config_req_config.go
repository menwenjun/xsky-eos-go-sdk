/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SecuritySSHConfigReqConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecuritySSHConfigReqConfig{}

// SecuritySSHConfigReqConfig struct for SecuritySSHConfigReqConfig
type SecuritySSHConfigReqConfig struct {
	EncryptedPassword *string `json:"encrypted_password,omitempty"`
	Password *string `json:"password,omitempty"`
	PermitRootLogin *bool `json:"permit_root_login,omitempty"`
	Port int64 `json:"port"`
	PubKeyAuthentication *bool `json:"pub_key_authentication,omitempty"`
	RsaKeyId *string `json:"rsa_key_id,omitempty"`
	Timeout *int64 `json:"timeout,omitempty"`
	Username *string `json:"username,omitempty"`
}

type _SecuritySSHConfigReqConfig SecuritySSHConfigReqConfig

// NewSecuritySSHConfigReqConfig instantiates a new SecuritySSHConfigReqConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecuritySSHConfigReqConfig(port int64) *SecuritySSHConfigReqConfig {
	this := SecuritySSHConfigReqConfig{}
	this.Port = port
	return &this
}

// NewSecuritySSHConfigReqConfigWithDefaults instantiates a new SecuritySSHConfigReqConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecuritySSHConfigReqConfigWithDefaults() *SecuritySSHConfigReqConfig {
	this := SecuritySSHConfigReqConfig{}
	return &this
}

// GetEncryptedPassword returns the EncryptedPassword field value if set, zero value otherwise.
func (o *SecuritySSHConfigReqConfig) GetEncryptedPassword() string {
	if o == nil || IsNil(o.EncryptedPassword) {
		var ret string
		return ret
	}
	return *o.EncryptedPassword
}

// GetEncryptedPasswordOk returns a tuple with the EncryptedPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySSHConfigReqConfig) GetEncryptedPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.EncryptedPassword) {
		return nil, false
	}
	return o.EncryptedPassword, true
}

// HasEncryptedPassword returns a boolean if a field has been set.
func (o *SecuritySSHConfigReqConfig) HasEncryptedPassword() bool {
	if o != nil && !IsNil(o.EncryptedPassword) {
		return true
	}

	return false
}

// SetEncryptedPassword gets a reference to the given string and assigns it to the EncryptedPassword field.
func (o *SecuritySSHConfigReqConfig) SetEncryptedPassword(v string) {
	o.EncryptedPassword = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *SecuritySSHConfigReqConfig) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySSHConfigReqConfig) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *SecuritySSHConfigReqConfig) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *SecuritySSHConfigReqConfig) SetPassword(v string) {
	o.Password = &v
}

// GetPermitRootLogin returns the PermitRootLogin field value if set, zero value otherwise.
func (o *SecuritySSHConfigReqConfig) GetPermitRootLogin() bool {
	if o == nil || IsNil(o.PermitRootLogin) {
		var ret bool
		return ret
	}
	return *o.PermitRootLogin
}

// GetPermitRootLoginOk returns a tuple with the PermitRootLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySSHConfigReqConfig) GetPermitRootLoginOk() (*bool, bool) {
	if o == nil || IsNil(o.PermitRootLogin) {
		return nil, false
	}
	return o.PermitRootLogin, true
}

// HasPermitRootLogin returns a boolean if a field has been set.
func (o *SecuritySSHConfigReqConfig) HasPermitRootLogin() bool {
	if o != nil && !IsNil(o.PermitRootLogin) {
		return true
	}

	return false
}

// SetPermitRootLogin gets a reference to the given bool and assigns it to the PermitRootLogin field.
func (o *SecuritySSHConfigReqConfig) SetPermitRootLogin(v bool) {
	o.PermitRootLogin = &v
}

// GetPort returns the Port field value
func (o *SecuritySSHConfigReqConfig) GetPort() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Port
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
func (o *SecuritySSHConfigReqConfig) GetPortOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Port, true
}

// SetPort sets field value
func (o *SecuritySSHConfigReqConfig) SetPort(v int64) {
	o.Port = v
}

// GetPubKeyAuthentication returns the PubKeyAuthentication field value if set, zero value otherwise.
func (o *SecuritySSHConfigReqConfig) GetPubKeyAuthentication() bool {
	if o == nil || IsNil(o.PubKeyAuthentication) {
		var ret bool
		return ret
	}
	return *o.PubKeyAuthentication
}

// GetPubKeyAuthenticationOk returns a tuple with the PubKeyAuthentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySSHConfigReqConfig) GetPubKeyAuthenticationOk() (*bool, bool) {
	if o == nil || IsNil(o.PubKeyAuthentication) {
		return nil, false
	}
	return o.PubKeyAuthentication, true
}

// HasPubKeyAuthentication returns a boolean if a field has been set.
func (o *SecuritySSHConfigReqConfig) HasPubKeyAuthentication() bool {
	if o != nil && !IsNil(o.PubKeyAuthentication) {
		return true
	}

	return false
}

// SetPubKeyAuthentication gets a reference to the given bool and assigns it to the PubKeyAuthentication field.
func (o *SecuritySSHConfigReqConfig) SetPubKeyAuthentication(v bool) {
	o.PubKeyAuthentication = &v
}

// GetRsaKeyId returns the RsaKeyId field value if set, zero value otherwise.
func (o *SecuritySSHConfigReqConfig) GetRsaKeyId() string {
	if o == nil || IsNil(o.RsaKeyId) {
		var ret string
		return ret
	}
	return *o.RsaKeyId
}

// GetRsaKeyIdOk returns a tuple with the RsaKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySSHConfigReqConfig) GetRsaKeyIdOk() (*string, bool) {
	if o == nil || IsNil(o.RsaKeyId) {
		return nil, false
	}
	return o.RsaKeyId, true
}

// HasRsaKeyId returns a boolean if a field has been set.
func (o *SecuritySSHConfigReqConfig) HasRsaKeyId() bool {
	if o != nil && !IsNil(o.RsaKeyId) {
		return true
	}

	return false
}

// SetRsaKeyId gets a reference to the given string and assigns it to the RsaKeyId field.
func (o *SecuritySSHConfigReqConfig) SetRsaKeyId(v string) {
	o.RsaKeyId = &v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *SecuritySSHConfigReqConfig) GetTimeout() int64 {
	if o == nil || IsNil(o.Timeout) {
		var ret int64
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySSHConfigReqConfig) GetTimeoutOk() (*int64, bool) {
	if o == nil || IsNil(o.Timeout) {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *SecuritySSHConfigReqConfig) HasTimeout() bool {
	if o != nil && !IsNil(o.Timeout) {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given int64 and assigns it to the Timeout field.
func (o *SecuritySSHConfigReqConfig) SetTimeout(v int64) {
	o.Timeout = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *SecuritySSHConfigReqConfig) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySSHConfigReqConfig) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *SecuritySSHConfigReqConfig) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *SecuritySSHConfigReqConfig) SetUsername(v string) {
	o.Username = &v
}

func (o SecuritySSHConfigReqConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecuritySSHConfigReqConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EncryptedPassword) {
		toSerialize["encrypted_password"] = o.EncryptedPassword
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.PermitRootLogin) {
		toSerialize["permit_root_login"] = o.PermitRootLogin
	}
	toSerialize["port"] = o.Port
	if !IsNil(o.PubKeyAuthentication) {
		toSerialize["pub_key_authentication"] = o.PubKeyAuthentication
	}
	if !IsNil(o.RsaKeyId) {
		toSerialize["rsa_key_id"] = o.RsaKeyId
	}
	if !IsNil(o.Timeout) {
		toSerialize["timeout"] = o.Timeout
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	return toSerialize, nil
}

func (o *SecuritySSHConfigReqConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"port",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSecuritySSHConfigReqConfig := _SecuritySSHConfigReqConfig{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSecuritySSHConfigReqConfig)

	if err != nil {
		return err
	}

	*o = SecuritySSHConfigReqConfig(varSecuritySSHConfigReqConfig)

	return err
}

type NullableSecuritySSHConfigReqConfig struct {
	value *SecuritySSHConfigReqConfig
	isSet bool
}

func (v NullableSecuritySSHConfigReqConfig) Get() *SecuritySSHConfigReqConfig {
	return v.value
}

func (v *NullableSecuritySSHConfigReqConfig) Set(val *SecuritySSHConfigReqConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableSecuritySSHConfigReqConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableSecuritySSHConfigReqConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecuritySSHConfigReqConfig(val *SecuritySSHConfigReqConfig) *NullableSecuritySSHConfigReqConfig {
	return &NullableSecuritySSHConfigReqConfig{value: val, isSet: true}
}

func (v NullableSecuritySSHConfigReqConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecuritySSHConfigReqConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


