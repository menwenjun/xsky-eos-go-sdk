/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DfsPathPerformancesResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsPathPerformancesResp{}

// DfsPathPerformancesResp struct for DfsPathPerformancesResp
type DfsPathPerformancesResp struct {
	// dfs trash records
	DfsPathPerformances []DfsPathPerformance `json:"dfs_path_performances,omitempty"`
}

// NewDfsPathPerformancesResp instantiates a new DfsPathPerformancesResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsPathPerformancesResp() *DfsPathPerformancesResp {
	this := DfsPathPerformancesResp{}
	return &this
}

// NewDfsPathPerformancesRespWithDefaults instantiates a new DfsPathPerformancesResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsPathPerformancesRespWithDefaults() *DfsPathPerformancesResp {
	this := DfsPathPerformancesResp{}
	return &this
}

// GetDfsPathPerformances returns the DfsPathPerformances field value if set, zero value otherwise.
func (o *DfsPathPerformancesResp) GetDfsPathPerformances() []DfsPathPerformance {
	if o == nil || IsNil(o.DfsPathPerformances) {
		var ret []DfsPathPerformance
		return ret
	}
	return o.DfsPathPerformances
}

// GetDfsPathPerformancesOk returns a tuple with the DfsPathPerformances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsPathPerformancesResp) GetDfsPathPerformancesOk() ([]DfsPathPerformance, bool) {
	if o == nil || IsNil(o.DfsPathPerformances) {
		return nil, false
	}
	return o.DfsPathPerformances, true
}

// HasDfsPathPerformances returns a boolean if a field has been set.
func (o *DfsPathPerformancesResp) HasDfsPathPerformances() bool {
	if o != nil && !IsNil(o.DfsPathPerformances) {
		return true
	}

	return false
}

// SetDfsPathPerformances gets a reference to the given []DfsPathPerformance and assigns it to the DfsPathPerformances field.
func (o *DfsPathPerformancesResp) SetDfsPathPerformances(v []DfsPathPerformance) {
	o.DfsPathPerformances = v
}

func (o DfsPathPerformancesResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsPathPerformancesResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DfsPathPerformances) {
		toSerialize["dfs_path_performances"] = o.DfsPathPerformances
	}
	return toSerialize, nil
}

type NullableDfsPathPerformancesResp struct {
	value *DfsPathPerformancesResp
	isSet bool
}

func (v NullableDfsPathPerformancesResp) Get() *DfsPathPerformancesResp {
	return v.value
}

func (v *NullableDfsPathPerformancesResp) Set(val *DfsPathPerformancesResp) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsPathPerformancesResp) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsPathPerformancesResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsPathPerformancesResp(val *DfsPathPerformancesResp) *NullableDfsPathPerformancesResp {
	return &NullableDfsPathPerformancesResp{value: val, isSet: true}
}

func (v NullableDfsPathPerformancesResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsPathPerformancesResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


