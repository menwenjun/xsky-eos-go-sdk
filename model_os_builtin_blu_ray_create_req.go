/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OSBuiltinBluRayCreateReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OSBuiltinBluRayCreateReq{}

// OSBuiltinBluRayCreateReq struct for OSBuiltinBluRayCreateReq
type OSBuiltinBluRayCreateReq struct {
	OsBuiltinBluRay *OSBuiltinBluRayCreateReqBuiltinBluRay `json:"os_builtin_blu_ray,omitempty"`
}

// NewOSBuiltinBluRayCreateReq instantiates a new OSBuiltinBluRayCreateReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOSBuiltinBluRayCreateReq() *OSBuiltinBluRayCreateReq {
	this := OSBuiltinBluRayCreateReq{}
	return &this
}

// NewOSBuiltinBluRayCreateReqWithDefaults instantiates a new OSBuiltinBluRayCreateReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOSBuiltinBluRayCreateReqWithDefaults() *OSBuiltinBluRayCreateReq {
	this := OSBuiltinBluRayCreateReq{}
	return &this
}

// GetOsBuiltinBluRay returns the OsBuiltinBluRay field value if set, zero value otherwise.
func (o *OSBuiltinBluRayCreateReq) GetOsBuiltinBluRay() OSBuiltinBluRayCreateReqBuiltinBluRay {
	if o == nil || IsNil(o.OsBuiltinBluRay) {
		var ret OSBuiltinBluRayCreateReqBuiltinBluRay
		return ret
	}
	return *o.OsBuiltinBluRay
}

// GetOsBuiltinBluRayOk returns a tuple with the OsBuiltinBluRay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBuiltinBluRayCreateReq) GetOsBuiltinBluRayOk() (*OSBuiltinBluRayCreateReqBuiltinBluRay, bool) {
	if o == nil || IsNil(o.OsBuiltinBluRay) {
		return nil, false
	}
	return o.OsBuiltinBluRay, true
}

// HasOsBuiltinBluRay returns a boolean if a field has been set.
func (o *OSBuiltinBluRayCreateReq) HasOsBuiltinBluRay() bool {
	if o != nil && !IsNil(o.OsBuiltinBluRay) {
		return true
	}

	return false
}

// SetOsBuiltinBluRay gets a reference to the given OSBuiltinBluRayCreateReqBuiltinBluRay and assigns it to the OsBuiltinBluRay field.
func (o *OSBuiltinBluRayCreateReq) SetOsBuiltinBluRay(v OSBuiltinBluRayCreateReqBuiltinBluRay) {
	o.OsBuiltinBluRay = &v
}

func (o OSBuiltinBluRayCreateReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OSBuiltinBluRayCreateReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OsBuiltinBluRay) {
		toSerialize["os_builtin_blu_ray"] = o.OsBuiltinBluRay
	}
	return toSerialize, nil
}

type NullableOSBuiltinBluRayCreateReq struct {
	value *OSBuiltinBluRayCreateReq
	isSet bool
}

func (v NullableOSBuiltinBluRayCreateReq) Get() *OSBuiltinBluRayCreateReq {
	return v.value
}

func (v *NullableOSBuiltinBluRayCreateReq) Set(val *OSBuiltinBluRayCreateReq) {
	v.value = val
	v.isSet = true
}

func (v NullableOSBuiltinBluRayCreateReq) IsSet() bool {
	return v.isSet
}

func (v *NullableOSBuiltinBluRayCreateReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSBuiltinBluRayCreateReq(val *OSBuiltinBluRayCreateReq) *NullableOSBuiltinBluRayCreateReq {
	return &NullableOSBuiltinBluRayCreateReq{value: val, isSet: true}
}

func (v NullableOSBuiltinBluRayCreateReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSBuiltinBluRayCreateReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


