/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DfsHdfsAddProxyUsersReqHdfs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsHdfsAddProxyUsersReqHdfs{}

// DfsHdfsAddProxyUsersReqHdfs struct for DfsHdfsAddProxyUsersReqHdfs
type DfsHdfsAddProxyUsersReqHdfs struct {
	DfsHdfsProxyUsers []DfsHdfsProxyUserReq `json:"dfs_hdfs_proxy_users"`
}

type _DfsHdfsAddProxyUsersReqHdfs DfsHdfsAddProxyUsersReqHdfs

// NewDfsHdfsAddProxyUsersReqHdfs instantiates a new DfsHdfsAddProxyUsersReqHdfs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsHdfsAddProxyUsersReqHdfs(dfsHdfsProxyUsers []DfsHdfsProxyUserReq) *DfsHdfsAddProxyUsersReqHdfs {
	this := DfsHdfsAddProxyUsersReqHdfs{}
	this.DfsHdfsProxyUsers = dfsHdfsProxyUsers
	return &this
}

// NewDfsHdfsAddProxyUsersReqHdfsWithDefaults instantiates a new DfsHdfsAddProxyUsersReqHdfs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsHdfsAddProxyUsersReqHdfsWithDefaults() *DfsHdfsAddProxyUsersReqHdfs {
	this := DfsHdfsAddProxyUsersReqHdfs{}
	return &this
}

// GetDfsHdfsProxyUsers returns the DfsHdfsProxyUsers field value
func (o *DfsHdfsAddProxyUsersReqHdfs) GetDfsHdfsProxyUsers() []DfsHdfsProxyUserReq {
	if o == nil {
		var ret []DfsHdfsProxyUserReq
		return ret
	}

	return o.DfsHdfsProxyUsers
}

// GetDfsHdfsProxyUsersOk returns a tuple with the DfsHdfsProxyUsers field value
// and a boolean to check if the value has been set.
func (o *DfsHdfsAddProxyUsersReqHdfs) GetDfsHdfsProxyUsersOk() ([]DfsHdfsProxyUserReq, bool) {
	if o == nil {
		return nil, false
	}
	return o.DfsHdfsProxyUsers, true
}

// SetDfsHdfsProxyUsers sets field value
func (o *DfsHdfsAddProxyUsersReqHdfs) SetDfsHdfsProxyUsers(v []DfsHdfsProxyUserReq) {
	o.DfsHdfsProxyUsers = v
}

func (o DfsHdfsAddProxyUsersReqHdfs) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsHdfsAddProxyUsersReqHdfs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dfs_hdfs_proxy_users"] = o.DfsHdfsProxyUsers
	return toSerialize, nil
}

func (o *DfsHdfsAddProxyUsersReqHdfs) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dfs_hdfs_proxy_users",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDfsHdfsAddProxyUsersReqHdfs := _DfsHdfsAddProxyUsersReqHdfs{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDfsHdfsAddProxyUsersReqHdfs)

	if err != nil {
		return err
	}

	*o = DfsHdfsAddProxyUsersReqHdfs(varDfsHdfsAddProxyUsersReqHdfs)

	return err
}

type NullableDfsHdfsAddProxyUsersReqHdfs struct {
	value *DfsHdfsAddProxyUsersReqHdfs
	isSet bool
}

func (v NullableDfsHdfsAddProxyUsersReqHdfs) Get() *DfsHdfsAddProxyUsersReqHdfs {
	return v.value
}

func (v *NullableDfsHdfsAddProxyUsersReqHdfs) Set(val *DfsHdfsAddProxyUsersReqHdfs) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsHdfsAddProxyUsersReqHdfs) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsHdfsAddProxyUsersReqHdfs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsHdfsAddProxyUsersReqHdfs(val *DfsHdfsAddProxyUsersReqHdfs) *NullableDfsHdfsAddProxyUsersReqHdfs {
	return &NullableDfsHdfsAddProxyUsersReqHdfs{value: val, isSet: true}
}

func (v NullableDfsHdfsAddProxyUsersReqHdfs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsHdfsAddProxyUsersReqHdfs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


