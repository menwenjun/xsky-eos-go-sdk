/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RelatedResourceInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RelatedResourceInfo{}

// RelatedResourceInfo struct for RelatedResourceInfo
type RelatedResourceInfo struct {
	Id *int64 `json:"id,omitempty"`
	Outsides []OutsideResourceInfo `json:"outsides,omitempty"`
	RelatedResources []string `json:"related_resources,omitempty"`
	Resource *string `json:"resource,omitempty"`
}

// NewRelatedResourceInfo instantiates a new RelatedResourceInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRelatedResourceInfo() *RelatedResourceInfo {
	this := RelatedResourceInfo{}
	return &this
}

// NewRelatedResourceInfoWithDefaults instantiates a new RelatedResourceInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRelatedResourceInfoWithDefaults() *RelatedResourceInfo {
	this := RelatedResourceInfo{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RelatedResourceInfo) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelatedResourceInfo) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RelatedResourceInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *RelatedResourceInfo) SetId(v int64) {
	o.Id = &v
}

// GetOutsides returns the Outsides field value if set, zero value otherwise.
func (o *RelatedResourceInfo) GetOutsides() []OutsideResourceInfo {
	if o == nil || IsNil(o.Outsides) {
		var ret []OutsideResourceInfo
		return ret
	}
	return o.Outsides
}

// GetOutsidesOk returns a tuple with the Outsides field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelatedResourceInfo) GetOutsidesOk() ([]OutsideResourceInfo, bool) {
	if o == nil || IsNil(o.Outsides) {
		return nil, false
	}
	return o.Outsides, true
}

// HasOutsides returns a boolean if a field has been set.
func (o *RelatedResourceInfo) HasOutsides() bool {
	if o != nil && !IsNil(o.Outsides) {
		return true
	}

	return false
}

// SetOutsides gets a reference to the given []OutsideResourceInfo and assigns it to the Outsides field.
func (o *RelatedResourceInfo) SetOutsides(v []OutsideResourceInfo) {
	o.Outsides = v
}

// GetRelatedResources returns the RelatedResources field value if set, zero value otherwise.
func (o *RelatedResourceInfo) GetRelatedResources() []string {
	if o == nil || IsNil(o.RelatedResources) {
		var ret []string
		return ret
	}
	return o.RelatedResources
}

// GetRelatedResourcesOk returns a tuple with the RelatedResources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelatedResourceInfo) GetRelatedResourcesOk() ([]string, bool) {
	if o == nil || IsNil(o.RelatedResources) {
		return nil, false
	}
	return o.RelatedResources, true
}

// HasRelatedResources returns a boolean if a field has been set.
func (o *RelatedResourceInfo) HasRelatedResources() bool {
	if o != nil && !IsNil(o.RelatedResources) {
		return true
	}

	return false
}

// SetRelatedResources gets a reference to the given []string and assigns it to the RelatedResources field.
func (o *RelatedResourceInfo) SetRelatedResources(v []string) {
	o.RelatedResources = v
}

// GetResource returns the Resource field value if set, zero value otherwise.
func (o *RelatedResourceInfo) GetResource() string {
	if o == nil || IsNil(o.Resource) {
		var ret string
		return ret
	}
	return *o.Resource
}

// GetResourceOk returns a tuple with the Resource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelatedResourceInfo) GetResourceOk() (*string, bool) {
	if o == nil || IsNil(o.Resource) {
		return nil, false
	}
	return o.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (o *RelatedResourceInfo) HasResource() bool {
	if o != nil && !IsNil(o.Resource) {
		return true
	}

	return false
}

// SetResource gets a reference to the given string and assigns it to the Resource field.
func (o *RelatedResourceInfo) SetResource(v string) {
	o.Resource = &v
}

func (o RelatedResourceInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RelatedResourceInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Outsides) {
		toSerialize["outsides"] = o.Outsides
	}
	if !IsNil(o.RelatedResources) {
		toSerialize["related_resources"] = o.RelatedResources
	}
	if !IsNil(o.Resource) {
		toSerialize["resource"] = o.Resource
	}
	return toSerialize, nil
}

type NullableRelatedResourceInfo struct {
	value *RelatedResourceInfo
	isSet bool
}

func (v NullableRelatedResourceInfo) Get() *RelatedResourceInfo {
	return v.value
}

func (v *NullableRelatedResourceInfo) Set(val *RelatedResourceInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableRelatedResourceInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableRelatedResourceInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRelatedResourceInfo(val *RelatedResourceInfo) *NullableRelatedResourceInfo {
	return &NullableRelatedResourceInfo{value: val, isSet: true}
}

func (v NullableRelatedResourceInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRelatedResourceInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


