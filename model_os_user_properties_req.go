/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OSUserPropertiesReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OSUserPropertiesReq{}

// OSUserPropertiesReq struct for OSUserPropertiesReq
type OSUserPropertiesReq struct {
	AreaCode *string `json:"area_code,omitempty"`
	ContactPerson *string `json:"contact_person,omitempty"`
	Email *string `json:"email,omitempty"`
	Mobile *string `json:"mobile,omitempty"`
	UserName *string `json:"user_name,omitempty"`
	UserType *int64 `json:"user_type,omitempty"`
}

// NewOSUserPropertiesReq instantiates a new OSUserPropertiesReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOSUserPropertiesReq() *OSUserPropertiesReq {
	this := OSUserPropertiesReq{}
	return &this
}

// NewOSUserPropertiesReqWithDefaults instantiates a new OSUserPropertiesReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOSUserPropertiesReqWithDefaults() *OSUserPropertiesReq {
	this := OSUserPropertiesReq{}
	return &this
}

// GetAreaCode returns the AreaCode field value if set, zero value otherwise.
func (o *OSUserPropertiesReq) GetAreaCode() string {
	if o == nil || IsNil(o.AreaCode) {
		var ret string
		return ret
	}
	return *o.AreaCode
}

// GetAreaCodeOk returns a tuple with the AreaCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSUserPropertiesReq) GetAreaCodeOk() (*string, bool) {
	if o == nil || IsNil(o.AreaCode) {
		return nil, false
	}
	return o.AreaCode, true
}

// HasAreaCode returns a boolean if a field has been set.
func (o *OSUserPropertiesReq) HasAreaCode() bool {
	if o != nil && !IsNil(o.AreaCode) {
		return true
	}

	return false
}

// SetAreaCode gets a reference to the given string and assigns it to the AreaCode field.
func (o *OSUserPropertiesReq) SetAreaCode(v string) {
	o.AreaCode = &v
}

// GetContactPerson returns the ContactPerson field value if set, zero value otherwise.
func (o *OSUserPropertiesReq) GetContactPerson() string {
	if o == nil || IsNil(o.ContactPerson) {
		var ret string
		return ret
	}
	return *o.ContactPerson
}

// GetContactPersonOk returns a tuple with the ContactPerson field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSUserPropertiesReq) GetContactPersonOk() (*string, bool) {
	if o == nil || IsNil(o.ContactPerson) {
		return nil, false
	}
	return o.ContactPerson, true
}

// HasContactPerson returns a boolean if a field has been set.
func (o *OSUserPropertiesReq) HasContactPerson() bool {
	if o != nil && !IsNil(o.ContactPerson) {
		return true
	}

	return false
}

// SetContactPerson gets a reference to the given string and assigns it to the ContactPerson field.
func (o *OSUserPropertiesReq) SetContactPerson(v string) {
	o.ContactPerson = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *OSUserPropertiesReq) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSUserPropertiesReq) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *OSUserPropertiesReq) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *OSUserPropertiesReq) SetEmail(v string) {
	o.Email = &v
}

// GetMobile returns the Mobile field value if set, zero value otherwise.
func (o *OSUserPropertiesReq) GetMobile() string {
	if o == nil || IsNil(o.Mobile) {
		var ret string
		return ret
	}
	return *o.Mobile
}

// GetMobileOk returns a tuple with the Mobile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSUserPropertiesReq) GetMobileOk() (*string, bool) {
	if o == nil || IsNil(o.Mobile) {
		return nil, false
	}
	return o.Mobile, true
}

// HasMobile returns a boolean if a field has been set.
func (o *OSUserPropertiesReq) HasMobile() bool {
	if o != nil && !IsNil(o.Mobile) {
		return true
	}

	return false
}

// SetMobile gets a reference to the given string and assigns it to the Mobile field.
func (o *OSUserPropertiesReq) SetMobile(v string) {
	o.Mobile = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *OSUserPropertiesReq) GetUserName() string {
	if o == nil || IsNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSUserPropertiesReq) GetUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *OSUserPropertiesReq) HasUserName() bool {
	if o != nil && !IsNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *OSUserPropertiesReq) SetUserName(v string) {
	o.UserName = &v
}

// GetUserType returns the UserType field value if set, zero value otherwise.
func (o *OSUserPropertiesReq) GetUserType() int64 {
	if o == nil || IsNil(o.UserType) {
		var ret int64
		return ret
	}
	return *o.UserType
}

// GetUserTypeOk returns a tuple with the UserType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSUserPropertiesReq) GetUserTypeOk() (*int64, bool) {
	if o == nil || IsNil(o.UserType) {
		return nil, false
	}
	return o.UserType, true
}

// HasUserType returns a boolean if a field has been set.
func (o *OSUserPropertiesReq) HasUserType() bool {
	if o != nil && !IsNil(o.UserType) {
		return true
	}

	return false
}

// SetUserType gets a reference to the given int64 and assigns it to the UserType field.
func (o *OSUserPropertiesReq) SetUserType(v int64) {
	o.UserType = &v
}

func (o OSUserPropertiesReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OSUserPropertiesReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AreaCode) {
		toSerialize["area_code"] = o.AreaCode
	}
	if !IsNil(o.ContactPerson) {
		toSerialize["contact_person"] = o.ContactPerson
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Mobile) {
		toSerialize["mobile"] = o.Mobile
	}
	if !IsNil(o.UserName) {
		toSerialize["user_name"] = o.UserName
	}
	if !IsNil(o.UserType) {
		toSerialize["user_type"] = o.UserType
	}
	return toSerialize, nil
}

type NullableOSUserPropertiesReq struct {
	value *OSUserPropertiesReq
	isSet bool
}

func (v NullableOSUserPropertiesReq) Get() *OSUserPropertiesReq {
	return v.value
}

func (v *NullableOSUserPropertiesReq) Set(val *OSUserPropertiesReq) {
	v.value = val
	v.isSet = true
}

func (v NullableOSUserPropertiesReq) IsSet() bool {
	return v.isSet
}

func (v *NullableOSUserPropertiesReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSUserPropertiesReq(val *OSUserPropertiesReq) *NullableOSUserPropertiesReq {
	return &NullableOSUserPropertiesReq{value: val, isSet: true}
}

func (v NullableOSUserPropertiesReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSUserPropertiesReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


