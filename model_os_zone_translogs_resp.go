/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OSZoneTranslogsResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OSZoneTranslogsResp{}

// OSZoneTranslogsResp struct for OSZoneTranslogsResp
type OSZoneTranslogsResp struct {
	OsZoneTranslogs []OSZoneTranslog `json:"os_zone_translogs,omitempty"`
}

// NewOSZoneTranslogsResp instantiates a new OSZoneTranslogsResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOSZoneTranslogsResp() *OSZoneTranslogsResp {
	this := OSZoneTranslogsResp{}
	return &this
}

// NewOSZoneTranslogsRespWithDefaults instantiates a new OSZoneTranslogsResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOSZoneTranslogsRespWithDefaults() *OSZoneTranslogsResp {
	this := OSZoneTranslogsResp{}
	return &this
}

// GetOsZoneTranslogs returns the OsZoneTranslogs field value if set, zero value otherwise.
func (o *OSZoneTranslogsResp) GetOsZoneTranslogs() []OSZoneTranslog {
	if o == nil || IsNil(o.OsZoneTranslogs) {
		var ret []OSZoneTranslog
		return ret
	}
	return o.OsZoneTranslogs
}

// GetOsZoneTranslogsOk returns a tuple with the OsZoneTranslogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSZoneTranslogsResp) GetOsZoneTranslogsOk() ([]OSZoneTranslog, bool) {
	if o == nil || IsNil(o.OsZoneTranslogs) {
		return nil, false
	}
	return o.OsZoneTranslogs, true
}

// HasOsZoneTranslogs returns a boolean if a field has been set.
func (o *OSZoneTranslogsResp) HasOsZoneTranslogs() bool {
	if o != nil && !IsNil(o.OsZoneTranslogs) {
		return true
	}

	return false
}

// SetOsZoneTranslogs gets a reference to the given []OSZoneTranslog and assigns it to the OsZoneTranslogs field.
func (o *OSZoneTranslogsResp) SetOsZoneTranslogs(v []OSZoneTranslog) {
	o.OsZoneTranslogs = v
}

func (o OSZoneTranslogsResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OSZoneTranslogsResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OsZoneTranslogs) {
		toSerialize["os_zone_translogs"] = o.OsZoneTranslogs
	}
	return toSerialize, nil
}

type NullableOSZoneTranslogsResp struct {
	value *OSZoneTranslogsResp
	isSet bool
}

func (v NullableOSZoneTranslogsResp) Get() *OSZoneTranslogsResp {
	return v.value
}

func (v *NullableOSZoneTranslogsResp) Set(val *OSZoneTranslogsResp) {
	v.value = val
	v.isSet = true
}

func (v NullableOSZoneTranslogsResp) IsSet() bool {
	return v.isSet
}

func (v *NullableOSZoneTranslogsResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSZoneTranslogsResp(val *OSZoneTranslogsResp) *NullableOSZoneTranslogsResp {
	return &NullableOSZoneTranslogsResp{value: val, isSet: true}
}

func (v NullableOSZoneTranslogsResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSZoneTranslogsResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


