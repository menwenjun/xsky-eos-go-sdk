/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the S3LbGroupWebServiceConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &S3LbGroupWebServiceConfig{}

// S3LbGroupWebServiceConfig S3LbGroupWebServiceConfig represents config info for web service role s3 lb group
type S3LbGroupWebServiceConfig struct {
	Authentication string `json:"authentication"`
	Credential *S3LbGroupWebServiceConfigCredential `json:"credential,omitempty"`
	Password *string `json:"password,omitempty"`
	Protocol string `json:"protocol"`
	SharePath string `json:"share_path"`
	UserName *string `json:"user_name,omitempty"`
}

type _S3LbGroupWebServiceConfig S3LbGroupWebServiceConfig

// NewS3LbGroupWebServiceConfig instantiates a new S3LbGroupWebServiceConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewS3LbGroupWebServiceConfig(authentication string, protocol string, sharePath string) *S3LbGroupWebServiceConfig {
	this := S3LbGroupWebServiceConfig{}
	this.Authentication = authentication
	this.Protocol = protocol
	this.SharePath = sharePath
	return &this
}

// NewS3LbGroupWebServiceConfigWithDefaults instantiates a new S3LbGroupWebServiceConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewS3LbGroupWebServiceConfigWithDefaults() *S3LbGroupWebServiceConfig {
	this := S3LbGroupWebServiceConfig{}
	return &this
}

// GetAuthentication returns the Authentication field value
func (o *S3LbGroupWebServiceConfig) GetAuthentication() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Authentication
}

// GetAuthenticationOk returns a tuple with the Authentication field value
// and a boolean to check if the value has been set.
func (o *S3LbGroupWebServiceConfig) GetAuthenticationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Authentication, true
}

// SetAuthentication sets field value
func (o *S3LbGroupWebServiceConfig) SetAuthentication(v string) {
	o.Authentication = v
}

// GetCredential returns the Credential field value if set, zero value otherwise.
func (o *S3LbGroupWebServiceConfig) GetCredential() S3LbGroupWebServiceConfigCredential {
	if o == nil || IsNil(o.Credential) {
		var ret S3LbGroupWebServiceConfigCredential
		return ret
	}
	return *o.Credential
}

// GetCredentialOk returns a tuple with the Credential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3LbGroupWebServiceConfig) GetCredentialOk() (*S3LbGroupWebServiceConfigCredential, bool) {
	if o == nil || IsNil(o.Credential) {
		return nil, false
	}
	return o.Credential, true
}

// HasCredential returns a boolean if a field has been set.
func (o *S3LbGroupWebServiceConfig) HasCredential() bool {
	if o != nil && !IsNil(o.Credential) {
		return true
	}

	return false
}

// SetCredential gets a reference to the given S3LbGroupWebServiceConfigCredential and assigns it to the Credential field.
func (o *S3LbGroupWebServiceConfig) SetCredential(v S3LbGroupWebServiceConfigCredential) {
	o.Credential = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *S3LbGroupWebServiceConfig) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3LbGroupWebServiceConfig) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *S3LbGroupWebServiceConfig) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *S3LbGroupWebServiceConfig) SetPassword(v string) {
	o.Password = &v
}

// GetProtocol returns the Protocol field value
func (o *S3LbGroupWebServiceConfig) GetProtocol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value
// and a boolean to check if the value has been set.
func (o *S3LbGroupWebServiceConfig) GetProtocolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Protocol, true
}

// SetProtocol sets field value
func (o *S3LbGroupWebServiceConfig) SetProtocol(v string) {
	o.Protocol = v
}

// GetSharePath returns the SharePath field value
func (o *S3LbGroupWebServiceConfig) GetSharePath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SharePath
}

// GetSharePathOk returns a tuple with the SharePath field value
// and a boolean to check if the value has been set.
func (o *S3LbGroupWebServiceConfig) GetSharePathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SharePath, true
}

// SetSharePath sets field value
func (o *S3LbGroupWebServiceConfig) SetSharePath(v string) {
	o.SharePath = v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *S3LbGroupWebServiceConfig) GetUserName() string {
	if o == nil || IsNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3LbGroupWebServiceConfig) GetUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *S3LbGroupWebServiceConfig) HasUserName() bool {
	if o != nil && !IsNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *S3LbGroupWebServiceConfig) SetUserName(v string) {
	o.UserName = &v
}

func (o S3LbGroupWebServiceConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o S3LbGroupWebServiceConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["authentication"] = o.Authentication
	if !IsNil(o.Credential) {
		toSerialize["credential"] = o.Credential
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	toSerialize["protocol"] = o.Protocol
	toSerialize["share_path"] = o.SharePath
	if !IsNil(o.UserName) {
		toSerialize["user_name"] = o.UserName
	}
	return toSerialize, nil
}

func (o *S3LbGroupWebServiceConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"authentication",
		"protocol",
		"share_path",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varS3LbGroupWebServiceConfig := _S3LbGroupWebServiceConfig{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varS3LbGroupWebServiceConfig)

	if err != nil {
		return err
	}

	*o = S3LbGroupWebServiceConfig(varS3LbGroupWebServiceConfig)

	return err
}

type NullableS3LbGroupWebServiceConfig struct {
	value *S3LbGroupWebServiceConfig
	isSet bool
}

func (v NullableS3LbGroupWebServiceConfig) Get() *S3LbGroupWebServiceConfig {
	return v.value
}

func (v *NullableS3LbGroupWebServiceConfig) Set(val *S3LbGroupWebServiceConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableS3LbGroupWebServiceConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableS3LbGroupWebServiceConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableS3LbGroupWebServiceConfig(val *S3LbGroupWebServiceConfig) *NullableS3LbGroupWebServiceConfig {
	return &NullableS3LbGroupWebServiceConfig{value: val, isSet: true}
}

func (v NullableS3LbGroupWebServiceConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableS3LbGroupWebServiceConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


