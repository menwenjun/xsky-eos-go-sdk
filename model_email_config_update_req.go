/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EmailConfigUpdateReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmailConfigUpdateReq{}

// EmailConfigUpdateReq struct for EmailConfigUpdateReq
type EmailConfigUpdateReq struct {
	EmailConfig *EmailConfigUpdateReqEmailConfig `json:"email_config,omitempty"`
}

// NewEmailConfigUpdateReq instantiates a new EmailConfigUpdateReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmailConfigUpdateReq() *EmailConfigUpdateReq {
	this := EmailConfigUpdateReq{}
	return &this
}

// NewEmailConfigUpdateReqWithDefaults instantiates a new EmailConfigUpdateReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmailConfigUpdateReqWithDefaults() *EmailConfigUpdateReq {
	this := EmailConfigUpdateReq{}
	return &this
}

// GetEmailConfig returns the EmailConfig field value if set, zero value otherwise.
func (o *EmailConfigUpdateReq) GetEmailConfig() EmailConfigUpdateReqEmailConfig {
	if o == nil || IsNil(o.EmailConfig) {
		var ret EmailConfigUpdateReqEmailConfig
		return ret
	}
	return *o.EmailConfig
}

// GetEmailConfigOk returns a tuple with the EmailConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailConfigUpdateReq) GetEmailConfigOk() (*EmailConfigUpdateReqEmailConfig, bool) {
	if o == nil || IsNil(o.EmailConfig) {
		return nil, false
	}
	return o.EmailConfig, true
}

// HasEmailConfig returns a boolean if a field has been set.
func (o *EmailConfigUpdateReq) HasEmailConfig() bool {
	if o != nil && !IsNil(o.EmailConfig) {
		return true
	}

	return false
}

// SetEmailConfig gets a reference to the given EmailConfigUpdateReqEmailConfig and assigns it to the EmailConfig field.
func (o *EmailConfigUpdateReq) SetEmailConfig(v EmailConfigUpdateReqEmailConfig) {
	o.EmailConfig = &v
}

func (o EmailConfigUpdateReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmailConfigUpdateReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EmailConfig) {
		toSerialize["email_config"] = o.EmailConfig
	}
	return toSerialize, nil
}

type NullableEmailConfigUpdateReq struct {
	value *EmailConfigUpdateReq
	isSet bool
}

func (v NullableEmailConfigUpdateReq) Get() *EmailConfigUpdateReq {
	return v.value
}

func (v *NullableEmailConfigUpdateReq) Set(val *EmailConfigUpdateReq) {
	v.value = val
	v.isSet = true
}

func (v NullableEmailConfigUpdateReq) IsSet() bool {
	return v.isSet
}

func (v *NullableEmailConfigUpdateReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmailConfigUpdateReq(val *EmailConfigUpdateReq) *NullableEmailConfigUpdateReq {
	return &NullableEmailConfigUpdateReq{value: val, isSet: true}
}

func (v NullableEmailConfigUpdateReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmailConfigUpdateReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


