/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the VirtualMachineResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VirtualMachineResp{}

// VirtualMachineResp struct for VirtualMachineResp
type VirtualMachineResp struct {
	VirtualMachine *VirtualMachine `json:"virtual_machine,omitempty"`
}

// NewVirtualMachineResp instantiates a new VirtualMachineResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVirtualMachineResp() *VirtualMachineResp {
	this := VirtualMachineResp{}
	return &this
}

// NewVirtualMachineRespWithDefaults instantiates a new VirtualMachineResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVirtualMachineRespWithDefaults() *VirtualMachineResp {
	this := VirtualMachineResp{}
	return &this
}

// GetVirtualMachine returns the VirtualMachine field value if set, zero value otherwise.
func (o *VirtualMachineResp) GetVirtualMachine() VirtualMachine {
	if o == nil || IsNil(o.VirtualMachine) {
		var ret VirtualMachine
		return ret
	}
	return *o.VirtualMachine
}

// GetVirtualMachineOk returns a tuple with the VirtualMachine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineResp) GetVirtualMachineOk() (*VirtualMachine, bool) {
	if o == nil || IsNil(o.VirtualMachine) {
		return nil, false
	}
	return o.VirtualMachine, true
}

// HasVirtualMachine returns a boolean if a field has been set.
func (o *VirtualMachineResp) HasVirtualMachine() bool {
	if o != nil && !IsNil(o.VirtualMachine) {
		return true
	}

	return false
}

// SetVirtualMachine gets a reference to the given VirtualMachine and assigns it to the VirtualMachine field.
func (o *VirtualMachineResp) SetVirtualMachine(v VirtualMachine) {
	o.VirtualMachine = &v
}

func (o VirtualMachineResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VirtualMachineResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VirtualMachine) {
		toSerialize["virtual_machine"] = o.VirtualMachine
	}
	return toSerialize, nil
}

type NullableVirtualMachineResp struct {
	value *VirtualMachineResp
	isSet bool
}

func (v NullableVirtualMachineResp) Get() *VirtualMachineResp {
	return v.value
}

func (v *NullableVirtualMachineResp) Set(val *VirtualMachineResp) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualMachineResp) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualMachineResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualMachineResp(val *VirtualMachineResp) *NullableVirtualMachineResp {
	return &NullableVirtualMachineResp{value: val, isSet: true}
}

func (v NullableVirtualMachineResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualMachineResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


