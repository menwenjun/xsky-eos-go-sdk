/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AdminVIPNetworkResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdminVIPNetworkResp{}

// AdminVIPNetworkResp struct for AdminVIPNetworkResp
type AdminVIPNetworkResp struct {
	AdminVip *map[string]int64 `json:"admin_vip,omitempty"`
}

// NewAdminVIPNetworkResp instantiates a new AdminVIPNetworkResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdminVIPNetworkResp() *AdminVIPNetworkResp {
	this := AdminVIPNetworkResp{}
	return &this
}

// NewAdminVIPNetworkRespWithDefaults instantiates a new AdminVIPNetworkResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdminVIPNetworkRespWithDefaults() *AdminVIPNetworkResp {
	this := AdminVIPNetworkResp{}
	return &this
}

// GetAdminVip returns the AdminVip field value if set, zero value otherwise.
func (o *AdminVIPNetworkResp) GetAdminVip() map[string]int64 {
	if o == nil || IsNil(o.AdminVip) {
		var ret map[string]int64
		return ret
	}
	return *o.AdminVip
}

// GetAdminVipOk returns a tuple with the AdminVip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminVIPNetworkResp) GetAdminVipOk() (*map[string]int64, bool) {
	if o == nil || IsNil(o.AdminVip) {
		return nil, false
	}
	return o.AdminVip, true
}

// HasAdminVip returns a boolean if a field has been set.
func (o *AdminVIPNetworkResp) HasAdminVip() bool {
	if o != nil && !IsNil(o.AdminVip) {
		return true
	}

	return false
}

// SetAdminVip gets a reference to the given map[string]int64 and assigns it to the AdminVip field.
func (o *AdminVIPNetworkResp) SetAdminVip(v map[string]int64) {
	o.AdminVip = &v
}

func (o AdminVIPNetworkResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdminVIPNetworkResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdminVip) {
		toSerialize["admin_vip"] = o.AdminVip
	}
	return toSerialize, nil
}

type NullableAdminVIPNetworkResp struct {
	value *AdminVIPNetworkResp
	isSet bool
}

func (v NullableAdminVIPNetworkResp) Get() *AdminVIPNetworkResp {
	return v.value
}

func (v *NullableAdminVIPNetworkResp) Set(val *AdminVIPNetworkResp) {
	v.value = val
	v.isSet = true
}

func (v NullableAdminVIPNetworkResp) IsSet() bool {
	return v.isSet
}

func (v *NullableAdminVIPNetworkResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdminVIPNetworkResp(val *AdminVIPNetworkResp) *NullableAdminVIPNetworkResp {
	return &NullableAdminVIPNetworkResp{value: val, isSet: true}
}

func (v NullableAdminVIPNetworkResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdminVIPNetworkResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


