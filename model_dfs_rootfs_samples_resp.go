/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DfsRootfsSamplesResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsRootfsSamplesResp{}

// DfsRootfsSamplesResp struct for DfsRootfsSamplesResp
type DfsRootfsSamplesResp struct {
	DfsRootfsSamples []DfsRootfsStat `json:"dfs_rootfs_samples,omitempty"`
}

// NewDfsRootfsSamplesResp instantiates a new DfsRootfsSamplesResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsRootfsSamplesResp() *DfsRootfsSamplesResp {
	this := DfsRootfsSamplesResp{}
	return &this
}

// NewDfsRootfsSamplesRespWithDefaults instantiates a new DfsRootfsSamplesResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsRootfsSamplesRespWithDefaults() *DfsRootfsSamplesResp {
	this := DfsRootfsSamplesResp{}
	return &this
}

// GetDfsRootfsSamples returns the DfsRootfsSamples field value if set, zero value otherwise.
func (o *DfsRootfsSamplesResp) GetDfsRootfsSamples() []DfsRootfsStat {
	if o == nil || IsNil(o.DfsRootfsSamples) {
		var ret []DfsRootfsStat
		return ret
	}
	return o.DfsRootfsSamples
}

// GetDfsRootfsSamplesOk returns a tuple with the DfsRootfsSamples field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsRootfsSamplesResp) GetDfsRootfsSamplesOk() ([]DfsRootfsStat, bool) {
	if o == nil || IsNil(o.DfsRootfsSamples) {
		return nil, false
	}
	return o.DfsRootfsSamples, true
}

// HasDfsRootfsSamples returns a boolean if a field has been set.
func (o *DfsRootfsSamplesResp) HasDfsRootfsSamples() bool {
	if o != nil && !IsNil(o.DfsRootfsSamples) {
		return true
	}

	return false
}

// SetDfsRootfsSamples gets a reference to the given []DfsRootfsStat and assigns it to the DfsRootfsSamples field.
func (o *DfsRootfsSamplesResp) SetDfsRootfsSamples(v []DfsRootfsStat) {
	o.DfsRootfsSamples = v
}

func (o DfsRootfsSamplesResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsRootfsSamplesResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DfsRootfsSamples) {
		toSerialize["dfs_rootfs_samples"] = o.DfsRootfsSamples
	}
	return toSerialize, nil
}

type NullableDfsRootfsSamplesResp struct {
	value *DfsRootfsSamplesResp
	isSet bool
}

func (v NullableDfsRootfsSamplesResp) Get() *DfsRootfsSamplesResp {
	return v.value
}

func (v *NullableDfsRootfsSamplesResp) Set(val *DfsRootfsSamplesResp) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsRootfsSamplesResp) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsRootfsSamplesResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsRootfsSamplesResp(val *DfsRootfsSamplesResp) *NullableDfsRootfsSamplesResp {
	return &NullableDfsRootfsSamplesResp{value: val, isSet: true}
}

func (v NullableDfsRootfsSamplesResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsRootfsSamplesResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


