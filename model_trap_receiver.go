/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the TrapReceiver type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrapReceiver{}

// TrapReceiver TrapReceiver defines the snmp trap receiver
type TrapReceiver struct {
	Create *time.Time `json:"create,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Ip *string `json:"ip,omitempty"`
	MsgLevel *string `json:"msg_level,omitempty"`
	Port *int64 `json:"port,omitempty"`
	Update *time.Time `json:"update,omitempty"`
}

// NewTrapReceiver instantiates a new TrapReceiver object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrapReceiver() *TrapReceiver {
	this := TrapReceiver{}
	return &this
}

// NewTrapReceiverWithDefaults instantiates a new TrapReceiver object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrapReceiverWithDefaults() *TrapReceiver {
	this := TrapReceiver{}
	return &this
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *TrapReceiver) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrapReceiver) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *TrapReceiver) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *TrapReceiver) SetCreate(v time.Time) {
	o.Create = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TrapReceiver) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrapReceiver) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TrapReceiver) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *TrapReceiver) SetId(v int64) {
	o.Id = &v
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *TrapReceiver) GetIp() string {
	if o == nil || IsNil(o.Ip) {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrapReceiver) GetIpOk() (*string, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *TrapReceiver) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *TrapReceiver) SetIp(v string) {
	o.Ip = &v
}

// GetMsgLevel returns the MsgLevel field value if set, zero value otherwise.
func (o *TrapReceiver) GetMsgLevel() string {
	if o == nil || IsNil(o.MsgLevel) {
		var ret string
		return ret
	}
	return *o.MsgLevel
}

// GetMsgLevelOk returns a tuple with the MsgLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrapReceiver) GetMsgLevelOk() (*string, bool) {
	if o == nil || IsNil(o.MsgLevel) {
		return nil, false
	}
	return o.MsgLevel, true
}

// HasMsgLevel returns a boolean if a field has been set.
func (o *TrapReceiver) HasMsgLevel() bool {
	if o != nil && !IsNil(o.MsgLevel) {
		return true
	}

	return false
}

// SetMsgLevel gets a reference to the given string and assigns it to the MsgLevel field.
func (o *TrapReceiver) SetMsgLevel(v string) {
	o.MsgLevel = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *TrapReceiver) GetPort() int64 {
	if o == nil || IsNil(o.Port) {
		var ret int64
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrapReceiver) GetPortOk() (*int64, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *TrapReceiver) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int64 and assigns it to the Port field.
func (o *TrapReceiver) SetPort(v int64) {
	o.Port = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *TrapReceiver) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrapReceiver) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *TrapReceiver) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *TrapReceiver) SetUpdate(v time.Time) {
	o.Update = &v
}

func (o TrapReceiver) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrapReceiver) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	if !IsNil(o.MsgLevel) {
		toSerialize["msg_level"] = o.MsgLevel
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	return toSerialize, nil
}

type NullableTrapReceiver struct {
	value *TrapReceiver
	isSet bool
}

func (v NullableTrapReceiver) Get() *TrapReceiver {
	return v.value
}

func (v *NullableTrapReceiver) Set(val *TrapReceiver) {
	v.value = val
	v.isSet = true
}

func (v NullableTrapReceiver) IsSet() bool {
	return v.isSet
}

func (v *NullableTrapReceiver) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrapReceiver(val *TrapReceiver) *NullableTrapReceiver {
	return &NullableTrapReceiver{value: val, isSet: true}
}

func (v NullableTrapReceiver) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrapReceiver) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


