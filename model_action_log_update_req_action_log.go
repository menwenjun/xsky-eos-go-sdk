/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the ActionLogUpdateReqActionLog type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActionLogUpdateReqActionLog{}

// ActionLogUpdateReqActionLog struct for ActionLogUpdateReqActionLog
type ActionLogUpdateReqActionLog struct {
	Finish *time.Time `json:"finish,omitempty"`
	Message *string `json:"message,omitempty"`
	NewData *string `json:"new_data,omitempty"`
	Status *string `json:"status,omitempty"`
}

// NewActionLogUpdateReqActionLog instantiates a new ActionLogUpdateReqActionLog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionLogUpdateReqActionLog() *ActionLogUpdateReqActionLog {
	this := ActionLogUpdateReqActionLog{}
	return &this
}

// NewActionLogUpdateReqActionLogWithDefaults instantiates a new ActionLogUpdateReqActionLog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionLogUpdateReqActionLogWithDefaults() *ActionLogUpdateReqActionLog {
	this := ActionLogUpdateReqActionLog{}
	return &this
}

// GetFinish returns the Finish field value if set, zero value otherwise.
func (o *ActionLogUpdateReqActionLog) GetFinish() time.Time {
	if o == nil || IsNil(o.Finish) {
		var ret time.Time
		return ret
	}
	return *o.Finish
}

// GetFinishOk returns a tuple with the Finish field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionLogUpdateReqActionLog) GetFinishOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Finish) {
		return nil, false
	}
	return o.Finish, true
}

// HasFinish returns a boolean if a field has been set.
func (o *ActionLogUpdateReqActionLog) HasFinish() bool {
	if o != nil && !IsNil(o.Finish) {
		return true
	}

	return false
}

// SetFinish gets a reference to the given time.Time and assigns it to the Finish field.
func (o *ActionLogUpdateReqActionLog) SetFinish(v time.Time) {
	o.Finish = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ActionLogUpdateReqActionLog) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionLogUpdateReqActionLog) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ActionLogUpdateReqActionLog) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ActionLogUpdateReqActionLog) SetMessage(v string) {
	o.Message = &v
}

// GetNewData returns the NewData field value if set, zero value otherwise.
func (o *ActionLogUpdateReqActionLog) GetNewData() string {
	if o == nil || IsNil(o.NewData) {
		var ret string
		return ret
	}
	return *o.NewData
}

// GetNewDataOk returns a tuple with the NewData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionLogUpdateReqActionLog) GetNewDataOk() (*string, bool) {
	if o == nil || IsNil(o.NewData) {
		return nil, false
	}
	return o.NewData, true
}

// HasNewData returns a boolean if a field has been set.
func (o *ActionLogUpdateReqActionLog) HasNewData() bool {
	if o != nil && !IsNil(o.NewData) {
		return true
	}

	return false
}

// SetNewData gets a reference to the given string and assigns it to the NewData field.
func (o *ActionLogUpdateReqActionLog) SetNewData(v string) {
	o.NewData = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ActionLogUpdateReqActionLog) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionLogUpdateReqActionLog) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ActionLogUpdateReqActionLog) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ActionLogUpdateReqActionLog) SetStatus(v string) {
	o.Status = &v
}

func (o ActionLogUpdateReqActionLog) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActionLogUpdateReqActionLog) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Finish) {
		toSerialize["finish"] = o.Finish
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.NewData) {
		toSerialize["new_data"] = o.NewData
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableActionLogUpdateReqActionLog struct {
	value *ActionLogUpdateReqActionLog
	isSet bool
}

func (v NullableActionLogUpdateReqActionLog) Get() *ActionLogUpdateReqActionLog {
	return v.value
}

func (v *NullableActionLogUpdateReqActionLog) Set(val *ActionLogUpdateReqActionLog) {
	v.value = val
	v.isSet = true
}

func (v NullableActionLogUpdateReqActionLog) IsSet() bool {
	return v.isSet
}

func (v *NullableActionLogUpdateReqActionLog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionLogUpdateReqActionLog(val *ActionLogUpdateReqActionLog) *NullableActionLogUpdateReqActionLog {
	return &NullableActionLogUpdateReqActionLog{value: val, isSet: true}
}

func (v NullableActionLogUpdateReqActionLog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionLogUpdateReqActionLog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


