/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ObjectStorageBucketSamplesElem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ObjectStorageBucketSamplesElem{}

// ObjectStorageBucketSamplesElem struct for ObjectStorageBucketSamplesElem
type ObjectStorageBucketSamplesElem struct {
	Id *int64 `json:"id,omitempty"`
	Paging *Paging `json:"paging,omitempty"`
	Samples []ObjectStorageBucketStat `json:"samples,omitempty"`
}

// NewObjectStorageBucketSamplesElem instantiates a new ObjectStorageBucketSamplesElem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectStorageBucketSamplesElem() *ObjectStorageBucketSamplesElem {
	this := ObjectStorageBucketSamplesElem{}
	return &this
}

// NewObjectStorageBucketSamplesElemWithDefaults instantiates a new ObjectStorageBucketSamplesElem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectStorageBucketSamplesElemWithDefaults() *ObjectStorageBucketSamplesElem {
	this := ObjectStorageBucketSamplesElem{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ObjectStorageBucketSamplesElem) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketSamplesElem) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ObjectStorageBucketSamplesElem) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ObjectStorageBucketSamplesElem) SetId(v int64) {
	o.Id = &v
}

// GetPaging returns the Paging field value if set, zero value otherwise.
func (o *ObjectStorageBucketSamplesElem) GetPaging() Paging {
	if o == nil || IsNil(o.Paging) {
		var ret Paging
		return ret
	}
	return *o.Paging
}

// GetPagingOk returns a tuple with the Paging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketSamplesElem) GetPagingOk() (*Paging, bool) {
	if o == nil || IsNil(o.Paging) {
		return nil, false
	}
	return o.Paging, true
}

// HasPaging returns a boolean if a field has been set.
func (o *ObjectStorageBucketSamplesElem) HasPaging() bool {
	if o != nil && !IsNil(o.Paging) {
		return true
	}

	return false
}

// SetPaging gets a reference to the given Paging and assigns it to the Paging field.
func (o *ObjectStorageBucketSamplesElem) SetPaging(v Paging) {
	o.Paging = &v
}

// GetSamples returns the Samples field value if set, zero value otherwise.
func (o *ObjectStorageBucketSamplesElem) GetSamples() []ObjectStorageBucketStat {
	if o == nil || IsNil(o.Samples) {
		var ret []ObjectStorageBucketStat
		return ret
	}
	return o.Samples
}

// GetSamplesOk returns a tuple with the Samples field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketSamplesElem) GetSamplesOk() ([]ObjectStorageBucketStat, bool) {
	if o == nil || IsNil(o.Samples) {
		return nil, false
	}
	return o.Samples, true
}

// HasSamples returns a boolean if a field has been set.
func (o *ObjectStorageBucketSamplesElem) HasSamples() bool {
	if o != nil && !IsNil(o.Samples) {
		return true
	}

	return false
}

// SetSamples gets a reference to the given []ObjectStorageBucketStat and assigns it to the Samples field.
func (o *ObjectStorageBucketSamplesElem) SetSamples(v []ObjectStorageBucketStat) {
	o.Samples = v
}

func (o ObjectStorageBucketSamplesElem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ObjectStorageBucketSamplesElem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Paging) {
		toSerialize["paging"] = o.Paging
	}
	if !IsNil(o.Samples) {
		toSerialize["samples"] = o.Samples
	}
	return toSerialize, nil
}

type NullableObjectStorageBucketSamplesElem struct {
	value *ObjectStorageBucketSamplesElem
	isSet bool
}

func (v NullableObjectStorageBucketSamplesElem) Get() *ObjectStorageBucketSamplesElem {
	return v.value
}

func (v *NullableObjectStorageBucketSamplesElem) Set(val *ObjectStorageBucketSamplesElem) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectStorageBucketSamplesElem) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectStorageBucketSamplesElem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectStorageBucketSamplesElem(val *ObjectStorageBucketSamplesElem) *NullableObjectStorageBucketSamplesElem {
	return &NullableObjectStorageBucketSamplesElem{value: val, isSet: true}
}

func (v NullableObjectStorageBucketSamplesElem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectStorageBucketSamplesElem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


