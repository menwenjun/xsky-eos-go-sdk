/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ObjectStorageUserSamplesResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ObjectStorageUserSamplesResp{}

// ObjectStorageUserSamplesResp struct for ObjectStorageUserSamplesResp
type ObjectStorageUserSamplesResp struct {
	// object storage user samples
	OsUserSamples []ObjectStorageUserStat `json:"os_user_samples"`
}

type _ObjectStorageUserSamplesResp ObjectStorageUserSamplesResp

// NewObjectStorageUserSamplesResp instantiates a new ObjectStorageUserSamplesResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectStorageUserSamplesResp(osUserSamples []ObjectStorageUserStat) *ObjectStorageUserSamplesResp {
	this := ObjectStorageUserSamplesResp{}
	this.OsUserSamples = osUserSamples
	return &this
}

// NewObjectStorageUserSamplesRespWithDefaults instantiates a new ObjectStorageUserSamplesResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectStorageUserSamplesRespWithDefaults() *ObjectStorageUserSamplesResp {
	this := ObjectStorageUserSamplesResp{}
	return &this
}

// GetOsUserSamples returns the OsUserSamples field value
func (o *ObjectStorageUserSamplesResp) GetOsUserSamples() []ObjectStorageUserStat {
	if o == nil {
		var ret []ObjectStorageUserStat
		return ret
	}

	return o.OsUserSamples
}

// GetOsUserSamplesOk returns a tuple with the OsUserSamples field value
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserSamplesResp) GetOsUserSamplesOk() ([]ObjectStorageUserStat, bool) {
	if o == nil {
		return nil, false
	}
	return o.OsUserSamples, true
}

// SetOsUserSamples sets field value
func (o *ObjectStorageUserSamplesResp) SetOsUserSamples(v []ObjectStorageUserStat) {
	o.OsUserSamples = v
}

func (o ObjectStorageUserSamplesResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ObjectStorageUserSamplesResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["os_user_samples"] = o.OsUserSamples
	return toSerialize, nil
}

func (o *ObjectStorageUserSamplesResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"os_user_samples",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varObjectStorageUserSamplesResp := _ObjectStorageUserSamplesResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varObjectStorageUserSamplesResp)

	if err != nil {
		return err
	}

	*o = ObjectStorageUserSamplesResp(varObjectStorageUserSamplesResp)

	return err
}

type NullableObjectStorageUserSamplesResp struct {
	value *ObjectStorageUserSamplesResp
	isSet bool
}

func (v NullableObjectStorageUserSamplesResp) Get() *ObjectStorageUserSamplesResp {
	return v.value
}

func (v *NullableObjectStorageUserSamplesResp) Set(val *ObjectStorageUserSamplesResp) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectStorageUserSamplesResp) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectStorageUserSamplesResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectStorageUserSamplesResp(val *ObjectStorageUserSamplesResp) *NullableObjectStorageUserSamplesResp {
	return &NullableObjectStorageUserSamplesResp{value: val, isSet: true}
}

func (v NullableObjectStorageUserSamplesResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectStorageUserSamplesResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


