/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DpBlockAsyncReplicationPolicyUpdateReqPolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DpBlockAsyncReplicationPolicyUpdateReqPolicy{}

// DpBlockAsyncReplicationPolicyUpdateReqPolicy struct for DpBlockAsyncReplicationPolicyUpdateReqPolicy
type DpBlockAsyncReplicationPolicyUpdateReqPolicy struct {
	// cron expression
	CronExpr *string `json:"cron_expr,omitempty"`
	// name
	Name *string `json:"name,omitempty"`
	// retained max number of snapshots
	RetainedMax *int64 `json:"retained_max,omitempty"`
}

// NewDpBlockAsyncReplicationPolicyUpdateReqPolicy instantiates a new DpBlockAsyncReplicationPolicyUpdateReqPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDpBlockAsyncReplicationPolicyUpdateReqPolicy() *DpBlockAsyncReplicationPolicyUpdateReqPolicy {
	this := DpBlockAsyncReplicationPolicyUpdateReqPolicy{}
	return &this
}

// NewDpBlockAsyncReplicationPolicyUpdateReqPolicyWithDefaults instantiates a new DpBlockAsyncReplicationPolicyUpdateReqPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDpBlockAsyncReplicationPolicyUpdateReqPolicyWithDefaults() *DpBlockAsyncReplicationPolicyUpdateReqPolicy {
	this := DpBlockAsyncReplicationPolicyUpdateReqPolicy{}
	return &this
}

// GetCronExpr returns the CronExpr field value if set, zero value otherwise.
func (o *DpBlockAsyncReplicationPolicyUpdateReqPolicy) GetCronExpr() string {
	if o == nil || IsNil(o.CronExpr) {
		var ret string
		return ret
	}
	return *o.CronExpr
}

// GetCronExprOk returns a tuple with the CronExpr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpBlockAsyncReplicationPolicyUpdateReqPolicy) GetCronExprOk() (*string, bool) {
	if o == nil || IsNil(o.CronExpr) {
		return nil, false
	}
	return o.CronExpr, true
}

// HasCronExpr returns a boolean if a field has been set.
func (o *DpBlockAsyncReplicationPolicyUpdateReqPolicy) HasCronExpr() bool {
	if o != nil && !IsNil(o.CronExpr) {
		return true
	}

	return false
}

// SetCronExpr gets a reference to the given string and assigns it to the CronExpr field.
func (o *DpBlockAsyncReplicationPolicyUpdateReqPolicy) SetCronExpr(v string) {
	o.CronExpr = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DpBlockAsyncReplicationPolicyUpdateReqPolicy) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpBlockAsyncReplicationPolicyUpdateReqPolicy) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DpBlockAsyncReplicationPolicyUpdateReqPolicy) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DpBlockAsyncReplicationPolicyUpdateReqPolicy) SetName(v string) {
	o.Name = &v
}

// GetRetainedMax returns the RetainedMax field value if set, zero value otherwise.
func (o *DpBlockAsyncReplicationPolicyUpdateReqPolicy) GetRetainedMax() int64 {
	if o == nil || IsNil(o.RetainedMax) {
		var ret int64
		return ret
	}
	return *o.RetainedMax
}

// GetRetainedMaxOk returns a tuple with the RetainedMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpBlockAsyncReplicationPolicyUpdateReqPolicy) GetRetainedMaxOk() (*int64, bool) {
	if o == nil || IsNil(o.RetainedMax) {
		return nil, false
	}
	return o.RetainedMax, true
}

// HasRetainedMax returns a boolean if a field has been set.
func (o *DpBlockAsyncReplicationPolicyUpdateReqPolicy) HasRetainedMax() bool {
	if o != nil && !IsNil(o.RetainedMax) {
		return true
	}

	return false
}

// SetRetainedMax gets a reference to the given int64 and assigns it to the RetainedMax field.
func (o *DpBlockAsyncReplicationPolicyUpdateReqPolicy) SetRetainedMax(v int64) {
	o.RetainedMax = &v
}

func (o DpBlockAsyncReplicationPolicyUpdateReqPolicy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DpBlockAsyncReplicationPolicyUpdateReqPolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CronExpr) {
		toSerialize["cron_expr"] = o.CronExpr
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.RetainedMax) {
		toSerialize["retained_max"] = o.RetainedMax
	}
	return toSerialize, nil
}

type NullableDpBlockAsyncReplicationPolicyUpdateReqPolicy struct {
	value *DpBlockAsyncReplicationPolicyUpdateReqPolicy
	isSet bool
}

func (v NullableDpBlockAsyncReplicationPolicyUpdateReqPolicy) Get() *DpBlockAsyncReplicationPolicyUpdateReqPolicy {
	return v.value
}

func (v *NullableDpBlockAsyncReplicationPolicyUpdateReqPolicy) Set(val *DpBlockAsyncReplicationPolicyUpdateReqPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableDpBlockAsyncReplicationPolicyUpdateReqPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableDpBlockAsyncReplicationPolicyUpdateReqPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDpBlockAsyncReplicationPolicyUpdateReqPolicy(val *DpBlockAsyncReplicationPolicyUpdateReqPolicy) *NullableDpBlockAsyncReplicationPolicyUpdateReqPolicy {
	return &NullableDpBlockAsyncReplicationPolicyUpdateReqPolicy{value: val, isSet: true}
}

func (v NullableDpBlockAsyncReplicationPolicyUpdateReqPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDpBlockAsyncReplicationPolicyUpdateReqPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


