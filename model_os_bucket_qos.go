/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OSBucketQos type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OSBucketQos{}

// OSBucketQos OSBucketQos defines os bucket qos info
type OSBucketQos struct {
	UserRequest *OSBucketQosUserRequest `json:"user_request,omitempty"`
}

// NewOSBucketQos instantiates a new OSBucketQos object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOSBucketQos() *OSBucketQos {
	this := OSBucketQos{}
	return &this
}

// NewOSBucketQosWithDefaults instantiates a new OSBucketQos object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOSBucketQosWithDefaults() *OSBucketQos {
	this := OSBucketQos{}
	return &this
}

// GetUserRequest returns the UserRequest field value if set, zero value otherwise.
func (o *OSBucketQos) GetUserRequest() OSBucketQosUserRequest {
	if o == nil || IsNil(o.UserRequest) {
		var ret OSBucketQosUserRequest
		return ret
	}
	return *o.UserRequest
}

// GetUserRequestOk returns a tuple with the UserRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBucketQos) GetUserRequestOk() (*OSBucketQosUserRequest, bool) {
	if o == nil || IsNil(o.UserRequest) {
		return nil, false
	}
	return o.UserRequest, true
}

// HasUserRequest returns a boolean if a field has been set.
func (o *OSBucketQos) HasUserRequest() bool {
	if o != nil && !IsNil(o.UserRequest) {
		return true
	}

	return false
}

// SetUserRequest gets a reference to the given OSBucketQosUserRequest and assigns it to the UserRequest field.
func (o *OSBucketQos) SetUserRequest(v OSBucketQosUserRequest) {
	o.UserRequest = &v
}

func (o OSBucketQos) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OSBucketQos) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserRequest) {
		toSerialize["user_request"] = o.UserRequest
	}
	return toSerialize, nil
}

type NullableOSBucketQos struct {
	value *OSBucketQos
	isSet bool
}

func (v NullableOSBucketQos) Get() *OSBucketQos {
	return v.value
}

func (v *NullableOSBucketQos) Set(val *OSBucketQos) {
	v.value = val
	v.isSet = true
}

func (v NullableOSBucketQos) IsSet() bool {
	return v.isSet
}

func (v *NullableOSBucketQos) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSBucketQos(val *OSBucketQos) *NullableOSBucketQos {
	return &NullableOSBucketQos{value: val, isSet: true}
}

func (v NullableOSBucketQos) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSBucketQos) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


