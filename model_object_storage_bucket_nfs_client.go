/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the ObjectStorageBucketNFSClient type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ObjectStorageBucketNFSClient{}

// ObjectStorageBucketNFSClient ObjectStorageBucketNFSClient defines nfs client
type ObjectStorageBucketNFSClient struct {
	Bucket *ObjectStorageBucketNestview `json:"bucket,omitempty"`
	Client *string `json:"client,omitempty"`
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Permission *string `json:"permission,omitempty"`
	Status *string `json:"status,omitempty"`
	Update *time.Time `json:"update,omitempty"`
}

// NewObjectStorageBucketNFSClient instantiates a new ObjectStorageBucketNFSClient object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectStorageBucketNFSClient() *ObjectStorageBucketNFSClient {
	this := ObjectStorageBucketNFSClient{}
	return &this
}

// NewObjectStorageBucketNFSClientWithDefaults instantiates a new ObjectStorageBucketNFSClient object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectStorageBucketNFSClientWithDefaults() *ObjectStorageBucketNFSClient {
	this := ObjectStorageBucketNFSClient{}
	return &this
}

// GetBucket returns the Bucket field value if set, zero value otherwise.
func (o *ObjectStorageBucketNFSClient) GetBucket() ObjectStorageBucketNestview {
	if o == nil || IsNil(o.Bucket) {
		var ret ObjectStorageBucketNestview
		return ret
	}
	return *o.Bucket
}

// GetBucketOk returns a tuple with the Bucket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketNFSClient) GetBucketOk() (*ObjectStorageBucketNestview, bool) {
	if o == nil || IsNil(o.Bucket) {
		return nil, false
	}
	return o.Bucket, true
}

// HasBucket returns a boolean if a field has been set.
func (o *ObjectStorageBucketNFSClient) HasBucket() bool {
	if o != nil && !IsNil(o.Bucket) {
		return true
	}

	return false
}

// SetBucket gets a reference to the given ObjectStorageBucketNestview and assigns it to the Bucket field.
func (o *ObjectStorageBucketNFSClient) SetBucket(v ObjectStorageBucketNestview) {
	o.Bucket = &v
}

// GetClient returns the Client field value if set, zero value otherwise.
func (o *ObjectStorageBucketNFSClient) GetClient() string {
	if o == nil || IsNil(o.Client) {
		var ret string
		return ret
	}
	return *o.Client
}

// GetClientOk returns a tuple with the Client field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketNFSClient) GetClientOk() (*string, bool) {
	if o == nil || IsNil(o.Client) {
		return nil, false
	}
	return o.Client, true
}

// HasClient returns a boolean if a field has been set.
func (o *ObjectStorageBucketNFSClient) HasClient() bool {
	if o != nil && !IsNil(o.Client) {
		return true
	}

	return false
}

// SetClient gets a reference to the given string and assigns it to the Client field.
func (o *ObjectStorageBucketNFSClient) SetClient(v string) {
	o.Client = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *ObjectStorageBucketNFSClient) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketNFSClient) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *ObjectStorageBucketNFSClient) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *ObjectStorageBucketNFSClient) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *ObjectStorageBucketNFSClient) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketNFSClient) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *ObjectStorageBucketNFSClient) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *ObjectStorageBucketNFSClient) SetCreate(v time.Time) {
	o.Create = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ObjectStorageBucketNFSClient) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketNFSClient) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ObjectStorageBucketNFSClient) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ObjectStorageBucketNFSClient) SetId(v int64) {
	o.Id = &v
}

// GetPermission returns the Permission field value if set, zero value otherwise.
func (o *ObjectStorageBucketNFSClient) GetPermission() string {
	if o == nil || IsNil(o.Permission) {
		var ret string
		return ret
	}
	return *o.Permission
}

// GetPermissionOk returns a tuple with the Permission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketNFSClient) GetPermissionOk() (*string, bool) {
	if o == nil || IsNil(o.Permission) {
		return nil, false
	}
	return o.Permission, true
}

// HasPermission returns a boolean if a field has been set.
func (o *ObjectStorageBucketNFSClient) HasPermission() bool {
	if o != nil && !IsNil(o.Permission) {
		return true
	}

	return false
}

// SetPermission gets a reference to the given string and assigns it to the Permission field.
func (o *ObjectStorageBucketNFSClient) SetPermission(v string) {
	o.Permission = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ObjectStorageBucketNFSClient) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketNFSClient) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ObjectStorageBucketNFSClient) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ObjectStorageBucketNFSClient) SetStatus(v string) {
	o.Status = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *ObjectStorageBucketNFSClient) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketNFSClient) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *ObjectStorageBucketNFSClient) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *ObjectStorageBucketNFSClient) SetUpdate(v time.Time) {
	o.Update = &v
}

func (o ObjectStorageBucketNFSClient) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ObjectStorageBucketNFSClient) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Bucket) {
		toSerialize["bucket"] = o.Bucket
	}
	if !IsNil(o.Client) {
		toSerialize["client"] = o.Client
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Permission) {
		toSerialize["permission"] = o.Permission
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	return toSerialize, nil
}

type NullableObjectStorageBucketNFSClient struct {
	value *ObjectStorageBucketNFSClient
	isSet bool
}

func (v NullableObjectStorageBucketNFSClient) Get() *ObjectStorageBucketNFSClient {
	return v.value
}

func (v *NullableObjectStorageBucketNFSClient) Set(val *ObjectStorageBucketNFSClient) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectStorageBucketNFSClient) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectStorageBucketNFSClient) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectStorageBucketNFSClient(val *ObjectStorageBucketNFSClient) *NullableObjectStorageBucketNFSClient {
	return &NullableObjectStorageBucketNFSClient{value: val, isSet: true}
}

func (v NullableObjectStorageBucketNFSClient) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectStorageBucketNFSClient) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


