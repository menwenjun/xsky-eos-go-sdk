/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the OsdGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OsdGroup{}

// OsdGroup OsdGroup defines model of osd group +X:model:generate;with_detailed;stats
type OsdGroup struct {
	ActionStatus *string `json:"action_status,omitempty"`
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	DeviceType *string `json:"device_type,omitempty"`
	DeviceTypeCheckDisabled *bool `json:"device_type_check_disabled,omitempty"`
	FailureDomainType *string `json:"failure_domain_type,omitempty"`
	Id *int64 `json:"id,omitempty"`
	NumaBindPolicy *string `json:"numa_bind_policy,omitempty"`
	NumaEnabled *bool `json:"numa_enabled,omitempty"`
	OsdAsyncRecoveryMaxUpdates *int64 `json:"osd_async_recovery_max_updates,omitempty"`
	OsdFullRatio *float64 `json:"osd_full_ratio,omitempty"`
	OsdNum *int64 `json:"osd_num,omitempty"`
	Pools []PoolNestview `json:"pools,omitempty"`
	Qos *OsdQos `json:"qos,omitempty"`
	Status *string `json:"status,omitempty"`
	Update *time.Time `json:"update,omitempty"`
}

// NewOsdGroup instantiates a new OsdGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOsdGroup() *OsdGroup {
	this := OsdGroup{}
	return &this
}

// NewOsdGroupWithDefaults instantiates a new OsdGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOsdGroupWithDefaults() *OsdGroup {
	this := OsdGroup{}
	return &this
}

// GetActionStatus returns the ActionStatus field value if set, zero value otherwise.
func (o *OsdGroup) GetActionStatus() string {
	if o == nil || IsNil(o.ActionStatus) {
		var ret string
		return ret
	}
	return *o.ActionStatus
}

// GetActionStatusOk returns a tuple with the ActionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsdGroup) GetActionStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ActionStatus) {
		return nil, false
	}
	return o.ActionStatus, true
}

// HasActionStatus returns a boolean if a field has been set.
func (o *OsdGroup) HasActionStatus() bool {
	if o != nil && !IsNil(o.ActionStatus) {
		return true
	}

	return false
}

// SetActionStatus gets a reference to the given string and assigns it to the ActionStatus field.
func (o *OsdGroup) SetActionStatus(v string) {
	o.ActionStatus = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *OsdGroup) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsdGroup) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *OsdGroup) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *OsdGroup) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *OsdGroup) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsdGroup) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *OsdGroup) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *OsdGroup) SetCreate(v time.Time) {
	o.Create = &v
}

// GetDeviceType returns the DeviceType field value if set, zero value otherwise.
func (o *OsdGroup) GetDeviceType() string {
	if o == nil || IsNil(o.DeviceType) {
		var ret string
		return ret
	}
	return *o.DeviceType
}

// GetDeviceTypeOk returns a tuple with the DeviceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsdGroup) GetDeviceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceType) {
		return nil, false
	}
	return o.DeviceType, true
}

// HasDeviceType returns a boolean if a field has been set.
func (o *OsdGroup) HasDeviceType() bool {
	if o != nil && !IsNil(o.DeviceType) {
		return true
	}

	return false
}

// SetDeviceType gets a reference to the given string and assigns it to the DeviceType field.
func (o *OsdGroup) SetDeviceType(v string) {
	o.DeviceType = &v
}

// GetDeviceTypeCheckDisabled returns the DeviceTypeCheckDisabled field value if set, zero value otherwise.
func (o *OsdGroup) GetDeviceTypeCheckDisabled() bool {
	if o == nil || IsNil(o.DeviceTypeCheckDisabled) {
		var ret bool
		return ret
	}
	return *o.DeviceTypeCheckDisabled
}

// GetDeviceTypeCheckDisabledOk returns a tuple with the DeviceTypeCheckDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsdGroup) GetDeviceTypeCheckDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.DeviceTypeCheckDisabled) {
		return nil, false
	}
	return o.DeviceTypeCheckDisabled, true
}

// HasDeviceTypeCheckDisabled returns a boolean if a field has been set.
func (o *OsdGroup) HasDeviceTypeCheckDisabled() bool {
	if o != nil && !IsNil(o.DeviceTypeCheckDisabled) {
		return true
	}

	return false
}

// SetDeviceTypeCheckDisabled gets a reference to the given bool and assigns it to the DeviceTypeCheckDisabled field.
func (o *OsdGroup) SetDeviceTypeCheckDisabled(v bool) {
	o.DeviceTypeCheckDisabled = &v
}

// GetFailureDomainType returns the FailureDomainType field value if set, zero value otherwise.
func (o *OsdGroup) GetFailureDomainType() string {
	if o == nil || IsNil(o.FailureDomainType) {
		var ret string
		return ret
	}
	return *o.FailureDomainType
}

// GetFailureDomainTypeOk returns a tuple with the FailureDomainType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsdGroup) GetFailureDomainTypeOk() (*string, bool) {
	if o == nil || IsNil(o.FailureDomainType) {
		return nil, false
	}
	return o.FailureDomainType, true
}

// HasFailureDomainType returns a boolean if a field has been set.
func (o *OsdGroup) HasFailureDomainType() bool {
	if o != nil && !IsNil(o.FailureDomainType) {
		return true
	}

	return false
}

// SetFailureDomainType gets a reference to the given string and assigns it to the FailureDomainType field.
func (o *OsdGroup) SetFailureDomainType(v string) {
	o.FailureDomainType = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OsdGroup) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsdGroup) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OsdGroup) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *OsdGroup) SetId(v int64) {
	o.Id = &v
}

// GetNumaBindPolicy returns the NumaBindPolicy field value if set, zero value otherwise.
func (o *OsdGroup) GetNumaBindPolicy() string {
	if o == nil || IsNil(o.NumaBindPolicy) {
		var ret string
		return ret
	}
	return *o.NumaBindPolicy
}

// GetNumaBindPolicyOk returns a tuple with the NumaBindPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsdGroup) GetNumaBindPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.NumaBindPolicy) {
		return nil, false
	}
	return o.NumaBindPolicy, true
}

// HasNumaBindPolicy returns a boolean if a field has been set.
func (o *OsdGroup) HasNumaBindPolicy() bool {
	if o != nil && !IsNil(o.NumaBindPolicy) {
		return true
	}

	return false
}

// SetNumaBindPolicy gets a reference to the given string and assigns it to the NumaBindPolicy field.
func (o *OsdGroup) SetNumaBindPolicy(v string) {
	o.NumaBindPolicy = &v
}

// GetNumaEnabled returns the NumaEnabled field value if set, zero value otherwise.
func (o *OsdGroup) GetNumaEnabled() bool {
	if o == nil || IsNil(o.NumaEnabled) {
		var ret bool
		return ret
	}
	return *o.NumaEnabled
}

// GetNumaEnabledOk returns a tuple with the NumaEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsdGroup) GetNumaEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.NumaEnabled) {
		return nil, false
	}
	return o.NumaEnabled, true
}

// HasNumaEnabled returns a boolean if a field has been set.
func (o *OsdGroup) HasNumaEnabled() bool {
	if o != nil && !IsNil(o.NumaEnabled) {
		return true
	}

	return false
}

// SetNumaEnabled gets a reference to the given bool and assigns it to the NumaEnabled field.
func (o *OsdGroup) SetNumaEnabled(v bool) {
	o.NumaEnabled = &v
}

// GetOsdAsyncRecoveryMaxUpdates returns the OsdAsyncRecoveryMaxUpdates field value if set, zero value otherwise.
func (o *OsdGroup) GetOsdAsyncRecoveryMaxUpdates() int64 {
	if o == nil || IsNil(o.OsdAsyncRecoveryMaxUpdates) {
		var ret int64
		return ret
	}
	return *o.OsdAsyncRecoveryMaxUpdates
}

// GetOsdAsyncRecoveryMaxUpdatesOk returns a tuple with the OsdAsyncRecoveryMaxUpdates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsdGroup) GetOsdAsyncRecoveryMaxUpdatesOk() (*int64, bool) {
	if o == nil || IsNil(o.OsdAsyncRecoveryMaxUpdates) {
		return nil, false
	}
	return o.OsdAsyncRecoveryMaxUpdates, true
}

// HasOsdAsyncRecoveryMaxUpdates returns a boolean if a field has been set.
func (o *OsdGroup) HasOsdAsyncRecoveryMaxUpdates() bool {
	if o != nil && !IsNil(o.OsdAsyncRecoveryMaxUpdates) {
		return true
	}

	return false
}

// SetOsdAsyncRecoveryMaxUpdates gets a reference to the given int64 and assigns it to the OsdAsyncRecoveryMaxUpdates field.
func (o *OsdGroup) SetOsdAsyncRecoveryMaxUpdates(v int64) {
	o.OsdAsyncRecoveryMaxUpdates = &v
}

// GetOsdFullRatio returns the OsdFullRatio field value if set, zero value otherwise.
func (o *OsdGroup) GetOsdFullRatio() float64 {
	if o == nil || IsNil(o.OsdFullRatio) {
		var ret float64
		return ret
	}
	return *o.OsdFullRatio
}

// GetOsdFullRatioOk returns a tuple with the OsdFullRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsdGroup) GetOsdFullRatioOk() (*float64, bool) {
	if o == nil || IsNil(o.OsdFullRatio) {
		return nil, false
	}
	return o.OsdFullRatio, true
}

// HasOsdFullRatio returns a boolean if a field has been set.
func (o *OsdGroup) HasOsdFullRatio() bool {
	if o != nil && !IsNil(o.OsdFullRatio) {
		return true
	}

	return false
}

// SetOsdFullRatio gets a reference to the given float64 and assigns it to the OsdFullRatio field.
func (o *OsdGroup) SetOsdFullRatio(v float64) {
	o.OsdFullRatio = &v
}

// GetOsdNum returns the OsdNum field value if set, zero value otherwise.
func (o *OsdGroup) GetOsdNum() int64 {
	if o == nil || IsNil(o.OsdNum) {
		var ret int64
		return ret
	}
	return *o.OsdNum
}

// GetOsdNumOk returns a tuple with the OsdNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsdGroup) GetOsdNumOk() (*int64, bool) {
	if o == nil || IsNil(o.OsdNum) {
		return nil, false
	}
	return o.OsdNum, true
}

// HasOsdNum returns a boolean if a field has been set.
func (o *OsdGroup) HasOsdNum() bool {
	if o != nil && !IsNil(o.OsdNum) {
		return true
	}

	return false
}

// SetOsdNum gets a reference to the given int64 and assigns it to the OsdNum field.
func (o *OsdGroup) SetOsdNum(v int64) {
	o.OsdNum = &v
}

// GetPools returns the Pools field value if set, zero value otherwise.
func (o *OsdGroup) GetPools() []PoolNestview {
	if o == nil || IsNil(o.Pools) {
		var ret []PoolNestview
		return ret
	}
	return o.Pools
}

// GetPoolsOk returns a tuple with the Pools field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsdGroup) GetPoolsOk() ([]PoolNestview, bool) {
	if o == nil || IsNil(o.Pools) {
		return nil, false
	}
	return o.Pools, true
}

// HasPools returns a boolean if a field has been set.
func (o *OsdGroup) HasPools() bool {
	if o != nil && !IsNil(o.Pools) {
		return true
	}

	return false
}

// SetPools gets a reference to the given []PoolNestview and assigns it to the Pools field.
func (o *OsdGroup) SetPools(v []PoolNestview) {
	o.Pools = v
}

// GetQos returns the Qos field value if set, zero value otherwise.
func (o *OsdGroup) GetQos() OsdQos {
	if o == nil || IsNil(o.Qos) {
		var ret OsdQos
		return ret
	}
	return *o.Qos
}

// GetQosOk returns a tuple with the Qos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsdGroup) GetQosOk() (*OsdQos, bool) {
	if o == nil || IsNil(o.Qos) {
		return nil, false
	}
	return o.Qos, true
}

// HasQos returns a boolean if a field has been set.
func (o *OsdGroup) HasQos() bool {
	if o != nil && !IsNil(o.Qos) {
		return true
	}

	return false
}

// SetQos gets a reference to the given OsdQos and assigns it to the Qos field.
func (o *OsdGroup) SetQos(v OsdQos) {
	o.Qos = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *OsdGroup) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsdGroup) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *OsdGroup) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *OsdGroup) SetStatus(v string) {
	o.Status = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *OsdGroup) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsdGroup) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *OsdGroup) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *OsdGroup) SetUpdate(v time.Time) {
	o.Update = &v
}

func (o OsdGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OsdGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActionStatus) {
		toSerialize["action_status"] = o.ActionStatus
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.DeviceType) {
		toSerialize["device_type"] = o.DeviceType
	}
	if !IsNil(o.DeviceTypeCheckDisabled) {
		toSerialize["device_type_check_disabled"] = o.DeviceTypeCheckDisabled
	}
	if !IsNil(o.FailureDomainType) {
		toSerialize["failure_domain_type"] = o.FailureDomainType
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.NumaBindPolicy) {
		toSerialize["numa_bind_policy"] = o.NumaBindPolicy
	}
	if !IsNil(o.NumaEnabled) {
		toSerialize["numa_enabled"] = o.NumaEnabled
	}
	if !IsNil(o.OsdAsyncRecoveryMaxUpdates) {
		toSerialize["osd_async_recovery_max_updates"] = o.OsdAsyncRecoveryMaxUpdates
	}
	if !IsNil(o.OsdFullRatio) {
		toSerialize["osd_full_ratio"] = o.OsdFullRatio
	}
	if !IsNil(o.OsdNum) {
		toSerialize["osd_num"] = o.OsdNum
	}
	if !IsNil(o.Pools) {
		toSerialize["pools"] = o.Pools
	}
	if !IsNil(o.Qos) {
		toSerialize["qos"] = o.Qos
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	return toSerialize, nil
}

type NullableOsdGroup struct {
	value *OsdGroup
	isSet bool
}

func (v NullableOsdGroup) Get() *OsdGroup {
	return v.value
}

func (v *NullableOsdGroup) Set(val *OsdGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableOsdGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableOsdGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOsdGroup(val *OsdGroup) *NullableOsdGroup {
	return &NullableOsdGroup{value: val, isSet: true}
}

func (v NullableOsdGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOsdGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


