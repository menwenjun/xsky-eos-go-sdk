/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AccessPathCreateReqAccessPath type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessPathCreateReqAccessPath{}

// AccessPathCreateReqAccessPath struct for AccessPathCreateReqAccessPath
type AccessPathCreateReqAccessPath struct {
	Chap *bool `json:"chap,omitempty"`
	Description *string `json:"description,omitempty"`
	HostIds []int64 `json:"host_ids,omitempty"`
	MappingGroups []MappingGroupReq `json:"mapping_groups,omitempty"`
	Name *string `json:"name,omitempty"`
	NvmfType *string `json:"nvmf_type,omitempty"`
	// Deprecated
	ProtectionDomainId *int64 `json:"protection_domain_id,omitempty"`
	Targets []TargetReq `json:"targets,omitempty"`
	Tname *string `json:"tname,omitempty"`
	Tsecret *string `json:"tsecret,omitempty"`
	Type *string `json:"type,omitempty"`
	Uid *string `json:"uid,omitempty"`
}

// NewAccessPathCreateReqAccessPath instantiates a new AccessPathCreateReqAccessPath object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessPathCreateReqAccessPath() *AccessPathCreateReqAccessPath {
	this := AccessPathCreateReqAccessPath{}
	return &this
}

// NewAccessPathCreateReqAccessPathWithDefaults instantiates a new AccessPathCreateReqAccessPath object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessPathCreateReqAccessPathWithDefaults() *AccessPathCreateReqAccessPath {
	this := AccessPathCreateReqAccessPath{}
	return &this
}

// GetChap returns the Chap field value if set, zero value otherwise.
func (o *AccessPathCreateReqAccessPath) GetChap() bool {
	if o == nil || IsNil(o.Chap) {
		var ret bool
		return ret
	}
	return *o.Chap
}

// GetChapOk returns a tuple with the Chap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPathCreateReqAccessPath) GetChapOk() (*bool, bool) {
	if o == nil || IsNil(o.Chap) {
		return nil, false
	}
	return o.Chap, true
}

// HasChap returns a boolean if a field has been set.
func (o *AccessPathCreateReqAccessPath) HasChap() bool {
	if o != nil && !IsNil(o.Chap) {
		return true
	}

	return false
}

// SetChap gets a reference to the given bool and assigns it to the Chap field.
func (o *AccessPathCreateReqAccessPath) SetChap(v bool) {
	o.Chap = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AccessPathCreateReqAccessPath) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPathCreateReqAccessPath) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AccessPathCreateReqAccessPath) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AccessPathCreateReqAccessPath) SetDescription(v string) {
	o.Description = &v
}

// GetHostIds returns the HostIds field value if set, zero value otherwise.
func (o *AccessPathCreateReqAccessPath) GetHostIds() []int64 {
	if o == nil || IsNil(o.HostIds) {
		var ret []int64
		return ret
	}
	return o.HostIds
}

// GetHostIdsOk returns a tuple with the HostIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPathCreateReqAccessPath) GetHostIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.HostIds) {
		return nil, false
	}
	return o.HostIds, true
}

// HasHostIds returns a boolean if a field has been set.
func (o *AccessPathCreateReqAccessPath) HasHostIds() bool {
	if o != nil && !IsNil(o.HostIds) {
		return true
	}

	return false
}

// SetHostIds gets a reference to the given []int64 and assigns it to the HostIds field.
func (o *AccessPathCreateReqAccessPath) SetHostIds(v []int64) {
	o.HostIds = v
}

// GetMappingGroups returns the MappingGroups field value if set, zero value otherwise.
func (o *AccessPathCreateReqAccessPath) GetMappingGroups() []MappingGroupReq {
	if o == nil || IsNil(o.MappingGroups) {
		var ret []MappingGroupReq
		return ret
	}
	return o.MappingGroups
}

// GetMappingGroupsOk returns a tuple with the MappingGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPathCreateReqAccessPath) GetMappingGroupsOk() ([]MappingGroupReq, bool) {
	if o == nil || IsNil(o.MappingGroups) {
		return nil, false
	}
	return o.MappingGroups, true
}

// HasMappingGroups returns a boolean if a field has been set.
func (o *AccessPathCreateReqAccessPath) HasMappingGroups() bool {
	if o != nil && !IsNil(o.MappingGroups) {
		return true
	}

	return false
}

// SetMappingGroups gets a reference to the given []MappingGroupReq and assigns it to the MappingGroups field.
func (o *AccessPathCreateReqAccessPath) SetMappingGroups(v []MappingGroupReq) {
	o.MappingGroups = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AccessPathCreateReqAccessPath) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPathCreateReqAccessPath) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AccessPathCreateReqAccessPath) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AccessPathCreateReqAccessPath) SetName(v string) {
	o.Name = &v
}

// GetNvmfType returns the NvmfType field value if set, zero value otherwise.
func (o *AccessPathCreateReqAccessPath) GetNvmfType() string {
	if o == nil || IsNil(o.NvmfType) {
		var ret string
		return ret
	}
	return *o.NvmfType
}

// GetNvmfTypeOk returns a tuple with the NvmfType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPathCreateReqAccessPath) GetNvmfTypeOk() (*string, bool) {
	if o == nil || IsNil(o.NvmfType) {
		return nil, false
	}
	return o.NvmfType, true
}

// HasNvmfType returns a boolean if a field has been set.
func (o *AccessPathCreateReqAccessPath) HasNvmfType() bool {
	if o != nil && !IsNil(o.NvmfType) {
		return true
	}

	return false
}

// SetNvmfType gets a reference to the given string and assigns it to the NvmfType field.
func (o *AccessPathCreateReqAccessPath) SetNvmfType(v string) {
	o.NvmfType = &v
}

// GetProtectionDomainId returns the ProtectionDomainId field value if set, zero value otherwise.
func (o *AccessPathCreateReqAccessPath) GetProtectionDomainId() int64 {
	if o == nil || IsNil(o.ProtectionDomainId) {
		var ret int64
		return ret
	}
	return *o.ProtectionDomainId
}

// GetProtectionDomainIdOk returns a tuple with the ProtectionDomainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPathCreateReqAccessPath) GetProtectionDomainIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ProtectionDomainId) {
		return nil, false
	}
	return o.ProtectionDomainId, true
}

// HasProtectionDomainId returns a boolean if a field has been set.
func (o *AccessPathCreateReqAccessPath) HasProtectionDomainId() bool {
	if o != nil && !IsNil(o.ProtectionDomainId) {
		return true
	}

	return false
}

// SetProtectionDomainId gets a reference to the given int64 and assigns it to the ProtectionDomainId field.
func (o *AccessPathCreateReqAccessPath) SetProtectionDomainId(v int64) {
	o.ProtectionDomainId = &v
}

// GetTargets returns the Targets field value if set, zero value otherwise.
func (o *AccessPathCreateReqAccessPath) GetTargets() []TargetReq {
	if o == nil || IsNil(o.Targets) {
		var ret []TargetReq
		return ret
	}
	return o.Targets
}

// GetTargetsOk returns a tuple with the Targets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPathCreateReqAccessPath) GetTargetsOk() ([]TargetReq, bool) {
	if o == nil || IsNil(o.Targets) {
		return nil, false
	}
	return o.Targets, true
}

// HasTargets returns a boolean if a field has been set.
func (o *AccessPathCreateReqAccessPath) HasTargets() bool {
	if o != nil && !IsNil(o.Targets) {
		return true
	}

	return false
}

// SetTargets gets a reference to the given []TargetReq and assigns it to the Targets field.
func (o *AccessPathCreateReqAccessPath) SetTargets(v []TargetReq) {
	o.Targets = v
}

// GetTname returns the Tname field value if set, zero value otherwise.
func (o *AccessPathCreateReqAccessPath) GetTname() string {
	if o == nil || IsNil(o.Tname) {
		var ret string
		return ret
	}
	return *o.Tname
}

// GetTnameOk returns a tuple with the Tname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPathCreateReqAccessPath) GetTnameOk() (*string, bool) {
	if o == nil || IsNil(o.Tname) {
		return nil, false
	}
	return o.Tname, true
}

// HasTname returns a boolean if a field has been set.
func (o *AccessPathCreateReqAccessPath) HasTname() bool {
	if o != nil && !IsNil(o.Tname) {
		return true
	}

	return false
}

// SetTname gets a reference to the given string and assigns it to the Tname field.
func (o *AccessPathCreateReqAccessPath) SetTname(v string) {
	o.Tname = &v
}

// GetTsecret returns the Tsecret field value if set, zero value otherwise.
func (o *AccessPathCreateReqAccessPath) GetTsecret() string {
	if o == nil || IsNil(o.Tsecret) {
		var ret string
		return ret
	}
	return *o.Tsecret
}

// GetTsecretOk returns a tuple with the Tsecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPathCreateReqAccessPath) GetTsecretOk() (*string, bool) {
	if o == nil || IsNil(o.Tsecret) {
		return nil, false
	}
	return o.Tsecret, true
}

// HasTsecret returns a boolean if a field has been set.
func (o *AccessPathCreateReqAccessPath) HasTsecret() bool {
	if o != nil && !IsNil(o.Tsecret) {
		return true
	}

	return false
}

// SetTsecret gets a reference to the given string and assigns it to the Tsecret field.
func (o *AccessPathCreateReqAccessPath) SetTsecret(v string) {
	o.Tsecret = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AccessPathCreateReqAccessPath) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPathCreateReqAccessPath) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AccessPathCreateReqAccessPath) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AccessPathCreateReqAccessPath) SetType(v string) {
	o.Type = &v
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *AccessPathCreateReqAccessPath) GetUid() string {
	if o == nil || IsNil(o.Uid) {
		var ret string
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPathCreateReqAccessPath) GetUidOk() (*string, bool) {
	if o == nil || IsNil(o.Uid) {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *AccessPathCreateReqAccessPath) HasUid() bool {
	if o != nil && !IsNil(o.Uid) {
		return true
	}

	return false
}

// SetUid gets a reference to the given string and assigns it to the Uid field.
func (o *AccessPathCreateReqAccessPath) SetUid(v string) {
	o.Uid = &v
}

func (o AccessPathCreateReqAccessPath) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessPathCreateReqAccessPath) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Chap) {
		toSerialize["chap"] = o.Chap
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.HostIds) {
		toSerialize["host_ids"] = o.HostIds
	}
	if !IsNil(o.MappingGroups) {
		toSerialize["mapping_groups"] = o.MappingGroups
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NvmfType) {
		toSerialize["nvmf_type"] = o.NvmfType
	}
	if !IsNil(o.ProtectionDomainId) {
		toSerialize["protection_domain_id"] = o.ProtectionDomainId
	}
	if !IsNil(o.Targets) {
		toSerialize["targets"] = o.Targets
	}
	if !IsNil(o.Tname) {
		toSerialize["tname"] = o.Tname
	}
	if !IsNil(o.Tsecret) {
		toSerialize["tsecret"] = o.Tsecret
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Uid) {
		toSerialize["uid"] = o.Uid
	}
	return toSerialize, nil
}

type NullableAccessPathCreateReqAccessPath struct {
	value *AccessPathCreateReqAccessPath
	isSet bool
}

func (v NullableAccessPathCreateReqAccessPath) Get() *AccessPathCreateReqAccessPath {
	return v.value
}

func (v *NullableAccessPathCreateReqAccessPath) Set(val *AccessPathCreateReqAccessPath) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessPathCreateReqAccessPath) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessPathCreateReqAccessPath) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessPathCreateReqAccessPath(val *AccessPathCreateReqAccessPath) *NullableAccessPathCreateReqAccessPath {
	return &NullableAccessPathCreateReqAccessPath{value: val, isSet: true}
}

func (v NullableAccessPathCreateReqAccessPath) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessPathCreateReqAccessPath) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


