/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OSBucketAddReplicationZonesReqBucket type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OSBucketAddReplicationZonesReqBucket{}

// OSBucketAddReplicationZonesReqBucket struct for OSBucketAddReplicationZonesReqBucket
type OSBucketAddReplicationZonesReqBucket struct {
	OsReplicationZoneUuids []string `json:"os_replication_zone_uuids,omitempty"`
	OsReplicationZones []OSReplicationZoneReq `json:"os_replication_zones,omitempty"`
}

// NewOSBucketAddReplicationZonesReqBucket instantiates a new OSBucketAddReplicationZonesReqBucket object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOSBucketAddReplicationZonesReqBucket() *OSBucketAddReplicationZonesReqBucket {
	this := OSBucketAddReplicationZonesReqBucket{}
	return &this
}

// NewOSBucketAddReplicationZonesReqBucketWithDefaults instantiates a new OSBucketAddReplicationZonesReqBucket object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOSBucketAddReplicationZonesReqBucketWithDefaults() *OSBucketAddReplicationZonesReqBucket {
	this := OSBucketAddReplicationZonesReqBucket{}
	return &this
}

// GetOsReplicationZoneUuids returns the OsReplicationZoneUuids field value if set, zero value otherwise.
func (o *OSBucketAddReplicationZonesReqBucket) GetOsReplicationZoneUuids() []string {
	if o == nil || IsNil(o.OsReplicationZoneUuids) {
		var ret []string
		return ret
	}
	return o.OsReplicationZoneUuids
}

// GetOsReplicationZoneUuidsOk returns a tuple with the OsReplicationZoneUuids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBucketAddReplicationZonesReqBucket) GetOsReplicationZoneUuidsOk() ([]string, bool) {
	if o == nil || IsNil(o.OsReplicationZoneUuids) {
		return nil, false
	}
	return o.OsReplicationZoneUuids, true
}

// HasOsReplicationZoneUuids returns a boolean if a field has been set.
func (o *OSBucketAddReplicationZonesReqBucket) HasOsReplicationZoneUuids() bool {
	if o != nil && !IsNil(o.OsReplicationZoneUuids) {
		return true
	}

	return false
}

// SetOsReplicationZoneUuids gets a reference to the given []string and assigns it to the OsReplicationZoneUuids field.
func (o *OSBucketAddReplicationZonesReqBucket) SetOsReplicationZoneUuids(v []string) {
	o.OsReplicationZoneUuids = v
}

// GetOsReplicationZones returns the OsReplicationZones field value if set, zero value otherwise.
func (o *OSBucketAddReplicationZonesReqBucket) GetOsReplicationZones() []OSReplicationZoneReq {
	if o == nil || IsNil(o.OsReplicationZones) {
		var ret []OSReplicationZoneReq
		return ret
	}
	return o.OsReplicationZones
}

// GetOsReplicationZonesOk returns a tuple with the OsReplicationZones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBucketAddReplicationZonesReqBucket) GetOsReplicationZonesOk() ([]OSReplicationZoneReq, bool) {
	if o == nil || IsNil(o.OsReplicationZones) {
		return nil, false
	}
	return o.OsReplicationZones, true
}

// HasOsReplicationZones returns a boolean if a field has been set.
func (o *OSBucketAddReplicationZonesReqBucket) HasOsReplicationZones() bool {
	if o != nil && !IsNil(o.OsReplicationZones) {
		return true
	}

	return false
}

// SetOsReplicationZones gets a reference to the given []OSReplicationZoneReq and assigns it to the OsReplicationZones field.
func (o *OSBucketAddReplicationZonesReqBucket) SetOsReplicationZones(v []OSReplicationZoneReq) {
	o.OsReplicationZones = v
}

func (o OSBucketAddReplicationZonesReqBucket) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OSBucketAddReplicationZonesReqBucket) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OsReplicationZoneUuids) {
		toSerialize["os_replication_zone_uuids"] = o.OsReplicationZoneUuids
	}
	if !IsNil(o.OsReplicationZones) {
		toSerialize["os_replication_zones"] = o.OsReplicationZones
	}
	return toSerialize, nil
}

type NullableOSBucketAddReplicationZonesReqBucket struct {
	value *OSBucketAddReplicationZonesReqBucket
	isSet bool
}

func (v NullableOSBucketAddReplicationZonesReqBucket) Get() *OSBucketAddReplicationZonesReqBucket {
	return v.value
}

func (v *NullableOSBucketAddReplicationZonesReqBucket) Set(val *OSBucketAddReplicationZonesReqBucket) {
	v.value = val
	v.isSet = true
}

func (v NullableOSBucketAddReplicationZonesReqBucket) IsSet() bool {
	return v.isSet
}

func (v *NullableOSBucketAddReplicationZonesReqBucket) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSBucketAddReplicationZonesReqBucket(val *OSBucketAddReplicationZonesReqBucket) *NullableOSBucketAddReplicationZonesReqBucket {
	return &NullableOSBucketAddReplicationZonesReqBucket{value: val, isSet: true}
}

func (v NullableOSBucketAddReplicationZonesReqBucket) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSBucketAddReplicationZonesReqBucket) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


