/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DpVolumeGroupSnapshotReplicationPairResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DpVolumeGroupSnapshotReplicationPairResp{}

// DpVolumeGroupSnapshotReplicationPairResp struct for DpVolumeGroupSnapshotReplicationPairResp
type DpVolumeGroupSnapshotReplicationPairResp struct {
	DpVolumeGroupSnapshotReplicationPair *DpVolumeGroupSnapshotReplicationPair `json:"dp_volume_group_snapshot_replication_pair,omitempty"`
}

// NewDpVolumeGroupSnapshotReplicationPairResp instantiates a new DpVolumeGroupSnapshotReplicationPairResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDpVolumeGroupSnapshotReplicationPairResp() *DpVolumeGroupSnapshotReplicationPairResp {
	this := DpVolumeGroupSnapshotReplicationPairResp{}
	return &this
}

// NewDpVolumeGroupSnapshotReplicationPairRespWithDefaults instantiates a new DpVolumeGroupSnapshotReplicationPairResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDpVolumeGroupSnapshotReplicationPairRespWithDefaults() *DpVolumeGroupSnapshotReplicationPairResp {
	this := DpVolumeGroupSnapshotReplicationPairResp{}
	return &this
}

// GetDpVolumeGroupSnapshotReplicationPair returns the DpVolumeGroupSnapshotReplicationPair field value if set, zero value otherwise.
func (o *DpVolumeGroupSnapshotReplicationPairResp) GetDpVolumeGroupSnapshotReplicationPair() DpVolumeGroupSnapshotReplicationPair {
	if o == nil || IsNil(o.DpVolumeGroupSnapshotReplicationPair) {
		var ret DpVolumeGroupSnapshotReplicationPair
		return ret
	}
	return *o.DpVolumeGroupSnapshotReplicationPair
}

// GetDpVolumeGroupSnapshotReplicationPairOk returns a tuple with the DpVolumeGroupSnapshotReplicationPair field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpVolumeGroupSnapshotReplicationPairResp) GetDpVolumeGroupSnapshotReplicationPairOk() (*DpVolumeGroupSnapshotReplicationPair, bool) {
	if o == nil || IsNil(o.DpVolumeGroupSnapshotReplicationPair) {
		return nil, false
	}
	return o.DpVolumeGroupSnapshotReplicationPair, true
}

// HasDpVolumeGroupSnapshotReplicationPair returns a boolean if a field has been set.
func (o *DpVolumeGroupSnapshotReplicationPairResp) HasDpVolumeGroupSnapshotReplicationPair() bool {
	if o != nil && !IsNil(o.DpVolumeGroupSnapshotReplicationPair) {
		return true
	}

	return false
}

// SetDpVolumeGroupSnapshotReplicationPair gets a reference to the given DpVolumeGroupSnapshotReplicationPair and assigns it to the DpVolumeGroupSnapshotReplicationPair field.
func (o *DpVolumeGroupSnapshotReplicationPairResp) SetDpVolumeGroupSnapshotReplicationPair(v DpVolumeGroupSnapshotReplicationPair) {
	o.DpVolumeGroupSnapshotReplicationPair = &v
}

func (o DpVolumeGroupSnapshotReplicationPairResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DpVolumeGroupSnapshotReplicationPairResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DpVolumeGroupSnapshotReplicationPair) {
		toSerialize["dp_volume_group_snapshot_replication_pair"] = o.DpVolumeGroupSnapshotReplicationPair
	}
	return toSerialize, nil
}

type NullableDpVolumeGroupSnapshotReplicationPairResp struct {
	value *DpVolumeGroupSnapshotReplicationPairResp
	isSet bool
}

func (v NullableDpVolumeGroupSnapshotReplicationPairResp) Get() *DpVolumeGroupSnapshotReplicationPairResp {
	return v.value
}

func (v *NullableDpVolumeGroupSnapshotReplicationPairResp) Set(val *DpVolumeGroupSnapshotReplicationPairResp) {
	v.value = val
	v.isSet = true
}

func (v NullableDpVolumeGroupSnapshotReplicationPairResp) IsSet() bool {
	return v.isSet
}

func (v *NullableDpVolumeGroupSnapshotReplicationPairResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDpVolumeGroupSnapshotReplicationPairResp(val *DpVolumeGroupSnapshotReplicationPairResp) *NullableDpVolumeGroupSnapshotReplicationPairResp {
	return &NullableDpVolumeGroupSnapshotReplicationPairResp{value: val, isSet: true}
}

func (v NullableDpVolumeGroupSnapshotReplicationPairResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDpVolumeGroupSnapshotReplicationPairResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


