/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SecuritySSHValidationReqValidation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecuritySSHValidationReqValidation{}

// SecuritySSHValidationReqValidation struct for SecuritySSHValidationReqValidation
type SecuritySSHValidationReqValidation struct {
	PermitRootLogin *bool `json:"permit_root_login,omitempty"`
	Port int64 `json:"port"`
	PubKeyAuthentication *bool `json:"pub_key_authentication,omitempty"`
	TimeOut *int64 `json:"time_out,omitempty"`
}

type _SecuritySSHValidationReqValidation SecuritySSHValidationReqValidation

// NewSecuritySSHValidationReqValidation instantiates a new SecuritySSHValidationReqValidation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecuritySSHValidationReqValidation(port int64) *SecuritySSHValidationReqValidation {
	this := SecuritySSHValidationReqValidation{}
	this.Port = port
	return &this
}

// NewSecuritySSHValidationReqValidationWithDefaults instantiates a new SecuritySSHValidationReqValidation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecuritySSHValidationReqValidationWithDefaults() *SecuritySSHValidationReqValidation {
	this := SecuritySSHValidationReqValidation{}
	return &this
}

// GetPermitRootLogin returns the PermitRootLogin field value if set, zero value otherwise.
func (o *SecuritySSHValidationReqValidation) GetPermitRootLogin() bool {
	if o == nil || IsNil(o.PermitRootLogin) {
		var ret bool
		return ret
	}
	return *o.PermitRootLogin
}

// GetPermitRootLoginOk returns a tuple with the PermitRootLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySSHValidationReqValidation) GetPermitRootLoginOk() (*bool, bool) {
	if o == nil || IsNil(o.PermitRootLogin) {
		return nil, false
	}
	return o.PermitRootLogin, true
}

// HasPermitRootLogin returns a boolean if a field has been set.
func (o *SecuritySSHValidationReqValidation) HasPermitRootLogin() bool {
	if o != nil && !IsNil(o.PermitRootLogin) {
		return true
	}

	return false
}

// SetPermitRootLogin gets a reference to the given bool and assigns it to the PermitRootLogin field.
func (o *SecuritySSHValidationReqValidation) SetPermitRootLogin(v bool) {
	o.PermitRootLogin = &v
}

// GetPort returns the Port field value
func (o *SecuritySSHValidationReqValidation) GetPort() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Port
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
func (o *SecuritySSHValidationReqValidation) GetPortOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Port, true
}

// SetPort sets field value
func (o *SecuritySSHValidationReqValidation) SetPort(v int64) {
	o.Port = v
}

// GetPubKeyAuthentication returns the PubKeyAuthentication field value if set, zero value otherwise.
func (o *SecuritySSHValidationReqValidation) GetPubKeyAuthentication() bool {
	if o == nil || IsNil(o.PubKeyAuthentication) {
		var ret bool
		return ret
	}
	return *o.PubKeyAuthentication
}

// GetPubKeyAuthenticationOk returns a tuple with the PubKeyAuthentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySSHValidationReqValidation) GetPubKeyAuthenticationOk() (*bool, bool) {
	if o == nil || IsNil(o.PubKeyAuthentication) {
		return nil, false
	}
	return o.PubKeyAuthentication, true
}

// HasPubKeyAuthentication returns a boolean if a field has been set.
func (o *SecuritySSHValidationReqValidation) HasPubKeyAuthentication() bool {
	if o != nil && !IsNil(o.PubKeyAuthentication) {
		return true
	}

	return false
}

// SetPubKeyAuthentication gets a reference to the given bool and assigns it to the PubKeyAuthentication field.
func (o *SecuritySSHValidationReqValidation) SetPubKeyAuthentication(v bool) {
	o.PubKeyAuthentication = &v
}

// GetTimeOut returns the TimeOut field value if set, zero value otherwise.
func (o *SecuritySSHValidationReqValidation) GetTimeOut() int64 {
	if o == nil || IsNil(o.TimeOut) {
		var ret int64
		return ret
	}
	return *o.TimeOut
}

// GetTimeOutOk returns a tuple with the TimeOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySSHValidationReqValidation) GetTimeOutOk() (*int64, bool) {
	if o == nil || IsNil(o.TimeOut) {
		return nil, false
	}
	return o.TimeOut, true
}

// HasTimeOut returns a boolean if a field has been set.
func (o *SecuritySSHValidationReqValidation) HasTimeOut() bool {
	if o != nil && !IsNil(o.TimeOut) {
		return true
	}

	return false
}

// SetTimeOut gets a reference to the given int64 and assigns it to the TimeOut field.
func (o *SecuritySSHValidationReqValidation) SetTimeOut(v int64) {
	o.TimeOut = &v
}

func (o SecuritySSHValidationReqValidation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecuritySSHValidationReqValidation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PermitRootLogin) {
		toSerialize["permit_root_login"] = o.PermitRootLogin
	}
	toSerialize["port"] = o.Port
	if !IsNil(o.PubKeyAuthentication) {
		toSerialize["pub_key_authentication"] = o.PubKeyAuthentication
	}
	if !IsNil(o.TimeOut) {
		toSerialize["time_out"] = o.TimeOut
	}
	return toSerialize, nil
}

func (o *SecuritySSHValidationReqValidation) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"port",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSecuritySSHValidationReqValidation := _SecuritySSHValidationReqValidation{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSecuritySSHValidationReqValidation)

	if err != nil {
		return err
	}

	*o = SecuritySSHValidationReqValidation(varSecuritySSHValidationReqValidation)

	return err
}

type NullableSecuritySSHValidationReqValidation struct {
	value *SecuritySSHValidationReqValidation
	isSet bool
}

func (v NullableSecuritySSHValidationReqValidation) Get() *SecuritySSHValidationReqValidation {
	return v.value
}

func (v *NullableSecuritySSHValidationReqValidation) Set(val *SecuritySSHValidationReqValidation) {
	v.value = val
	v.isSet = true
}

func (v NullableSecuritySSHValidationReqValidation) IsSet() bool {
	return v.isSet
}

func (v *NullableSecuritySSHValidationReqValidation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecuritySSHValidationReqValidation(val *SecuritySSHValidationReqValidation) *NullableSecuritySSHValidationReqValidation {
	return &NullableSecuritySSHValidationReqValidation{value: val, isSet: true}
}

func (v NullableSecuritySSHValidationReqValidation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecuritySSHValidationReqValidation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


