/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the HostValidator type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HostValidator{}

// HostValidator HostValidator defines the validator for host
type HostValidator struct {
	AdminIp *string `json:"admin_ip,omitempty"`
	CheckTypes []string `json:"check_types,omitempty"`
	Cluster *Cluster `json:"cluster,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	GatewayIps []string `json:"gateway_ips,omitempty"`
	Host *Host `json:"host,omitempty"`
	HostRoles []string `json:"host_roles,omitempty"`
	HostType *string `json:"host_type,omitempty"`
	Id *int64 `json:"id,omitempty"`
	OspClusterIp *string `json:"osp_cluster_ip,omitempty"`
	OspGatewayIps []string `json:"osp_gateway_ips,omitempty"`
	PrivateIp *string `json:"private_ip,omitempty"`
	PublicIp *string `json:"public_ip,omitempty"`
	Report map[string]interface{} `json:"report,omitempty"`
	Status *string `json:"status,omitempty"`
	Update *time.Time `json:"update,omitempty"`
}

// NewHostValidator instantiates a new HostValidator object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHostValidator() *HostValidator {
	this := HostValidator{}
	return &this
}

// NewHostValidatorWithDefaults instantiates a new HostValidator object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHostValidatorWithDefaults() *HostValidator {
	this := HostValidator{}
	return &this
}

// GetAdminIp returns the AdminIp field value if set, zero value otherwise.
func (o *HostValidator) GetAdminIp() string {
	if o == nil || IsNil(o.AdminIp) {
		var ret string
		return ret
	}
	return *o.AdminIp
}

// GetAdminIpOk returns a tuple with the AdminIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostValidator) GetAdminIpOk() (*string, bool) {
	if o == nil || IsNil(o.AdminIp) {
		return nil, false
	}
	return o.AdminIp, true
}

// HasAdminIp returns a boolean if a field has been set.
func (o *HostValidator) HasAdminIp() bool {
	if o != nil && !IsNil(o.AdminIp) {
		return true
	}

	return false
}

// SetAdminIp gets a reference to the given string and assigns it to the AdminIp field.
func (o *HostValidator) SetAdminIp(v string) {
	o.AdminIp = &v
}

// GetCheckTypes returns the CheckTypes field value if set, zero value otherwise.
func (o *HostValidator) GetCheckTypes() []string {
	if o == nil || IsNil(o.CheckTypes) {
		var ret []string
		return ret
	}
	return o.CheckTypes
}

// GetCheckTypesOk returns a tuple with the CheckTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostValidator) GetCheckTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.CheckTypes) {
		return nil, false
	}
	return o.CheckTypes, true
}

// HasCheckTypes returns a boolean if a field has been set.
func (o *HostValidator) HasCheckTypes() bool {
	if o != nil && !IsNil(o.CheckTypes) {
		return true
	}

	return false
}

// SetCheckTypes gets a reference to the given []string and assigns it to the CheckTypes field.
func (o *HostValidator) SetCheckTypes(v []string) {
	o.CheckTypes = v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *HostValidator) GetCluster() Cluster {
	if o == nil || IsNil(o.Cluster) {
		var ret Cluster
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostValidator) GetClusterOk() (*Cluster, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *HostValidator) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given Cluster and assigns it to the Cluster field.
func (o *HostValidator) SetCluster(v Cluster) {
	o.Cluster = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *HostValidator) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostValidator) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *HostValidator) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *HostValidator) SetCreate(v time.Time) {
	o.Create = &v
}

// GetGatewayIps returns the GatewayIps field value if set, zero value otherwise.
func (o *HostValidator) GetGatewayIps() []string {
	if o == nil || IsNil(o.GatewayIps) {
		var ret []string
		return ret
	}
	return o.GatewayIps
}

// GetGatewayIpsOk returns a tuple with the GatewayIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostValidator) GetGatewayIpsOk() ([]string, bool) {
	if o == nil || IsNil(o.GatewayIps) {
		return nil, false
	}
	return o.GatewayIps, true
}

// HasGatewayIps returns a boolean if a field has been set.
func (o *HostValidator) HasGatewayIps() bool {
	if o != nil && !IsNil(o.GatewayIps) {
		return true
	}

	return false
}

// SetGatewayIps gets a reference to the given []string and assigns it to the GatewayIps field.
func (o *HostValidator) SetGatewayIps(v []string) {
	o.GatewayIps = v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *HostValidator) GetHost() Host {
	if o == nil || IsNil(o.Host) {
		var ret Host
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostValidator) GetHostOk() (*Host, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *HostValidator) HasHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given Host and assigns it to the Host field.
func (o *HostValidator) SetHost(v Host) {
	o.Host = &v
}

// GetHostRoles returns the HostRoles field value if set, zero value otherwise.
func (o *HostValidator) GetHostRoles() []string {
	if o == nil || IsNil(o.HostRoles) {
		var ret []string
		return ret
	}
	return o.HostRoles
}

// GetHostRolesOk returns a tuple with the HostRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostValidator) GetHostRolesOk() ([]string, bool) {
	if o == nil || IsNil(o.HostRoles) {
		return nil, false
	}
	return o.HostRoles, true
}

// HasHostRoles returns a boolean if a field has been set.
func (o *HostValidator) HasHostRoles() bool {
	if o != nil && !IsNil(o.HostRoles) {
		return true
	}

	return false
}

// SetHostRoles gets a reference to the given []string and assigns it to the HostRoles field.
func (o *HostValidator) SetHostRoles(v []string) {
	o.HostRoles = v
}

// GetHostType returns the HostType field value if set, zero value otherwise.
func (o *HostValidator) GetHostType() string {
	if o == nil || IsNil(o.HostType) {
		var ret string
		return ret
	}
	return *o.HostType
}

// GetHostTypeOk returns a tuple with the HostType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostValidator) GetHostTypeOk() (*string, bool) {
	if o == nil || IsNil(o.HostType) {
		return nil, false
	}
	return o.HostType, true
}

// HasHostType returns a boolean if a field has been set.
func (o *HostValidator) HasHostType() bool {
	if o != nil && !IsNil(o.HostType) {
		return true
	}

	return false
}

// SetHostType gets a reference to the given string and assigns it to the HostType field.
func (o *HostValidator) SetHostType(v string) {
	o.HostType = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *HostValidator) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostValidator) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *HostValidator) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *HostValidator) SetId(v int64) {
	o.Id = &v
}

// GetOspClusterIp returns the OspClusterIp field value if set, zero value otherwise.
func (o *HostValidator) GetOspClusterIp() string {
	if o == nil || IsNil(o.OspClusterIp) {
		var ret string
		return ret
	}
	return *o.OspClusterIp
}

// GetOspClusterIpOk returns a tuple with the OspClusterIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostValidator) GetOspClusterIpOk() (*string, bool) {
	if o == nil || IsNil(o.OspClusterIp) {
		return nil, false
	}
	return o.OspClusterIp, true
}

// HasOspClusterIp returns a boolean if a field has been set.
func (o *HostValidator) HasOspClusterIp() bool {
	if o != nil && !IsNil(o.OspClusterIp) {
		return true
	}

	return false
}

// SetOspClusterIp gets a reference to the given string and assigns it to the OspClusterIp field.
func (o *HostValidator) SetOspClusterIp(v string) {
	o.OspClusterIp = &v
}

// GetOspGatewayIps returns the OspGatewayIps field value if set, zero value otherwise.
func (o *HostValidator) GetOspGatewayIps() []string {
	if o == nil || IsNil(o.OspGatewayIps) {
		var ret []string
		return ret
	}
	return o.OspGatewayIps
}

// GetOspGatewayIpsOk returns a tuple with the OspGatewayIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostValidator) GetOspGatewayIpsOk() ([]string, bool) {
	if o == nil || IsNil(o.OspGatewayIps) {
		return nil, false
	}
	return o.OspGatewayIps, true
}

// HasOspGatewayIps returns a boolean if a field has been set.
func (o *HostValidator) HasOspGatewayIps() bool {
	if o != nil && !IsNil(o.OspGatewayIps) {
		return true
	}

	return false
}

// SetOspGatewayIps gets a reference to the given []string and assigns it to the OspGatewayIps field.
func (o *HostValidator) SetOspGatewayIps(v []string) {
	o.OspGatewayIps = v
}

// GetPrivateIp returns the PrivateIp field value if set, zero value otherwise.
func (o *HostValidator) GetPrivateIp() string {
	if o == nil || IsNil(o.PrivateIp) {
		var ret string
		return ret
	}
	return *o.PrivateIp
}

// GetPrivateIpOk returns a tuple with the PrivateIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostValidator) GetPrivateIpOk() (*string, bool) {
	if o == nil || IsNil(o.PrivateIp) {
		return nil, false
	}
	return o.PrivateIp, true
}

// HasPrivateIp returns a boolean if a field has been set.
func (o *HostValidator) HasPrivateIp() bool {
	if o != nil && !IsNil(o.PrivateIp) {
		return true
	}

	return false
}

// SetPrivateIp gets a reference to the given string and assigns it to the PrivateIp field.
func (o *HostValidator) SetPrivateIp(v string) {
	o.PrivateIp = &v
}

// GetPublicIp returns the PublicIp field value if set, zero value otherwise.
func (o *HostValidator) GetPublicIp() string {
	if o == nil || IsNil(o.PublicIp) {
		var ret string
		return ret
	}
	return *o.PublicIp
}

// GetPublicIpOk returns a tuple with the PublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostValidator) GetPublicIpOk() (*string, bool) {
	if o == nil || IsNil(o.PublicIp) {
		return nil, false
	}
	return o.PublicIp, true
}

// HasPublicIp returns a boolean if a field has been set.
func (o *HostValidator) HasPublicIp() bool {
	if o != nil && !IsNil(o.PublicIp) {
		return true
	}

	return false
}

// SetPublicIp gets a reference to the given string and assigns it to the PublicIp field.
func (o *HostValidator) SetPublicIp(v string) {
	o.PublicIp = &v
}

// GetReport returns the Report field value if set, zero value otherwise.
func (o *HostValidator) GetReport() map[string]interface{} {
	if o == nil || IsNil(o.Report) {
		var ret map[string]interface{}
		return ret
	}
	return o.Report
}

// GetReportOk returns a tuple with the Report field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostValidator) GetReportOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Report) {
		return map[string]interface{}{}, false
	}
	return o.Report, true
}

// HasReport returns a boolean if a field has been set.
func (o *HostValidator) HasReport() bool {
	if o != nil && !IsNil(o.Report) {
		return true
	}

	return false
}

// SetReport gets a reference to the given map[string]interface{} and assigns it to the Report field.
func (o *HostValidator) SetReport(v map[string]interface{}) {
	o.Report = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *HostValidator) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostValidator) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *HostValidator) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *HostValidator) SetStatus(v string) {
	o.Status = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *HostValidator) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostValidator) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *HostValidator) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *HostValidator) SetUpdate(v time.Time) {
	o.Update = &v
}

func (o HostValidator) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HostValidator) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdminIp) {
		toSerialize["admin_ip"] = o.AdminIp
	}
	if !IsNil(o.CheckTypes) {
		toSerialize["check_types"] = o.CheckTypes
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.GatewayIps) {
		toSerialize["gateway_ips"] = o.GatewayIps
	}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !IsNil(o.HostRoles) {
		toSerialize["host_roles"] = o.HostRoles
	}
	if !IsNil(o.HostType) {
		toSerialize["host_type"] = o.HostType
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.OspClusterIp) {
		toSerialize["osp_cluster_ip"] = o.OspClusterIp
	}
	if !IsNil(o.OspGatewayIps) {
		toSerialize["osp_gateway_ips"] = o.OspGatewayIps
	}
	if !IsNil(o.PrivateIp) {
		toSerialize["private_ip"] = o.PrivateIp
	}
	if !IsNil(o.PublicIp) {
		toSerialize["public_ip"] = o.PublicIp
	}
	if !IsNil(o.Report) {
		toSerialize["report"] = o.Report
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	return toSerialize, nil
}

type NullableHostValidator struct {
	value *HostValidator
	isSet bool
}

func (v NullableHostValidator) Get() *HostValidator {
	return v.value
}

func (v *NullableHostValidator) Set(val *HostValidator) {
	v.value = val
	v.isSet = true
}

func (v NullableHostValidator) IsSet() bool {
	return v.isSet
}

func (v *NullableHostValidator) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHostValidator(val *HostValidator) *NullableHostValidator {
	return &NullableHostValidator{value: val, isSet: true}
}

func (v NullableHostValidator) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHostValidator) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


