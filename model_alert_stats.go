/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AlertStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertStats{}

// AlertStats struct for AlertStats
type AlertStats struct {
	CriticalNum *int64 `json:"critical_num,omitempty"`
	ErrorNum *int64 `json:"error_num,omitempty"`
	InfoNum *int64 `json:"info_num,omitempty"`
	WarningNum *int64 `json:"warning_num,omitempty"`
}

// NewAlertStats instantiates a new AlertStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertStats() *AlertStats {
	this := AlertStats{}
	return &this
}

// NewAlertStatsWithDefaults instantiates a new AlertStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertStatsWithDefaults() *AlertStats {
	this := AlertStats{}
	return &this
}

// GetCriticalNum returns the CriticalNum field value if set, zero value otherwise.
func (o *AlertStats) GetCriticalNum() int64 {
	if o == nil || IsNil(o.CriticalNum) {
		var ret int64
		return ret
	}
	return *o.CriticalNum
}

// GetCriticalNumOk returns a tuple with the CriticalNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertStats) GetCriticalNumOk() (*int64, bool) {
	if o == nil || IsNil(o.CriticalNum) {
		return nil, false
	}
	return o.CriticalNum, true
}

// HasCriticalNum returns a boolean if a field has been set.
func (o *AlertStats) HasCriticalNum() bool {
	if o != nil && !IsNil(o.CriticalNum) {
		return true
	}

	return false
}

// SetCriticalNum gets a reference to the given int64 and assigns it to the CriticalNum field.
func (o *AlertStats) SetCriticalNum(v int64) {
	o.CriticalNum = &v
}

// GetErrorNum returns the ErrorNum field value if set, zero value otherwise.
func (o *AlertStats) GetErrorNum() int64 {
	if o == nil || IsNil(o.ErrorNum) {
		var ret int64
		return ret
	}
	return *o.ErrorNum
}

// GetErrorNumOk returns a tuple with the ErrorNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertStats) GetErrorNumOk() (*int64, bool) {
	if o == nil || IsNil(o.ErrorNum) {
		return nil, false
	}
	return o.ErrorNum, true
}

// HasErrorNum returns a boolean if a field has been set.
func (o *AlertStats) HasErrorNum() bool {
	if o != nil && !IsNil(o.ErrorNum) {
		return true
	}

	return false
}

// SetErrorNum gets a reference to the given int64 and assigns it to the ErrorNum field.
func (o *AlertStats) SetErrorNum(v int64) {
	o.ErrorNum = &v
}

// GetInfoNum returns the InfoNum field value if set, zero value otherwise.
func (o *AlertStats) GetInfoNum() int64 {
	if o == nil || IsNil(o.InfoNum) {
		var ret int64
		return ret
	}
	return *o.InfoNum
}

// GetInfoNumOk returns a tuple with the InfoNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertStats) GetInfoNumOk() (*int64, bool) {
	if o == nil || IsNil(o.InfoNum) {
		return nil, false
	}
	return o.InfoNum, true
}

// HasInfoNum returns a boolean if a field has been set.
func (o *AlertStats) HasInfoNum() bool {
	if o != nil && !IsNil(o.InfoNum) {
		return true
	}

	return false
}

// SetInfoNum gets a reference to the given int64 and assigns it to the InfoNum field.
func (o *AlertStats) SetInfoNum(v int64) {
	o.InfoNum = &v
}

// GetWarningNum returns the WarningNum field value if set, zero value otherwise.
func (o *AlertStats) GetWarningNum() int64 {
	if o == nil || IsNil(o.WarningNum) {
		var ret int64
		return ret
	}
	return *o.WarningNum
}

// GetWarningNumOk returns a tuple with the WarningNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertStats) GetWarningNumOk() (*int64, bool) {
	if o == nil || IsNil(o.WarningNum) {
		return nil, false
	}
	return o.WarningNum, true
}

// HasWarningNum returns a boolean if a field has been set.
func (o *AlertStats) HasWarningNum() bool {
	if o != nil && !IsNil(o.WarningNum) {
		return true
	}

	return false
}

// SetWarningNum gets a reference to the given int64 and assigns it to the WarningNum field.
func (o *AlertStats) SetWarningNum(v int64) {
	o.WarningNum = &v
}

func (o AlertStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CriticalNum) {
		toSerialize["critical_num"] = o.CriticalNum
	}
	if !IsNil(o.ErrorNum) {
		toSerialize["error_num"] = o.ErrorNum
	}
	if !IsNil(o.InfoNum) {
		toSerialize["info_num"] = o.InfoNum
	}
	if !IsNil(o.WarningNum) {
		toSerialize["warning_num"] = o.WarningNum
	}
	return toSerialize, nil
}

type NullableAlertStats struct {
	value *AlertStats
	isSet bool
}

func (v NullableAlertStats) Get() *AlertStats {
	return v.value
}

func (v *NullableAlertStats) Set(val *AlertStats) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertStats) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertStats(val *AlertStats) *NullableAlertStats {
	return &NullableAlertStats{value: val, isSet: true}
}

func (v NullableAlertStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


