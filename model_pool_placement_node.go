/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the PoolPlacementNode type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PoolPlacementNode{}

// PoolPlacementNode PoolPlacementNode defines a shadow placement node in a pool
type PoolPlacementNode struct {
	Children []PoolPlacementNode `json:"children,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	Id *int64 `json:"id,omitempty"`
	PlacementNode *PlacementNode `json:"placement_node,omitempty"`
	ReplicateNum *int64 `json:"replicate_num,omitempty"`
	Status *string `json:"status,omitempty"`
	Update *time.Time `json:"update,omitempty"`
}

// NewPoolPlacementNode instantiates a new PoolPlacementNode object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPoolPlacementNode() *PoolPlacementNode {
	this := PoolPlacementNode{}
	return &this
}

// NewPoolPlacementNodeWithDefaults instantiates a new PoolPlacementNode object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPoolPlacementNodeWithDefaults() *PoolPlacementNode {
	this := PoolPlacementNode{}
	return &this
}

// GetChildren returns the Children field value if set, zero value otherwise.
func (o *PoolPlacementNode) GetChildren() []PoolPlacementNode {
	if o == nil || IsNil(o.Children) {
		var ret []PoolPlacementNode
		return ret
	}
	return o.Children
}

// GetChildrenOk returns a tuple with the Children field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolPlacementNode) GetChildrenOk() ([]PoolPlacementNode, bool) {
	if o == nil || IsNil(o.Children) {
		return nil, false
	}
	return o.Children, true
}

// HasChildren returns a boolean if a field has been set.
func (o *PoolPlacementNode) HasChildren() bool {
	if o != nil && !IsNil(o.Children) {
		return true
	}

	return false
}

// SetChildren gets a reference to the given []PoolPlacementNode and assigns it to the Children field.
func (o *PoolPlacementNode) SetChildren(v []PoolPlacementNode) {
	o.Children = v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *PoolPlacementNode) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolPlacementNode) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *PoolPlacementNode) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *PoolPlacementNode) SetCreate(v time.Time) {
	o.Create = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PoolPlacementNode) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolPlacementNode) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PoolPlacementNode) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *PoolPlacementNode) SetId(v int64) {
	o.Id = &v
}

// GetPlacementNode returns the PlacementNode field value if set, zero value otherwise.
func (o *PoolPlacementNode) GetPlacementNode() PlacementNode {
	if o == nil || IsNil(o.PlacementNode) {
		var ret PlacementNode
		return ret
	}
	return *o.PlacementNode
}

// GetPlacementNodeOk returns a tuple with the PlacementNode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolPlacementNode) GetPlacementNodeOk() (*PlacementNode, bool) {
	if o == nil || IsNil(o.PlacementNode) {
		return nil, false
	}
	return o.PlacementNode, true
}

// HasPlacementNode returns a boolean if a field has been set.
func (o *PoolPlacementNode) HasPlacementNode() bool {
	if o != nil && !IsNil(o.PlacementNode) {
		return true
	}

	return false
}

// SetPlacementNode gets a reference to the given PlacementNode and assigns it to the PlacementNode field.
func (o *PoolPlacementNode) SetPlacementNode(v PlacementNode) {
	o.PlacementNode = &v
}

// GetReplicateNum returns the ReplicateNum field value if set, zero value otherwise.
func (o *PoolPlacementNode) GetReplicateNum() int64 {
	if o == nil || IsNil(o.ReplicateNum) {
		var ret int64
		return ret
	}
	return *o.ReplicateNum
}

// GetReplicateNumOk returns a tuple with the ReplicateNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolPlacementNode) GetReplicateNumOk() (*int64, bool) {
	if o == nil || IsNil(o.ReplicateNum) {
		return nil, false
	}
	return o.ReplicateNum, true
}

// HasReplicateNum returns a boolean if a field has been set.
func (o *PoolPlacementNode) HasReplicateNum() bool {
	if o != nil && !IsNil(o.ReplicateNum) {
		return true
	}

	return false
}

// SetReplicateNum gets a reference to the given int64 and assigns it to the ReplicateNum field.
func (o *PoolPlacementNode) SetReplicateNum(v int64) {
	o.ReplicateNum = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PoolPlacementNode) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolPlacementNode) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PoolPlacementNode) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *PoolPlacementNode) SetStatus(v string) {
	o.Status = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *PoolPlacementNode) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PoolPlacementNode) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *PoolPlacementNode) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *PoolPlacementNode) SetUpdate(v time.Time) {
	o.Update = &v
}

func (o PoolPlacementNode) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PoolPlacementNode) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Children) {
		toSerialize["children"] = o.Children
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.PlacementNode) {
		toSerialize["placement_node"] = o.PlacementNode
	}
	if !IsNil(o.ReplicateNum) {
		toSerialize["replicate_num"] = o.ReplicateNum
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	return toSerialize, nil
}

type NullablePoolPlacementNode struct {
	value *PoolPlacementNode
	isSet bool
}

func (v NullablePoolPlacementNode) Get() *PoolPlacementNode {
	return v.value
}

func (v *NullablePoolPlacementNode) Set(val *PoolPlacementNode) {
	v.value = val
	v.isSet = true
}

func (v NullablePoolPlacementNode) IsSet() bool {
	return v.isSet
}

func (v *NullablePoolPlacementNode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePoolPlacementNode(val *PoolPlacementNode) *NullablePoolPlacementNode {
	return &NullablePoolPlacementNode{value: val, isSet: true}
}

func (v NullablePoolPlacementNode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePoolPlacementNode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


