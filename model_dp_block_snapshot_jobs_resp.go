/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DpBlockSnapshotJobsResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DpBlockSnapshotJobsResp{}

// DpBlockSnapshotJobsResp struct for DpBlockSnapshotJobsResp
type DpBlockSnapshotJobsResp struct {
	DpBlockSnapshotJobs []DpBlockSnapshotJob `json:"dp_block_snapshot_jobs"`
}

type _DpBlockSnapshotJobsResp DpBlockSnapshotJobsResp

// NewDpBlockSnapshotJobsResp instantiates a new DpBlockSnapshotJobsResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDpBlockSnapshotJobsResp(dpBlockSnapshotJobs []DpBlockSnapshotJob) *DpBlockSnapshotJobsResp {
	this := DpBlockSnapshotJobsResp{}
	this.DpBlockSnapshotJobs = dpBlockSnapshotJobs
	return &this
}

// NewDpBlockSnapshotJobsRespWithDefaults instantiates a new DpBlockSnapshotJobsResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDpBlockSnapshotJobsRespWithDefaults() *DpBlockSnapshotJobsResp {
	this := DpBlockSnapshotJobsResp{}
	return &this
}

// GetDpBlockSnapshotJobs returns the DpBlockSnapshotJobs field value
func (o *DpBlockSnapshotJobsResp) GetDpBlockSnapshotJobs() []DpBlockSnapshotJob {
	if o == nil {
		var ret []DpBlockSnapshotJob
		return ret
	}

	return o.DpBlockSnapshotJobs
}

// GetDpBlockSnapshotJobsOk returns a tuple with the DpBlockSnapshotJobs field value
// and a boolean to check if the value has been set.
func (o *DpBlockSnapshotJobsResp) GetDpBlockSnapshotJobsOk() ([]DpBlockSnapshotJob, bool) {
	if o == nil {
		return nil, false
	}
	return o.DpBlockSnapshotJobs, true
}

// SetDpBlockSnapshotJobs sets field value
func (o *DpBlockSnapshotJobsResp) SetDpBlockSnapshotJobs(v []DpBlockSnapshotJob) {
	o.DpBlockSnapshotJobs = v
}

func (o DpBlockSnapshotJobsResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DpBlockSnapshotJobsResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dp_block_snapshot_jobs"] = o.DpBlockSnapshotJobs
	return toSerialize, nil
}

func (o *DpBlockSnapshotJobsResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dp_block_snapshot_jobs",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDpBlockSnapshotJobsResp := _DpBlockSnapshotJobsResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDpBlockSnapshotJobsResp)

	if err != nil {
		return err
	}

	*o = DpBlockSnapshotJobsResp(varDpBlockSnapshotJobsResp)

	return err
}

type NullableDpBlockSnapshotJobsResp struct {
	value *DpBlockSnapshotJobsResp
	isSet bool
}

func (v NullableDpBlockSnapshotJobsResp) Get() *DpBlockSnapshotJobsResp {
	return v.value
}

func (v *NullableDpBlockSnapshotJobsResp) Set(val *DpBlockSnapshotJobsResp) {
	v.value = val
	v.isSet = true
}

func (v NullableDpBlockSnapshotJobsResp) IsSet() bool {
	return v.isSet
}

func (v *NullableDpBlockSnapshotJobsResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDpBlockSnapshotJobsResp(val *DpBlockSnapshotJobsResp) *NullableDpBlockSnapshotJobsResp {
	return &NullableDpBlockSnapshotJobsResp{value: val, isSet: true}
}

func (v NullableDpBlockSnapshotJobsResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDpBlockSnapshotJobsResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


