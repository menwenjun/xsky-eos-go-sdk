/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DpBlockBackupPolicyResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DpBlockBackupPolicyResp{}

// DpBlockBackupPolicyResp struct for DpBlockBackupPolicyResp
type DpBlockBackupPolicyResp struct {
	DpBlockBackupPolicy *DpBlockBackupPolicy `json:"dp_block_backup_policy,omitempty"`
}

// NewDpBlockBackupPolicyResp instantiates a new DpBlockBackupPolicyResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDpBlockBackupPolicyResp() *DpBlockBackupPolicyResp {
	this := DpBlockBackupPolicyResp{}
	return &this
}

// NewDpBlockBackupPolicyRespWithDefaults instantiates a new DpBlockBackupPolicyResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDpBlockBackupPolicyRespWithDefaults() *DpBlockBackupPolicyResp {
	this := DpBlockBackupPolicyResp{}
	return &this
}

// GetDpBlockBackupPolicy returns the DpBlockBackupPolicy field value if set, zero value otherwise.
func (o *DpBlockBackupPolicyResp) GetDpBlockBackupPolicy() DpBlockBackupPolicy {
	if o == nil || IsNil(o.DpBlockBackupPolicy) {
		var ret DpBlockBackupPolicy
		return ret
	}
	return *o.DpBlockBackupPolicy
}

// GetDpBlockBackupPolicyOk returns a tuple with the DpBlockBackupPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpBlockBackupPolicyResp) GetDpBlockBackupPolicyOk() (*DpBlockBackupPolicy, bool) {
	if o == nil || IsNil(o.DpBlockBackupPolicy) {
		return nil, false
	}
	return o.DpBlockBackupPolicy, true
}

// HasDpBlockBackupPolicy returns a boolean if a field has been set.
func (o *DpBlockBackupPolicyResp) HasDpBlockBackupPolicy() bool {
	if o != nil && !IsNil(o.DpBlockBackupPolicy) {
		return true
	}

	return false
}

// SetDpBlockBackupPolicy gets a reference to the given DpBlockBackupPolicy and assigns it to the DpBlockBackupPolicy field.
func (o *DpBlockBackupPolicyResp) SetDpBlockBackupPolicy(v DpBlockBackupPolicy) {
	o.DpBlockBackupPolicy = &v
}

func (o DpBlockBackupPolicyResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DpBlockBackupPolicyResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DpBlockBackupPolicy) {
		toSerialize["dp_block_backup_policy"] = o.DpBlockBackupPolicy
	}
	return toSerialize, nil
}

type NullableDpBlockBackupPolicyResp struct {
	value *DpBlockBackupPolicyResp
	isSet bool
}

func (v NullableDpBlockBackupPolicyResp) Get() *DpBlockBackupPolicyResp {
	return v.value
}

func (v *NullableDpBlockBackupPolicyResp) Set(val *DpBlockBackupPolicyResp) {
	v.value = val
	v.isSet = true
}

func (v NullableDpBlockBackupPolicyResp) IsSet() bool {
	return v.isSet
}

func (v *NullableDpBlockBackupPolicyResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDpBlockBackupPolicyResp(val *DpBlockBackupPolicyResp) *NullableDpBlockBackupPolicyResp {
	return &NullableDpBlockBackupPolicyResp{value: val, isSet: true}
}

func (v NullableDpBlockBackupPolicyResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDpBlockBackupPolicyResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


