/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the OSReplicationZoneRecord type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OSReplicationZoneRecord{}

// OSReplicationZoneRecord OSReplicationZoneRecord is used to combine OSReplicationZone and OSReplicationZoneStat
type OSReplicationZoneRecord struct {
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	Dirty *bool `json:"dirty,omitempty"`
	OsBucket *ObjectStorageBucketNestview `json:"os_bucket,omitempty"`
	OsBucketOwnerCluster *RemoteClusterNestview `json:"os_bucket_owner_cluster,omitempty"`
	OsBucketOwnerZone *ObjectStorageZoneNestview `json:"os_bucket_owner_zone,omitempty"`
	OsRemotePolicy *OSRemotePolicyNestview `json:"os_remote_policy,omitempty"`
	OsRemotePolicyUuid *string `json:"os_remote_policy_uuid,omitempty"`
	OsReplicationPathNum *int64 `json:"os_replication_path_num,omitempty"`
	OsZone *ObjectStorageZoneNestview `json:"os_zone,omitempty"`
	OsZoneUuid *string `json:"os_zone_uuid,omitempty"`
	Readonly *bool `json:"readonly,omitempty"`
	ReplicationUuid *string `json:"replication_uuid,omitempty"`
	Status *string `json:"status,omitempty"`
	Update *time.Time `json:"update,omitempty"`
	Uuid *string `json:"uuid,omitempty"`
	Samples []OSReplicationZoneStat `json:"samples,omitempty"`
}

// NewOSReplicationZoneRecord instantiates a new OSReplicationZoneRecord object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOSReplicationZoneRecord() *OSReplicationZoneRecord {
	this := OSReplicationZoneRecord{}
	return &this
}

// NewOSReplicationZoneRecordWithDefaults instantiates a new OSReplicationZoneRecord object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOSReplicationZoneRecordWithDefaults() *OSReplicationZoneRecord {
	this := OSReplicationZoneRecord{}
	return &this
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *OSReplicationZoneRecord) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSReplicationZoneRecord) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *OSReplicationZoneRecord) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *OSReplicationZoneRecord) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *OSReplicationZoneRecord) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSReplicationZoneRecord) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *OSReplicationZoneRecord) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *OSReplicationZoneRecord) SetCreate(v time.Time) {
	o.Create = &v
}

// GetDirty returns the Dirty field value if set, zero value otherwise.
func (o *OSReplicationZoneRecord) GetDirty() bool {
	if o == nil || IsNil(o.Dirty) {
		var ret bool
		return ret
	}
	return *o.Dirty
}

// GetDirtyOk returns a tuple with the Dirty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSReplicationZoneRecord) GetDirtyOk() (*bool, bool) {
	if o == nil || IsNil(o.Dirty) {
		return nil, false
	}
	return o.Dirty, true
}

// HasDirty returns a boolean if a field has been set.
func (o *OSReplicationZoneRecord) HasDirty() bool {
	if o != nil && !IsNil(o.Dirty) {
		return true
	}

	return false
}

// SetDirty gets a reference to the given bool and assigns it to the Dirty field.
func (o *OSReplicationZoneRecord) SetDirty(v bool) {
	o.Dirty = &v
}

// GetOsBucket returns the OsBucket field value if set, zero value otherwise.
func (o *OSReplicationZoneRecord) GetOsBucket() ObjectStorageBucketNestview {
	if o == nil || IsNil(o.OsBucket) {
		var ret ObjectStorageBucketNestview
		return ret
	}
	return *o.OsBucket
}

// GetOsBucketOk returns a tuple with the OsBucket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSReplicationZoneRecord) GetOsBucketOk() (*ObjectStorageBucketNestview, bool) {
	if o == nil || IsNil(o.OsBucket) {
		return nil, false
	}
	return o.OsBucket, true
}

// HasOsBucket returns a boolean if a field has been set.
func (o *OSReplicationZoneRecord) HasOsBucket() bool {
	if o != nil && !IsNil(o.OsBucket) {
		return true
	}

	return false
}

// SetOsBucket gets a reference to the given ObjectStorageBucketNestview and assigns it to the OsBucket field.
func (o *OSReplicationZoneRecord) SetOsBucket(v ObjectStorageBucketNestview) {
	o.OsBucket = &v
}

// GetOsBucketOwnerCluster returns the OsBucketOwnerCluster field value if set, zero value otherwise.
func (o *OSReplicationZoneRecord) GetOsBucketOwnerCluster() RemoteClusterNestview {
	if o == nil || IsNil(o.OsBucketOwnerCluster) {
		var ret RemoteClusterNestview
		return ret
	}
	return *o.OsBucketOwnerCluster
}

// GetOsBucketOwnerClusterOk returns a tuple with the OsBucketOwnerCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSReplicationZoneRecord) GetOsBucketOwnerClusterOk() (*RemoteClusterNestview, bool) {
	if o == nil || IsNil(o.OsBucketOwnerCluster) {
		return nil, false
	}
	return o.OsBucketOwnerCluster, true
}

// HasOsBucketOwnerCluster returns a boolean if a field has been set.
func (o *OSReplicationZoneRecord) HasOsBucketOwnerCluster() bool {
	if o != nil && !IsNil(o.OsBucketOwnerCluster) {
		return true
	}

	return false
}

// SetOsBucketOwnerCluster gets a reference to the given RemoteClusterNestview and assigns it to the OsBucketOwnerCluster field.
func (o *OSReplicationZoneRecord) SetOsBucketOwnerCluster(v RemoteClusterNestview) {
	o.OsBucketOwnerCluster = &v
}

// GetOsBucketOwnerZone returns the OsBucketOwnerZone field value if set, zero value otherwise.
func (o *OSReplicationZoneRecord) GetOsBucketOwnerZone() ObjectStorageZoneNestview {
	if o == nil || IsNil(o.OsBucketOwnerZone) {
		var ret ObjectStorageZoneNestview
		return ret
	}
	return *o.OsBucketOwnerZone
}

// GetOsBucketOwnerZoneOk returns a tuple with the OsBucketOwnerZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSReplicationZoneRecord) GetOsBucketOwnerZoneOk() (*ObjectStorageZoneNestview, bool) {
	if o == nil || IsNil(o.OsBucketOwnerZone) {
		return nil, false
	}
	return o.OsBucketOwnerZone, true
}

// HasOsBucketOwnerZone returns a boolean if a field has been set.
func (o *OSReplicationZoneRecord) HasOsBucketOwnerZone() bool {
	if o != nil && !IsNil(o.OsBucketOwnerZone) {
		return true
	}

	return false
}

// SetOsBucketOwnerZone gets a reference to the given ObjectStorageZoneNestview and assigns it to the OsBucketOwnerZone field.
func (o *OSReplicationZoneRecord) SetOsBucketOwnerZone(v ObjectStorageZoneNestview) {
	o.OsBucketOwnerZone = &v
}

// GetOsRemotePolicy returns the OsRemotePolicy field value if set, zero value otherwise.
func (o *OSReplicationZoneRecord) GetOsRemotePolicy() OSRemotePolicyNestview {
	if o == nil || IsNil(o.OsRemotePolicy) {
		var ret OSRemotePolicyNestview
		return ret
	}
	return *o.OsRemotePolicy
}

// GetOsRemotePolicyOk returns a tuple with the OsRemotePolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSReplicationZoneRecord) GetOsRemotePolicyOk() (*OSRemotePolicyNestview, bool) {
	if o == nil || IsNil(o.OsRemotePolicy) {
		return nil, false
	}
	return o.OsRemotePolicy, true
}

// HasOsRemotePolicy returns a boolean if a field has been set.
func (o *OSReplicationZoneRecord) HasOsRemotePolicy() bool {
	if o != nil && !IsNil(o.OsRemotePolicy) {
		return true
	}

	return false
}

// SetOsRemotePolicy gets a reference to the given OSRemotePolicyNestview and assigns it to the OsRemotePolicy field.
func (o *OSReplicationZoneRecord) SetOsRemotePolicy(v OSRemotePolicyNestview) {
	o.OsRemotePolicy = &v
}

// GetOsRemotePolicyUuid returns the OsRemotePolicyUuid field value if set, zero value otherwise.
func (o *OSReplicationZoneRecord) GetOsRemotePolicyUuid() string {
	if o == nil || IsNil(o.OsRemotePolicyUuid) {
		var ret string
		return ret
	}
	return *o.OsRemotePolicyUuid
}

// GetOsRemotePolicyUuidOk returns a tuple with the OsRemotePolicyUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSReplicationZoneRecord) GetOsRemotePolicyUuidOk() (*string, bool) {
	if o == nil || IsNil(o.OsRemotePolicyUuid) {
		return nil, false
	}
	return o.OsRemotePolicyUuid, true
}

// HasOsRemotePolicyUuid returns a boolean if a field has been set.
func (o *OSReplicationZoneRecord) HasOsRemotePolicyUuid() bool {
	if o != nil && !IsNil(o.OsRemotePolicyUuid) {
		return true
	}

	return false
}

// SetOsRemotePolicyUuid gets a reference to the given string and assigns it to the OsRemotePolicyUuid field.
func (o *OSReplicationZoneRecord) SetOsRemotePolicyUuid(v string) {
	o.OsRemotePolicyUuid = &v
}

// GetOsReplicationPathNum returns the OsReplicationPathNum field value if set, zero value otherwise.
func (o *OSReplicationZoneRecord) GetOsReplicationPathNum() int64 {
	if o == nil || IsNil(o.OsReplicationPathNum) {
		var ret int64
		return ret
	}
	return *o.OsReplicationPathNum
}

// GetOsReplicationPathNumOk returns a tuple with the OsReplicationPathNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSReplicationZoneRecord) GetOsReplicationPathNumOk() (*int64, bool) {
	if o == nil || IsNil(o.OsReplicationPathNum) {
		return nil, false
	}
	return o.OsReplicationPathNum, true
}

// HasOsReplicationPathNum returns a boolean if a field has been set.
func (o *OSReplicationZoneRecord) HasOsReplicationPathNum() bool {
	if o != nil && !IsNil(o.OsReplicationPathNum) {
		return true
	}

	return false
}

// SetOsReplicationPathNum gets a reference to the given int64 and assigns it to the OsReplicationPathNum field.
func (o *OSReplicationZoneRecord) SetOsReplicationPathNum(v int64) {
	o.OsReplicationPathNum = &v
}

// GetOsZone returns the OsZone field value if set, zero value otherwise.
func (o *OSReplicationZoneRecord) GetOsZone() ObjectStorageZoneNestview {
	if o == nil || IsNil(o.OsZone) {
		var ret ObjectStorageZoneNestview
		return ret
	}
	return *o.OsZone
}

// GetOsZoneOk returns a tuple with the OsZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSReplicationZoneRecord) GetOsZoneOk() (*ObjectStorageZoneNestview, bool) {
	if o == nil || IsNil(o.OsZone) {
		return nil, false
	}
	return o.OsZone, true
}

// HasOsZone returns a boolean if a field has been set.
func (o *OSReplicationZoneRecord) HasOsZone() bool {
	if o != nil && !IsNil(o.OsZone) {
		return true
	}

	return false
}

// SetOsZone gets a reference to the given ObjectStorageZoneNestview and assigns it to the OsZone field.
func (o *OSReplicationZoneRecord) SetOsZone(v ObjectStorageZoneNestview) {
	o.OsZone = &v
}

// GetOsZoneUuid returns the OsZoneUuid field value if set, zero value otherwise.
func (o *OSReplicationZoneRecord) GetOsZoneUuid() string {
	if o == nil || IsNil(o.OsZoneUuid) {
		var ret string
		return ret
	}
	return *o.OsZoneUuid
}

// GetOsZoneUuidOk returns a tuple with the OsZoneUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSReplicationZoneRecord) GetOsZoneUuidOk() (*string, bool) {
	if o == nil || IsNil(o.OsZoneUuid) {
		return nil, false
	}
	return o.OsZoneUuid, true
}

// HasOsZoneUuid returns a boolean if a field has been set.
func (o *OSReplicationZoneRecord) HasOsZoneUuid() bool {
	if o != nil && !IsNil(o.OsZoneUuid) {
		return true
	}

	return false
}

// SetOsZoneUuid gets a reference to the given string and assigns it to the OsZoneUuid field.
func (o *OSReplicationZoneRecord) SetOsZoneUuid(v string) {
	o.OsZoneUuid = &v
}

// GetReadonly returns the Readonly field value if set, zero value otherwise.
func (o *OSReplicationZoneRecord) GetReadonly() bool {
	if o == nil || IsNil(o.Readonly) {
		var ret bool
		return ret
	}
	return *o.Readonly
}

// GetReadonlyOk returns a tuple with the Readonly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSReplicationZoneRecord) GetReadonlyOk() (*bool, bool) {
	if o == nil || IsNil(o.Readonly) {
		return nil, false
	}
	return o.Readonly, true
}

// HasReadonly returns a boolean if a field has been set.
func (o *OSReplicationZoneRecord) HasReadonly() bool {
	if o != nil && !IsNil(o.Readonly) {
		return true
	}

	return false
}

// SetReadonly gets a reference to the given bool and assigns it to the Readonly field.
func (o *OSReplicationZoneRecord) SetReadonly(v bool) {
	o.Readonly = &v
}

// GetReplicationUuid returns the ReplicationUuid field value if set, zero value otherwise.
func (o *OSReplicationZoneRecord) GetReplicationUuid() string {
	if o == nil || IsNil(o.ReplicationUuid) {
		var ret string
		return ret
	}
	return *o.ReplicationUuid
}

// GetReplicationUuidOk returns a tuple with the ReplicationUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSReplicationZoneRecord) GetReplicationUuidOk() (*string, bool) {
	if o == nil || IsNil(o.ReplicationUuid) {
		return nil, false
	}
	return o.ReplicationUuid, true
}

// HasReplicationUuid returns a boolean if a field has been set.
func (o *OSReplicationZoneRecord) HasReplicationUuid() bool {
	if o != nil && !IsNil(o.ReplicationUuid) {
		return true
	}

	return false
}

// SetReplicationUuid gets a reference to the given string and assigns it to the ReplicationUuid field.
func (o *OSReplicationZoneRecord) SetReplicationUuid(v string) {
	o.ReplicationUuid = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *OSReplicationZoneRecord) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSReplicationZoneRecord) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *OSReplicationZoneRecord) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *OSReplicationZoneRecord) SetStatus(v string) {
	o.Status = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *OSReplicationZoneRecord) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSReplicationZoneRecord) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *OSReplicationZoneRecord) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *OSReplicationZoneRecord) SetUpdate(v time.Time) {
	o.Update = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *OSReplicationZoneRecord) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSReplicationZoneRecord) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *OSReplicationZoneRecord) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *OSReplicationZoneRecord) SetUuid(v string) {
	o.Uuid = &v
}

// GetSamples returns the Samples field value if set, zero value otherwise.
func (o *OSReplicationZoneRecord) GetSamples() []OSReplicationZoneStat {
	if o == nil || IsNil(o.Samples) {
		var ret []OSReplicationZoneStat
		return ret
	}
	return o.Samples
}

// GetSamplesOk returns a tuple with the Samples field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSReplicationZoneRecord) GetSamplesOk() ([]OSReplicationZoneStat, bool) {
	if o == nil || IsNil(o.Samples) {
		return nil, false
	}
	return o.Samples, true
}

// HasSamples returns a boolean if a field has been set.
func (o *OSReplicationZoneRecord) HasSamples() bool {
	if o != nil && !IsNil(o.Samples) {
		return true
	}

	return false
}

// SetSamples gets a reference to the given []OSReplicationZoneStat and assigns it to the Samples field.
func (o *OSReplicationZoneRecord) SetSamples(v []OSReplicationZoneStat) {
	o.Samples = v
}

func (o OSReplicationZoneRecord) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OSReplicationZoneRecord) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.Dirty) {
		toSerialize["dirty"] = o.Dirty
	}
	if !IsNil(o.OsBucket) {
		toSerialize["os_bucket"] = o.OsBucket
	}
	if !IsNil(o.OsBucketOwnerCluster) {
		toSerialize["os_bucket_owner_cluster"] = o.OsBucketOwnerCluster
	}
	if !IsNil(o.OsBucketOwnerZone) {
		toSerialize["os_bucket_owner_zone"] = o.OsBucketOwnerZone
	}
	if !IsNil(o.OsRemotePolicy) {
		toSerialize["os_remote_policy"] = o.OsRemotePolicy
	}
	if !IsNil(o.OsRemotePolicyUuid) {
		toSerialize["os_remote_policy_uuid"] = o.OsRemotePolicyUuid
	}
	if !IsNil(o.OsReplicationPathNum) {
		toSerialize["os_replication_path_num"] = o.OsReplicationPathNum
	}
	if !IsNil(o.OsZone) {
		toSerialize["os_zone"] = o.OsZone
	}
	if !IsNil(o.OsZoneUuid) {
		toSerialize["os_zone_uuid"] = o.OsZoneUuid
	}
	if !IsNil(o.Readonly) {
		toSerialize["readonly"] = o.Readonly
	}
	if !IsNil(o.ReplicationUuid) {
		toSerialize["replication_uuid"] = o.ReplicationUuid
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	if !IsNil(o.Samples) {
		toSerialize["samples"] = o.Samples
	}
	return toSerialize, nil
}

type NullableOSReplicationZoneRecord struct {
	value *OSReplicationZoneRecord
	isSet bool
}

func (v NullableOSReplicationZoneRecord) Get() *OSReplicationZoneRecord {
	return v.value
}

func (v *NullableOSReplicationZoneRecord) Set(val *OSReplicationZoneRecord) {
	v.value = val
	v.isSet = true
}

func (v NullableOSReplicationZoneRecord) IsSet() bool {
	return v.isSet
}

func (v *NullableOSReplicationZoneRecord) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSReplicationZoneRecord(val *OSReplicationZoneRecord) *NullableOSReplicationZoneRecord {
	return &NullableOSReplicationZoneRecord{value: val, isSet: true}
}

func (v NullableOSReplicationZoneRecord) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSReplicationZoneRecord) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


