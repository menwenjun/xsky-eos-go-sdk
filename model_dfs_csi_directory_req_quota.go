/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DfsCSIDirectoryReqQuota type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsCSIDirectoryReqQuota{}

// DfsCSIDirectoryReqQuota struct for DfsCSIDirectoryReqQuota
type DfsCSIDirectoryReqQuota struct {
	// grace time for files soft quota
	FilesGraceTime *int64 `json:"files_grace_time,omitempty"`
	// hard quota of files
	FilesHardQuota *int64 `json:"files_hard_quota,omitempty"`
	// ratio of files
	FilesRatio *float32 `json:"files_ratio,omitempty"`
	// soft quota of files
	FilesSoftQuota *int64 `json:"files_soft_quota,omitempty"`
	// suggest quota of files
	FilesSuggestQuota *int64 `json:"files_suggest_quota,omitempty"`
	// grace time for size soft quota
	SizeGraceTime *int64 `json:"size_grace_time,omitempty"`
	// hard quota of size
	SizeHardQuota *int64 `json:"size_hard_quota,omitempty"`
	// ratio of size
	SizeRatio *float32 `json:"size_ratio,omitempty"`
	// soft quota of size
	SizeSoftQuota *int64 `json:"size_soft_quota,omitempty"`
	// suggest quota of size
	SizeSuggestQuota *int64 `json:"size_suggest_quota,omitempty"`
}

// NewDfsCSIDirectoryReqQuota instantiates a new DfsCSIDirectoryReqQuota object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsCSIDirectoryReqQuota() *DfsCSIDirectoryReqQuota {
	this := DfsCSIDirectoryReqQuota{}
	return &this
}

// NewDfsCSIDirectoryReqQuotaWithDefaults instantiates a new DfsCSIDirectoryReqQuota object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsCSIDirectoryReqQuotaWithDefaults() *DfsCSIDirectoryReqQuota {
	this := DfsCSIDirectoryReqQuota{}
	return &this
}

// GetFilesGraceTime returns the FilesGraceTime field value if set, zero value otherwise.
func (o *DfsCSIDirectoryReqQuota) GetFilesGraceTime() int64 {
	if o == nil || IsNil(o.FilesGraceTime) {
		var ret int64
		return ret
	}
	return *o.FilesGraceTime
}

// GetFilesGraceTimeOk returns a tuple with the FilesGraceTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsCSIDirectoryReqQuota) GetFilesGraceTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.FilesGraceTime) {
		return nil, false
	}
	return o.FilesGraceTime, true
}

// HasFilesGraceTime returns a boolean if a field has been set.
func (o *DfsCSIDirectoryReqQuota) HasFilesGraceTime() bool {
	if o != nil && !IsNil(o.FilesGraceTime) {
		return true
	}

	return false
}

// SetFilesGraceTime gets a reference to the given int64 and assigns it to the FilesGraceTime field.
func (o *DfsCSIDirectoryReqQuota) SetFilesGraceTime(v int64) {
	o.FilesGraceTime = &v
}

// GetFilesHardQuota returns the FilesHardQuota field value if set, zero value otherwise.
func (o *DfsCSIDirectoryReqQuota) GetFilesHardQuota() int64 {
	if o == nil || IsNil(o.FilesHardQuota) {
		var ret int64
		return ret
	}
	return *o.FilesHardQuota
}

// GetFilesHardQuotaOk returns a tuple with the FilesHardQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsCSIDirectoryReqQuota) GetFilesHardQuotaOk() (*int64, bool) {
	if o == nil || IsNil(o.FilesHardQuota) {
		return nil, false
	}
	return o.FilesHardQuota, true
}

// HasFilesHardQuota returns a boolean if a field has been set.
func (o *DfsCSIDirectoryReqQuota) HasFilesHardQuota() bool {
	if o != nil && !IsNil(o.FilesHardQuota) {
		return true
	}

	return false
}

// SetFilesHardQuota gets a reference to the given int64 and assigns it to the FilesHardQuota field.
func (o *DfsCSIDirectoryReqQuota) SetFilesHardQuota(v int64) {
	o.FilesHardQuota = &v
}

// GetFilesRatio returns the FilesRatio field value if set, zero value otherwise.
func (o *DfsCSIDirectoryReqQuota) GetFilesRatio() float32 {
	if o == nil || IsNil(o.FilesRatio) {
		var ret float32
		return ret
	}
	return *o.FilesRatio
}

// GetFilesRatioOk returns a tuple with the FilesRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsCSIDirectoryReqQuota) GetFilesRatioOk() (*float32, bool) {
	if o == nil || IsNil(o.FilesRatio) {
		return nil, false
	}
	return o.FilesRatio, true
}

// HasFilesRatio returns a boolean if a field has been set.
func (o *DfsCSIDirectoryReqQuota) HasFilesRatio() bool {
	if o != nil && !IsNil(o.FilesRatio) {
		return true
	}

	return false
}

// SetFilesRatio gets a reference to the given float32 and assigns it to the FilesRatio field.
func (o *DfsCSIDirectoryReqQuota) SetFilesRatio(v float32) {
	o.FilesRatio = &v
}

// GetFilesSoftQuota returns the FilesSoftQuota field value if set, zero value otherwise.
func (o *DfsCSIDirectoryReqQuota) GetFilesSoftQuota() int64 {
	if o == nil || IsNil(o.FilesSoftQuota) {
		var ret int64
		return ret
	}
	return *o.FilesSoftQuota
}

// GetFilesSoftQuotaOk returns a tuple with the FilesSoftQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsCSIDirectoryReqQuota) GetFilesSoftQuotaOk() (*int64, bool) {
	if o == nil || IsNil(o.FilesSoftQuota) {
		return nil, false
	}
	return o.FilesSoftQuota, true
}

// HasFilesSoftQuota returns a boolean if a field has been set.
func (o *DfsCSIDirectoryReqQuota) HasFilesSoftQuota() bool {
	if o != nil && !IsNil(o.FilesSoftQuota) {
		return true
	}

	return false
}

// SetFilesSoftQuota gets a reference to the given int64 and assigns it to the FilesSoftQuota field.
func (o *DfsCSIDirectoryReqQuota) SetFilesSoftQuota(v int64) {
	o.FilesSoftQuota = &v
}

// GetFilesSuggestQuota returns the FilesSuggestQuota field value if set, zero value otherwise.
func (o *DfsCSIDirectoryReqQuota) GetFilesSuggestQuota() int64 {
	if o == nil || IsNil(o.FilesSuggestQuota) {
		var ret int64
		return ret
	}
	return *o.FilesSuggestQuota
}

// GetFilesSuggestQuotaOk returns a tuple with the FilesSuggestQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsCSIDirectoryReqQuota) GetFilesSuggestQuotaOk() (*int64, bool) {
	if o == nil || IsNil(o.FilesSuggestQuota) {
		return nil, false
	}
	return o.FilesSuggestQuota, true
}

// HasFilesSuggestQuota returns a boolean if a field has been set.
func (o *DfsCSIDirectoryReqQuota) HasFilesSuggestQuota() bool {
	if o != nil && !IsNil(o.FilesSuggestQuota) {
		return true
	}

	return false
}

// SetFilesSuggestQuota gets a reference to the given int64 and assigns it to the FilesSuggestQuota field.
func (o *DfsCSIDirectoryReqQuota) SetFilesSuggestQuota(v int64) {
	o.FilesSuggestQuota = &v
}

// GetSizeGraceTime returns the SizeGraceTime field value if set, zero value otherwise.
func (o *DfsCSIDirectoryReqQuota) GetSizeGraceTime() int64 {
	if o == nil || IsNil(o.SizeGraceTime) {
		var ret int64
		return ret
	}
	return *o.SizeGraceTime
}

// GetSizeGraceTimeOk returns a tuple with the SizeGraceTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsCSIDirectoryReqQuota) GetSizeGraceTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.SizeGraceTime) {
		return nil, false
	}
	return o.SizeGraceTime, true
}

// HasSizeGraceTime returns a boolean if a field has been set.
func (o *DfsCSIDirectoryReqQuota) HasSizeGraceTime() bool {
	if o != nil && !IsNil(o.SizeGraceTime) {
		return true
	}

	return false
}

// SetSizeGraceTime gets a reference to the given int64 and assigns it to the SizeGraceTime field.
func (o *DfsCSIDirectoryReqQuota) SetSizeGraceTime(v int64) {
	o.SizeGraceTime = &v
}

// GetSizeHardQuota returns the SizeHardQuota field value if set, zero value otherwise.
func (o *DfsCSIDirectoryReqQuota) GetSizeHardQuota() int64 {
	if o == nil || IsNil(o.SizeHardQuota) {
		var ret int64
		return ret
	}
	return *o.SizeHardQuota
}

// GetSizeHardQuotaOk returns a tuple with the SizeHardQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsCSIDirectoryReqQuota) GetSizeHardQuotaOk() (*int64, bool) {
	if o == nil || IsNil(o.SizeHardQuota) {
		return nil, false
	}
	return o.SizeHardQuota, true
}

// HasSizeHardQuota returns a boolean if a field has been set.
func (o *DfsCSIDirectoryReqQuota) HasSizeHardQuota() bool {
	if o != nil && !IsNil(o.SizeHardQuota) {
		return true
	}

	return false
}

// SetSizeHardQuota gets a reference to the given int64 and assigns it to the SizeHardQuota field.
func (o *DfsCSIDirectoryReqQuota) SetSizeHardQuota(v int64) {
	o.SizeHardQuota = &v
}

// GetSizeRatio returns the SizeRatio field value if set, zero value otherwise.
func (o *DfsCSIDirectoryReqQuota) GetSizeRatio() float32 {
	if o == nil || IsNil(o.SizeRatio) {
		var ret float32
		return ret
	}
	return *o.SizeRatio
}

// GetSizeRatioOk returns a tuple with the SizeRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsCSIDirectoryReqQuota) GetSizeRatioOk() (*float32, bool) {
	if o == nil || IsNil(o.SizeRatio) {
		return nil, false
	}
	return o.SizeRatio, true
}

// HasSizeRatio returns a boolean if a field has been set.
func (o *DfsCSIDirectoryReqQuota) HasSizeRatio() bool {
	if o != nil && !IsNil(o.SizeRatio) {
		return true
	}

	return false
}

// SetSizeRatio gets a reference to the given float32 and assigns it to the SizeRatio field.
func (o *DfsCSIDirectoryReqQuota) SetSizeRatio(v float32) {
	o.SizeRatio = &v
}

// GetSizeSoftQuota returns the SizeSoftQuota field value if set, zero value otherwise.
func (o *DfsCSIDirectoryReqQuota) GetSizeSoftQuota() int64 {
	if o == nil || IsNil(o.SizeSoftQuota) {
		var ret int64
		return ret
	}
	return *o.SizeSoftQuota
}

// GetSizeSoftQuotaOk returns a tuple with the SizeSoftQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsCSIDirectoryReqQuota) GetSizeSoftQuotaOk() (*int64, bool) {
	if o == nil || IsNil(o.SizeSoftQuota) {
		return nil, false
	}
	return o.SizeSoftQuota, true
}

// HasSizeSoftQuota returns a boolean if a field has been set.
func (o *DfsCSIDirectoryReqQuota) HasSizeSoftQuota() bool {
	if o != nil && !IsNil(o.SizeSoftQuota) {
		return true
	}

	return false
}

// SetSizeSoftQuota gets a reference to the given int64 and assigns it to the SizeSoftQuota field.
func (o *DfsCSIDirectoryReqQuota) SetSizeSoftQuota(v int64) {
	o.SizeSoftQuota = &v
}

// GetSizeSuggestQuota returns the SizeSuggestQuota field value if set, zero value otherwise.
func (o *DfsCSIDirectoryReqQuota) GetSizeSuggestQuota() int64 {
	if o == nil || IsNil(o.SizeSuggestQuota) {
		var ret int64
		return ret
	}
	return *o.SizeSuggestQuota
}

// GetSizeSuggestQuotaOk returns a tuple with the SizeSuggestQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsCSIDirectoryReqQuota) GetSizeSuggestQuotaOk() (*int64, bool) {
	if o == nil || IsNil(o.SizeSuggestQuota) {
		return nil, false
	}
	return o.SizeSuggestQuota, true
}

// HasSizeSuggestQuota returns a boolean if a field has been set.
func (o *DfsCSIDirectoryReqQuota) HasSizeSuggestQuota() bool {
	if o != nil && !IsNil(o.SizeSuggestQuota) {
		return true
	}

	return false
}

// SetSizeSuggestQuota gets a reference to the given int64 and assigns it to the SizeSuggestQuota field.
func (o *DfsCSIDirectoryReqQuota) SetSizeSuggestQuota(v int64) {
	o.SizeSuggestQuota = &v
}

func (o DfsCSIDirectoryReqQuota) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsCSIDirectoryReqQuota) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FilesGraceTime) {
		toSerialize["files_grace_time"] = o.FilesGraceTime
	}
	if !IsNil(o.FilesHardQuota) {
		toSerialize["files_hard_quota"] = o.FilesHardQuota
	}
	if !IsNil(o.FilesRatio) {
		toSerialize["files_ratio"] = o.FilesRatio
	}
	if !IsNil(o.FilesSoftQuota) {
		toSerialize["files_soft_quota"] = o.FilesSoftQuota
	}
	if !IsNil(o.FilesSuggestQuota) {
		toSerialize["files_suggest_quota"] = o.FilesSuggestQuota
	}
	if !IsNil(o.SizeGraceTime) {
		toSerialize["size_grace_time"] = o.SizeGraceTime
	}
	if !IsNil(o.SizeHardQuota) {
		toSerialize["size_hard_quota"] = o.SizeHardQuota
	}
	if !IsNil(o.SizeRatio) {
		toSerialize["size_ratio"] = o.SizeRatio
	}
	if !IsNil(o.SizeSoftQuota) {
		toSerialize["size_soft_quota"] = o.SizeSoftQuota
	}
	if !IsNil(o.SizeSuggestQuota) {
		toSerialize["size_suggest_quota"] = o.SizeSuggestQuota
	}
	return toSerialize, nil
}

type NullableDfsCSIDirectoryReqQuota struct {
	value *DfsCSIDirectoryReqQuota
	isSet bool
}

func (v NullableDfsCSIDirectoryReqQuota) Get() *DfsCSIDirectoryReqQuota {
	return v.value
}

func (v *NullableDfsCSIDirectoryReqQuota) Set(val *DfsCSIDirectoryReqQuota) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsCSIDirectoryReqQuota) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsCSIDirectoryReqQuota) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsCSIDirectoryReqQuota(val *DfsCSIDirectoryReqQuota) *NullableDfsCSIDirectoryReqQuota {
	return &NullableDfsCSIDirectoryReqQuota{value: val, isSet: true}
}

func (v NullableDfsCSIDirectoryReqQuota) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsCSIDirectoryReqQuota) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


