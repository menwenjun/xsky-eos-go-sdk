/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OSBucketLoggingGrant type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OSBucketLoggingGrant{}

// OSBucketLoggingGrant OSBucketLoggingGrant defines logging permissions of os bucket
type OSBucketLoggingGrant struct {
	OsUserEmail *string `json:"os_user_email,omitempty"`
	OsUserName *string `json:"os_user_name,omitempty"`
	Permission *string `json:"permission,omitempty"`
	Uri *string `json:"uri,omitempty"`
}

// NewOSBucketLoggingGrant instantiates a new OSBucketLoggingGrant object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOSBucketLoggingGrant() *OSBucketLoggingGrant {
	this := OSBucketLoggingGrant{}
	return &this
}

// NewOSBucketLoggingGrantWithDefaults instantiates a new OSBucketLoggingGrant object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOSBucketLoggingGrantWithDefaults() *OSBucketLoggingGrant {
	this := OSBucketLoggingGrant{}
	return &this
}

// GetOsUserEmail returns the OsUserEmail field value if set, zero value otherwise.
func (o *OSBucketLoggingGrant) GetOsUserEmail() string {
	if o == nil || IsNil(o.OsUserEmail) {
		var ret string
		return ret
	}
	return *o.OsUserEmail
}

// GetOsUserEmailOk returns a tuple with the OsUserEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBucketLoggingGrant) GetOsUserEmailOk() (*string, bool) {
	if o == nil || IsNil(o.OsUserEmail) {
		return nil, false
	}
	return o.OsUserEmail, true
}

// HasOsUserEmail returns a boolean if a field has been set.
func (o *OSBucketLoggingGrant) HasOsUserEmail() bool {
	if o != nil && !IsNil(o.OsUserEmail) {
		return true
	}

	return false
}

// SetOsUserEmail gets a reference to the given string and assigns it to the OsUserEmail field.
func (o *OSBucketLoggingGrant) SetOsUserEmail(v string) {
	o.OsUserEmail = &v
}

// GetOsUserName returns the OsUserName field value if set, zero value otherwise.
func (o *OSBucketLoggingGrant) GetOsUserName() string {
	if o == nil || IsNil(o.OsUserName) {
		var ret string
		return ret
	}
	return *o.OsUserName
}

// GetOsUserNameOk returns a tuple with the OsUserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBucketLoggingGrant) GetOsUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.OsUserName) {
		return nil, false
	}
	return o.OsUserName, true
}

// HasOsUserName returns a boolean if a field has been set.
func (o *OSBucketLoggingGrant) HasOsUserName() bool {
	if o != nil && !IsNil(o.OsUserName) {
		return true
	}

	return false
}

// SetOsUserName gets a reference to the given string and assigns it to the OsUserName field.
func (o *OSBucketLoggingGrant) SetOsUserName(v string) {
	o.OsUserName = &v
}

// GetPermission returns the Permission field value if set, zero value otherwise.
func (o *OSBucketLoggingGrant) GetPermission() string {
	if o == nil || IsNil(o.Permission) {
		var ret string
		return ret
	}
	return *o.Permission
}

// GetPermissionOk returns a tuple with the Permission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBucketLoggingGrant) GetPermissionOk() (*string, bool) {
	if o == nil || IsNil(o.Permission) {
		return nil, false
	}
	return o.Permission, true
}

// HasPermission returns a boolean if a field has been set.
func (o *OSBucketLoggingGrant) HasPermission() bool {
	if o != nil && !IsNil(o.Permission) {
		return true
	}

	return false
}

// SetPermission gets a reference to the given string and assigns it to the Permission field.
func (o *OSBucketLoggingGrant) SetPermission(v string) {
	o.Permission = &v
}

// GetUri returns the Uri field value if set, zero value otherwise.
func (o *OSBucketLoggingGrant) GetUri() string {
	if o == nil || IsNil(o.Uri) {
		var ret string
		return ret
	}
	return *o.Uri
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBucketLoggingGrant) GetUriOk() (*string, bool) {
	if o == nil || IsNil(o.Uri) {
		return nil, false
	}
	return o.Uri, true
}

// HasUri returns a boolean if a field has been set.
func (o *OSBucketLoggingGrant) HasUri() bool {
	if o != nil && !IsNil(o.Uri) {
		return true
	}

	return false
}

// SetUri gets a reference to the given string and assigns it to the Uri field.
func (o *OSBucketLoggingGrant) SetUri(v string) {
	o.Uri = &v
}

func (o OSBucketLoggingGrant) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OSBucketLoggingGrant) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OsUserEmail) {
		toSerialize["os_user_email"] = o.OsUserEmail
	}
	if !IsNil(o.OsUserName) {
		toSerialize["os_user_name"] = o.OsUserName
	}
	if !IsNil(o.Permission) {
		toSerialize["permission"] = o.Permission
	}
	if !IsNil(o.Uri) {
		toSerialize["uri"] = o.Uri
	}
	return toSerialize, nil
}

type NullableOSBucketLoggingGrant struct {
	value *OSBucketLoggingGrant
	isSet bool
}

func (v NullableOSBucketLoggingGrant) Get() *OSBucketLoggingGrant {
	return v.value
}

func (v *NullableOSBucketLoggingGrant) Set(val *OSBucketLoggingGrant) {
	v.value = val
	v.isSet = true
}

func (v NullableOSBucketLoggingGrant) IsSet() bool {
	return v.isSet
}

func (v *NullableOSBucketLoggingGrant) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSBucketLoggingGrant(val *OSBucketLoggingGrant) *NullableOSBucketLoggingGrant {
	return &NullableOSBucketLoggingGrant{value: val, isSet: true}
}

func (v NullableOSBucketLoggingGrant) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSBucketLoggingGrant) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


