/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DfsQuotaUpdateReqQuota type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsQuotaUpdateReqQuota{}

// DfsQuotaUpdateReqQuota struct for DfsQuotaUpdateReqQuota
type DfsQuotaUpdateReqQuota struct {
	// grace time for files soft quota
	FilesGraceTime int64 `json:"files_grace_time"`
	// hard quota of files
	FilesHardQuota int64 `json:"files_hard_quota"`
	// ratio of files
	FilesRatio *float32 `json:"files_ratio,omitempty"`
	// soft quota of files
	FilesSoftQuota int64 `json:"files_soft_quota"`
	// suggest quota of files
	FilesSuggestQuota int64 `json:"files_suggest_quota"`
	// grace time for size soft quota
	SizeGraceTime int64 `json:"size_grace_time"`
	// hard quota of size
	SizeHardQuota int64 `json:"size_hard_quota"`
	// ratio of size
	SizeRatio *float32 `json:"size_ratio,omitempty"`
	// soft quota of size
	SizeSoftQuota int64 `json:"size_soft_quota"`
	// suggest quota of size
	SizeSuggestQuota int64 `json:"size_suggest_quota"`
}

type _DfsQuotaUpdateReqQuota DfsQuotaUpdateReqQuota

// NewDfsQuotaUpdateReqQuota instantiates a new DfsQuotaUpdateReqQuota object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsQuotaUpdateReqQuota(filesGraceTime int64, filesHardQuota int64, filesSoftQuota int64, filesSuggestQuota int64, sizeGraceTime int64, sizeHardQuota int64, sizeSoftQuota int64, sizeSuggestQuota int64) *DfsQuotaUpdateReqQuota {
	this := DfsQuotaUpdateReqQuota{}
	this.FilesGraceTime = filesGraceTime
	this.FilesHardQuota = filesHardQuota
	this.FilesSoftQuota = filesSoftQuota
	this.FilesSuggestQuota = filesSuggestQuota
	this.SizeGraceTime = sizeGraceTime
	this.SizeHardQuota = sizeHardQuota
	this.SizeSoftQuota = sizeSoftQuota
	this.SizeSuggestQuota = sizeSuggestQuota
	return &this
}

// NewDfsQuotaUpdateReqQuotaWithDefaults instantiates a new DfsQuotaUpdateReqQuota object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsQuotaUpdateReqQuotaWithDefaults() *DfsQuotaUpdateReqQuota {
	this := DfsQuotaUpdateReqQuota{}
	return &this
}

// GetFilesGraceTime returns the FilesGraceTime field value
func (o *DfsQuotaUpdateReqQuota) GetFilesGraceTime() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.FilesGraceTime
}

// GetFilesGraceTimeOk returns a tuple with the FilesGraceTime field value
// and a boolean to check if the value has been set.
func (o *DfsQuotaUpdateReqQuota) GetFilesGraceTimeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FilesGraceTime, true
}

// SetFilesGraceTime sets field value
func (o *DfsQuotaUpdateReqQuota) SetFilesGraceTime(v int64) {
	o.FilesGraceTime = v
}

// GetFilesHardQuota returns the FilesHardQuota field value
func (o *DfsQuotaUpdateReqQuota) GetFilesHardQuota() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.FilesHardQuota
}

// GetFilesHardQuotaOk returns a tuple with the FilesHardQuota field value
// and a boolean to check if the value has been set.
func (o *DfsQuotaUpdateReqQuota) GetFilesHardQuotaOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FilesHardQuota, true
}

// SetFilesHardQuota sets field value
func (o *DfsQuotaUpdateReqQuota) SetFilesHardQuota(v int64) {
	o.FilesHardQuota = v
}

// GetFilesRatio returns the FilesRatio field value if set, zero value otherwise.
func (o *DfsQuotaUpdateReqQuota) GetFilesRatio() float32 {
	if o == nil || IsNil(o.FilesRatio) {
		var ret float32
		return ret
	}
	return *o.FilesRatio
}

// GetFilesRatioOk returns a tuple with the FilesRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQuotaUpdateReqQuota) GetFilesRatioOk() (*float32, bool) {
	if o == nil || IsNil(o.FilesRatio) {
		return nil, false
	}
	return o.FilesRatio, true
}

// HasFilesRatio returns a boolean if a field has been set.
func (o *DfsQuotaUpdateReqQuota) HasFilesRatio() bool {
	if o != nil && !IsNil(o.FilesRatio) {
		return true
	}

	return false
}

// SetFilesRatio gets a reference to the given float32 and assigns it to the FilesRatio field.
func (o *DfsQuotaUpdateReqQuota) SetFilesRatio(v float32) {
	o.FilesRatio = &v
}

// GetFilesSoftQuota returns the FilesSoftQuota field value
func (o *DfsQuotaUpdateReqQuota) GetFilesSoftQuota() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.FilesSoftQuota
}

// GetFilesSoftQuotaOk returns a tuple with the FilesSoftQuota field value
// and a boolean to check if the value has been set.
func (o *DfsQuotaUpdateReqQuota) GetFilesSoftQuotaOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FilesSoftQuota, true
}

// SetFilesSoftQuota sets field value
func (o *DfsQuotaUpdateReqQuota) SetFilesSoftQuota(v int64) {
	o.FilesSoftQuota = v
}

// GetFilesSuggestQuota returns the FilesSuggestQuota field value
func (o *DfsQuotaUpdateReqQuota) GetFilesSuggestQuota() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.FilesSuggestQuota
}

// GetFilesSuggestQuotaOk returns a tuple with the FilesSuggestQuota field value
// and a boolean to check if the value has been set.
func (o *DfsQuotaUpdateReqQuota) GetFilesSuggestQuotaOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FilesSuggestQuota, true
}

// SetFilesSuggestQuota sets field value
func (o *DfsQuotaUpdateReqQuota) SetFilesSuggestQuota(v int64) {
	o.FilesSuggestQuota = v
}

// GetSizeGraceTime returns the SizeGraceTime field value
func (o *DfsQuotaUpdateReqQuota) GetSizeGraceTime() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.SizeGraceTime
}

// GetSizeGraceTimeOk returns a tuple with the SizeGraceTime field value
// and a boolean to check if the value has been set.
func (o *DfsQuotaUpdateReqQuota) GetSizeGraceTimeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SizeGraceTime, true
}

// SetSizeGraceTime sets field value
func (o *DfsQuotaUpdateReqQuota) SetSizeGraceTime(v int64) {
	o.SizeGraceTime = v
}

// GetSizeHardQuota returns the SizeHardQuota field value
func (o *DfsQuotaUpdateReqQuota) GetSizeHardQuota() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.SizeHardQuota
}

// GetSizeHardQuotaOk returns a tuple with the SizeHardQuota field value
// and a boolean to check if the value has been set.
func (o *DfsQuotaUpdateReqQuota) GetSizeHardQuotaOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SizeHardQuota, true
}

// SetSizeHardQuota sets field value
func (o *DfsQuotaUpdateReqQuota) SetSizeHardQuota(v int64) {
	o.SizeHardQuota = v
}

// GetSizeRatio returns the SizeRatio field value if set, zero value otherwise.
func (o *DfsQuotaUpdateReqQuota) GetSizeRatio() float32 {
	if o == nil || IsNil(o.SizeRatio) {
		var ret float32
		return ret
	}
	return *o.SizeRatio
}

// GetSizeRatioOk returns a tuple with the SizeRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQuotaUpdateReqQuota) GetSizeRatioOk() (*float32, bool) {
	if o == nil || IsNil(o.SizeRatio) {
		return nil, false
	}
	return o.SizeRatio, true
}

// HasSizeRatio returns a boolean if a field has been set.
func (o *DfsQuotaUpdateReqQuota) HasSizeRatio() bool {
	if o != nil && !IsNil(o.SizeRatio) {
		return true
	}

	return false
}

// SetSizeRatio gets a reference to the given float32 and assigns it to the SizeRatio field.
func (o *DfsQuotaUpdateReqQuota) SetSizeRatio(v float32) {
	o.SizeRatio = &v
}

// GetSizeSoftQuota returns the SizeSoftQuota field value
func (o *DfsQuotaUpdateReqQuota) GetSizeSoftQuota() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.SizeSoftQuota
}

// GetSizeSoftQuotaOk returns a tuple with the SizeSoftQuota field value
// and a boolean to check if the value has been set.
func (o *DfsQuotaUpdateReqQuota) GetSizeSoftQuotaOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SizeSoftQuota, true
}

// SetSizeSoftQuota sets field value
func (o *DfsQuotaUpdateReqQuota) SetSizeSoftQuota(v int64) {
	o.SizeSoftQuota = v
}

// GetSizeSuggestQuota returns the SizeSuggestQuota field value
func (o *DfsQuotaUpdateReqQuota) GetSizeSuggestQuota() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.SizeSuggestQuota
}

// GetSizeSuggestQuotaOk returns a tuple with the SizeSuggestQuota field value
// and a boolean to check if the value has been set.
func (o *DfsQuotaUpdateReqQuota) GetSizeSuggestQuotaOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SizeSuggestQuota, true
}

// SetSizeSuggestQuota sets field value
func (o *DfsQuotaUpdateReqQuota) SetSizeSuggestQuota(v int64) {
	o.SizeSuggestQuota = v
}

func (o DfsQuotaUpdateReqQuota) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsQuotaUpdateReqQuota) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["files_grace_time"] = o.FilesGraceTime
	toSerialize["files_hard_quota"] = o.FilesHardQuota
	if !IsNil(o.FilesRatio) {
		toSerialize["files_ratio"] = o.FilesRatio
	}
	toSerialize["files_soft_quota"] = o.FilesSoftQuota
	toSerialize["files_suggest_quota"] = o.FilesSuggestQuota
	toSerialize["size_grace_time"] = o.SizeGraceTime
	toSerialize["size_hard_quota"] = o.SizeHardQuota
	if !IsNil(o.SizeRatio) {
		toSerialize["size_ratio"] = o.SizeRatio
	}
	toSerialize["size_soft_quota"] = o.SizeSoftQuota
	toSerialize["size_suggest_quota"] = o.SizeSuggestQuota
	return toSerialize, nil
}

func (o *DfsQuotaUpdateReqQuota) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"files_grace_time",
		"files_hard_quota",
		"files_soft_quota",
		"files_suggest_quota",
		"size_grace_time",
		"size_hard_quota",
		"size_soft_quota",
		"size_suggest_quota",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDfsQuotaUpdateReqQuota := _DfsQuotaUpdateReqQuota{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDfsQuotaUpdateReqQuota)

	if err != nil {
		return err
	}

	*o = DfsQuotaUpdateReqQuota(varDfsQuotaUpdateReqQuota)

	return err
}

type NullableDfsQuotaUpdateReqQuota struct {
	value *DfsQuotaUpdateReqQuota
	isSet bool
}

func (v NullableDfsQuotaUpdateReqQuota) Get() *DfsQuotaUpdateReqQuota {
	return v.value
}

func (v *NullableDfsQuotaUpdateReqQuota) Set(val *DfsQuotaUpdateReqQuota) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsQuotaUpdateReqQuota) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsQuotaUpdateReqQuota) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsQuotaUpdateReqQuota(val *DfsQuotaUpdateReqQuota) *NullableDfsQuotaUpdateReqQuota {
	return &NullableDfsQuotaUpdateReqQuota{value: val, isSet: true}
}

func (v NullableDfsQuotaUpdateReqQuota) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsQuotaUpdateReqQuota) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


