/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SecuritySSHConfigReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecuritySSHConfigReq{}

// SecuritySSHConfigReq struct for SecuritySSHConfigReq
type SecuritySSHConfigReq struct {
	SshConfig *SecuritySSHConfigReqConfig `json:"ssh_config,omitempty"`
}

// NewSecuritySSHConfigReq instantiates a new SecuritySSHConfigReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecuritySSHConfigReq() *SecuritySSHConfigReq {
	this := SecuritySSHConfigReq{}
	return &this
}

// NewSecuritySSHConfigReqWithDefaults instantiates a new SecuritySSHConfigReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecuritySSHConfigReqWithDefaults() *SecuritySSHConfigReq {
	this := SecuritySSHConfigReq{}
	return &this
}

// GetSshConfig returns the SshConfig field value if set, zero value otherwise.
func (o *SecuritySSHConfigReq) GetSshConfig() SecuritySSHConfigReqConfig {
	if o == nil || IsNil(o.SshConfig) {
		var ret SecuritySSHConfigReqConfig
		return ret
	}
	return *o.SshConfig
}

// GetSshConfigOk returns a tuple with the SshConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySSHConfigReq) GetSshConfigOk() (*SecuritySSHConfigReqConfig, bool) {
	if o == nil || IsNil(o.SshConfig) {
		return nil, false
	}
	return o.SshConfig, true
}

// HasSshConfig returns a boolean if a field has been set.
func (o *SecuritySSHConfigReq) HasSshConfig() bool {
	if o != nil && !IsNil(o.SshConfig) {
		return true
	}

	return false
}

// SetSshConfig gets a reference to the given SecuritySSHConfigReqConfig and assigns it to the SshConfig field.
func (o *SecuritySSHConfigReq) SetSshConfig(v SecuritySSHConfigReqConfig) {
	o.SshConfig = &v
}

func (o SecuritySSHConfigReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecuritySSHConfigReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SshConfig) {
		toSerialize["ssh_config"] = o.SshConfig
	}
	return toSerialize, nil
}

type NullableSecuritySSHConfigReq struct {
	value *SecuritySSHConfigReq
	isSet bool
}

func (v NullableSecuritySSHConfigReq) Get() *SecuritySSHConfigReq {
	return v.value
}

func (v *NullableSecuritySSHConfigReq) Set(val *SecuritySSHConfigReq) {
	v.value = val
	v.isSet = true
}

func (v NullableSecuritySSHConfigReq) IsSet() bool {
	return v.isSet
}

func (v *NullableSecuritySSHConfigReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecuritySSHConfigReq(val *SecuritySSHConfigReq) *NullableSecuritySSHConfigReq {
	return &NullableSecuritySSHConfigReq{value: val, isSet: true}
}

func (v NullableSecuritySSHConfigReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecuritySSHConfigReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


