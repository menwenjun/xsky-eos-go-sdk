/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the SecuritySSHValidation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecuritySSHValidation{}

// SecuritySSHValidation SecuritySSHValidation is the model of ssh validation
type SecuritySSHValidation struct {
	Create *time.Time `json:"create,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Message *string `json:"message,omitempty"`
	PermitRootLogin *bool `json:"permit_root_login,omitempty"`
	Port *int64 `json:"port,omitempty"`
	PubKeyAuthentication *bool `json:"pub_key_authentication,omitempty"`
	Status *string `json:"status,omitempty"`
	Timeout *int64 `json:"timeout,omitempty"`
	Update *time.Time `json:"update,omitempty"`
}

// NewSecuritySSHValidation instantiates a new SecuritySSHValidation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecuritySSHValidation() *SecuritySSHValidation {
	this := SecuritySSHValidation{}
	return &this
}

// NewSecuritySSHValidationWithDefaults instantiates a new SecuritySSHValidation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecuritySSHValidationWithDefaults() *SecuritySSHValidation {
	this := SecuritySSHValidation{}
	return &this
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *SecuritySSHValidation) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySSHValidation) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *SecuritySSHValidation) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *SecuritySSHValidation) SetCreate(v time.Time) {
	o.Create = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SecuritySSHValidation) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySSHValidation) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SecuritySSHValidation) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *SecuritySSHValidation) SetId(v int64) {
	o.Id = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *SecuritySSHValidation) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySSHValidation) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *SecuritySSHValidation) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *SecuritySSHValidation) SetMessage(v string) {
	o.Message = &v
}

// GetPermitRootLogin returns the PermitRootLogin field value if set, zero value otherwise.
func (o *SecuritySSHValidation) GetPermitRootLogin() bool {
	if o == nil || IsNil(o.PermitRootLogin) {
		var ret bool
		return ret
	}
	return *o.PermitRootLogin
}

// GetPermitRootLoginOk returns a tuple with the PermitRootLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySSHValidation) GetPermitRootLoginOk() (*bool, bool) {
	if o == nil || IsNil(o.PermitRootLogin) {
		return nil, false
	}
	return o.PermitRootLogin, true
}

// HasPermitRootLogin returns a boolean if a field has been set.
func (o *SecuritySSHValidation) HasPermitRootLogin() bool {
	if o != nil && !IsNil(o.PermitRootLogin) {
		return true
	}

	return false
}

// SetPermitRootLogin gets a reference to the given bool and assigns it to the PermitRootLogin field.
func (o *SecuritySSHValidation) SetPermitRootLogin(v bool) {
	o.PermitRootLogin = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *SecuritySSHValidation) GetPort() int64 {
	if o == nil || IsNil(o.Port) {
		var ret int64
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySSHValidation) GetPortOk() (*int64, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *SecuritySSHValidation) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int64 and assigns it to the Port field.
func (o *SecuritySSHValidation) SetPort(v int64) {
	o.Port = &v
}

// GetPubKeyAuthentication returns the PubKeyAuthentication field value if set, zero value otherwise.
func (o *SecuritySSHValidation) GetPubKeyAuthentication() bool {
	if o == nil || IsNil(o.PubKeyAuthentication) {
		var ret bool
		return ret
	}
	return *o.PubKeyAuthentication
}

// GetPubKeyAuthenticationOk returns a tuple with the PubKeyAuthentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySSHValidation) GetPubKeyAuthenticationOk() (*bool, bool) {
	if o == nil || IsNil(o.PubKeyAuthentication) {
		return nil, false
	}
	return o.PubKeyAuthentication, true
}

// HasPubKeyAuthentication returns a boolean if a field has been set.
func (o *SecuritySSHValidation) HasPubKeyAuthentication() bool {
	if o != nil && !IsNil(o.PubKeyAuthentication) {
		return true
	}

	return false
}

// SetPubKeyAuthentication gets a reference to the given bool and assigns it to the PubKeyAuthentication field.
func (o *SecuritySSHValidation) SetPubKeyAuthentication(v bool) {
	o.PubKeyAuthentication = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SecuritySSHValidation) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySSHValidation) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SecuritySSHValidation) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *SecuritySSHValidation) SetStatus(v string) {
	o.Status = &v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *SecuritySSHValidation) GetTimeout() int64 {
	if o == nil || IsNil(o.Timeout) {
		var ret int64
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySSHValidation) GetTimeoutOk() (*int64, bool) {
	if o == nil || IsNil(o.Timeout) {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *SecuritySSHValidation) HasTimeout() bool {
	if o != nil && !IsNil(o.Timeout) {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given int64 and assigns it to the Timeout field.
func (o *SecuritySSHValidation) SetTimeout(v int64) {
	o.Timeout = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *SecuritySSHValidation) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySSHValidation) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *SecuritySSHValidation) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *SecuritySSHValidation) SetUpdate(v time.Time) {
	o.Update = &v
}

func (o SecuritySSHValidation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecuritySSHValidation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.PermitRootLogin) {
		toSerialize["permit_root_login"] = o.PermitRootLogin
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.PubKeyAuthentication) {
		toSerialize["pub_key_authentication"] = o.PubKeyAuthentication
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Timeout) {
		toSerialize["timeout"] = o.Timeout
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	return toSerialize, nil
}

type NullableSecuritySSHValidation struct {
	value *SecuritySSHValidation
	isSet bool
}

func (v NullableSecuritySSHValidation) Get() *SecuritySSHValidation {
	return v.value
}

func (v *NullableSecuritySSHValidation) Set(val *SecuritySSHValidation) {
	v.value = val
	v.isSet = true
}

func (v NullableSecuritySSHValidation) IsSet() bool {
	return v.isSet
}

func (v *NullableSecuritySSHValidation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecuritySSHValidation(val *SecuritySSHValidation) *NullableSecuritySSHValidation {
	return &NullableSecuritySSHValidation{value: val, isSet: true}
}

func (v NullableSecuritySSHValidation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecuritySSHValidation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


