/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PortMapPair type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortMapPair{}

// PortMapPair PortMapPair defines a pair of port used to map to VM for now, it only support tcp protocol
type PortMapPair struct {
	DestPort *int64 `json:"dest_port,omitempty"`
	Protocol *string `json:"protocol,omitempty"`
	SrcAddr *string `json:"src_addr,omitempty"`
	SrcPort *int64 `json:"src_port,omitempty"`
}

// NewPortMapPair instantiates a new PortMapPair object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortMapPair() *PortMapPair {
	this := PortMapPair{}
	return &this
}

// NewPortMapPairWithDefaults instantiates a new PortMapPair object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortMapPairWithDefaults() *PortMapPair {
	this := PortMapPair{}
	return &this
}

// GetDestPort returns the DestPort field value if set, zero value otherwise.
func (o *PortMapPair) GetDestPort() int64 {
	if o == nil || IsNil(o.DestPort) {
		var ret int64
		return ret
	}
	return *o.DestPort
}

// GetDestPortOk returns a tuple with the DestPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortMapPair) GetDestPortOk() (*int64, bool) {
	if o == nil || IsNil(o.DestPort) {
		return nil, false
	}
	return o.DestPort, true
}

// HasDestPort returns a boolean if a field has been set.
func (o *PortMapPair) HasDestPort() bool {
	if o != nil && !IsNil(o.DestPort) {
		return true
	}

	return false
}

// SetDestPort gets a reference to the given int64 and assigns it to the DestPort field.
func (o *PortMapPair) SetDestPort(v int64) {
	o.DestPort = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *PortMapPair) GetProtocol() string {
	if o == nil || IsNil(o.Protocol) {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortMapPair) GetProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.Protocol) {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *PortMapPair) HasProtocol() bool {
	if o != nil && !IsNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *PortMapPair) SetProtocol(v string) {
	o.Protocol = &v
}

// GetSrcAddr returns the SrcAddr field value if set, zero value otherwise.
func (o *PortMapPair) GetSrcAddr() string {
	if o == nil || IsNil(o.SrcAddr) {
		var ret string
		return ret
	}
	return *o.SrcAddr
}

// GetSrcAddrOk returns a tuple with the SrcAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortMapPair) GetSrcAddrOk() (*string, bool) {
	if o == nil || IsNil(o.SrcAddr) {
		return nil, false
	}
	return o.SrcAddr, true
}

// HasSrcAddr returns a boolean if a field has been set.
func (o *PortMapPair) HasSrcAddr() bool {
	if o != nil && !IsNil(o.SrcAddr) {
		return true
	}

	return false
}

// SetSrcAddr gets a reference to the given string and assigns it to the SrcAddr field.
func (o *PortMapPair) SetSrcAddr(v string) {
	o.SrcAddr = &v
}

// GetSrcPort returns the SrcPort field value if set, zero value otherwise.
func (o *PortMapPair) GetSrcPort() int64 {
	if o == nil || IsNil(o.SrcPort) {
		var ret int64
		return ret
	}
	return *o.SrcPort
}

// GetSrcPortOk returns a tuple with the SrcPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortMapPair) GetSrcPortOk() (*int64, bool) {
	if o == nil || IsNil(o.SrcPort) {
		return nil, false
	}
	return o.SrcPort, true
}

// HasSrcPort returns a boolean if a field has been set.
func (o *PortMapPair) HasSrcPort() bool {
	if o != nil && !IsNil(o.SrcPort) {
		return true
	}

	return false
}

// SetSrcPort gets a reference to the given int64 and assigns it to the SrcPort field.
func (o *PortMapPair) SetSrcPort(v int64) {
	o.SrcPort = &v
}

func (o PortMapPair) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortMapPair) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DestPort) {
		toSerialize["dest_port"] = o.DestPort
	}
	if !IsNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	if !IsNil(o.SrcAddr) {
		toSerialize["src_addr"] = o.SrcAddr
	}
	if !IsNil(o.SrcPort) {
		toSerialize["src_port"] = o.SrcPort
	}
	return toSerialize, nil
}

type NullablePortMapPair struct {
	value *PortMapPair
	isSet bool
}

func (v NullablePortMapPair) Get() *PortMapPair {
	return v.value
}

func (v *NullablePortMapPair) Set(val *PortMapPair) {
	v.value = val
	v.isSet = true
}

func (v NullablePortMapPair) IsSet() bool {
	return v.isSet
}

func (v *NullablePortMapPair) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortMapPair(val *PortMapPair) *NullablePortMapPair {
	return &NullablePortMapPair{value: val, isSet: true}
}

func (v NullablePortMapPair) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortMapPair) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


