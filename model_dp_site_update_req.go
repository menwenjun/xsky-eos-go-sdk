/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DpSiteUpdateReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DpSiteUpdateReq{}

// DpSiteUpdateReq struct for DpSiteUpdateReq
type DpSiteUpdateReq struct {
	DpSite *DpSiteUpdateReqSite `json:"dp_site,omitempty"`
}

// NewDpSiteUpdateReq instantiates a new DpSiteUpdateReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDpSiteUpdateReq() *DpSiteUpdateReq {
	this := DpSiteUpdateReq{}
	return &this
}

// NewDpSiteUpdateReqWithDefaults instantiates a new DpSiteUpdateReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDpSiteUpdateReqWithDefaults() *DpSiteUpdateReq {
	this := DpSiteUpdateReq{}
	return &this
}

// GetDpSite returns the DpSite field value if set, zero value otherwise.
func (o *DpSiteUpdateReq) GetDpSite() DpSiteUpdateReqSite {
	if o == nil || IsNil(o.DpSite) {
		var ret DpSiteUpdateReqSite
		return ret
	}
	return *o.DpSite
}

// GetDpSiteOk returns a tuple with the DpSite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpSiteUpdateReq) GetDpSiteOk() (*DpSiteUpdateReqSite, bool) {
	if o == nil || IsNil(o.DpSite) {
		return nil, false
	}
	return o.DpSite, true
}

// HasDpSite returns a boolean if a field has been set.
func (o *DpSiteUpdateReq) HasDpSite() bool {
	if o != nil && !IsNil(o.DpSite) {
		return true
	}

	return false
}

// SetDpSite gets a reference to the given DpSiteUpdateReqSite and assigns it to the DpSite field.
func (o *DpSiteUpdateReq) SetDpSite(v DpSiteUpdateReqSite) {
	o.DpSite = &v
}

func (o DpSiteUpdateReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DpSiteUpdateReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DpSite) {
		toSerialize["dp_site"] = o.DpSite
	}
	return toSerialize, nil
}

type NullableDpSiteUpdateReq struct {
	value *DpSiteUpdateReq
	isSet bool
}

func (v NullableDpSiteUpdateReq) Get() *DpSiteUpdateReq {
	return v.value
}

func (v *NullableDpSiteUpdateReq) Set(val *DpSiteUpdateReq) {
	v.value = val
	v.isSet = true
}

func (v NullableDpSiteUpdateReq) IsSet() bool {
	return v.isSet
}

func (v *NullableDpSiteUpdateReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDpSiteUpdateReq(val *DpSiteUpdateReq) *NullableDpSiteUpdateReq {
	return &NullableDpSiteUpdateReq{value: val, isSet: true}
}

func (v NullableDpSiteUpdateReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDpSiteUpdateReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


