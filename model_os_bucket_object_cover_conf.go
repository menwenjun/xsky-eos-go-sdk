/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OSBucketObjectCoverConf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OSBucketObjectCoverConf{}

// OSBucketObjectCoverConf OSBucketObjectCoverConf defines configs of object cover mode
type OSBucketObjectCoverConf struct {
	CoverQuota *bool `json:"cover_quota,omitempty"`
	ExpirationSeconds *int64 `json:"expiration_seconds,omitempty"`
}

// NewOSBucketObjectCoverConf instantiates a new OSBucketObjectCoverConf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOSBucketObjectCoverConf() *OSBucketObjectCoverConf {
	this := OSBucketObjectCoverConf{}
	return &this
}

// NewOSBucketObjectCoverConfWithDefaults instantiates a new OSBucketObjectCoverConf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOSBucketObjectCoverConfWithDefaults() *OSBucketObjectCoverConf {
	this := OSBucketObjectCoverConf{}
	return &this
}

// GetCoverQuota returns the CoverQuota field value if set, zero value otherwise.
func (o *OSBucketObjectCoverConf) GetCoverQuota() bool {
	if o == nil || IsNil(o.CoverQuota) {
		var ret bool
		return ret
	}
	return *o.CoverQuota
}

// GetCoverQuotaOk returns a tuple with the CoverQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBucketObjectCoverConf) GetCoverQuotaOk() (*bool, bool) {
	if o == nil || IsNil(o.CoverQuota) {
		return nil, false
	}
	return o.CoverQuota, true
}

// HasCoverQuota returns a boolean if a field has been set.
func (o *OSBucketObjectCoverConf) HasCoverQuota() bool {
	if o != nil && !IsNil(o.CoverQuota) {
		return true
	}

	return false
}

// SetCoverQuota gets a reference to the given bool and assigns it to the CoverQuota field.
func (o *OSBucketObjectCoverConf) SetCoverQuota(v bool) {
	o.CoverQuota = &v
}

// GetExpirationSeconds returns the ExpirationSeconds field value if set, zero value otherwise.
func (o *OSBucketObjectCoverConf) GetExpirationSeconds() int64 {
	if o == nil || IsNil(o.ExpirationSeconds) {
		var ret int64
		return ret
	}
	return *o.ExpirationSeconds
}

// GetExpirationSecondsOk returns a tuple with the ExpirationSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBucketObjectCoverConf) GetExpirationSecondsOk() (*int64, bool) {
	if o == nil || IsNil(o.ExpirationSeconds) {
		return nil, false
	}
	return o.ExpirationSeconds, true
}

// HasExpirationSeconds returns a boolean if a field has been set.
func (o *OSBucketObjectCoverConf) HasExpirationSeconds() bool {
	if o != nil && !IsNil(o.ExpirationSeconds) {
		return true
	}

	return false
}

// SetExpirationSeconds gets a reference to the given int64 and assigns it to the ExpirationSeconds field.
func (o *OSBucketObjectCoverConf) SetExpirationSeconds(v int64) {
	o.ExpirationSeconds = &v
}

func (o OSBucketObjectCoverConf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OSBucketObjectCoverConf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CoverQuota) {
		toSerialize["cover_quota"] = o.CoverQuota
	}
	if !IsNil(o.ExpirationSeconds) {
		toSerialize["expiration_seconds"] = o.ExpirationSeconds
	}
	return toSerialize, nil
}

type NullableOSBucketObjectCoverConf struct {
	value *OSBucketObjectCoverConf
	isSet bool
}

func (v NullableOSBucketObjectCoverConf) Get() *OSBucketObjectCoverConf {
	return v.value
}

func (v *NullableOSBucketObjectCoverConf) Set(val *OSBucketObjectCoverConf) {
	v.value = val
	v.isSet = true
}

func (v NullableOSBucketObjectCoverConf) IsSet() bool {
	return v.isSet
}

func (v *NullableOSBucketObjectCoverConf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSBucketObjectCoverConf(val *OSBucketObjectCoverConf) *NullableOSBucketObjectCoverConf {
	return &NullableOSBucketObjectCoverConf{value: val, isSet: true}
}

func (v NullableOSBucketObjectCoverConf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSBucketObjectCoverConf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


