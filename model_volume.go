/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the Volume type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Volume{}

// Volume Volume is the corresponding rbd image +X:model:stats;
type Volume struct {
	AccessPath *AccessPathNestview `json:"access_path,omitempty"`
	ActionStatus *string `json:"action_status,omitempty"`
	AllocatedSize *int64 `json:"allocated_size,omitempty"`
	AluaEnabled *bool `json:"alua_enabled,omitempty"`
	BlockSnapshotNum *int64 `json:"block_snapshot_num,omitempty"`
	BlockVolumeGroup *VolumeGroupNestview `json:"block_volume_group,omitempty"`
	ClientGroupNum *int64 `json:"client_group_num,omitempty"`
	CloudPlatform *CloudPlatformNestview `json:"cloud_platform,omitempty"`
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	CrcCheck *bool `json:"crc_check,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	Description *string `json:"description,omitempty"`
	DpBlockBackupPolicyNum *int64 `json:"dp_block_backup_policy_num,omitempty"`
	DpBlockReplicationPolicy *DpBlockReplicationPolicyNestview `json:"dp_block_replication_policy,omitempty"`
	DpBlockSnapshotPolicy *DpBlockSnapshotPolicyNestview `json:"dp_block_snapshot_policy,omitempty"`
	Flattened *bool `json:"flattened,omitempty"`
	// 128 or 129 (advanced)
	Format *int64 `json:"format,omitempty"`
	Hidden *bool `json:"hidden,omitempty"`
	Id *int64 `json:"id,omitempty"`
	ImageId *string `json:"image_id,omitempty"`
	LatestSnapshotTime *time.Time `json:"latest_snapshot_time,omitempty"`
	MigrationStripes *int64 `json:"migration_stripes,omitempty"`
	Name *string `json:"name,omitempty"`
	OriginalName *string `json:"original_name,omitempty"`
	OriginalVolumeName *string `json:"original_volume_name,omitempty"`
	Passive *bool `json:"passive,omitempty"`
	// 0 or 1
	PerformancePriority *int64 `json:"performance_priority,omitempty"`
	Pool *PoolNestview `json:"pool,omitempty"`
	Progress *float64 `json:"progress,omitempty"`
	Qos *VolumeQosSpec `json:"qos,omitempty"`
	QosEnabled *bool `json:"qos_enabled,omitempty"`
	RbdClient *RBDClient `json:"rbd_client,omitempty"`
	// trash
	Recycled *bool `json:"recycled,omitempty"`
	RemoteCluster *RemoteClusterNestview `json:"remote_cluster,omitempty"`
	ReplicationDest *string `json:"replication_dest,omitempty"`
	ReplicationPool *string `json:"replication_pool,omitempty"`
	ReplicationPoolId *int64 `json:"replication_pool_id,omitempty"`
	ReplicationPoolName *string `json:"replication_pool_name,omitempty"`
	ReplicationRole *string `json:"replication_role,omitempty"`
	ReplicationStatus *string `json:"replication_status,omitempty"`
	ReplicationVersion *int64 `json:"replication_version,omitempty"`
	ReplicationVolume *string `json:"replication_volume,omitempty"`
	ReplicationVolumeId *int64 `json:"replication_volume_id,omitempty"`
	ReplicationVolumeName *string `json:"replication_volume_name,omitempty"`
	Size *int64 `json:"size,omitempty"`
	Sn *string `json:"sn,omitempty"`
	Snapshot *SnapshotNestview `json:"snapshot,omitempty"`
	SnapshotReplicationRole *string `json:"snapshot_replication_role,omitempty"`
	SnapshotReplicationStatus *string `json:"snapshot_replication_status,omitempty"`
	SourceType *string `json:"source_type,omitempty"`
	SourceUuid *string `json:"source_uuid,omitempty"`
	Status *string `json:"status,omitempty"`
	TrashResource *TrashResourceNestview `json:"trash_resource,omitempty"`
	Uid *string `json:"uid,omitempty"`
	Update *time.Time `json:"update,omitempty"`
	VolumeName *string `json:"volume_name,omitempty"`
}

// NewVolume instantiates a new Volume object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolume() *Volume {
	this := Volume{}
	return &this
}

// NewVolumeWithDefaults instantiates a new Volume object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeWithDefaults() *Volume {
	this := Volume{}
	return &this
}

// GetAccessPath returns the AccessPath field value if set, zero value otherwise.
func (o *Volume) GetAccessPath() AccessPathNestview {
	if o == nil || IsNil(o.AccessPath) {
		var ret AccessPathNestview
		return ret
	}
	return *o.AccessPath
}

// GetAccessPathOk returns a tuple with the AccessPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetAccessPathOk() (*AccessPathNestview, bool) {
	if o == nil || IsNil(o.AccessPath) {
		return nil, false
	}
	return o.AccessPath, true
}

// HasAccessPath returns a boolean if a field has been set.
func (o *Volume) HasAccessPath() bool {
	if o != nil && !IsNil(o.AccessPath) {
		return true
	}

	return false
}

// SetAccessPath gets a reference to the given AccessPathNestview and assigns it to the AccessPath field.
func (o *Volume) SetAccessPath(v AccessPathNestview) {
	o.AccessPath = &v
}

// GetActionStatus returns the ActionStatus field value if set, zero value otherwise.
func (o *Volume) GetActionStatus() string {
	if o == nil || IsNil(o.ActionStatus) {
		var ret string
		return ret
	}
	return *o.ActionStatus
}

// GetActionStatusOk returns a tuple with the ActionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetActionStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ActionStatus) {
		return nil, false
	}
	return o.ActionStatus, true
}

// HasActionStatus returns a boolean if a field has been set.
func (o *Volume) HasActionStatus() bool {
	if o != nil && !IsNil(o.ActionStatus) {
		return true
	}

	return false
}

// SetActionStatus gets a reference to the given string and assigns it to the ActionStatus field.
func (o *Volume) SetActionStatus(v string) {
	o.ActionStatus = &v
}

// GetAllocatedSize returns the AllocatedSize field value if set, zero value otherwise.
func (o *Volume) GetAllocatedSize() int64 {
	if o == nil || IsNil(o.AllocatedSize) {
		var ret int64
		return ret
	}
	return *o.AllocatedSize
}

// GetAllocatedSizeOk returns a tuple with the AllocatedSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetAllocatedSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.AllocatedSize) {
		return nil, false
	}
	return o.AllocatedSize, true
}

// HasAllocatedSize returns a boolean if a field has been set.
func (o *Volume) HasAllocatedSize() bool {
	if o != nil && !IsNil(o.AllocatedSize) {
		return true
	}

	return false
}

// SetAllocatedSize gets a reference to the given int64 and assigns it to the AllocatedSize field.
func (o *Volume) SetAllocatedSize(v int64) {
	o.AllocatedSize = &v
}

// GetAluaEnabled returns the AluaEnabled field value if set, zero value otherwise.
func (o *Volume) GetAluaEnabled() bool {
	if o == nil || IsNil(o.AluaEnabled) {
		var ret bool
		return ret
	}
	return *o.AluaEnabled
}

// GetAluaEnabledOk returns a tuple with the AluaEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetAluaEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.AluaEnabled) {
		return nil, false
	}
	return o.AluaEnabled, true
}

// HasAluaEnabled returns a boolean if a field has been set.
func (o *Volume) HasAluaEnabled() bool {
	if o != nil && !IsNil(o.AluaEnabled) {
		return true
	}

	return false
}

// SetAluaEnabled gets a reference to the given bool and assigns it to the AluaEnabled field.
func (o *Volume) SetAluaEnabled(v bool) {
	o.AluaEnabled = &v
}

// GetBlockSnapshotNum returns the BlockSnapshotNum field value if set, zero value otherwise.
func (o *Volume) GetBlockSnapshotNum() int64 {
	if o == nil || IsNil(o.BlockSnapshotNum) {
		var ret int64
		return ret
	}
	return *o.BlockSnapshotNum
}

// GetBlockSnapshotNumOk returns a tuple with the BlockSnapshotNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetBlockSnapshotNumOk() (*int64, bool) {
	if o == nil || IsNil(o.BlockSnapshotNum) {
		return nil, false
	}
	return o.BlockSnapshotNum, true
}

// HasBlockSnapshotNum returns a boolean if a field has been set.
func (o *Volume) HasBlockSnapshotNum() bool {
	if o != nil && !IsNil(o.BlockSnapshotNum) {
		return true
	}

	return false
}

// SetBlockSnapshotNum gets a reference to the given int64 and assigns it to the BlockSnapshotNum field.
func (o *Volume) SetBlockSnapshotNum(v int64) {
	o.BlockSnapshotNum = &v
}

// GetBlockVolumeGroup returns the BlockVolumeGroup field value if set, zero value otherwise.
func (o *Volume) GetBlockVolumeGroup() VolumeGroupNestview {
	if o == nil || IsNil(o.BlockVolumeGroup) {
		var ret VolumeGroupNestview
		return ret
	}
	return *o.BlockVolumeGroup
}

// GetBlockVolumeGroupOk returns a tuple with the BlockVolumeGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetBlockVolumeGroupOk() (*VolumeGroupNestview, bool) {
	if o == nil || IsNil(o.BlockVolumeGroup) {
		return nil, false
	}
	return o.BlockVolumeGroup, true
}

// HasBlockVolumeGroup returns a boolean if a field has been set.
func (o *Volume) HasBlockVolumeGroup() bool {
	if o != nil && !IsNil(o.BlockVolumeGroup) {
		return true
	}

	return false
}

// SetBlockVolumeGroup gets a reference to the given VolumeGroupNestview and assigns it to the BlockVolumeGroup field.
func (o *Volume) SetBlockVolumeGroup(v VolumeGroupNestview) {
	o.BlockVolumeGroup = &v
}

// GetClientGroupNum returns the ClientGroupNum field value if set, zero value otherwise.
func (o *Volume) GetClientGroupNum() int64 {
	if o == nil || IsNil(o.ClientGroupNum) {
		var ret int64
		return ret
	}
	return *o.ClientGroupNum
}

// GetClientGroupNumOk returns a tuple with the ClientGroupNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetClientGroupNumOk() (*int64, bool) {
	if o == nil || IsNil(o.ClientGroupNum) {
		return nil, false
	}
	return o.ClientGroupNum, true
}

// HasClientGroupNum returns a boolean if a field has been set.
func (o *Volume) HasClientGroupNum() bool {
	if o != nil && !IsNil(o.ClientGroupNum) {
		return true
	}

	return false
}

// SetClientGroupNum gets a reference to the given int64 and assigns it to the ClientGroupNum field.
func (o *Volume) SetClientGroupNum(v int64) {
	o.ClientGroupNum = &v
}

// GetCloudPlatform returns the CloudPlatform field value if set, zero value otherwise.
func (o *Volume) GetCloudPlatform() CloudPlatformNestview {
	if o == nil || IsNil(o.CloudPlatform) {
		var ret CloudPlatformNestview
		return ret
	}
	return *o.CloudPlatform
}

// GetCloudPlatformOk returns a tuple with the CloudPlatform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetCloudPlatformOk() (*CloudPlatformNestview, bool) {
	if o == nil || IsNil(o.CloudPlatform) {
		return nil, false
	}
	return o.CloudPlatform, true
}

// HasCloudPlatform returns a boolean if a field has been set.
func (o *Volume) HasCloudPlatform() bool {
	if o != nil && !IsNil(o.CloudPlatform) {
		return true
	}

	return false
}

// SetCloudPlatform gets a reference to the given CloudPlatformNestview and assigns it to the CloudPlatform field.
func (o *Volume) SetCloudPlatform(v CloudPlatformNestview) {
	o.CloudPlatform = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *Volume) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *Volume) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *Volume) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetCrcCheck returns the CrcCheck field value if set, zero value otherwise.
func (o *Volume) GetCrcCheck() bool {
	if o == nil || IsNil(o.CrcCheck) {
		var ret bool
		return ret
	}
	return *o.CrcCheck
}

// GetCrcCheckOk returns a tuple with the CrcCheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetCrcCheckOk() (*bool, bool) {
	if o == nil || IsNil(o.CrcCheck) {
		return nil, false
	}
	return o.CrcCheck, true
}

// HasCrcCheck returns a boolean if a field has been set.
func (o *Volume) HasCrcCheck() bool {
	if o != nil && !IsNil(o.CrcCheck) {
		return true
	}

	return false
}

// SetCrcCheck gets a reference to the given bool and assigns it to the CrcCheck field.
func (o *Volume) SetCrcCheck(v bool) {
	o.CrcCheck = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *Volume) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *Volume) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *Volume) SetCreate(v time.Time) {
	o.Create = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Volume) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Volume) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Volume) SetDescription(v string) {
	o.Description = &v
}

// GetDpBlockBackupPolicyNum returns the DpBlockBackupPolicyNum field value if set, zero value otherwise.
func (o *Volume) GetDpBlockBackupPolicyNum() int64 {
	if o == nil || IsNil(o.DpBlockBackupPolicyNum) {
		var ret int64
		return ret
	}
	return *o.DpBlockBackupPolicyNum
}

// GetDpBlockBackupPolicyNumOk returns a tuple with the DpBlockBackupPolicyNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetDpBlockBackupPolicyNumOk() (*int64, bool) {
	if o == nil || IsNil(o.DpBlockBackupPolicyNum) {
		return nil, false
	}
	return o.DpBlockBackupPolicyNum, true
}

// HasDpBlockBackupPolicyNum returns a boolean if a field has been set.
func (o *Volume) HasDpBlockBackupPolicyNum() bool {
	if o != nil && !IsNil(o.DpBlockBackupPolicyNum) {
		return true
	}

	return false
}

// SetDpBlockBackupPolicyNum gets a reference to the given int64 and assigns it to the DpBlockBackupPolicyNum field.
func (o *Volume) SetDpBlockBackupPolicyNum(v int64) {
	o.DpBlockBackupPolicyNum = &v
}

// GetDpBlockReplicationPolicy returns the DpBlockReplicationPolicy field value if set, zero value otherwise.
func (o *Volume) GetDpBlockReplicationPolicy() DpBlockReplicationPolicyNestview {
	if o == nil || IsNil(o.DpBlockReplicationPolicy) {
		var ret DpBlockReplicationPolicyNestview
		return ret
	}
	return *o.DpBlockReplicationPolicy
}

// GetDpBlockReplicationPolicyOk returns a tuple with the DpBlockReplicationPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetDpBlockReplicationPolicyOk() (*DpBlockReplicationPolicyNestview, bool) {
	if o == nil || IsNil(o.DpBlockReplicationPolicy) {
		return nil, false
	}
	return o.DpBlockReplicationPolicy, true
}

// HasDpBlockReplicationPolicy returns a boolean if a field has been set.
func (o *Volume) HasDpBlockReplicationPolicy() bool {
	if o != nil && !IsNil(o.DpBlockReplicationPolicy) {
		return true
	}

	return false
}

// SetDpBlockReplicationPolicy gets a reference to the given DpBlockReplicationPolicyNestview and assigns it to the DpBlockReplicationPolicy field.
func (o *Volume) SetDpBlockReplicationPolicy(v DpBlockReplicationPolicyNestview) {
	o.DpBlockReplicationPolicy = &v
}

// GetDpBlockSnapshotPolicy returns the DpBlockSnapshotPolicy field value if set, zero value otherwise.
func (o *Volume) GetDpBlockSnapshotPolicy() DpBlockSnapshotPolicyNestview {
	if o == nil || IsNil(o.DpBlockSnapshotPolicy) {
		var ret DpBlockSnapshotPolicyNestview
		return ret
	}
	return *o.DpBlockSnapshotPolicy
}

// GetDpBlockSnapshotPolicyOk returns a tuple with the DpBlockSnapshotPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetDpBlockSnapshotPolicyOk() (*DpBlockSnapshotPolicyNestview, bool) {
	if o == nil || IsNil(o.DpBlockSnapshotPolicy) {
		return nil, false
	}
	return o.DpBlockSnapshotPolicy, true
}

// HasDpBlockSnapshotPolicy returns a boolean if a field has been set.
func (o *Volume) HasDpBlockSnapshotPolicy() bool {
	if o != nil && !IsNil(o.DpBlockSnapshotPolicy) {
		return true
	}

	return false
}

// SetDpBlockSnapshotPolicy gets a reference to the given DpBlockSnapshotPolicyNestview and assigns it to the DpBlockSnapshotPolicy field.
func (o *Volume) SetDpBlockSnapshotPolicy(v DpBlockSnapshotPolicyNestview) {
	o.DpBlockSnapshotPolicy = &v
}

// GetFlattened returns the Flattened field value if set, zero value otherwise.
func (o *Volume) GetFlattened() bool {
	if o == nil || IsNil(o.Flattened) {
		var ret bool
		return ret
	}
	return *o.Flattened
}

// GetFlattenedOk returns a tuple with the Flattened field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetFlattenedOk() (*bool, bool) {
	if o == nil || IsNil(o.Flattened) {
		return nil, false
	}
	return o.Flattened, true
}

// HasFlattened returns a boolean if a field has been set.
func (o *Volume) HasFlattened() bool {
	if o != nil && !IsNil(o.Flattened) {
		return true
	}

	return false
}

// SetFlattened gets a reference to the given bool and assigns it to the Flattened field.
func (o *Volume) SetFlattened(v bool) {
	o.Flattened = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *Volume) GetFormat() int64 {
	if o == nil || IsNil(o.Format) {
		var ret int64
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetFormatOk() (*int64, bool) {
	if o == nil || IsNil(o.Format) {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *Volume) HasFormat() bool {
	if o != nil && !IsNil(o.Format) {
		return true
	}

	return false
}

// SetFormat gets a reference to the given int64 and assigns it to the Format field.
func (o *Volume) SetFormat(v int64) {
	o.Format = &v
}

// GetHidden returns the Hidden field value if set, zero value otherwise.
func (o *Volume) GetHidden() bool {
	if o == nil || IsNil(o.Hidden) {
		var ret bool
		return ret
	}
	return *o.Hidden
}

// GetHiddenOk returns a tuple with the Hidden field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetHiddenOk() (*bool, bool) {
	if o == nil || IsNil(o.Hidden) {
		return nil, false
	}
	return o.Hidden, true
}

// HasHidden returns a boolean if a field has been set.
func (o *Volume) HasHidden() bool {
	if o != nil && !IsNil(o.Hidden) {
		return true
	}

	return false
}

// SetHidden gets a reference to the given bool and assigns it to the Hidden field.
func (o *Volume) SetHidden(v bool) {
	o.Hidden = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Volume) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Volume) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *Volume) SetId(v int64) {
	o.Id = &v
}

// GetImageId returns the ImageId field value if set, zero value otherwise.
func (o *Volume) GetImageId() string {
	if o == nil || IsNil(o.ImageId) {
		var ret string
		return ret
	}
	return *o.ImageId
}

// GetImageIdOk returns a tuple with the ImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetImageIdOk() (*string, bool) {
	if o == nil || IsNil(o.ImageId) {
		return nil, false
	}
	return o.ImageId, true
}

// HasImageId returns a boolean if a field has been set.
func (o *Volume) HasImageId() bool {
	if o != nil && !IsNil(o.ImageId) {
		return true
	}

	return false
}

// SetImageId gets a reference to the given string and assigns it to the ImageId field.
func (o *Volume) SetImageId(v string) {
	o.ImageId = &v
}

// GetLatestSnapshotTime returns the LatestSnapshotTime field value if set, zero value otherwise.
func (o *Volume) GetLatestSnapshotTime() time.Time {
	if o == nil || IsNil(o.LatestSnapshotTime) {
		var ret time.Time
		return ret
	}
	return *o.LatestSnapshotTime
}

// GetLatestSnapshotTimeOk returns a tuple with the LatestSnapshotTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetLatestSnapshotTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LatestSnapshotTime) {
		return nil, false
	}
	return o.LatestSnapshotTime, true
}

// HasLatestSnapshotTime returns a boolean if a field has been set.
func (o *Volume) HasLatestSnapshotTime() bool {
	if o != nil && !IsNil(o.LatestSnapshotTime) {
		return true
	}

	return false
}

// SetLatestSnapshotTime gets a reference to the given time.Time and assigns it to the LatestSnapshotTime field.
func (o *Volume) SetLatestSnapshotTime(v time.Time) {
	o.LatestSnapshotTime = &v
}

// GetMigrationStripes returns the MigrationStripes field value if set, zero value otherwise.
func (o *Volume) GetMigrationStripes() int64 {
	if o == nil || IsNil(o.MigrationStripes) {
		var ret int64
		return ret
	}
	return *o.MigrationStripes
}

// GetMigrationStripesOk returns a tuple with the MigrationStripes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetMigrationStripesOk() (*int64, bool) {
	if o == nil || IsNil(o.MigrationStripes) {
		return nil, false
	}
	return o.MigrationStripes, true
}

// HasMigrationStripes returns a boolean if a field has been set.
func (o *Volume) HasMigrationStripes() bool {
	if o != nil && !IsNil(o.MigrationStripes) {
		return true
	}

	return false
}

// SetMigrationStripes gets a reference to the given int64 and assigns it to the MigrationStripes field.
func (o *Volume) SetMigrationStripes(v int64) {
	o.MigrationStripes = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Volume) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Volume) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Volume) SetName(v string) {
	o.Name = &v
}

// GetOriginalName returns the OriginalName field value if set, zero value otherwise.
func (o *Volume) GetOriginalName() string {
	if o == nil || IsNil(o.OriginalName) {
		var ret string
		return ret
	}
	return *o.OriginalName
}

// GetOriginalNameOk returns a tuple with the OriginalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetOriginalNameOk() (*string, bool) {
	if o == nil || IsNil(o.OriginalName) {
		return nil, false
	}
	return o.OriginalName, true
}

// HasOriginalName returns a boolean if a field has been set.
func (o *Volume) HasOriginalName() bool {
	if o != nil && !IsNil(o.OriginalName) {
		return true
	}

	return false
}

// SetOriginalName gets a reference to the given string and assigns it to the OriginalName field.
func (o *Volume) SetOriginalName(v string) {
	o.OriginalName = &v
}

// GetOriginalVolumeName returns the OriginalVolumeName field value if set, zero value otherwise.
func (o *Volume) GetOriginalVolumeName() string {
	if o == nil || IsNil(o.OriginalVolumeName) {
		var ret string
		return ret
	}
	return *o.OriginalVolumeName
}

// GetOriginalVolumeNameOk returns a tuple with the OriginalVolumeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetOriginalVolumeNameOk() (*string, bool) {
	if o == nil || IsNil(o.OriginalVolumeName) {
		return nil, false
	}
	return o.OriginalVolumeName, true
}

// HasOriginalVolumeName returns a boolean if a field has been set.
func (o *Volume) HasOriginalVolumeName() bool {
	if o != nil && !IsNil(o.OriginalVolumeName) {
		return true
	}

	return false
}

// SetOriginalVolumeName gets a reference to the given string and assigns it to the OriginalVolumeName field.
func (o *Volume) SetOriginalVolumeName(v string) {
	o.OriginalVolumeName = &v
}

// GetPassive returns the Passive field value if set, zero value otherwise.
func (o *Volume) GetPassive() bool {
	if o == nil || IsNil(o.Passive) {
		var ret bool
		return ret
	}
	return *o.Passive
}

// GetPassiveOk returns a tuple with the Passive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetPassiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Passive) {
		return nil, false
	}
	return o.Passive, true
}

// HasPassive returns a boolean if a field has been set.
func (o *Volume) HasPassive() bool {
	if o != nil && !IsNil(o.Passive) {
		return true
	}

	return false
}

// SetPassive gets a reference to the given bool and assigns it to the Passive field.
func (o *Volume) SetPassive(v bool) {
	o.Passive = &v
}

// GetPerformancePriority returns the PerformancePriority field value if set, zero value otherwise.
func (o *Volume) GetPerformancePriority() int64 {
	if o == nil || IsNil(o.PerformancePriority) {
		var ret int64
		return ret
	}
	return *o.PerformancePriority
}

// GetPerformancePriorityOk returns a tuple with the PerformancePriority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetPerformancePriorityOk() (*int64, bool) {
	if o == nil || IsNil(o.PerformancePriority) {
		return nil, false
	}
	return o.PerformancePriority, true
}

// HasPerformancePriority returns a boolean if a field has been set.
func (o *Volume) HasPerformancePriority() bool {
	if o != nil && !IsNil(o.PerformancePriority) {
		return true
	}

	return false
}

// SetPerformancePriority gets a reference to the given int64 and assigns it to the PerformancePriority field.
func (o *Volume) SetPerformancePriority(v int64) {
	o.PerformancePriority = &v
}

// GetPool returns the Pool field value if set, zero value otherwise.
func (o *Volume) GetPool() PoolNestview {
	if o == nil || IsNil(o.Pool) {
		var ret PoolNestview
		return ret
	}
	return *o.Pool
}

// GetPoolOk returns a tuple with the Pool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetPoolOk() (*PoolNestview, bool) {
	if o == nil || IsNil(o.Pool) {
		return nil, false
	}
	return o.Pool, true
}

// HasPool returns a boolean if a field has been set.
func (o *Volume) HasPool() bool {
	if o != nil && !IsNil(o.Pool) {
		return true
	}

	return false
}

// SetPool gets a reference to the given PoolNestview and assigns it to the Pool field.
func (o *Volume) SetPool(v PoolNestview) {
	o.Pool = &v
}

// GetProgress returns the Progress field value if set, zero value otherwise.
func (o *Volume) GetProgress() float64 {
	if o == nil || IsNil(o.Progress) {
		var ret float64
		return ret
	}
	return *o.Progress
}

// GetProgressOk returns a tuple with the Progress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetProgressOk() (*float64, bool) {
	if o == nil || IsNil(o.Progress) {
		return nil, false
	}
	return o.Progress, true
}

// HasProgress returns a boolean if a field has been set.
func (o *Volume) HasProgress() bool {
	if o != nil && !IsNil(o.Progress) {
		return true
	}

	return false
}

// SetProgress gets a reference to the given float64 and assigns it to the Progress field.
func (o *Volume) SetProgress(v float64) {
	o.Progress = &v
}

// GetQos returns the Qos field value if set, zero value otherwise.
func (o *Volume) GetQos() VolumeQosSpec {
	if o == nil || IsNil(o.Qos) {
		var ret VolumeQosSpec
		return ret
	}
	return *o.Qos
}

// GetQosOk returns a tuple with the Qos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetQosOk() (*VolumeQosSpec, bool) {
	if o == nil || IsNil(o.Qos) {
		return nil, false
	}
	return o.Qos, true
}

// HasQos returns a boolean if a field has been set.
func (o *Volume) HasQos() bool {
	if o != nil && !IsNil(o.Qos) {
		return true
	}

	return false
}

// SetQos gets a reference to the given VolumeQosSpec and assigns it to the Qos field.
func (o *Volume) SetQos(v VolumeQosSpec) {
	o.Qos = &v
}

// GetQosEnabled returns the QosEnabled field value if set, zero value otherwise.
func (o *Volume) GetQosEnabled() bool {
	if o == nil || IsNil(o.QosEnabled) {
		var ret bool
		return ret
	}
	return *o.QosEnabled
}

// GetQosEnabledOk returns a tuple with the QosEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetQosEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.QosEnabled) {
		return nil, false
	}
	return o.QosEnabled, true
}

// HasQosEnabled returns a boolean if a field has been set.
func (o *Volume) HasQosEnabled() bool {
	if o != nil && !IsNil(o.QosEnabled) {
		return true
	}

	return false
}

// SetQosEnabled gets a reference to the given bool and assigns it to the QosEnabled field.
func (o *Volume) SetQosEnabled(v bool) {
	o.QosEnabled = &v
}

// GetRbdClient returns the RbdClient field value if set, zero value otherwise.
func (o *Volume) GetRbdClient() RBDClient {
	if o == nil || IsNil(o.RbdClient) {
		var ret RBDClient
		return ret
	}
	return *o.RbdClient
}

// GetRbdClientOk returns a tuple with the RbdClient field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetRbdClientOk() (*RBDClient, bool) {
	if o == nil || IsNil(o.RbdClient) {
		return nil, false
	}
	return o.RbdClient, true
}

// HasRbdClient returns a boolean if a field has been set.
func (o *Volume) HasRbdClient() bool {
	if o != nil && !IsNil(o.RbdClient) {
		return true
	}

	return false
}

// SetRbdClient gets a reference to the given RBDClient and assigns it to the RbdClient field.
func (o *Volume) SetRbdClient(v RBDClient) {
	o.RbdClient = &v
}

// GetRecycled returns the Recycled field value if set, zero value otherwise.
func (o *Volume) GetRecycled() bool {
	if o == nil || IsNil(o.Recycled) {
		var ret bool
		return ret
	}
	return *o.Recycled
}

// GetRecycledOk returns a tuple with the Recycled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetRecycledOk() (*bool, bool) {
	if o == nil || IsNil(o.Recycled) {
		return nil, false
	}
	return o.Recycled, true
}

// HasRecycled returns a boolean if a field has been set.
func (o *Volume) HasRecycled() bool {
	if o != nil && !IsNil(o.Recycled) {
		return true
	}

	return false
}

// SetRecycled gets a reference to the given bool and assigns it to the Recycled field.
func (o *Volume) SetRecycled(v bool) {
	o.Recycled = &v
}

// GetRemoteCluster returns the RemoteCluster field value if set, zero value otherwise.
func (o *Volume) GetRemoteCluster() RemoteClusterNestview {
	if o == nil || IsNil(o.RemoteCluster) {
		var ret RemoteClusterNestview
		return ret
	}
	return *o.RemoteCluster
}

// GetRemoteClusterOk returns a tuple with the RemoteCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetRemoteClusterOk() (*RemoteClusterNestview, bool) {
	if o == nil || IsNil(o.RemoteCluster) {
		return nil, false
	}
	return o.RemoteCluster, true
}

// HasRemoteCluster returns a boolean if a field has been set.
func (o *Volume) HasRemoteCluster() bool {
	if o != nil && !IsNil(o.RemoteCluster) {
		return true
	}

	return false
}

// SetRemoteCluster gets a reference to the given RemoteClusterNestview and assigns it to the RemoteCluster field.
func (o *Volume) SetRemoteCluster(v RemoteClusterNestview) {
	o.RemoteCluster = &v
}

// GetReplicationDest returns the ReplicationDest field value if set, zero value otherwise.
func (o *Volume) GetReplicationDest() string {
	if o == nil || IsNil(o.ReplicationDest) {
		var ret string
		return ret
	}
	return *o.ReplicationDest
}

// GetReplicationDestOk returns a tuple with the ReplicationDest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetReplicationDestOk() (*string, bool) {
	if o == nil || IsNil(o.ReplicationDest) {
		return nil, false
	}
	return o.ReplicationDest, true
}

// HasReplicationDest returns a boolean if a field has been set.
func (o *Volume) HasReplicationDest() bool {
	if o != nil && !IsNil(o.ReplicationDest) {
		return true
	}

	return false
}

// SetReplicationDest gets a reference to the given string and assigns it to the ReplicationDest field.
func (o *Volume) SetReplicationDest(v string) {
	o.ReplicationDest = &v
}

// GetReplicationPool returns the ReplicationPool field value if set, zero value otherwise.
func (o *Volume) GetReplicationPool() string {
	if o == nil || IsNil(o.ReplicationPool) {
		var ret string
		return ret
	}
	return *o.ReplicationPool
}

// GetReplicationPoolOk returns a tuple with the ReplicationPool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetReplicationPoolOk() (*string, bool) {
	if o == nil || IsNil(o.ReplicationPool) {
		return nil, false
	}
	return o.ReplicationPool, true
}

// HasReplicationPool returns a boolean if a field has been set.
func (o *Volume) HasReplicationPool() bool {
	if o != nil && !IsNil(o.ReplicationPool) {
		return true
	}

	return false
}

// SetReplicationPool gets a reference to the given string and assigns it to the ReplicationPool field.
func (o *Volume) SetReplicationPool(v string) {
	o.ReplicationPool = &v
}

// GetReplicationPoolId returns the ReplicationPoolId field value if set, zero value otherwise.
func (o *Volume) GetReplicationPoolId() int64 {
	if o == nil || IsNil(o.ReplicationPoolId) {
		var ret int64
		return ret
	}
	return *o.ReplicationPoolId
}

// GetReplicationPoolIdOk returns a tuple with the ReplicationPoolId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetReplicationPoolIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ReplicationPoolId) {
		return nil, false
	}
	return o.ReplicationPoolId, true
}

// HasReplicationPoolId returns a boolean if a field has been set.
func (o *Volume) HasReplicationPoolId() bool {
	if o != nil && !IsNil(o.ReplicationPoolId) {
		return true
	}

	return false
}

// SetReplicationPoolId gets a reference to the given int64 and assigns it to the ReplicationPoolId field.
func (o *Volume) SetReplicationPoolId(v int64) {
	o.ReplicationPoolId = &v
}

// GetReplicationPoolName returns the ReplicationPoolName field value if set, zero value otherwise.
func (o *Volume) GetReplicationPoolName() string {
	if o == nil || IsNil(o.ReplicationPoolName) {
		var ret string
		return ret
	}
	return *o.ReplicationPoolName
}

// GetReplicationPoolNameOk returns a tuple with the ReplicationPoolName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetReplicationPoolNameOk() (*string, bool) {
	if o == nil || IsNil(o.ReplicationPoolName) {
		return nil, false
	}
	return o.ReplicationPoolName, true
}

// HasReplicationPoolName returns a boolean if a field has been set.
func (o *Volume) HasReplicationPoolName() bool {
	if o != nil && !IsNil(o.ReplicationPoolName) {
		return true
	}

	return false
}

// SetReplicationPoolName gets a reference to the given string and assigns it to the ReplicationPoolName field.
func (o *Volume) SetReplicationPoolName(v string) {
	o.ReplicationPoolName = &v
}

// GetReplicationRole returns the ReplicationRole field value if set, zero value otherwise.
func (o *Volume) GetReplicationRole() string {
	if o == nil || IsNil(o.ReplicationRole) {
		var ret string
		return ret
	}
	return *o.ReplicationRole
}

// GetReplicationRoleOk returns a tuple with the ReplicationRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetReplicationRoleOk() (*string, bool) {
	if o == nil || IsNil(o.ReplicationRole) {
		return nil, false
	}
	return o.ReplicationRole, true
}

// HasReplicationRole returns a boolean if a field has been set.
func (o *Volume) HasReplicationRole() bool {
	if o != nil && !IsNil(o.ReplicationRole) {
		return true
	}

	return false
}

// SetReplicationRole gets a reference to the given string and assigns it to the ReplicationRole field.
func (o *Volume) SetReplicationRole(v string) {
	o.ReplicationRole = &v
}

// GetReplicationStatus returns the ReplicationStatus field value if set, zero value otherwise.
func (o *Volume) GetReplicationStatus() string {
	if o == nil || IsNil(o.ReplicationStatus) {
		var ret string
		return ret
	}
	return *o.ReplicationStatus
}

// GetReplicationStatusOk returns a tuple with the ReplicationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetReplicationStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ReplicationStatus) {
		return nil, false
	}
	return o.ReplicationStatus, true
}

// HasReplicationStatus returns a boolean if a field has been set.
func (o *Volume) HasReplicationStatus() bool {
	if o != nil && !IsNil(o.ReplicationStatus) {
		return true
	}

	return false
}

// SetReplicationStatus gets a reference to the given string and assigns it to the ReplicationStatus field.
func (o *Volume) SetReplicationStatus(v string) {
	o.ReplicationStatus = &v
}

// GetReplicationVersion returns the ReplicationVersion field value if set, zero value otherwise.
func (o *Volume) GetReplicationVersion() int64 {
	if o == nil || IsNil(o.ReplicationVersion) {
		var ret int64
		return ret
	}
	return *o.ReplicationVersion
}

// GetReplicationVersionOk returns a tuple with the ReplicationVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetReplicationVersionOk() (*int64, bool) {
	if o == nil || IsNil(o.ReplicationVersion) {
		return nil, false
	}
	return o.ReplicationVersion, true
}

// HasReplicationVersion returns a boolean if a field has been set.
func (o *Volume) HasReplicationVersion() bool {
	if o != nil && !IsNil(o.ReplicationVersion) {
		return true
	}

	return false
}

// SetReplicationVersion gets a reference to the given int64 and assigns it to the ReplicationVersion field.
func (o *Volume) SetReplicationVersion(v int64) {
	o.ReplicationVersion = &v
}

// GetReplicationVolume returns the ReplicationVolume field value if set, zero value otherwise.
func (o *Volume) GetReplicationVolume() string {
	if o == nil || IsNil(o.ReplicationVolume) {
		var ret string
		return ret
	}
	return *o.ReplicationVolume
}

// GetReplicationVolumeOk returns a tuple with the ReplicationVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetReplicationVolumeOk() (*string, bool) {
	if o == nil || IsNil(o.ReplicationVolume) {
		return nil, false
	}
	return o.ReplicationVolume, true
}

// HasReplicationVolume returns a boolean if a field has been set.
func (o *Volume) HasReplicationVolume() bool {
	if o != nil && !IsNil(o.ReplicationVolume) {
		return true
	}

	return false
}

// SetReplicationVolume gets a reference to the given string and assigns it to the ReplicationVolume field.
func (o *Volume) SetReplicationVolume(v string) {
	o.ReplicationVolume = &v
}

// GetReplicationVolumeId returns the ReplicationVolumeId field value if set, zero value otherwise.
func (o *Volume) GetReplicationVolumeId() int64 {
	if o == nil || IsNil(o.ReplicationVolumeId) {
		var ret int64
		return ret
	}
	return *o.ReplicationVolumeId
}

// GetReplicationVolumeIdOk returns a tuple with the ReplicationVolumeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetReplicationVolumeIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ReplicationVolumeId) {
		return nil, false
	}
	return o.ReplicationVolumeId, true
}

// HasReplicationVolumeId returns a boolean if a field has been set.
func (o *Volume) HasReplicationVolumeId() bool {
	if o != nil && !IsNil(o.ReplicationVolumeId) {
		return true
	}

	return false
}

// SetReplicationVolumeId gets a reference to the given int64 and assigns it to the ReplicationVolumeId field.
func (o *Volume) SetReplicationVolumeId(v int64) {
	o.ReplicationVolumeId = &v
}

// GetReplicationVolumeName returns the ReplicationVolumeName field value if set, zero value otherwise.
func (o *Volume) GetReplicationVolumeName() string {
	if o == nil || IsNil(o.ReplicationVolumeName) {
		var ret string
		return ret
	}
	return *o.ReplicationVolumeName
}

// GetReplicationVolumeNameOk returns a tuple with the ReplicationVolumeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetReplicationVolumeNameOk() (*string, bool) {
	if o == nil || IsNil(o.ReplicationVolumeName) {
		return nil, false
	}
	return o.ReplicationVolumeName, true
}

// HasReplicationVolumeName returns a boolean if a field has been set.
func (o *Volume) HasReplicationVolumeName() bool {
	if o != nil && !IsNil(o.ReplicationVolumeName) {
		return true
	}

	return false
}

// SetReplicationVolumeName gets a reference to the given string and assigns it to the ReplicationVolumeName field.
func (o *Volume) SetReplicationVolumeName(v string) {
	o.ReplicationVolumeName = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *Volume) GetSize() int64 {
	if o == nil || IsNil(o.Size) {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *Volume) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *Volume) SetSize(v int64) {
	o.Size = &v
}

// GetSn returns the Sn field value if set, zero value otherwise.
func (o *Volume) GetSn() string {
	if o == nil || IsNil(o.Sn) {
		var ret string
		return ret
	}
	return *o.Sn
}

// GetSnOk returns a tuple with the Sn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetSnOk() (*string, bool) {
	if o == nil || IsNil(o.Sn) {
		return nil, false
	}
	return o.Sn, true
}

// HasSn returns a boolean if a field has been set.
func (o *Volume) HasSn() bool {
	if o != nil && !IsNil(o.Sn) {
		return true
	}

	return false
}

// SetSn gets a reference to the given string and assigns it to the Sn field.
func (o *Volume) SetSn(v string) {
	o.Sn = &v
}

// GetSnapshot returns the Snapshot field value if set, zero value otherwise.
func (o *Volume) GetSnapshot() SnapshotNestview {
	if o == nil || IsNil(o.Snapshot) {
		var ret SnapshotNestview
		return ret
	}
	return *o.Snapshot
}

// GetSnapshotOk returns a tuple with the Snapshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetSnapshotOk() (*SnapshotNestview, bool) {
	if o == nil || IsNil(o.Snapshot) {
		return nil, false
	}
	return o.Snapshot, true
}

// HasSnapshot returns a boolean if a field has been set.
func (o *Volume) HasSnapshot() bool {
	if o != nil && !IsNil(o.Snapshot) {
		return true
	}

	return false
}

// SetSnapshot gets a reference to the given SnapshotNestview and assigns it to the Snapshot field.
func (o *Volume) SetSnapshot(v SnapshotNestview) {
	o.Snapshot = &v
}

// GetSnapshotReplicationRole returns the SnapshotReplicationRole field value if set, zero value otherwise.
func (o *Volume) GetSnapshotReplicationRole() string {
	if o == nil || IsNil(o.SnapshotReplicationRole) {
		var ret string
		return ret
	}
	return *o.SnapshotReplicationRole
}

// GetSnapshotReplicationRoleOk returns a tuple with the SnapshotReplicationRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetSnapshotReplicationRoleOk() (*string, bool) {
	if o == nil || IsNil(o.SnapshotReplicationRole) {
		return nil, false
	}
	return o.SnapshotReplicationRole, true
}

// HasSnapshotReplicationRole returns a boolean if a field has been set.
func (o *Volume) HasSnapshotReplicationRole() bool {
	if o != nil && !IsNil(o.SnapshotReplicationRole) {
		return true
	}

	return false
}

// SetSnapshotReplicationRole gets a reference to the given string and assigns it to the SnapshotReplicationRole field.
func (o *Volume) SetSnapshotReplicationRole(v string) {
	o.SnapshotReplicationRole = &v
}

// GetSnapshotReplicationStatus returns the SnapshotReplicationStatus field value if set, zero value otherwise.
func (o *Volume) GetSnapshotReplicationStatus() string {
	if o == nil || IsNil(o.SnapshotReplicationStatus) {
		var ret string
		return ret
	}
	return *o.SnapshotReplicationStatus
}

// GetSnapshotReplicationStatusOk returns a tuple with the SnapshotReplicationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetSnapshotReplicationStatusOk() (*string, bool) {
	if o == nil || IsNil(o.SnapshotReplicationStatus) {
		return nil, false
	}
	return o.SnapshotReplicationStatus, true
}

// HasSnapshotReplicationStatus returns a boolean if a field has been set.
func (o *Volume) HasSnapshotReplicationStatus() bool {
	if o != nil && !IsNil(o.SnapshotReplicationStatus) {
		return true
	}

	return false
}

// SetSnapshotReplicationStatus gets a reference to the given string and assigns it to the SnapshotReplicationStatus field.
func (o *Volume) SetSnapshotReplicationStatus(v string) {
	o.SnapshotReplicationStatus = &v
}

// GetSourceType returns the SourceType field value if set, zero value otherwise.
func (o *Volume) GetSourceType() string {
	if o == nil || IsNil(o.SourceType) {
		var ret string
		return ret
	}
	return *o.SourceType
}

// GetSourceTypeOk returns a tuple with the SourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetSourceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SourceType) {
		return nil, false
	}
	return o.SourceType, true
}

// HasSourceType returns a boolean if a field has been set.
func (o *Volume) HasSourceType() bool {
	if o != nil && !IsNil(o.SourceType) {
		return true
	}

	return false
}

// SetSourceType gets a reference to the given string and assigns it to the SourceType field.
func (o *Volume) SetSourceType(v string) {
	o.SourceType = &v
}

// GetSourceUuid returns the SourceUuid field value if set, zero value otherwise.
func (o *Volume) GetSourceUuid() string {
	if o == nil || IsNil(o.SourceUuid) {
		var ret string
		return ret
	}
	return *o.SourceUuid
}

// GetSourceUuidOk returns a tuple with the SourceUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetSourceUuidOk() (*string, bool) {
	if o == nil || IsNil(o.SourceUuid) {
		return nil, false
	}
	return o.SourceUuid, true
}

// HasSourceUuid returns a boolean if a field has been set.
func (o *Volume) HasSourceUuid() bool {
	if o != nil && !IsNil(o.SourceUuid) {
		return true
	}

	return false
}

// SetSourceUuid gets a reference to the given string and assigns it to the SourceUuid field.
func (o *Volume) SetSourceUuid(v string) {
	o.SourceUuid = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Volume) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Volume) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Volume) SetStatus(v string) {
	o.Status = &v
}

// GetTrashResource returns the TrashResource field value if set, zero value otherwise.
func (o *Volume) GetTrashResource() TrashResourceNestview {
	if o == nil || IsNil(o.TrashResource) {
		var ret TrashResourceNestview
		return ret
	}
	return *o.TrashResource
}

// GetTrashResourceOk returns a tuple with the TrashResource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetTrashResourceOk() (*TrashResourceNestview, bool) {
	if o == nil || IsNil(o.TrashResource) {
		return nil, false
	}
	return o.TrashResource, true
}

// HasTrashResource returns a boolean if a field has been set.
func (o *Volume) HasTrashResource() bool {
	if o != nil && !IsNil(o.TrashResource) {
		return true
	}

	return false
}

// SetTrashResource gets a reference to the given TrashResourceNestview and assigns it to the TrashResource field.
func (o *Volume) SetTrashResource(v TrashResourceNestview) {
	o.TrashResource = &v
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *Volume) GetUid() string {
	if o == nil || IsNil(o.Uid) {
		var ret string
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetUidOk() (*string, bool) {
	if o == nil || IsNil(o.Uid) {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *Volume) HasUid() bool {
	if o != nil && !IsNil(o.Uid) {
		return true
	}

	return false
}

// SetUid gets a reference to the given string and assigns it to the Uid field.
func (o *Volume) SetUid(v string) {
	o.Uid = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *Volume) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *Volume) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *Volume) SetUpdate(v time.Time) {
	o.Update = &v
}

// GetVolumeName returns the VolumeName field value if set, zero value otherwise.
func (o *Volume) GetVolumeName() string {
	if o == nil || IsNil(o.VolumeName) {
		var ret string
		return ret
	}
	return *o.VolumeName
}

// GetVolumeNameOk returns a tuple with the VolumeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Volume) GetVolumeNameOk() (*string, bool) {
	if o == nil || IsNil(o.VolumeName) {
		return nil, false
	}
	return o.VolumeName, true
}

// HasVolumeName returns a boolean if a field has been set.
func (o *Volume) HasVolumeName() bool {
	if o != nil && !IsNil(o.VolumeName) {
		return true
	}

	return false
}

// SetVolumeName gets a reference to the given string and assigns it to the VolumeName field.
func (o *Volume) SetVolumeName(v string) {
	o.VolumeName = &v
}

func (o Volume) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Volume) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessPath) {
		toSerialize["access_path"] = o.AccessPath
	}
	if !IsNil(o.ActionStatus) {
		toSerialize["action_status"] = o.ActionStatus
	}
	if !IsNil(o.AllocatedSize) {
		toSerialize["allocated_size"] = o.AllocatedSize
	}
	if !IsNil(o.AluaEnabled) {
		toSerialize["alua_enabled"] = o.AluaEnabled
	}
	if !IsNil(o.BlockSnapshotNum) {
		toSerialize["block_snapshot_num"] = o.BlockSnapshotNum
	}
	if !IsNil(o.BlockVolumeGroup) {
		toSerialize["block_volume_group"] = o.BlockVolumeGroup
	}
	if !IsNil(o.ClientGroupNum) {
		toSerialize["client_group_num"] = o.ClientGroupNum
	}
	if !IsNil(o.CloudPlatform) {
		toSerialize["cloud_platform"] = o.CloudPlatform
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.CrcCheck) {
		toSerialize["crc_check"] = o.CrcCheck
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DpBlockBackupPolicyNum) {
		toSerialize["dp_block_backup_policy_num"] = o.DpBlockBackupPolicyNum
	}
	if !IsNil(o.DpBlockReplicationPolicy) {
		toSerialize["dp_block_replication_policy"] = o.DpBlockReplicationPolicy
	}
	if !IsNil(o.DpBlockSnapshotPolicy) {
		toSerialize["dp_block_snapshot_policy"] = o.DpBlockSnapshotPolicy
	}
	if !IsNil(o.Flattened) {
		toSerialize["flattened"] = o.Flattened
	}
	if !IsNil(o.Format) {
		toSerialize["format"] = o.Format
	}
	if !IsNil(o.Hidden) {
		toSerialize["hidden"] = o.Hidden
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ImageId) {
		toSerialize["image_id"] = o.ImageId
	}
	if !IsNil(o.LatestSnapshotTime) {
		toSerialize["latest_snapshot_time"] = o.LatestSnapshotTime
	}
	if !IsNil(o.MigrationStripes) {
		toSerialize["migration_stripes"] = o.MigrationStripes
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OriginalName) {
		toSerialize["original_name"] = o.OriginalName
	}
	if !IsNil(o.OriginalVolumeName) {
		toSerialize["original_volume_name"] = o.OriginalVolumeName
	}
	if !IsNil(o.Passive) {
		toSerialize["passive"] = o.Passive
	}
	if !IsNil(o.PerformancePriority) {
		toSerialize["performance_priority"] = o.PerformancePriority
	}
	if !IsNil(o.Pool) {
		toSerialize["pool"] = o.Pool
	}
	if !IsNil(o.Progress) {
		toSerialize["progress"] = o.Progress
	}
	if !IsNil(o.Qos) {
		toSerialize["qos"] = o.Qos
	}
	if !IsNil(o.QosEnabled) {
		toSerialize["qos_enabled"] = o.QosEnabled
	}
	if !IsNil(o.RbdClient) {
		toSerialize["rbd_client"] = o.RbdClient
	}
	if !IsNil(o.Recycled) {
		toSerialize["recycled"] = o.Recycled
	}
	if !IsNil(o.RemoteCluster) {
		toSerialize["remote_cluster"] = o.RemoteCluster
	}
	if !IsNil(o.ReplicationDest) {
		toSerialize["replication_dest"] = o.ReplicationDest
	}
	if !IsNil(o.ReplicationPool) {
		toSerialize["replication_pool"] = o.ReplicationPool
	}
	if !IsNil(o.ReplicationPoolId) {
		toSerialize["replication_pool_id"] = o.ReplicationPoolId
	}
	if !IsNil(o.ReplicationPoolName) {
		toSerialize["replication_pool_name"] = o.ReplicationPoolName
	}
	if !IsNil(o.ReplicationRole) {
		toSerialize["replication_role"] = o.ReplicationRole
	}
	if !IsNil(o.ReplicationStatus) {
		toSerialize["replication_status"] = o.ReplicationStatus
	}
	if !IsNil(o.ReplicationVersion) {
		toSerialize["replication_version"] = o.ReplicationVersion
	}
	if !IsNil(o.ReplicationVolume) {
		toSerialize["replication_volume"] = o.ReplicationVolume
	}
	if !IsNil(o.ReplicationVolumeId) {
		toSerialize["replication_volume_id"] = o.ReplicationVolumeId
	}
	if !IsNil(o.ReplicationVolumeName) {
		toSerialize["replication_volume_name"] = o.ReplicationVolumeName
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.Sn) {
		toSerialize["sn"] = o.Sn
	}
	if !IsNil(o.Snapshot) {
		toSerialize["snapshot"] = o.Snapshot
	}
	if !IsNil(o.SnapshotReplicationRole) {
		toSerialize["snapshot_replication_role"] = o.SnapshotReplicationRole
	}
	if !IsNil(o.SnapshotReplicationStatus) {
		toSerialize["snapshot_replication_status"] = o.SnapshotReplicationStatus
	}
	if !IsNil(o.SourceType) {
		toSerialize["source_type"] = o.SourceType
	}
	if !IsNil(o.SourceUuid) {
		toSerialize["source_uuid"] = o.SourceUuid
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.TrashResource) {
		toSerialize["trash_resource"] = o.TrashResource
	}
	if !IsNil(o.Uid) {
		toSerialize["uid"] = o.Uid
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	if !IsNil(o.VolumeName) {
		toSerialize["volume_name"] = o.VolumeName
	}
	return toSerialize, nil
}

type NullableVolume struct {
	value *Volume
	isSet bool
}

func (v NullableVolume) Get() *Volume {
	return v.value
}

func (v *NullableVolume) Set(val *Volume) {
	v.value = val
	v.isSet = true
}

func (v NullableVolume) IsSet() bool {
	return v.isSet
}

func (v *NullableVolume) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolume(val *Volume) *NullableVolume {
	return &NullableVolume{value: val, isSet: true}
}

func (v NullableVolume) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolume) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


