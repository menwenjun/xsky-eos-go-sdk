/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AlertRuleResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertRuleResp{}

// AlertRuleResp struct for AlertRuleResp
type AlertRuleResp struct {
	AlertRule AlertRule `json:"alert_rule"`
}

type _AlertRuleResp AlertRuleResp

// NewAlertRuleResp instantiates a new AlertRuleResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertRuleResp(alertRule AlertRule) *AlertRuleResp {
	this := AlertRuleResp{}
	this.AlertRule = alertRule
	return &this
}

// NewAlertRuleRespWithDefaults instantiates a new AlertRuleResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertRuleRespWithDefaults() *AlertRuleResp {
	this := AlertRuleResp{}
	return &this
}

// GetAlertRule returns the AlertRule field value
func (o *AlertRuleResp) GetAlertRule() AlertRule {
	if o == nil {
		var ret AlertRule
		return ret
	}

	return o.AlertRule
}

// GetAlertRuleOk returns a tuple with the AlertRule field value
// and a boolean to check if the value has been set.
func (o *AlertRuleResp) GetAlertRuleOk() (*AlertRule, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AlertRule, true
}

// SetAlertRule sets field value
func (o *AlertRuleResp) SetAlertRule(v AlertRule) {
	o.AlertRule = v
}

func (o AlertRuleResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertRuleResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["alert_rule"] = o.AlertRule
	return toSerialize, nil
}

func (o *AlertRuleResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"alert_rule",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAlertRuleResp := _AlertRuleResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAlertRuleResp)

	if err != nil {
		return err
	}

	*o = AlertRuleResp(varAlertRuleResp)

	return err
}

type NullableAlertRuleResp struct {
	value *AlertRuleResp
	isSet bool
}

func (v NullableAlertRuleResp) Get() *AlertRuleResp {
	return v.value
}

func (v *NullableAlertRuleResp) Set(val *AlertRuleResp) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertRuleResp) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertRuleResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertRuleResp(val *AlertRuleResp) *NullableAlertRuleResp {
	return &NullableAlertRuleResp{value: val, isSet: true}
}

func (v NullableAlertRuleResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertRuleResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


