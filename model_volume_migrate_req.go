/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the VolumeMigrateReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeMigrateReq{}

// VolumeMigrateReq struct for VolumeMigrateReq
type VolumeMigrateReq struct {
	BlockVolume *VolumeMigrateReqVolume `json:"block_volume,omitempty"`
}

// NewVolumeMigrateReq instantiates a new VolumeMigrateReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeMigrateReq() *VolumeMigrateReq {
	this := VolumeMigrateReq{}
	return &this
}

// NewVolumeMigrateReqWithDefaults instantiates a new VolumeMigrateReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeMigrateReqWithDefaults() *VolumeMigrateReq {
	this := VolumeMigrateReq{}
	return &this
}

// GetBlockVolume returns the BlockVolume field value if set, zero value otherwise.
func (o *VolumeMigrateReq) GetBlockVolume() VolumeMigrateReqVolume {
	if o == nil || IsNil(o.BlockVolume) {
		var ret VolumeMigrateReqVolume
		return ret
	}
	return *o.BlockVolume
}

// GetBlockVolumeOk returns a tuple with the BlockVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeMigrateReq) GetBlockVolumeOk() (*VolumeMigrateReqVolume, bool) {
	if o == nil || IsNil(o.BlockVolume) {
		return nil, false
	}
	return o.BlockVolume, true
}

// HasBlockVolume returns a boolean if a field has been set.
func (o *VolumeMigrateReq) HasBlockVolume() bool {
	if o != nil && !IsNil(o.BlockVolume) {
		return true
	}

	return false
}

// SetBlockVolume gets a reference to the given VolumeMigrateReqVolume and assigns it to the BlockVolume field.
func (o *VolumeMigrateReq) SetBlockVolume(v VolumeMigrateReqVolume) {
	o.BlockVolume = &v
}

func (o VolumeMigrateReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeMigrateReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BlockVolume) {
		toSerialize["block_volume"] = o.BlockVolume
	}
	return toSerialize, nil
}

type NullableVolumeMigrateReq struct {
	value *VolumeMigrateReq
	isSet bool
}

func (v NullableVolumeMigrateReq) Get() *VolumeMigrateReq {
	return v.value
}

func (v *NullableVolumeMigrateReq) Set(val *VolumeMigrateReq) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeMigrateReq) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeMigrateReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeMigrateReq(val *VolumeMigrateReq) *NullableVolumeMigrateReq {
	return &NullableVolumeMigrateReq{value: val, isSet: true}
}

func (v NullableVolumeMigrateReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeMigrateReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


