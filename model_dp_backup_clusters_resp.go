/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DpBackupClustersResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DpBackupClustersResp{}

// DpBackupClustersResp struct for DpBackupClustersResp
type DpBackupClustersResp struct {
	// clusters
	BackupClusters []DpBackupCluster `json:"backup_clusters"`
}

type _DpBackupClustersResp DpBackupClustersResp

// NewDpBackupClustersResp instantiates a new DpBackupClustersResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDpBackupClustersResp(backupClusters []DpBackupCluster) *DpBackupClustersResp {
	this := DpBackupClustersResp{}
	this.BackupClusters = backupClusters
	return &this
}

// NewDpBackupClustersRespWithDefaults instantiates a new DpBackupClustersResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDpBackupClustersRespWithDefaults() *DpBackupClustersResp {
	this := DpBackupClustersResp{}
	return &this
}

// GetBackupClusters returns the BackupClusters field value
func (o *DpBackupClustersResp) GetBackupClusters() []DpBackupCluster {
	if o == nil {
		var ret []DpBackupCluster
		return ret
	}

	return o.BackupClusters
}

// GetBackupClustersOk returns a tuple with the BackupClusters field value
// and a boolean to check if the value has been set.
func (o *DpBackupClustersResp) GetBackupClustersOk() ([]DpBackupCluster, bool) {
	if o == nil {
		return nil, false
	}
	return o.BackupClusters, true
}

// SetBackupClusters sets field value
func (o *DpBackupClustersResp) SetBackupClusters(v []DpBackupCluster) {
	o.BackupClusters = v
}

func (o DpBackupClustersResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DpBackupClustersResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["backup_clusters"] = o.BackupClusters
	return toSerialize, nil
}

func (o *DpBackupClustersResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"backup_clusters",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDpBackupClustersResp := _DpBackupClustersResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDpBackupClustersResp)

	if err != nil {
		return err
	}

	*o = DpBackupClustersResp(varDpBackupClustersResp)

	return err
}

type NullableDpBackupClustersResp struct {
	value *DpBackupClustersResp
	isSet bool
}

func (v NullableDpBackupClustersResp) Get() *DpBackupClustersResp {
	return v.value
}

func (v *NullableDpBackupClustersResp) Set(val *DpBackupClustersResp) {
	v.value = val
	v.isSet = true
}

func (v NullableDpBackupClustersResp) IsSet() bool {
	return v.isSet
}

func (v *NullableDpBackupClustersResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDpBackupClustersResp(val *DpBackupClustersResp) *NullableDpBackupClustersResp {
	return &NullableDpBackupClustersResp{value: val, isSet: true}
}

func (v NullableDpBackupClustersResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDpBackupClustersResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


