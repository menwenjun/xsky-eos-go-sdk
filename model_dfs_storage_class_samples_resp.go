/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DfsStorageClassSamplesResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsStorageClassSamplesResp{}

// DfsStorageClassSamplesResp struct for DfsStorageClassSamplesResp
type DfsStorageClassSamplesResp struct {
	DfsStorageClassSamples []DfsTierStat `json:"dfs_storage_class_samples,omitempty"`
}

// NewDfsStorageClassSamplesResp instantiates a new DfsStorageClassSamplesResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsStorageClassSamplesResp() *DfsStorageClassSamplesResp {
	this := DfsStorageClassSamplesResp{}
	return &this
}

// NewDfsStorageClassSamplesRespWithDefaults instantiates a new DfsStorageClassSamplesResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsStorageClassSamplesRespWithDefaults() *DfsStorageClassSamplesResp {
	this := DfsStorageClassSamplesResp{}
	return &this
}

// GetDfsStorageClassSamples returns the DfsStorageClassSamples field value if set, zero value otherwise.
func (o *DfsStorageClassSamplesResp) GetDfsStorageClassSamples() []DfsTierStat {
	if o == nil || IsNil(o.DfsStorageClassSamples) {
		var ret []DfsTierStat
		return ret
	}
	return o.DfsStorageClassSamples
}

// GetDfsStorageClassSamplesOk returns a tuple with the DfsStorageClassSamples field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsStorageClassSamplesResp) GetDfsStorageClassSamplesOk() ([]DfsTierStat, bool) {
	if o == nil || IsNil(o.DfsStorageClassSamples) {
		return nil, false
	}
	return o.DfsStorageClassSamples, true
}

// HasDfsStorageClassSamples returns a boolean if a field has been set.
func (o *DfsStorageClassSamplesResp) HasDfsStorageClassSamples() bool {
	if o != nil && !IsNil(o.DfsStorageClassSamples) {
		return true
	}

	return false
}

// SetDfsStorageClassSamples gets a reference to the given []DfsTierStat and assigns it to the DfsStorageClassSamples field.
func (o *DfsStorageClassSamplesResp) SetDfsStorageClassSamples(v []DfsTierStat) {
	o.DfsStorageClassSamples = v
}

func (o DfsStorageClassSamplesResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsStorageClassSamplesResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DfsStorageClassSamples) {
		toSerialize["dfs_storage_class_samples"] = o.DfsStorageClassSamples
	}
	return toSerialize, nil
}

type NullableDfsStorageClassSamplesResp struct {
	value *DfsStorageClassSamplesResp
	isSet bool
}

func (v NullableDfsStorageClassSamplesResp) Get() *DfsStorageClassSamplesResp {
	return v.value
}

func (v *NullableDfsStorageClassSamplesResp) Set(val *DfsStorageClassSamplesResp) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsStorageClassSamplesResp) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsStorageClassSamplesResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsStorageClassSamplesResp(val *DfsStorageClassSamplesResp) *NullableDfsStorageClassSamplesResp {
	return &NullableDfsStorageClassSamplesResp{value: val, isSet: true}
}

func (v NullableDfsStorageClassSamplesResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsStorageClassSamplesResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


