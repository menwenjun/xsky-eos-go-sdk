/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HostValidatorCreateReqValidator type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HostValidatorCreateReqValidator{}

// HostValidatorCreateReqValidator struct for HostValidatorCreateReqValidator
type HostValidatorCreateReqValidator struct {
	AdminIp string `json:"admin_ip"`
	CheckTypes []string `json:"check_types,omitempty"`
	ClusterId *int64 `json:"cluster_id,omitempty"`
	GatewayIps []string `json:"gateway_ips,omitempty"`
	HostId *int64 `json:"host_id,omitempty"`
	HostRoles []string `json:"host_roles,omitempty"`
	HostType *string `json:"host_type,omitempty"`
	OspClusterIp *string `json:"osp_cluster_ip,omitempty"`
	OspGatewayIps []string `json:"osp_gateway_ips,omitempty"`
	PrivateIp *string `json:"private_ip,omitempty"`
	PublicIp *string `json:"public_ip,omitempty"`
}

type _HostValidatorCreateReqValidator HostValidatorCreateReqValidator

// NewHostValidatorCreateReqValidator instantiates a new HostValidatorCreateReqValidator object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHostValidatorCreateReqValidator(adminIp string) *HostValidatorCreateReqValidator {
	this := HostValidatorCreateReqValidator{}
	this.AdminIp = adminIp
	return &this
}

// NewHostValidatorCreateReqValidatorWithDefaults instantiates a new HostValidatorCreateReqValidator object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHostValidatorCreateReqValidatorWithDefaults() *HostValidatorCreateReqValidator {
	this := HostValidatorCreateReqValidator{}
	return &this
}

// GetAdminIp returns the AdminIp field value
func (o *HostValidatorCreateReqValidator) GetAdminIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AdminIp
}

// GetAdminIpOk returns a tuple with the AdminIp field value
// and a boolean to check if the value has been set.
func (o *HostValidatorCreateReqValidator) GetAdminIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdminIp, true
}

// SetAdminIp sets field value
func (o *HostValidatorCreateReqValidator) SetAdminIp(v string) {
	o.AdminIp = v
}

// GetCheckTypes returns the CheckTypes field value if set, zero value otherwise.
func (o *HostValidatorCreateReqValidator) GetCheckTypes() []string {
	if o == nil || IsNil(o.CheckTypes) {
		var ret []string
		return ret
	}
	return o.CheckTypes
}

// GetCheckTypesOk returns a tuple with the CheckTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostValidatorCreateReqValidator) GetCheckTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.CheckTypes) {
		return nil, false
	}
	return o.CheckTypes, true
}

// HasCheckTypes returns a boolean if a field has been set.
func (o *HostValidatorCreateReqValidator) HasCheckTypes() bool {
	if o != nil && !IsNil(o.CheckTypes) {
		return true
	}

	return false
}

// SetCheckTypes gets a reference to the given []string and assigns it to the CheckTypes field.
func (o *HostValidatorCreateReqValidator) SetCheckTypes(v []string) {
	o.CheckTypes = v
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise.
func (o *HostValidatorCreateReqValidator) GetClusterId() int64 {
	if o == nil || IsNil(o.ClusterId) {
		var ret int64
		return ret
	}
	return *o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostValidatorCreateReqValidator) GetClusterIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ClusterId) {
		return nil, false
	}
	return o.ClusterId, true
}

// HasClusterId returns a boolean if a field has been set.
func (o *HostValidatorCreateReqValidator) HasClusterId() bool {
	if o != nil && !IsNil(o.ClusterId) {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given int64 and assigns it to the ClusterId field.
func (o *HostValidatorCreateReqValidator) SetClusterId(v int64) {
	o.ClusterId = &v
}

// GetGatewayIps returns the GatewayIps field value if set, zero value otherwise.
func (o *HostValidatorCreateReqValidator) GetGatewayIps() []string {
	if o == nil || IsNil(o.GatewayIps) {
		var ret []string
		return ret
	}
	return o.GatewayIps
}

// GetGatewayIpsOk returns a tuple with the GatewayIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostValidatorCreateReqValidator) GetGatewayIpsOk() ([]string, bool) {
	if o == nil || IsNil(o.GatewayIps) {
		return nil, false
	}
	return o.GatewayIps, true
}

// HasGatewayIps returns a boolean if a field has been set.
func (o *HostValidatorCreateReqValidator) HasGatewayIps() bool {
	if o != nil && !IsNil(o.GatewayIps) {
		return true
	}

	return false
}

// SetGatewayIps gets a reference to the given []string and assigns it to the GatewayIps field.
func (o *HostValidatorCreateReqValidator) SetGatewayIps(v []string) {
	o.GatewayIps = v
}

// GetHostId returns the HostId field value if set, zero value otherwise.
func (o *HostValidatorCreateReqValidator) GetHostId() int64 {
	if o == nil || IsNil(o.HostId) {
		var ret int64
		return ret
	}
	return *o.HostId
}

// GetHostIdOk returns a tuple with the HostId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostValidatorCreateReqValidator) GetHostIdOk() (*int64, bool) {
	if o == nil || IsNil(o.HostId) {
		return nil, false
	}
	return o.HostId, true
}

// HasHostId returns a boolean if a field has been set.
func (o *HostValidatorCreateReqValidator) HasHostId() bool {
	if o != nil && !IsNil(o.HostId) {
		return true
	}

	return false
}

// SetHostId gets a reference to the given int64 and assigns it to the HostId field.
func (o *HostValidatorCreateReqValidator) SetHostId(v int64) {
	o.HostId = &v
}

// GetHostRoles returns the HostRoles field value if set, zero value otherwise.
func (o *HostValidatorCreateReqValidator) GetHostRoles() []string {
	if o == nil || IsNil(o.HostRoles) {
		var ret []string
		return ret
	}
	return o.HostRoles
}

// GetHostRolesOk returns a tuple with the HostRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostValidatorCreateReqValidator) GetHostRolesOk() ([]string, bool) {
	if o == nil || IsNil(o.HostRoles) {
		return nil, false
	}
	return o.HostRoles, true
}

// HasHostRoles returns a boolean if a field has been set.
func (o *HostValidatorCreateReqValidator) HasHostRoles() bool {
	if o != nil && !IsNil(o.HostRoles) {
		return true
	}

	return false
}

// SetHostRoles gets a reference to the given []string and assigns it to the HostRoles field.
func (o *HostValidatorCreateReqValidator) SetHostRoles(v []string) {
	o.HostRoles = v
}

// GetHostType returns the HostType field value if set, zero value otherwise.
func (o *HostValidatorCreateReqValidator) GetHostType() string {
	if o == nil || IsNil(o.HostType) {
		var ret string
		return ret
	}
	return *o.HostType
}

// GetHostTypeOk returns a tuple with the HostType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostValidatorCreateReqValidator) GetHostTypeOk() (*string, bool) {
	if o == nil || IsNil(o.HostType) {
		return nil, false
	}
	return o.HostType, true
}

// HasHostType returns a boolean if a field has been set.
func (o *HostValidatorCreateReqValidator) HasHostType() bool {
	if o != nil && !IsNil(o.HostType) {
		return true
	}

	return false
}

// SetHostType gets a reference to the given string and assigns it to the HostType field.
func (o *HostValidatorCreateReqValidator) SetHostType(v string) {
	o.HostType = &v
}

// GetOspClusterIp returns the OspClusterIp field value if set, zero value otherwise.
func (o *HostValidatorCreateReqValidator) GetOspClusterIp() string {
	if o == nil || IsNil(o.OspClusterIp) {
		var ret string
		return ret
	}
	return *o.OspClusterIp
}

// GetOspClusterIpOk returns a tuple with the OspClusterIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostValidatorCreateReqValidator) GetOspClusterIpOk() (*string, bool) {
	if o == nil || IsNil(o.OspClusterIp) {
		return nil, false
	}
	return o.OspClusterIp, true
}

// HasOspClusterIp returns a boolean if a field has been set.
func (o *HostValidatorCreateReqValidator) HasOspClusterIp() bool {
	if o != nil && !IsNil(o.OspClusterIp) {
		return true
	}

	return false
}

// SetOspClusterIp gets a reference to the given string and assigns it to the OspClusterIp field.
func (o *HostValidatorCreateReqValidator) SetOspClusterIp(v string) {
	o.OspClusterIp = &v
}

// GetOspGatewayIps returns the OspGatewayIps field value if set, zero value otherwise.
func (o *HostValidatorCreateReqValidator) GetOspGatewayIps() []string {
	if o == nil || IsNil(o.OspGatewayIps) {
		var ret []string
		return ret
	}
	return o.OspGatewayIps
}

// GetOspGatewayIpsOk returns a tuple with the OspGatewayIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostValidatorCreateReqValidator) GetOspGatewayIpsOk() ([]string, bool) {
	if o == nil || IsNil(o.OspGatewayIps) {
		return nil, false
	}
	return o.OspGatewayIps, true
}

// HasOspGatewayIps returns a boolean if a field has been set.
func (o *HostValidatorCreateReqValidator) HasOspGatewayIps() bool {
	if o != nil && !IsNil(o.OspGatewayIps) {
		return true
	}

	return false
}

// SetOspGatewayIps gets a reference to the given []string and assigns it to the OspGatewayIps field.
func (o *HostValidatorCreateReqValidator) SetOspGatewayIps(v []string) {
	o.OspGatewayIps = v
}

// GetPrivateIp returns the PrivateIp field value if set, zero value otherwise.
func (o *HostValidatorCreateReqValidator) GetPrivateIp() string {
	if o == nil || IsNil(o.PrivateIp) {
		var ret string
		return ret
	}
	return *o.PrivateIp
}

// GetPrivateIpOk returns a tuple with the PrivateIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostValidatorCreateReqValidator) GetPrivateIpOk() (*string, bool) {
	if o == nil || IsNil(o.PrivateIp) {
		return nil, false
	}
	return o.PrivateIp, true
}

// HasPrivateIp returns a boolean if a field has been set.
func (o *HostValidatorCreateReqValidator) HasPrivateIp() bool {
	if o != nil && !IsNil(o.PrivateIp) {
		return true
	}

	return false
}

// SetPrivateIp gets a reference to the given string and assigns it to the PrivateIp field.
func (o *HostValidatorCreateReqValidator) SetPrivateIp(v string) {
	o.PrivateIp = &v
}

// GetPublicIp returns the PublicIp field value if set, zero value otherwise.
func (o *HostValidatorCreateReqValidator) GetPublicIp() string {
	if o == nil || IsNil(o.PublicIp) {
		var ret string
		return ret
	}
	return *o.PublicIp
}

// GetPublicIpOk returns a tuple with the PublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostValidatorCreateReqValidator) GetPublicIpOk() (*string, bool) {
	if o == nil || IsNil(o.PublicIp) {
		return nil, false
	}
	return o.PublicIp, true
}

// HasPublicIp returns a boolean if a field has been set.
func (o *HostValidatorCreateReqValidator) HasPublicIp() bool {
	if o != nil && !IsNil(o.PublicIp) {
		return true
	}

	return false
}

// SetPublicIp gets a reference to the given string and assigns it to the PublicIp field.
func (o *HostValidatorCreateReqValidator) SetPublicIp(v string) {
	o.PublicIp = &v
}

func (o HostValidatorCreateReqValidator) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HostValidatorCreateReqValidator) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["admin_ip"] = o.AdminIp
	if !IsNil(o.CheckTypes) {
		toSerialize["check_types"] = o.CheckTypes
	}
	if !IsNil(o.ClusterId) {
		toSerialize["cluster_id"] = o.ClusterId
	}
	if !IsNil(o.GatewayIps) {
		toSerialize["gateway_ips"] = o.GatewayIps
	}
	if !IsNil(o.HostId) {
		toSerialize["host_id"] = o.HostId
	}
	if !IsNil(o.HostRoles) {
		toSerialize["host_roles"] = o.HostRoles
	}
	if !IsNil(o.HostType) {
		toSerialize["host_type"] = o.HostType
	}
	if !IsNil(o.OspClusterIp) {
		toSerialize["osp_cluster_ip"] = o.OspClusterIp
	}
	if !IsNil(o.OspGatewayIps) {
		toSerialize["osp_gateway_ips"] = o.OspGatewayIps
	}
	if !IsNil(o.PrivateIp) {
		toSerialize["private_ip"] = o.PrivateIp
	}
	if !IsNil(o.PublicIp) {
		toSerialize["public_ip"] = o.PublicIp
	}
	return toSerialize, nil
}

func (o *HostValidatorCreateReqValidator) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"admin_ip",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHostValidatorCreateReqValidator := _HostValidatorCreateReqValidator{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHostValidatorCreateReqValidator)

	if err != nil {
		return err
	}

	*o = HostValidatorCreateReqValidator(varHostValidatorCreateReqValidator)

	return err
}

type NullableHostValidatorCreateReqValidator struct {
	value *HostValidatorCreateReqValidator
	isSet bool
}

func (v NullableHostValidatorCreateReqValidator) Get() *HostValidatorCreateReqValidator {
	return v.value
}

func (v *NullableHostValidatorCreateReqValidator) Set(val *HostValidatorCreateReqValidator) {
	v.value = val
	v.isSet = true
}

func (v NullableHostValidatorCreateReqValidator) IsSet() bool {
	return v.isSet
}

func (v *NullableHostValidatorCreateReqValidator) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHostValidatorCreateReqValidator(val *HostValidatorCreateReqValidator) *NullableHostValidatorCreateReqValidator {
	return &NullableHostValidatorCreateReqValidator{value: val, isSet: true}
}

func (v NullableHostValidatorCreateReqValidator) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHostValidatorCreateReqValidator) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


