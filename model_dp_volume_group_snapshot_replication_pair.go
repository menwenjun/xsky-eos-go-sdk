/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the DpVolumeGroupSnapshotReplicationPair type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DpVolumeGroupSnapshotReplicationPair{}

// DpVolumeGroupSnapshotReplicationPair DpVolumeGroupSnapshotReplicationPair represent the snapshot replication relationship of a pair of a volume group
type DpVolumeGroupSnapshotReplicationPair struct {
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	Connected *bool `json:"connected,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	DpVolumeGroupSnapshotReplicationPolicy *DpVolumeGroupSnapshotReplicationPolicyNestview `json:"dp_volume_group_snapshot_replication_policy,omitempty"`
	Failovered *bool `json:"failovered,omitempty"`
	Id *int64 `json:"id,omitempty"`
	LastSuccessTime *time.Time `json:"last_success_time,omitempty"`
	LocalRole *string `json:"local_role,omitempty"`
	PairVolumeGroupId *int64 `json:"pair_volume_group_id,omitempty"`
	PairVolumeGroupName *string `json:"pair_volume_group_name,omitempty"`
	Paused *bool `json:"paused,omitempty"`
	PolicyCron *string `json:"policy_cron,omitempty"`
	PreStatus *string `json:"pre_status,omitempty"`
	RemoteCluster *RemoteClusterNestview `json:"remote_cluster,omitempty"`
	Status *string `json:"status,omitempty"`
	Update *time.Time `json:"update,omitempty"`
	VolumeGroup *VolumeGroupNestview `json:"volume_group,omitempty"`
}

// NewDpVolumeGroupSnapshotReplicationPair instantiates a new DpVolumeGroupSnapshotReplicationPair object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDpVolumeGroupSnapshotReplicationPair() *DpVolumeGroupSnapshotReplicationPair {
	this := DpVolumeGroupSnapshotReplicationPair{}
	return &this
}

// NewDpVolumeGroupSnapshotReplicationPairWithDefaults instantiates a new DpVolumeGroupSnapshotReplicationPair object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDpVolumeGroupSnapshotReplicationPairWithDefaults() *DpVolumeGroupSnapshotReplicationPair {
	this := DpVolumeGroupSnapshotReplicationPair{}
	return &this
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *DpVolumeGroupSnapshotReplicationPair) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpVolumeGroupSnapshotReplicationPair) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *DpVolumeGroupSnapshotReplicationPair) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *DpVolumeGroupSnapshotReplicationPair) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetConnected returns the Connected field value if set, zero value otherwise.
func (o *DpVolumeGroupSnapshotReplicationPair) GetConnected() bool {
	if o == nil || IsNil(o.Connected) {
		var ret bool
		return ret
	}
	return *o.Connected
}

// GetConnectedOk returns a tuple with the Connected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpVolumeGroupSnapshotReplicationPair) GetConnectedOk() (*bool, bool) {
	if o == nil || IsNil(o.Connected) {
		return nil, false
	}
	return o.Connected, true
}

// HasConnected returns a boolean if a field has been set.
func (o *DpVolumeGroupSnapshotReplicationPair) HasConnected() bool {
	if o != nil && !IsNil(o.Connected) {
		return true
	}

	return false
}

// SetConnected gets a reference to the given bool and assigns it to the Connected field.
func (o *DpVolumeGroupSnapshotReplicationPair) SetConnected(v bool) {
	o.Connected = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *DpVolumeGroupSnapshotReplicationPair) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpVolumeGroupSnapshotReplicationPair) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *DpVolumeGroupSnapshotReplicationPair) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *DpVolumeGroupSnapshotReplicationPair) SetCreate(v time.Time) {
	o.Create = &v
}

// GetDpVolumeGroupSnapshotReplicationPolicy returns the DpVolumeGroupSnapshotReplicationPolicy field value if set, zero value otherwise.
func (o *DpVolumeGroupSnapshotReplicationPair) GetDpVolumeGroupSnapshotReplicationPolicy() DpVolumeGroupSnapshotReplicationPolicyNestview {
	if o == nil || IsNil(o.DpVolumeGroupSnapshotReplicationPolicy) {
		var ret DpVolumeGroupSnapshotReplicationPolicyNestview
		return ret
	}
	return *o.DpVolumeGroupSnapshotReplicationPolicy
}

// GetDpVolumeGroupSnapshotReplicationPolicyOk returns a tuple with the DpVolumeGroupSnapshotReplicationPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpVolumeGroupSnapshotReplicationPair) GetDpVolumeGroupSnapshotReplicationPolicyOk() (*DpVolumeGroupSnapshotReplicationPolicyNestview, bool) {
	if o == nil || IsNil(o.DpVolumeGroupSnapshotReplicationPolicy) {
		return nil, false
	}
	return o.DpVolumeGroupSnapshotReplicationPolicy, true
}

// HasDpVolumeGroupSnapshotReplicationPolicy returns a boolean if a field has been set.
func (o *DpVolumeGroupSnapshotReplicationPair) HasDpVolumeGroupSnapshotReplicationPolicy() bool {
	if o != nil && !IsNil(o.DpVolumeGroupSnapshotReplicationPolicy) {
		return true
	}

	return false
}

// SetDpVolumeGroupSnapshotReplicationPolicy gets a reference to the given DpVolumeGroupSnapshotReplicationPolicyNestview and assigns it to the DpVolumeGroupSnapshotReplicationPolicy field.
func (o *DpVolumeGroupSnapshotReplicationPair) SetDpVolumeGroupSnapshotReplicationPolicy(v DpVolumeGroupSnapshotReplicationPolicyNestview) {
	o.DpVolumeGroupSnapshotReplicationPolicy = &v
}

// GetFailovered returns the Failovered field value if set, zero value otherwise.
func (o *DpVolumeGroupSnapshotReplicationPair) GetFailovered() bool {
	if o == nil || IsNil(o.Failovered) {
		var ret bool
		return ret
	}
	return *o.Failovered
}

// GetFailoveredOk returns a tuple with the Failovered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpVolumeGroupSnapshotReplicationPair) GetFailoveredOk() (*bool, bool) {
	if o == nil || IsNil(o.Failovered) {
		return nil, false
	}
	return o.Failovered, true
}

// HasFailovered returns a boolean if a field has been set.
func (o *DpVolumeGroupSnapshotReplicationPair) HasFailovered() bool {
	if o != nil && !IsNil(o.Failovered) {
		return true
	}

	return false
}

// SetFailovered gets a reference to the given bool and assigns it to the Failovered field.
func (o *DpVolumeGroupSnapshotReplicationPair) SetFailovered(v bool) {
	o.Failovered = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DpVolumeGroupSnapshotReplicationPair) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpVolumeGroupSnapshotReplicationPair) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DpVolumeGroupSnapshotReplicationPair) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *DpVolumeGroupSnapshotReplicationPair) SetId(v int64) {
	o.Id = &v
}

// GetLastSuccessTime returns the LastSuccessTime field value if set, zero value otherwise.
func (o *DpVolumeGroupSnapshotReplicationPair) GetLastSuccessTime() time.Time {
	if o == nil || IsNil(o.LastSuccessTime) {
		var ret time.Time
		return ret
	}
	return *o.LastSuccessTime
}

// GetLastSuccessTimeOk returns a tuple with the LastSuccessTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpVolumeGroupSnapshotReplicationPair) GetLastSuccessTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastSuccessTime) {
		return nil, false
	}
	return o.LastSuccessTime, true
}

// HasLastSuccessTime returns a boolean if a field has been set.
func (o *DpVolumeGroupSnapshotReplicationPair) HasLastSuccessTime() bool {
	if o != nil && !IsNil(o.LastSuccessTime) {
		return true
	}

	return false
}

// SetLastSuccessTime gets a reference to the given time.Time and assigns it to the LastSuccessTime field.
func (o *DpVolumeGroupSnapshotReplicationPair) SetLastSuccessTime(v time.Time) {
	o.LastSuccessTime = &v
}

// GetLocalRole returns the LocalRole field value if set, zero value otherwise.
func (o *DpVolumeGroupSnapshotReplicationPair) GetLocalRole() string {
	if o == nil || IsNil(o.LocalRole) {
		var ret string
		return ret
	}
	return *o.LocalRole
}

// GetLocalRoleOk returns a tuple with the LocalRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpVolumeGroupSnapshotReplicationPair) GetLocalRoleOk() (*string, bool) {
	if o == nil || IsNil(o.LocalRole) {
		return nil, false
	}
	return o.LocalRole, true
}

// HasLocalRole returns a boolean if a field has been set.
func (o *DpVolumeGroupSnapshotReplicationPair) HasLocalRole() bool {
	if o != nil && !IsNil(o.LocalRole) {
		return true
	}

	return false
}

// SetLocalRole gets a reference to the given string and assigns it to the LocalRole field.
func (o *DpVolumeGroupSnapshotReplicationPair) SetLocalRole(v string) {
	o.LocalRole = &v
}

// GetPairVolumeGroupId returns the PairVolumeGroupId field value if set, zero value otherwise.
func (o *DpVolumeGroupSnapshotReplicationPair) GetPairVolumeGroupId() int64 {
	if o == nil || IsNil(o.PairVolumeGroupId) {
		var ret int64
		return ret
	}
	return *o.PairVolumeGroupId
}

// GetPairVolumeGroupIdOk returns a tuple with the PairVolumeGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpVolumeGroupSnapshotReplicationPair) GetPairVolumeGroupIdOk() (*int64, bool) {
	if o == nil || IsNil(o.PairVolumeGroupId) {
		return nil, false
	}
	return o.PairVolumeGroupId, true
}

// HasPairVolumeGroupId returns a boolean if a field has been set.
func (o *DpVolumeGroupSnapshotReplicationPair) HasPairVolumeGroupId() bool {
	if o != nil && !IsNil(o.PairVolumeGroupId) {
		return true
	}

	return false
}

// SetPairVolumeGroupId gets a reference to the given int64 and assigns it to the PairVolumeGroupId field.
func (o *DpVolumeGroupSnapshotReplicationPair) SetPairVolumeGroupId(v int64) {
	o.PairVolumeGroupId = &v
}

// GetPairVolumeGroupName returns the PairVolumeGroupName field value if set, zero value otherwise.
func (o *DpVolumeGroupSnapshotReplicationPair) GetPairVolumeGroupName() string {
	if o == nil || IsNil(o.PairVolumeGroupName) {
		var ret string
		return ret
	}
	return *o.PairVolumeGroupName
}

// GetPairVolumeGroupNameOk returns a tuple with the PairVolumeGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpVolumeGroupSnapshotReplicationPair) GetPairVolumeGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.PairVolumeGroupName) {
		return nil, false
	}
	return o.PairVolumeGroupName, true
}

// HasPairVolumeGroupName returns a boolean if a field has been set.
func (o *DpVolumeGroupSnapshotReplicationPair) HasPairVolumeGroupName() bool {
	if o != nil && !IsNil(o.PairVolumeGroupName) {
		return true
	}

	return false
}

// SetPairVolumeGroupName gets a reference to the given string and assigns it to the PairVolumeGroupName field.
func (o *DpVolumeGroupSnapshotReplicationPair) SetPairVolumeGroupName(v string) {
	o.PairVolumeGroupName = &v
}

// GetPaused returns the Paused field value if set, zero value otherwise.
func (o *DpVolumeGroupSnapshotReplicationPair) GetPaused() bool {
	if o == nil || IsNil(o.Paused) {
		var ret bool
		return ret
	}
	return *o.Paused
}

// GetPausedOk returns a tuple with the Paused field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpVolumeGroupSnapshotReplicationPair) GetPausedOk() (*bool, bool) {
	if o == nil || IsNil(o.Paused) {
		return nil, false
	}
	return o.Paused, true
}

// HasPaused returns a boolean if a field has been set.
func (o *DpVolumeGroupSnapshotReplicationPair) HasPaused() bool {
	if o != nil && !IsNil(o.Paused) {
		return true
	}

	return false
}

// SetPaused gets a reference to the given bool and assigns it to the Paused field.
func (o *DpVolumeGroupSnapshotReplicationPair) SetPaused(v bool) {
	o.Paused = &v
}

// GetPolicyCron returns the PolicyCron field value if set, zero value otherwise.
func (o *DpVolumeGroupSnapshotReplicationPair) GetPolicyCron() string {
	if o == nil || IsNil(o.PolicyCron) {
		var ret string
		return ret
	}
	return *o.PolicyCron
}

// GetPolicyCronOk returns a tuple with the PolicyCron field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpVolumeGroupSnapshotReplicationPair) GetPolicyCronOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyCron) {
		return nil, false
	}
	return o.PolicyCron, true
}

// HasPolicyCron returns a boolean if a field has been set.
func (o *DpVolumeGroupSnapshotReplicationPair) HasPolicyCron() bool {
	if o != nil && !IsNil(o.PolicyCron) {
		return true
	}

	return false
}

// SetPolicyCron gets a reference to the given string and assigns it to the PolicyCron field.
func (o *DpVolumeGroupSnapshotReplicationPair) SetPolicyCron(v string) {
	o.PolicyCron = &v
}

// GetPreStatus returns the PreStatus field value if set, zero value otherwise.
func (o *DpVolumeGroupSnapshotReplicationPair) GetPreStatus() string {
	if o == nil || IsNil(o.PreStatus) {
		var ret string
		return ret
	}
	return *o.PreStatus
}

// GetPreStatusOk returns a tuple with the PreStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpVolumeGroupSnapshotReplicationPair) GetPreStatusOk() (*string, bool) {
	if o == nil || IsNil(o.PreStatus) {
		return nil, false
	}
	return o.PreStatus, true
}

// HasPreStatus returns a boolean if a field has been set.
func (o *DpVolumeGroupSnapshotReplicationPair) HasPreStatus() bool {
	if o != nil && !IsNil(o.PreStatus) {
		return true
	}

	return false
}

// SetPreStatus gets a reference to the given string and assigns it to the PreStatus field.
func (o *DpVolumeGroupSnapshotReplicationPair) SetPreStatus(v string) {
	o.PreStatus = &v
}

// GetRemoteCluster returns the RemoteCluster field value if set, zero value otherwise.
func (o *DpVolumeGroupSnapshotReplicationPair) GetRemoteCluster() RemoteClusterNestview {
	if o == nil || IsNil(o.RemoteCluster) {
		var ret RemoteClusterNestview
		return ret
	}
	return *o.RemoteCluster
}

// GetRemoteClusterOk returns a tuple with the RemoteCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpVolumeGroupSnapshotReplicationPair) GetRemoteClusterOk() (*RemoteClusterNestview, bool) {
	if o == nil || IsNil(o.RemoteCluster) {
		return nil, false
	}
	return o.RemoteCluster, true
}

// HasRemoteCluster returns a boolean if a field has been set.
func (o *DpVolumeGroupSnapshotReplicationPair) HasRemoteCluster() bool {
	if o != nil && !IsNil(o.RemoteCluster) {
		return true
	}

	return false
}

// SetRemoteCluster gets a reference to the given RemoteClusterNestview and assigns it to the RemoteCluster field.
func (o *DpVolumeGroupSnapshotReplicationPair) SetRemoteCluster(v RemoteClusterNestview) {
	o.RemoteCluster = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DpVolumeGroupSnapshotReplicationPair) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpVolumeGroupSnapshotReplicationPair) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DpVolumeGroupSnapshotReplicationPair) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DpVolumeGroupSnapshotReplicationPair) SetStatus(v string) {
	o.Status = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *DpVolumeGroupSnapshotReplicationPair) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpVolumeGroupSnapshotReplicationPair) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *DpVolumeGroupSnapshotReplicationPair) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *DpVolumeGroupSnapshotReplicationPair) SetUpdate(v time.Time) {
	o.Update = &v
}

// GetVolumeGroup returns the VolumeGroup field value if set, zero value otherwise.
func (o *DpVolumeGroupSnapshotReplicationPair) GetVolumeGroup() VolumeGroupNestview {
	if o == nil || IsNil(o.VolumeGroup) {
		var ret VolumeGroupNestview
		return ret
	}
	return *o.VolumeGroup
}

// GetVolumeGroupOk returns a tuple with the VolumeGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpVolumeGroupSnapshotReplicationPair) GetVolumeGroupOk() (*VolumeGroupNestview, bool) {
	if o == nil || IsNil(o.VolumeGroup) {
		return nil, false
	}
	return o.VolumeGroup, true
}

// HasVolumeGroup returns a boolean if a field has been set.
func (o *DpVolumeGroupSnapshotReplicationPair) HasVolumeGroup() bool {
	if o != nil && !IsNil(o.VolumeGroup) {
		return true
	}

	return false
}

// SetVolumeGroup gets a reference to the given VolumeGroupNestview and assigns it to the VolumeGroup field.
func (o *DpVolumeGroupSnapshotReplicationPair) SetVolumeGroup(v VolumeGroupNestview) {
	o.VolumeGroup = &v
}

func (o DpVolumeGroupSnapshotReplicationPair) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DpVolumeGroupSnapshotReplicationPair) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Connected) {
		toSerialize["connected"] = o.Connected
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.DpVolumeGroupSnapshotReplicationPolicy) {
		toSerialize["dp_volume_group_snapshot_replication_policy"] = o.DpVolumeGroupSnapshotReplicationPolicy
	}
	if !IsNil(o.Failovered) {
		toSerialize["failovered"] = o.Failovered
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LastSuccessTime) {
		toSerialize["last_success_time"] = o.LastSuccessTime
	}
	if !IsNil(o.LocalRole) {
		toSerialize["local_role"] = o.LocalRole
	}
	if !IsNil(o.PairVolumeGroupId) {
		toSerialize["pair_volume_group_id"] = o.PairVolumeGroupId
	}
	if !IsNil(o.PairVolumeGroupName) {
		toSerialize["pair_volume_group_name"] = o.PairVolumeGroupName
	}
	if !IsNil(o.Paused) {
		toSerialize["paused"] = o.Paused
	}
	if !IsNil(o.PolicyCron) {
		toSerialize["policy_cron"] = o.PolicyCron
	}
	if !IsNil(o.PreStatus) {
		toSerialize["pre_status"] = o.PreStatus
	}
	if !IsNil(o.RemoteCluster) {
		toSerialize["remote_cluster"] = o.RemoteCluster
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	if !IsNil(o.VolumeGroup) {
		toSerialize["volume_group"] = o.VolumeGroup
	}
	return toSerialize, nil
}

type NullableDpVolumeGroupSnapshotReplicationPair struct {
	value *DpVolumeGroupSnapshotReplicationPair
	isSet bool
}

func (v NullableDpVolumeGroupSnapshotReplicationPair) Get() *DpVolumeGroupSnapshotReplicationPair {
	return v.value
}

func (v *NullableDpVolumeGroupSnapshotReplicationPair) Set(val *DpVolumeGroupSnapshotReplicationPair) {
	v.value = val
	v.isSet = true
}

func (v NullableDpVolumeGroupSnapshotReplicationPair) IsSet() bool {
	return v.isSet
}

func (v *NullableDpVolumeGroupSnapshotReplicationPair) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDpVolumeGroupSnapshotReplicationPair(val *DpVolumeGroupSnapshotReplicationPair) *NullableDpVolumeGroupSnapshotReplicationPair {
	return &NullableDpVolumeGroupSnapshotReplicationPair{value: val, isSet: true}
}

func (v NullableDpVolumeGroupSnapshotReplicationPair) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDpVolumeGroupSnapshotReplicationPair) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


