/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MetadataClusterUpdatePrimaryDcReqMetadataCluster type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetadataClusterUpdatePrimaryDcReqMetadataCluster{}

// MetadataClusterUpdatePrimaryDcReqMetadataCluster struct for MetadataClusterUpdatePrimaryDcReqMetadataCluster
type MetadataClusterUpdatePrimaryDcReqMetadataCluster struct {
	// PrimaryPlacementNodeID is the primary placement node id of metadata cluster
	PrimaryPlacementNodeId *int64 `json:"primary_placement_node_id,omitempty"`
}

// NewMetadataClusterUpdatePrimaryDcReqMetadataCluster instantiates a new MetadataClusterUpdatePrimaryDcReqMetadataCluster object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetadataClusterUpdatePrimaryDcReqMetadataCluster() *MetadataClusterUpdatePrimaryDcReqMetadataCluster {
	this := MetadataClusterUpdatePrimaryDcReqMetadataCluster{}
	return &this
}

// NewMetadataClusterUpdatePrimaryDcReqMetadataClusterWithDefaults instantiates a new MetadataClusterUpdatePrimaryDcReqMetadataCluster object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetadataClusterUpdatePrimaryDcReqMetadataClusterWithDefaults() *MetadataClusterUpdatePrimaryDcReqMetadataCluster {
	this := MetadataClusterUpdatePrimaryDcReqMetadataCluster{}
	return &this
}

// GetPrimaryPlacementNodeId returns the PrimaryPlacementNodeId field value if set, zero value otherwise.
func (o *MetadataClusterUpdatePrimaryDcReqMetadataCluster) GetPrimaryPlacementNodeId() int64 {
	if o == nil || IsNil(o.PrimaryPlacementNodeId) {
		var ret int64
		return ret
	}
	return *o.PrimaryPlacementNodeId
}

// GetPrimaryPlacementNodeIdOk returns a tuple with the PrimaryPlacementNodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataClusterUpdatePrimaryDcReqMetadataCluster) GetPrimaryPlacementNodeIdOk() (*int64, bool) {
	if o == nil || IsNil(o.PrimaryPlacementNodeId) {
		return nil, false
	}
	return o.PrimaryPlacementNodeId, true
}

// HasPrimaryPlacementNodeId returns a boolean if a field has been set.
func (o *MetadataClusterUpdatePrimaryDcReqMetadataCluster) HasPrimaryPlacementNodeId() bool {
	if o != nil && !IsNil(o.PrimaryPlacementNodeId) {
		return true
	}

	return false
}

// SetPrimaryPlacementNodeId gets a reference to the given int64 and assigns it to the PrimaryPlacementNodeId field.
func (o *MetadataClusterUpdatePrimaryDcReqMetadataCluster) SetPrimaryPlacementNodeId(v int64) {
	o.PrimaryPlacementNodeId = &v
}

func (o MetadataClusterUpdatePrimaryDcReqMetadataCluster) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetadataClusterUpdatePrimaryDcReqMetadataCluster) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PrimaryPlacementNodeId) {
		toSerialize["primary_placement_node_id"] = o.PrimaryPlacementNodeId
	}
	return toSerialize, nil
}

type NullableMetadataClusterUpdatePrimaryDcReqMetadataCluster struct {
	value *MetadataClusterUpdatePrimaryDcReqMetadataCluster
	isSet bool
}

func (v NullableMetadataClusterUpdatePrimaryDcReqMetadataCluster) Get() *MetadataClusterUpdatePrimaryDcReqMetadataCluster {
	return v.value
}

func (v *NullableMetadataClusterUpdatePrimaryDcReqMetadataCluster) Set(val *MetadataClusterUpdatePrimaryDcReqMetadataCluster) {
	v.value = val
	v.isSet = true
}

func (v NullableMetadataClusterUpdatePrimaryDcReqMetadataCluster) IsSet() bool {
	return v.isSet
}

func (v *NullableMetadataClusterUpdatePrimaryDcReqMetadataCluster) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetadataClusterUpdatePrimaryDcReqMetadataCluster(val *MetadataClusterUpdatePrimaryDcReqMetadataCluster) *NullableMetadataClusterUpdatePrimaryDcReqMetadataCluster {
	return &NullableMetadataClusterUpdatePrimaryDcReqMetadataCluster{value: val, isSet: true}
}

func (v NullableMetadataClusterUpdatePrimaryDcReqMetadataCluster) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetadataClusterUpdatePrimaryDcReqMetadataCluster) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


