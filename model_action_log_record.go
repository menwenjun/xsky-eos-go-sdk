/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the ActionLogRecord type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActionLogRecord{}

// ActionLogRecord ActionLogRecord defines the response errors of action log
type ActionLogRecord struct {
	Action *string `json:"action,omitempty"`
	ClientIp *string `json:"client_ip,omitempty"`
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	Finish *time.Time `json:"finish,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Message *string `json:"message,omitempty"`
	NewData map[string]interface{} `json:"new_data,omitempty"`
	OldData map[string]interface{} `json:"old_data,omitempty"`
	OspCluster *ClusterNestview `json:"osp_cluster,omitempty"`
	Parameter *string `json:"parameter,omitempty"`
	Parent *ActionLogNestview `json:"parent,omitempty"`
	RelatedResources []map[string]interface{} `json:"related_resources,omitempty"`
	ResourceId *int64 `json:"resource_id,omitempty"`
	// key for resources not managed by us, can be used as resource id
	ResourceKey *string `json:"resource_key,omitempty"`
	ResourceType *string `json:"resource_type,omitempty"`
	Start *time.Time `json:"start,omitempty"`
	Status *string `json:"status,omitempty"`
	User *UserNestview `json:"user,omitempty"`
	ErrorRecords []ErrorRecord `json:"error_records,omitempty"`
}

// NewActionLogRecord instantiates a new ActionLogRecord object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionLogRecord() *ActionLogRecord {
	this := ActionLogRecord{}
	return &this
}

// NewActionLogRecordWithDefaults instantiates a new ActionLogRecord object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionLogRecordWithDefaults() *ActionLogRecord {
	this := ActionLogRecord{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *ActionLogRecord) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionLogRecord) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *ActionLogRecord) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *ActionLogRecord) SetAction(v string) {
	o.Action = &v
}

// GetClientIp returns the ClientIp field value if set, zero value otherwise.
func (o *ActionLogRecord) GetClientIp() string {
	if o == nil || IsNil(o.ClientIp) {
		var ret string
		return ret
	}
	return *o.ClientIp
}

// GetClientIpOk returns a tuple with the ClientIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionLogRecord) GetClientIpOk() (*string, bool) {
	if o == nil || IsNil(o.ClientIp) {
		return nil, false
	}
	return o.ClientIp, true
}

// HasClientIp returns a boolean if a field has been set.
func (o *ActionLogRecord) HasClientIp() bool {
	if o != nil && !IsNil(o.ClientIp) {
		return true
	}

	return false
}

// SetClientIp gets a reference to the given string and assigns it to the ClientIp field.
func (o *ActionLogRecord) SetClientIp(v string) {
	o.ClientIp = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *ActionLogRecord) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionLogRecord) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *ActionLogRecord) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *ActionLogRecord) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *ActionLogRecord) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionLogRecord) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *ActionLogRecord) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *ActionLogRecord) SetCreate(v time.Time) {
	o.Create = &v
}

// GetFinish returns the Finish field value if set, zero value otherwise.
func (o *ActionLogRecord) GetFinish() time.Time {
	if o == nil || IsNil(o.Finish) {
		var ret time.Time
		return ret
	}
	return *o.Finish
}

// GetFinishOk returns a tuple with the Finish field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionLogRecord) GetFinishOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Finish) {
		return nil, false
	}
	return o.Finish, true
}

// HasFinish returns a boolean if a field has been set.
func (o *ActionLogRecord) HasFinish() bool {
	if o != nil && !IsNil(o.Finish) {
		return true
	}

	return false
}

// SetFinish gets a reference to the given time.Time and assigns it to the Finish field.
func (o *ActionLogRecord) SetFinish(v time.Time) {
	o.Finish = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ActionLogRecord) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionLogRecord) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ActionLogRecord) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ActionLogRecord) SetId(v int64) {
	o.Id = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ActionLogRecord) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionLogRecord) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ActionLogRecord) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ActionLogRecord) SetMessage(v string) {
	o.Message = &v
}

// GetNewData returns the NewData field value if set, zero value otherwise.
func (o *ActionLogRecord) GetNewData() map[string]interface{} {
	if o == nil || IsNil(o.NewData) {
		var ret map[string]interface{}
		return ret
	}
	return o.NewData
}

// GetNewDataOk returns a tuple with the NewData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionLogRecord) GetNewDataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.NewData) {
		return map[string]interface{}{}, false
	}
	return o.NewData, true
}

// HasNewData returns a boolean if a field has been set.
func (o *ActionLogRecord) HasNewData() bool {
	if o != nil && !IsNil(o.NewData) {
		return true
	}

	return false
}

// SetNewData gets a reference to the given map[string]interface{} and assigns it to the NewData field.
func (o *ActionLogRecord) SetNewData(v map[string]interface{}) {
	o.NewData = v
}

// GetOldData returns the OldData field value if set, zero value otherwise.
func (o *ActionLogRecord) GetOldData() map[string]interface{} {
	if o == nil || IsNil(o.OldData) {
		var ret map[string]interface{}
		return ret
	}
	return o.OldData
}

// GetOldDataOk returns a tuple with the OldData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionLogRecord) GetOldDataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.OldData) {
		return map[string]interface{}{}, false
	}
	return o.OldData, true
}

// HasOldData returns a boolean if a field has been set.
func (o *ActionLogRecord) HasOldData() bool {
	if o != nil && !IsNil(o.OldData) {
		return true
	}

	return false
}

// SetOldData gets a reference to the given map[string]interface{} and assigns it to the OldData field.
func (o *ActionLogRecord) SetOldData(v map[string]interface{}) {
	o.OldData = v
}

// GetOspCluster returns the OspCluster field value if set, zero value otherwise.
func (o *ActionLogRecord) GetOspCluster() ClusterNestview {
	if o == nil || IsNil(o.OspCluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.OspCluster
}

// GetOspClusterOk returns a tuple with the OspCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionLogRecord) GetOspClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.OspCluster) {
		return nil, false
	}
	return o.OspCluster, true
}

// HasOspCluster returns a boolean if a field has been set.
func (o *ActionLogRecord) HasOspCluster() bool {
	if o != nil && !IsNil(o.OspCluster) {
		return true
	}

	return false
}

// SetOspCluster gets a reference to the given ClusterNestview and assigns it to the OspCluster field.
func (o *ActionLogRecord) SetOspCluster(v ClusterNestview) {
	o.OspCluster = &v
}

// GetParameter returns the Parameter field value if set, zero value otherwise.
func (o *ActionLogRecord) GetParameter() string {
	if o == nil || IsNil(o.Parameter) {
		var ret string
		return ret
	}
	return *o.Parameter
}

// GetParameterOk returns a tuple with the Parameter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionLogRecord) GetParameterOk() (*string, bool) {
	if o == nil || IsNil(o.Parameter) {
		return nil, false
	}
	return o.Parameter, true
}

// HasParameter returns a boolean if a field has been set.
func (o *ActionLogRecord) HasParameter() bool {
	if o != nil && !IsNil(o.Parameter) {
		return true
	}

	return false
}

// SetParameter gets a reference to the given string and assigns it to the Parameter field.
func (o *ActionLogRecord) SetParameter(v string) {
	o.Parameter = &v
}

// GetParent returns the Parent field value if set, zero value otherwise.
func (o *ActionLogRecord) GetParent() ActionLogNestview {
	if o == nil || IsNil(o.Parent) {
		var ret ActionLogNestview
		return ret
	}
	return *o.Parent
}

// GetParentOk returns a tuple with the Parent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionLogRecord) GetParentOk() (*ActionLogNestview, bool) {
	if o == nil || IsNil(o.Parent) {
		return nil, false
	}
	return o.Parent, true
}

// HasParent returns a boolean if a field has been set.
func (o *ActionLogRecord) HasParent() bool {
	if o != nil && !IsNil(o.Parent) {
		return true
	}

	return false
}

// SetParent gets a reference to the given ActionLogNestview and assigns it to the Parent field.
func (o *ActionLogRecord) SetParent(v ActionLogNestview) {
	o.Parent = &v
}

// GetRelatedResources returns the RelatedResources field value if set, zero value otherwise.
func (o *ActionLogRecord) GetRelatedResources() []map[string]interface{} {
	if o == nil || IsNil(o.RelatedResources) {
		var ret []map[string]interface{}
		return ret
	}
	return o.RelatedResources
}

// GetRelatedResourcesOk returns a tuple with the RelatedResources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionLogRecord) GetRelatedResourcesOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.RelatedResources) {
		return nil, false
	}
	return o.RelatedResources, true
}

// HasRelatedResources returns a boolean if a field has been set.
func (o *ActionLogRecord) HasRelatedResources() bool {
	if o != nil && !IsNil(o.RelatedResources) {
		return true
	}

	return false
}

// SetRelatedResources gets a reference to the given []map[string]interface{} and assigns it to the RelatedResources field.
func (o *ActionLogRecord) SetRelatedResources(v []map[string]interface{}) {
	o.RelatedResources = v
}

// GetResourceId returns the ResourceId field value if set, zero value otherwise.
func (o *ActionLogRecord) GetResourceId() int64 {
	if o == nil || IsNil(o.ResourceId) {
		var ret int64
		return ret
	}
	return *o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionLogRecord) GetResourceIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ResourceId) {
		return nil, false
	}
	return o.ResourceId, true
}

// HasResourceId returns a boolean if a field has been set.
func (o *ActionLogRecord) HasResourceId() bool {
	if o != nil && !IsNil(o.ResourceId) {
		return true
	}

	return false
}

// SetResourceId gets a reference to the given int64 and assigns it to the ResourceId field.
func (o *ActionLogRecord) SetResourceId(v int64) {
	o.ResourceId = &v
}

// GetResourceKey returns the ResourceKey field value if set, zero value otherwise.
func (o *ActionLogRecord) GetResourceKey() string {
	if o == nil || IsNil(o.ResourceKey) {
		var ret string
		return ret
	}
	return *o.ResourceKey
}

// GetResourceKeyOk returns a tuple with the ResourceKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionLogRecord) GetResourceKeyOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceKey) {
		return nil, false
	}
	return o.ResourceKey, true
}

// HasResourceKey returns a boolean if a field has been set.
func (o *ActionLogRecord) HasResourceKey() bool {
	if o != nil && !IsNil(o.ResourceKey) {
		return true
	}

	return false
}

// SetResourceKey gets a reference to the given string and assigns it to the ResourceKey field.
func (o *ActionLogRecord) SetResourceKey(v string) {
	o.ResourceKey = &v
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *ActionLogRecord) GetResourceType() string {
	if o == nil || IsNil(o.ResourceType) {
		var ret string
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionLogRecord) GetResourceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceType) {
		return nil, false
	}
	return o.ResourceType, true
}

// HasResourceType returns a boolean if a field has been set.
func (o *ActionLogRecord) HasResourceType() bool {
	if o != nil && !IsNil(o.ResourceType) {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given string and assigns it to the ResourceType field.
func (o *ActionLogRecord) SetResourceType(v string) {
	o.ResourceType = &v
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *ActionLogRecord) GetStart() time.Time {
	if o == nil || IsNil(o.Start) {
		var ret time.Time
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionLogRecord) GetStartOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Start) {
		return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *ActionLogRecord) HasStart() bool {
	if o != nil && !IsNil(o.Start) {
		return true
	}

	return false
}

// SetStart gets a reference to the given time.Time and assigns it to the Start field.
func (o *ActionLogRecord) SetStart(v time.Time) {
	o.Start = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ActionLogRecord) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionLogRecord) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ActionLogRecord) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ActionLogRecord) SetStatus(v string) {
	o.Status = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *ActionLogRecord) GetUser() UserNestview {
	if o == nil || IsNil(o.User) {
		var ret UserNestview
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionLogRecord) GetUserOk() (*UserNestview, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *ActionLogRecord) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given UserNestview and assigns it to the User field.
func (o *ActionLogRecord) SetUser(v UserNestview) {
	o.User = &v
}

// GetErrorRecords returns the ErrorRecords field value if set, zero value otherwise.
func (o *ActionLogRecord) GetErrorRecords() []ErrorRecord {
	if o == nil || IsNil(o.ErrorRecords) {
		var ret []ErrorRecord
		return ret
	}
	return o.ErrorRecords
}

// GetErrorRecordsOk returns a tuple with the ErrorRecords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionLogRecord) GetErrorRecordsOk() ([]ErrorRecord, bool) {
	if o == nil || IsNil(o.ErrorRecords) {
		return nil, false
	}
	return o.ErrorRecords, true
}

// HasErrorRecords returns a boolean if a field has been set.
func (o *ActionLogRecord) HasErrorRecords() bool {
	if o != nil && !IsNil(o.ErrorRecords) {
		return true
	}

	return false
}

// SetErrorRecords gets a reference to the given []ErrorRecord and assigns it to the ErrorRecords field.
func (o *ActionLogRecord) SetErrorRecords(v []ErrorRecord) {
	o.ErrorRecords = v
}

func (o ActionLogRecord) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActionLogRecord) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.ClientIp) {
		toSerialize["client_ip"] = o.ClientIp
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.Finish) {
		toSerialize["finish"] = o.Finish
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.NewData) {
		toSerialize["new_data"] = o.NewData
	}
	if !IsNil(o.OldData) {
		toSerialize["old_data"] = o.OldData
	}
	if !IsNil(o.OspCluster) {
		toSerialize["osp_cluster"] = o.OspCluster
	}
	if !IsNil(o.Parameter) {
		toSerialize["parameter"] = o.Parameter
	}
	if !IsNil(o.Parent) {
		toSerialize["parent"] = o.Parent
	}
	if !IsNil(o.RelatedResources) {
		toSerialize["related_resources"] = o.RelatedResources
	}
	if !IsNil(o.ResourceId) {
		toSerialize["resource_id"] = o.ResourceId
	}
	if !IsNil(o.ResourceKey) {
		toSerialize["resource_key"] = o.ResourceKey
	}
	if !IsNil(o.ResourceType) {
		toSerialize["resource_type"] = o.ResourceType
	}
	if !IsNil(o.Start) {
		toSerialize["start"] = o.Start
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.ErrorRecords) {
		toSerialize["error_records"] = o.ErrorRecords
	}
	return toSerialize, nil
}

type NullableActionLogRecord struct {
	value *ActionLogRecord
	isSet bool
}

func (v NullableActionLogRecord) Get() *ActionLogRecord {
	return v.value
}

func (v *NullableActionLogRecord) Set(val *ActionLogRecord) {
	v.value = val
	v.isSet = true
}

func (v NullableActionLogRecord) IsSet() bool {
	return v.isSet
}

func (v *NullableActionLogRecord) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionLogRecord(val *ActionLogRecord) *NullableActionLogRecord {
	return &NullableActionLogRecord{value: val, isSet: true}
}

func (v NullableActionLogRecord) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionLogRecord) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


