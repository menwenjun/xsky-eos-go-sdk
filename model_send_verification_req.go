/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SendVerificationReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SendVerificationReq{}

// SendVerificationReq struct for SendVerificationReq
type SendVerificationReq struct {
	Verification *SendVerificationReqVerification `json:"verification,omitempty"`
}

// NewSendVerificationReq instantiates a new SendVerificationReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSendVerificationReq() *SendVerificationReq {
	this := SendVerificationReq{}
	return &this
}

// NewSendVerificationReqWithDefaults instantiates a new SendVerificationReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSendVerificationReqWithDefaults() *SendVerificationReq {
	this := SendVerificationReq{}
	return &this
}

// GetVerification returns the Verification field value if set, zero value otherwise.
func (o *SendVerificationReq) GetVerification() SendVerificationReqVerification {
	if o == nil || IsNil(o.Verification) {
		var ret SendVerificationReqVerification
		return ret
	}
	return *o.Verification
}

// GetVerificationOk returns a tuple with the Verification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendVerificationReq) GetVerificationOk() (*SendVerificationReqVerification, bool) {
	if o == nil || IsNil(o.Verification) {
		return nil, false
	}
	return o.Verification, true
}

// HasVerification returns a boolean if a field has been set.
func (o *SendVerificationReq) HasVerification() bool {
	if o != nil && !IsNil(o.Verification) {
		return true
	}

	return false
}

// SetVerification gets a reference to the given SendVerificationReqVerification and assigns it to the Verification field.
func (o *SendVerificationReq) SetVerification(v SendVerificationReqVerification) {
	o.Verification = &v
}

func (o SendVerificationReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SendVerificationReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Verification) {
		toSerialize["verification"] = o.Verification
	}
	return toSerialize, nil
}

type NullableSendVerificationReq struct {
	value *SendVerificationReq
	isSet bool
}

func (v NullableSendVerificationReq) Get() *SendVerificationReq {
	return v.value
}

func (v *NullableSendVerificationReq) Set(val *SendVerificationReq) {
	v.value = val
	v.isSet = true
}

func (v NullableSendVerificationReq) IsSet() bool {
	return v.isSet
}

func (v *NullableSendVerificationReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSendVerificationReq(val *SendVerificationReq) *NullableSendVerificationReq {
	return &NullableSendVerificationReq{value: val, isSet: true}
}

func (v NullableSendVerificationReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSendVerificationReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


