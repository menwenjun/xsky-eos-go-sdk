/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the FCPortErrCode type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FCPortErrCode{}

// FCPortErrCode FCPortErrCode defines model of fc port errcode stats data
type FCPortErrCode struct {
	Create *time.Time `json:"create,omitempty"`
	ErrorFrames *int64 `json:"error_frames,omitempty"`
	ErrorFramesOffset *int64 `json:"error_frames_offset,omitempty"`
	ErrorFramesValue *int64 `json:"error_frames_value,omitempty"`
	FcPort *FCPortNestview `json:"fc_port,omitempty"`
	Id *int64 `json:"id,omitempty"`
	LinkFailureCount *int64 `json:"link_failure_count,omitempty"`
	LossOfSignalCount *int64 `json:"loss_of_signal_count,omitempty"`
	LossOfSyncCount *int64 `json:"loss_of_sync_count,omitempty"`
	Start *time.Time `json:"start,omitempty"`
	Update *time.Time `json:"update,omitempty"`
}

// NewFCPortErrCode instantiates a new FCPortErrCode object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFCPortErrCode() *FCPortErrCode {
	this := FCPortErrCode{}
	return &this
}

// NewFCPortErrCodeWithDefaults instantiates a new FCPortErrCode object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFCPortErrCodeWithDefaults() *FCPortErrCode {
	this := FCPortErrCode{}
	return &this
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *FCPortErrCode) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FCPortErrCode) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *FCPortErrCode) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *FCPortErrCode) SetCreate(v time.Time) {
	o.Create = &v
}

// GetErrorFrames returns the ErrorFrames field value if set, zero value otherwise.
func (o *FCPortErrCode) GetErrorFrames() int64 {
	if o == nil || IsNil(o.ErrorFrames) {
		var ret int64
		return ret
	}
	return *o.ErrorFrames
}

// GetErrorFramesOk returns a tuple with the ErrorFrames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FCPortErrCode) GetErrorFramesOk() (*int64, bool) {
	if o == nil || IsNil(o.ErrorFrames) {
		return nil, false
	}
	return o.ErrorFrames, true
}

// HasErrorFrames returns a boolean if a field has been set.
func (o *FCPortErrCode) HasErrorFrames() bool {
	if o != nil && !IsNil(o.ErrorFrames) {
		return true
	}

	return false
}

// SetErrorFrames gets a reference to the given int64 and assigns it to the ErrorFrames field.
func (o *FCPortErrCode) SetErrorFrames(v int64) {
	o.ErrorFrames = &v
}

// GetErrorFramesOffset returns the ErrorFramesOffset field value if set, zero value otherwise.
func (o *FCPortErrCode) GetErrorFramesOffset() int64 {
	if o == nil || IsNil(o.ErrorFramesOffset) {
		var ret int64
		return ret
	}
	return *o.ErrorFramesOffset
}

// GetErrorFramesOffsetOk returns a tuple with the ErrorFramesOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FCPortErrCode) GetErrorFramesOffsetOk() (*int64, bool) {
	if o == nil || IsNil(o.ErrorFramesOffset) {
		return nil, false
	}
	return o.ErrorFramesOffset, true
}

// HasErrorFramesOffset returns a boolean if a field has been set.
func (o *FCPortErrCode) HasErrorFramesOffset() bool {
	if o != nil && !IsNil(o.ErrorFramesOffset) {
		return true
	}

	return false
}

// SetErrorFramesOffset gets a reference to the given int64 and assigns it to the ErrorFramesOffset field.
func (o *FCPortErrCode) SetErrorFramesOffset(v int64) {
	o.ErrorFramesOffset = &v
}

// GetErrorFramesValue returns the ErrorFramesValue field value if set, zero value otherwise.
func (o *FCPortErrCode) GetErrorFramesValue() int64 {
	if o == nil || IsNil(o.ErrorFramesValue) {
		var ret int64
		return ret
	}
	return *o.ErrorFramesValue
}

// GetErrorFramesValueOk returns a tuple with the ErrorFramesValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FCPortErrCode) GetErrorFramesValueOk() (*int64, bool) {
	if o == nil || IsNil(o.ErrorFramesValue) {
		return nil, false
	}
	return o.ErrorFramesValue, true
}

// HasErrorFramesValue returns a boolean if a field has been set.
func (o *FCPortErrCode) HasErrorFramesValue() bool {
	if o != nil && !IsNil(o.ErrorFramesValue) {
		return true
	}

	return false
}

// SetErrorFramesValue gets a reference to the given int64 and assigns it to the ErrorFramesValue field.
func (o *FCPortErrCode) SetErrorFramesValue(v int64) {
	o.ErrorFramesValue = &v
}

// GetFcPort returns the FcPort field value if set, zero value otherwise.
func (o *FCPortErrCode) GetFcPort() FCPortNestview {
	if o == nil || IsNil(o.FcPort) {
		var ret FCPortNestview
		return ret
	}
	return *o.FcPort
}

// GetFcPortOk returns a tuple with the FcPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FCPortErrCode) GetFcPortOk() (*FCPortNestview, bool) {
	if o == nil || IsNil(o.FcPort) {
		return nil, false
	}
	return o.FcPort, true
}

// HasFcPort returns a boolean if a field has been set.
func (o *FCPortErrCode) HasFcPort() bool {
	if o != nil && !IsNil(o.FcPort) {
		return true
	}

	return false
}

// SetFcPort gets a reference to the given FCPortNestview and assigns it to the FcPort field.
func (o *FCPortErrCode) SetFcPort(v FCPortNestview) {
	o.FcPort = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FCPortErrCode) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FCPortErrCode) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FCPortErrCode) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *FCPortErrCode) SetId(v int64) {
	o.Id = &v
}

// GetLinkFailureCount returns the LinkFailureCount field value if set, zero value otherwise.
func (o *FCPortErrCode) GetLinkFailureCount() int64 {
	if o == nil || IsNil(o.LinkFailureCount) {
		var ret int64
		return ret
	}
	return *o.LinkFailureCount
}

// GetLinkFailureCountOk returns a tuple with the LinkFailureCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FCPortErrCode) GetLinkFailureCountOk() (*int64, bool) {
	if o == nil || IsNil(o.LinkFailureCount) {
		return nil, false
	}
	return o.LinkFailureCount, true
}

// HasLinkFailureCount returns a boolean if a field has been set.
func (o *FCPortErrCode) HasLinkFailureCount() bool {
	if o != nil && !IsNil(o.LinkFailureCount) {
		return true
	}

	return false
}

// SetLinkFailureCount gets a reference to the given int64 and assigns it to the LinkFailureCount field.
func (o *FCPortErrCode) SetLinkFailureCount(v int64) {
	o.LinkFailureCount = &v
}

// GetLossOfSignalCount returns the LossOfSignalCount field value if set, zero value otherwise.
func (o *FCPortErrCode) GetLossOfSignalCount() int64 {
	if o == nil || IsNil(o.LossOfSignalCount) {
		var ret int64
		return ret
	}
	return *o.LossOfSignalCount
}

// GetLossOfSignalCountOk returns a tuple with the LossOfSignalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FCPortErrCode) GetLossOfSignalCountOk() (*int64, bool) {
	if o == nil || IsNil(o.LossOfSignalCount) {
		return nil, false
	}
	return o.LossOfSignalCount, true
}

// HasLossOfSignalCount returns a boolean if a field has been set.
func (o *FCPortErrCode) HasLossOfSignalCount() bool {
	if o != nil && !IsNil(o.LossOfSignalCount) {
		return true
	}

	return false
}

// SetLossOfSignalCount gets a reference to the given int64 and assigns it to the LossOfSignalCount field.
func (o *FCPortErrCode) SetLossOfSignalCount(v int64) {
	o.LossOfSignalCount = &v
}

// GetLossOfSyncCount returns the LossOfSyncCount field value if set, zero value otherwise.
func (o *FCPortErrCode) GetLossOfSyncCount() int64 {
	if o == nil || IsNil(o.LossOfSyncCount) {
		var ret int64
		return ret
	}
	return *o.LossOfSyncCount
}

// GetLossOfSyncCountOk returns a tuple with the LossOfSyncCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FCPortErrCode) GetLossOfSyncCountOk() (*int64, bool) {
	if o == nil || IsNil(o.LossOfSyncCount) {
		return nil, false
	}
	return o.LossOfSyncCount, true
}

// HasLossOfSyncCount returns a boolean if a field has been set.
func (o *FCPortErrCode) HasLossOfSyncCount() bool {
	if o != nil && !IsNil(o.LossOfSyncCount) {
		return true
	}

	return false
}

// SetLossOfSyncCount gets a reference to the given int64 and assigns it to the LossOfSyncCount field.
func (o *FCPortErrCode) SetLossOfSyncCount(v int64) {
	o.LossOfSyncCount = &v
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *FCPortErrCode) GetStart() time.Time {
	if o == nil || IsNil(o.Start) {
		var ret time.Time
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FCPortErrCode) GetStartOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Start) {
		return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *FCPortErrCode) HasStart() bool {
	if o != nil && !IsNil(o.Start) {
		return true
	}

	return false
}

// SetStart gets a reference to the given time.Time and assigns it to the Start field.
func (o *FCPortErrCode) SetStart(v time.Time) {
	o.Start = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *FCPortErrCode) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FCPortErrCode) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *FCPortErrCode) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *FCPortErrCode) SetUpdate(v time.Time) {
	o.Update = &v
}

func (o FCPortErrCode) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FCPortErrCode) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.ErrorFrames) {
		toSerialize["error_frames"] = o.ErrorFrames
	}
	if !IsNil(o.ErrorFramesOffset) {
		toSerialize["error_frames_offset"] = o.ErrorFramesOffset
	}
	if !IsNil(o.ErrorFramesValue) {
		toSerialize["error_frames_value"] = o.ErrorFramesValue
	}
	if !IsNil(o.FcPort) {
		toSerialize["fc_port"] = o.FcPort
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LinkFailureCount) {
		toSerialize["link_failure_count"] = o.LinkFailureCount
	}
	if !IsNil(o.LossOfSignalCount) {
		toSerialize["loss_of_signal_count"] = o.LossOfSignalCount
	}
	if !IsNil(o.LossOfSyncCount) {
		toSerialize["loss_of_sync_count"] = o.LossOfSyncCount
	}
	if !IsNil(o.Start) {
		toSerialize["start"] = o.Start
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	return toSerialize, nil
}

type NullableFCPortErrCode struct {
	value *FCPortErrCode
	isSet bool
}

func (v NullableFCPortErrCode) Get() *FCPortErrCode {
	return v.value
}

func (v *NullableFCPortErrCode) Set(val *FCPortErrCode) {
	v.value = val
	v.isSet = true
}

func (v NullableFCPortErrCode) IsSet() bool {
	return v.isSet
}

func (v *NullableFCPortErrCode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFCPortErrCode(val *FCPortErrCode) *NullableFCPortErrCode {
	return &NullableFCPortErrCode{value: val, isSet: true}
}

func (v NullableFCPortErrCode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFCPortErrCode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


