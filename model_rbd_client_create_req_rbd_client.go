/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RBDClientCreateReqRBDClient type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RBDClientCreateReqRBDClient{}

// RBDClientCreateReqRBDClient struct for RBDClientCreateReqRBDClient
type RBDClientCreateReqRBDClient struct {
	// admin ip
	AdminIp string `json:"admin_ip"`
	// rbdc monitor listen port
	Port *int64 `json:"port,omitempty"`
	// public ip
	PublicIp *string `json:"public_ip,omitempty"`
	// public network
	PublicNetwork *string `json:"public_network,omitempty"`
	// token to access rbd client
	Token *string `json:"token,omitempty"`
	// rbd client type (managed or standalone)
	Type *string `json:"type,omitempty"`
}

type _RBDClientCreateReqRBDClient RBDClientCreateReqRBDClient

// NewRBDClientCreateReqRBDClient instantiates a new RBDClientCreateReqRBDClient object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRBDClientCreateReqRBDClient(adminIp string) *RBDClientCreateReqRBDClient {
	this := RBDClientCreateReqRBDClient{}
	this.AdminIp = adminIp
	return &this
}

// NewRBDClientCreateReqRBDClientWithDefaults instantiates a new RBDClientCreateReqRBDClient object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRBDClientCreateReqRBDClientWithDefaults() *RBDClientCreateReqRBDClient {
	this := RBDClientCreateReqRBDClient{}
	return &this
}

// GetAdminIp returns the AdminIp field value
func (o *RBDClientCreateReqRBDClient) GetAdminIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AdminIp
}

// GetAdminIpOk returns a tuple with the AdminIp field value
// and a boolean to check if the value has been set.
func (o *RBDClientCreateReqRBDClient) GetAdminIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdminIp, true
}

// SetAdminIp sets field value
func (o *RBDClientCreateReqRBDClient) SetAdminIp(v string) {
	o.AdminIp = v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *RBDClientCreateReqRBDClient) GetPort() int64 {
	if o == nil || IsNil(o.Port) {
		var ret int64
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RBDClientCreateReqRBDClient) GetPortOk() (*int64, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *RBDClientCreateReqRBDClient) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int64 and assigns it to the Port field.
func (o *RBDClientCreateReqRBDClient) SetPort(v int64) {
	o.Port = &v
}

// GetPublicIp returns the PublicIp field value if set, zero value otherwise.
func (o *RBDClientCreateReqRBDClient) GetPublicIp() string {
	if o == nil || IsNil(o.PublicIp) {
		var ret string
		return ret
	}
	return *o.PublicIp
}

// GetPublicIpOk returns a tuple with the PublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RBDClientCreateReqRBDClient) GetPublicIpOk() (*string, bool) {
	if o == nil || IsNil(o.PublicIp) {
		return nil, false
	}
	return o.PublicIp, true
}

// HasPublicIp returns a boolean if a field has been set.
func (o *RBDClientCreateReqRBDClient) HasPublicIp() bool {
	if o != nil && !IsNil(o.PublicIp) {
		return true
	}

	return false
}

// SetPublicIp gets a reference to the given string and assigns it to the PublicIp field.
func (o *RBDClientCreateReqRBDClient) SetPublicIp(v string) {
	o.PublicIp = &v
}

// GetPublicNetwork returns the PublicNetwork field value if set, zero value otherwise.
func (o *RBDClientCreateReqRBDClient) GetPublicNetwork() string {
	if o == nil || IsNil(o.PublicNetwork) {
		var ret string
		return ret
	}
	return *o.PublicNetwork
}

// GetPublicNetworkOk returns a tuple with the PublicNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RBDClientCreateReqRBDClient) GetPublicNetworkOk() (*string, bool) {
	if o == nil || IsNil(o.PublicNetwork) {
		return nil, false
	}
	return o.PublicNetwork, true
}

// HasPublicNetwork returns a boolean if a field has been set.
func (o *RBDClientCreateReqRBDClient) HasPublicNetwork() bool {
	if o != nil && !IsNil(o.PublicNetwork) {
		return true
	}

	return false
}

// SetPublicNetwork gets a reference to the given string and assigns it to the PublicNetwork field.
func (o *RBDClientCreateReqRBDClient) SetPublicNetwork(v string) {
	o.PublicNetwork = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *RBDClientCreateReqRBDClient) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RBDClientCreateReqRBDClient) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *RBDClientCreateReqRBDClient) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *RBDClientCreateReqRBDClient) SetToken(v string) {
	o.Token = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *RBDClientCreateReqRBDClient) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RBDClientCreateReqRBDClient) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *RBDClientCreateReqRBDClient) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *RBDClientCreateReqRBDClient) SetType(v string) {
	o.Type = &v
}

func (o RBDClientCreateReqRBDClient) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RBDClientCreateReqRBDClient) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["admin_ip"] = o.AdminIp
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.PublicIp) {
		toSerialize["public_ip"] = o.PublicIp
	}
	if !IsNil(o.PublicNetwork) {
		toSerialize["public_network"] = o.PublicNetwork
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

func (o *RBDClientCreateReqRBDClient) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"admin_ip",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRBDClientCreateReqRBDClient := _RBDClientCreateReqRBDClient{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRBDClientCreateReqRBDClient)

	if err != nil {
		return err
	}

	*o = RBDClientCreateReqRBDClient(varRBDClientCreateReqRBDClient)

	return err
}

type NullableRBDClientCreateReqRBDClient struct {
	value *RBDClientCreateReqRBDClient
	isSet bool
}

func (v NullableRBDClientCreateReqRBDClient) Get() *RBDClientCreateReqRBDClient {
	return v.value
}

func (v *NullableRBDClientCreateReqRBDClient) Set(val *RBDClientCreateReqRBDClient) {
	v.value = val
	v.isSet = true
}

func (v NullableRBDClientCreateReqRBDClient) IsSet() bool {
	return v.isSet
}

func (v *NullableRBDClientCreateReqRBDClient) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRBDClientCreateReqRBDClient(val *RBDClientCreateReqRBDClient) *NullableRBDClientCreateReqRBDClient {
	return &NullableRBDClientCreateReqRBDClient{value: val, isSet: true}
}

func (v NullableRBDClientCreateReqRBDClient) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRBDClientCreateReqRBDClient) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


