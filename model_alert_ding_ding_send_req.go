/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AlertDingDingSendReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertDingDingSendReq{}

// AlertDingDingSendReq struct for AlertDingDingSendReq
type AlertDingDingSendReq struct {
	AlertDingdingConfig *AlertDingDingSendReqAlertDingDingConfig `json:"alert_dingding_config,omitempty"`
	Body string `json:"body"`
}

type _AlertDingDingSendReq AlertDingDingSendReq

// NewAlertDingDingSendReq instantiates a new AlertDingDingSendReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertDingDingSendReq(body string) *AlertDingDingSendReq {
	this := AlertDingDingSendReq{}
	this.Body = body
	return &this
}

// NewAlertDingDingSendReqWithDefaults instantiates a new AlertDingDingSendReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertDingDingSendReqWithDefaults() *AlertDingDingSendReq {
	this := AlertDingDingSendReq{}
	return &this
}

// GetAlertDingdingConfig returns the AlertDingdingConfig field value if set, zero value otherwise.
func (o *AlertDingDingSendReq) GetAlertDingdingConfig() AlertDingDingSendReqAlertDingDingConfig {
	if o == nil || IsNil(o.AlertDingdingConfig) {
		var ret AlertDingDingSendReqAlertDingDingConfig
		return ret
	}
	return *o.AlertDingdingConfig
}

// GetAlertDingdingConfigOk returns a tuple with the AlertDingdingConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertDingDingSendReq) GetAlertDingdingConfigOk() (*AlertDingDingSendReqAlertDingDingConfig, bool) {
	if o == nil || IsNil(o.AlertDingdingConfig) {
		return nil, false
	}
	return o.AlertDingdingConfig, true
}

// HasAlertDingdingConfig returns a boolean if a field has been set.
func (o *AlertDingDingSendReq) HasAlertDingdingConfig() bool {
	if o != nil && !IsNil(o.AlertDingdingConfig) {
		return true
	}

	return false
}

// SetAlertDingdingConfig gets a reference to the given AlertDingDingSendReqAlertDingDingConfig and assigns it to the AlertDingdingConfig field.
func (o *AlertDingDingSendReq) SetAlertDingdingConfig(v AlertDingDingSendReqAlertDingDingConfig) {
	o.AlertDingdingConfig = &v
}

// GetBody returns the Body field value
func (o *AlertDingDingSendReq) GetBody() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Body
}

// GetBodyOk returns a tuple with the Body field value
// and a boolean to check if the value has been set.
func (o *AlertDingDingSendReq) GetBodyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Body, true
}

// SetBody sets field value
func (o *AlertDingDingSendReq) SetBody(v string) {
	o.Body = v
}

func (o AlertDingDingSendReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertDingDingSendReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlertDingdingConfig) {
		toSerialize["alert_dingding_config"] = o.AlertDingdingConfig
	}
	toSerialize["body"] = o.Body
	return toSerialize, nil
}

func (o *AlertDingDingSendReq) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"body",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAlertDingDingSendReq := _AlertDingDingSendReq{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAlertDingDingSendReq)

	if err != nil {
		return err
	}

	*o = AlertDingDingSendReq(varAlertDingDingSendReq)

	return err
}

type NullableAlertDingDingSendReq struct {
	value *AlertDingDingSendReq
	isSet bool
}

func (v NullableAlertDingDingSendReq) Get() *AlertDingDingSendReq {
	return v.value
}

func (v *NullableAlertDingDingSendReq) Set(val *AlertDingDingSendReq) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertDingDingSendReq) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertDingDingSendReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertDingDingSendReq(val *AlertDingDingSendReq) *NullableAlertDingDingSendReq {
	return &NullableAlertDingDingSendReq{value: val, isSet: true}
}

func (v NullableAlertDingDingSendReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertDingDingSendReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


