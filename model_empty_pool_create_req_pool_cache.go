/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EmptyPoolCreateReqPoolCache type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmptyPoolCreateReqPoolCache{}

// EmptyPoolCreateReqPoolCache struct for EmptyPoolCreateReqPoolCache
type EmptyPoolCreateReqPoolCache struct {
	CompressAlgorithm *string `json:"compress_algorithm,omitempty"`
	Compressed *bool `json:"compressed,omitempty"`
	OsdNumPerHost *int64 `json:"osd_num_per_host,omitempty"`
	Size *int64 `json:"size,omitempty"`
	SizePerOsd *int64 `json:"size_per_osd,omitempty"`
}

// NewEmptyPoolCreateReqPoolCache instantiates a new EmptyPoolCreateReqPoolCache object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmptyPoolCreateReqPoolCache() *EmptyPoolCreateReqPoolCache {
	this := EmptyPoolCreateReqPoolCache{}
	return &this
}

// NewEmptyPoolCreateReqPoolCacheWithDefaults instantiates a new EmptyPoolCreateReqPoolCache object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmptyPoolCreateReqPoolCacheWithDefaults() *EmptyPoolCreateReqPoolCache {
	this := EmptyPoolCreateReqPoolCache{}
	return &this
}

// GetCompressAlgorithm returns the CompressAlgorithm field value if set, zero value otherwise.
func (o *EmptyPoolCreateReqPoolCache) GetCompressAlgorithm() string {
	if o == nil || IsNil(o.CompressAlgorithm) {
		var ret string
		return ret
	}
	return *o.CompressAlgorithm
}

// GetCompressAlgorithmOk returns a tuple with the CompressAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmptyPoolCreateReqPoolCache) GetCompressAlgorithmOk() (*string, bool) {
	if o == nil || IsNil(o.CompressAlgorithm) {
		return nil, false
	}
	return o.CompressAlgorithm, true
}

// HasCompressAlgorithm returns a boolean if a field has been set.
func (o *EmptyPoolCreateReqPoolCache) HasCompressAlgorithm() bool {
	if o != nil && !IsNil(o.CompressAlgorithm) {
		return true
	}

	return false
}

// SetCompressAlgorithm gets a reference to the given string and assigns it to the CompressAlgorithm field.
func (o *EmptyPoolCreateReqPoolCache) SetCompressAlgorithm(v string) {
	o.CompressAlgorithm = &v
}

// GetCompressed returns the Compressed field value if set, zero value otherwise.
func (o *EmptyPoolCreateReqPoolCache) GetCompressed() bool {
	if o == nil || IsNil(o.Compressed) {
		var ret bool
		return ret
	}
	return *o.Compressed
}

// GetCompressedOk returns a tuple with the Compressed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmptyPoolCreateReqPoolCache) GetCompressedOk() (*bool, bool) {
	if o == nil || IsNil(o.Compressed) {
		return nil, false
	}
	return o.Compressed, true
}

// HasCompressed returns a boolean if a field has been set.
func (o *EmptyPoolCreateReqPoolCache) HasCompressed() bool {
	if o != nil && !IsNil(o.Compressed) {
		return true
	}

	return false
}

// SetCompressed gets a reference to the given bool and assigns it to the Compressed field.
func (o *EmptyPoolCreateReqPoolCache) SetCompressed(v bool) {
	o.Compressed = &v
}

// GetOsdNumPerHost returns the OsdNumPerHost field value if set, zero value otherwise.
func (o *EmptyPoolCreateReqPoolCache) GetOsdNumPerHost() int64 {
	if o == nil || IsNil(o.OsdNumPerHost) {
		var ret int64
		return ret
	}
	return *o.OsdNumPerHost
}

// GetOsdNumPerHostOk returns a tuple with the OsdNumPerHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmptyPoolCreateReqPoolCache) GetOsdNumPerHostOk() (*int64, bool) {
	if o == nil || IsNil(o.OsdNumPerHost) {
		return nil, false
	}
	return o.OsdNumPerHost, true
}

// HasOsdNumPerHost returns a boolean if a field has been set.
func (o *EmptyPoolCreateReqPoolCache) HasOsdNumPerHost() bool {
	if o != nil && !IsNil(o.OsdNumPerHost) {
		return true
	}

	return false
}

// SetOsdNumPerHost gets a reference to the given int64 and assigns it to the OsdNumPerHost field.
func (o *EmptyPoolCreateReqPoolCache) SetOsdNumPerHost(v int64) {
	o.OsdNumPerHost = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *EmptyPoolCreateReqPoolCache) GetSize() int64 {
	if o == nil || IsNil(o.Size) {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmptyPoolCreateReqPoolCache) GetSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *EmptyPoolCreateReqPoolCache) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *EmptyPoolCreateReqPoolCache) SetSize(v int64) {
	o.Size = &v
}

// GetSizePerOsd returns the SizePerOsd field value if set, zero value otherwise.
func (o *EmptyPoolCreateReqPoolCache) GetSizePerOsd() int64 {
	if o == nil || IsNil(o.SizePerOsd) {
		var ret int64
		return ret
	}
	return *o.SizePerOsd
}

// GetSizePerOsdOk returns a tuple with the SizePerOsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmptyPoolCreateReqPoolCache) GetSizePerOsdOk() (*int64, bool) {
	if o == nil || IsNil(o.SizePerOsd) {
		return nil, false
	}
	return o.SizePerOsd, true
}

// HasSizePerOsd returns a boolean if a field has been set.
func (o *EmptyPoolCreateReqPoolCache) HasSizePerOsd() bool {
	if o != nil && !IsNil(o.SizePerOsd) {
		return true
	}

	return false
}

// SetSizePerOsd gets a reference to the given int64 and assigns it to the SizePerOsd field.
func (o *EmptyPoolCreateReqPoolCache) SetSizePerOsd(v int64) {
	o.SizePerOsd = &v
}

func (o EmptyPoolCreateReqPoolCache) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmptyPoolCreateReqPoolCache) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CompressAlgorithm) {
		toSerialize["compress_algorithm"] = o.CompressAlgorithm
	}
	if !IsNil(o.Compressed) {
		toSerialize["compressed"] = o.Compressed
	}
	if !IsNil(o.OsdNumPerHost) {
		toSerialize["osd_num_per_host"] = o.OsdNumPerHost
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.SizePerOsd) {
		toSerialize["size_per_osd"] = o.SizePerOsd
	}
	return toSerialize, nil
}

type NullableEmptyPoolCreateReqPoolCache struct {
	value *EmptyPoolCreateReqPoolCache
	isSet bool
}

func (v NullableEmptyPoolCreateReqPoolCache) Get() *EmptyPoolCreateReqPoolCache {
	return v.value
}

func (v *NullableEmptyPoolCreateReqPoolCache) Set(val *EmptyPoolCreateReqPoolCache) {
	v.value = val
	v.isSet = true
}

func (v NullableEmptyPoolCreateReqPoolCache) IsSet() bool {
	return v.isSet
}

func (v *NullableEmptyPoolCreateReqPoolCache) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmptyPoolCreateReqPoolCache(val *EmptyPoolCreateReqPoolCache) *NullableEmptyPoolCreateReqPoolCache {
	return &NullableEmptyPoolCreateReqPoolCache{value: val, isSet: true}
}

func (v NullableEmptyPoolCreateReqPoolCache) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmptyPoolCreateReqPoolCache) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


