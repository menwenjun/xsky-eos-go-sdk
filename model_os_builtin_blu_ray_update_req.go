/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OSBuiltinBluRayUpdateReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OSBuiltinBluRayUpdateReq{}

// OSBuiltinBluRayUpdateReq struct for OSBuiltinBluRayUpdateReq
type OSBuiltinBluRayUpdateReq struct {
	OsBuiltinBluRay *OSBuiltinBluRayUpdateReqBuiltinBluRay `json:"os_builtin_blu_ray,omitempty"`
}

// NewOSBuiltinBluRayUpdateReq instantiates a new OSBuiltinBluRayUpdateReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOSBuiltinBluRayUpdateReq() *OSBuiltinBluRayUpdateReq {
	this := OSBuiltinBluRayUpdateReq{}
	return &this
}

// NewOSBuiltinBluRayUpdateReqWithDefaults instantiates a new OSBuiltinBluRayUpdateReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOSBuiltinBluRayUpdateReqWithDefaults() *OSBuiltinBluRayUpdateReq {
	this := OSBuiltinBluRayUpdateReq{}
	return &this
}

// GetOsBuiltinBluRay returns the OsBuiltinBluRay field value if set, zero value otherwise.
func (o *OSBuiltinBluRayUpdateReq) GetOsBuiltinBluRay() OSBuiltinBluRayUpdateReqBuiltinBluRay {
	if o == nil || IsNil(o.OsBuiltinBluRay) {
		var ret OSBuiltinBluRayUpdateReqBuiltinBluRay
		return ret
	}
	return *o.OsBuiltinBluRay
}

// GetOsBuiltinBluRayOk returns a tuple with the OsBuiltinBluRay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBuiltinBluRayUpdateReq) GetOsBuiltinBluRayOk() (*OSBuiltinBluRayUpdateReqBuiltinBluRay, bool) {
	if o == nil || IsNil(o.OsBuiltinBluRay) {
		return nil, false
	}
	return o.OsBuiltinBluRay, true
}

// HasOsBuiltinBluRay returns a boolean if a field has been set.
func (o *OSBuiltinBluRayUpdateReq) HasOsBuiltinBluRay() bool {
	if o != nil && !IsNil(o.OsBuiltinBluRay) {
		return true
	}

	return false
}

// SetOsBuiltinBluRay gets a reference to the given OSBuiltinBluRayUpdateReqBuiltinBluRay and assigns it to the OsBuiltinBluRay field.
func (o *OSBuiltinBluRayUpdateReq) SetOsBuiltinBluRay(v OSBuiltinBluRayUpdateReqBuiltinBluRay) {
	o.OsBuiltinBluRay = &v
}

func (o OSBuiltinBluRayUpdateReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OSBuiltinBluRayUpdateReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OsBuiltinBluRay) {
		toSerialize["os_builtin_blu_ray"] = o.OsBuiltinBluRay
	}
	return toSerialize, nil
}

type NullableOSBuiltinBluRayUpdateReq struct {
	value *OSBuiltinBluRayUpdateReq
	isSet bool
}

func (v NullableOSBuiltinBluRayUpdateReq) Get() *OSBuiltinBluRayUpdateReq {
	return v.value
}

func (v *NullableOSBuiltinBluRayUpdateReq) Set(val *OSBuiltinBluRayUpdateReq) {
	v.value = val
	v.isSet = true
}

func (v NullableOSBuiltinBluRayUpdateReq) IsSet() bool {
	return v.isSet
}

func (v *NullableOSBuiltinBluRayUpdateReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSBuiltinBluRayUpdateReq(val *OSBuiltinBluRayUpdateReq) *NullableOSBuiltinBluRayUpdateReq {
	return &NullableOSBuiltinBluRayUpdateReq{value: val, isSet: true}
}

func (v NullableOSBuiltinBluRayUpdateReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSBuiltinBluRayUpdateReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


