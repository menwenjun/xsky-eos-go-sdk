/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the VolumeGroupSnapshotReplicationProtectionReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeGroupSnapshotReplicationProtectionReq{}

// VolumeGroupSnapshotReplicationProtectionReq struct for VolumeGroupSnapshotReplicationProtectionReq
type VolumeGroupSnapshotReplicationProtectionReq struct {
	// destination volume name
	DestVolumeGroupName string `json:"dest_volume_group_name"`
	// policy
	DpVolumeGroupSnapshotReplicationPolicyId int64 `json:"dp_volume_group_snapshot_replication_policy_id"`
	// initial sync time
	InitialSyncTime *time.Time `json:"initial_sync_time,omitempty"`
	// volume pairs
	VolumePairs []VolumePairInfo `json:"volume_pairs"`
}

type _VolumeGroupSnapshotReplicationProtectionReq VolumeGroupSnapshotReplicationProtectionReq

// NewVolumeGroupSnapshotReplicationProtectionReq instantiates a new VolumeGroupSnapshotReplicationProtectionReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeGroupSnapshotReplicationProtectionReq(destVolumeGroupName string, dpVolumeGroupSnapshotReplicationPolicyId int64, volumePairs []VolumePairInfo) *VolumeGroupSnapshotReplicationProtectionReq {
	this := VolumeGroupSnapshotReplicationProtectionReq{}
	this.DestVolumeGroupName = destVolumeGroupName
	this.DpVolumeGroupSnapshotReplicationPolicyId = dpVolumeGroupSnapshotReplicationPolicyId
	this.VolumePairs = volumePairs
	return &this
}

// NewVolumeGroupSnapshotReplicationProtectionReqWithDefaults instantiates a new VolumeGroupSnapshotReplicationProtectionReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeGroupSnapshotReplicationProtectionReqWithDefaults() *VolumeGroupSnapshotReplicationProtectionReq {
	this := VolumeGroupSnapshotReplicationProtectionReq{}
	return &this
}

// GetDestVolumeGroupName returns the DestVolumeGroupName field value
func (o *VolumeGroupSnapshotReplicationProtectionReq) GetDestVolumeGroupName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DestVolumeGroupName
}

// GetDestVolumeGroupNameOk returns a tuple with the DestVolumeGroupName field value
// and a boolean to check if the value has been set.
func (o *VolumeGroupSnapshotReplicationProtectionReq) GetDestVolumeGroupNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestVolumeGroupName, true
}

// SetDestVolumeGroupName sets field value
func (o *VolumeGroupSnapshotReplicationProtectionReq) SetDestVolumeGroupName(v string) {
	o.DestVolumeGroupName = v
}

// GetDpVolumeGroupSnapshotReplicationPolicyId returns the DpVolumeGroupSnapshotReplicationPolicyId field value
func (o *VolumeGroupSnapshotReplicationProtectionReq) GetDpVolumeGroupSnapshotReplicationPolicyId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DpVolumeGroupSnapshotReplicationPolicyId
}

// GetDpVolumeGroupSnapshotReplicationPolicyIdOk returns a tuple with the DpVolumeGroupSnapshotReplicationPolicyId field value
// and a boolean to check if the value has been set.
func (o *VolumeGroupSnapshotReplicationProtectionReq) GetDpVolumeGroupSnapshotReplicationPolicyIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DpVolumeGroupSnapshotReplicationPolicyId, true
}

// SetDpVolumeGroupSnapshotReplicationPolicyId sets field value
func (o *VolumeGroupSnapshotReplicationProtectionReq) SetDpVolumeGroupSnapshotReplicationPolicyId(v int64) {
	o.DpVolumeGroupSnapshotReplicationPolicyId = v
}

// GetInitialSyncTime returns the InitialSyncTime field value if set, zero value otherwise.
func (o *VolumeGroupSnapshotReplicationProtectionReq) GetInitialSyncTime() time.Time {
	if o == nil || IsNil(o.InitialSyncTime) {
		var ret time.Time
		return ret
	}
	return *o.InitialSyncTime
}

// GetInitialSyncTimeOk returns a tuple with the InitialSyncTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupSnapshotReplicationProtectionReq) GetInitialSyncTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.InitialSyncTime) {
		return nil, false
	}
	return o.InitialSyncTime, true
}

// HasInitialSyncTime returns a boolean if a field has been set.
func (o *VolumeGroupSnapshotReplicationProtectionReq) HasInitialSyncTime() bool {
	if o != nil && !IsNil(o.InitialSyncTime) {
		return true
	}

	return false
}

// SetInitialSyncTime gets a reference to the given time.Time and assigns it to the InitialSyncTime field.
func (o *VolumeGroupSnapshotReplicationProtectionReq) SetInitialSyncTime(v time.Time) {
	o.InitialSyncTime = &v
}

// GetVolumePairs returns the VolumePairs field value
func (o *VolumeGroupSnapshotReplicationProtectionReq) GetVolumePairs() []VolumePairInfo {
	if o == nil {
		var ret []VolumePairInfo
		return ret
	}

	return o.VolumePairs
}

// GetVolumePairsOk returns a tuple with the VolumePairs field value
// and a boolean to check if the value has been set.
func (o *VolumeGroupSnapshotReplicationProtectionReq) GetVolumePairsOk() ([]VolumePairInfo, bool) {
	if o == nil {
		return nil, false
	}
	return o.VolumePairs, true
}

// SetVolumePairs sets field value
func (o *VolumeGroupSnapshotReplicationProtectionReq) SetVolumePairs(v []VolumePairInfo) {
	o.VolumePairs = v
}

func (o VolumeGroupSnapshotReplicationProtectionReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeGroupSnapshotReplicationProtectionReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dest_volume_group_name"] = o.DestVolumeGroupName
	toSerialize["dp_volume_group_snapshot_replication_policy_id"] = o.DpVolumeGroupSnapshotReplicationPolicyId
	if !IsNil(o.InitialSyncTime) {
		toSerialize["initial_sync_time"] = o.InitialSyncTime
	}
	toSerialize["volume_pairs"] = o.VolumePairs
	return toSerialize, nil
}

func (o *VolumeGroupSnapshotReplicationProtectionReq) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dest_volume_group_name",
		"dp_volume_group_snapshot_replication_policy_id",
		"volume_pairs",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVolumeGroupSnapshotReplicationProtectionReq := _VolumeGroupSnapshotReplicationProtectionReq{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVolumeGroupSnapshotReplicationProtectionReq)

	if err != nil {
		return err
	}

	*o = VolumeGroupSnapshotReplicationProtectionReq(varVolumeGroupSnapshotReplicationProtectionReq)

	return err
}

type NullableVolumeGroupSnapshotReplicationProtectionReq struct {
	value *VolumeGroupSnapshotReplicationProtectionReq
	isSet bool
}

func (v NullableVolumeGroupSnapshotReplicationProtectionReq) Get() *VolumeGroupSnapshotReplicationProtectionReq {
	return v.value
}

func (v *NullableVolumeGroupSnapshotReplicationProtectionReq) Set(val *VolumeGroupSnapshotReplicationProtectionReq) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeGroupSnapshotReplicationProtectionReq) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeGroupSnapshotReplicationProtectionReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeGroupSnapshotReplicationProtectionReq(val *VolumeGroupSnapshotReplicationProtectionReq) *NullableVolumeGroupSnapshotReplicationProtectionReq {
	return &NullableVolumeGroupSnapshotReplicationProtectionReq{value: val, isSet: true}
}

func (v NullableVolumeGroupSnapshotReplicationProtectionReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeGroupSnapshotReplicationProtectionReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


