/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the DfsSnapChangelistTask type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsSnapChangelistTask{}

// DfsSnapChangelistTask DfsSnapChangelistTask defines model of dfs snapshot changelist task
type DfsSnapChangelistTask struct {
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	DstName *string `json:"dst_name,omitempty"`
	DstSnapshot *DfsSnapshotNestview `json:"dst_snapshot,omitempty"`
	Gateway *DfsGatewayNestview `json:"gateway,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Path *string `json:"path,omitempty"`
	Result []string `json:"result,omitempty"`
	SrcName *string `json:"src_name,omitempty"`
	SrcSnapshot *DfsSnapshotNestview `json:"src_snapshot,omitempty"`
	Status *string `json:"status,omitempty"`
	Update *time.Time `json:"update,omitempty"`
}

// NewDfsSnapChangelistTask instantiates a new DfsSnapChangelistTask object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsSnapChangelistTask() *DfsSnapChangelistTask {
	this := DfsSnapChangelistTask{}
	return &this
}

// NewDfsSnapChangelistTaskWithDefaults instantiates a new DfsSnapChangelistTask object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsSnapChangelistTaskWithDefaults() *DfsSnapChangelistTask {
	this := DfsSnapChangelistTask{}
	return &this
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *DfsSnapChangelistTask) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSnapChangelistTask) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *DfsSnapChangelistTask) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *DfsSnapChangelistTask) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *DfsSnapChangelistTask) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSnapChangelistTask) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *DfsSnapChangelistTask) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *DfsSnapChangelistTask) SetCreate(v time.Time) {
	o.Create = &v
}

// GetDstName returns the DstName field value if set, zero value otherwise.
func (o *DfsSnapChangelistTask) GetDstName() string {
	if o == nil || IsNil(o.DstName) {
		var ret string
		return ret
	}
	return *o.DstName
}

// GetDstNameOk returns a tuple with the DstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSnapChangelistTask) GetDstNameOk() (*string, bool) {
	if o == nil || IsNil(o.DstName) {
		return nil, false
	}
	return o.DstName, true
}

// HasDstName returns a boolean if a field has been set.
func (o *DfsSnapChangelistTask) HasDstName() bool {
	if o != nil && !IsNil(o.DstName) {
		return true
	}

	return false
}

// SetDstName gets a reference to the given string and assigns it to the DstName field.
func (o *DfsSnapChangelistTask) SetDstName(v string) {
	o.DstName = &v
}

// GetDstSnapshot returns the DstSnapshot field value if set, zero value otherwise.
func (o *DfsSnapChangelistTask) GetDstSnapshot() DfsSnapshotNestview {
	if o == nil || IsNil(o.DstSnapshot) {
		var ret DfsSnapshotNestview
		return ret
	}
	return *o.DstSnapshot
}

// GetDstSnapshotOk returns a tuple with the DstSnapshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSnapChangelistTask) GetDstSnapshotOk() (*DfsSnapshotNestview, bool) {
	if o == nil || IsNil(o.DstSnapshot) {
		return nil, false
	}
	return o.DstSnapshot, true
}

// HasDstSnapshot returns a boolean if a field has been set.
func (o *DfsSnapChangelistTask) HasDstSnapshot() bool {
	if o != nil && !IsNil(o.DstSnapshot) {
		return true
	}

	return false
}

// SetDstSnapshot gets a reference to the given DfsSnapshotNestview and assigns it to the DstSnapshot field.
func (o *DfsSnapChangelistTask) SetDstSnapshot(v DfsSnapshotNestview) {
	o.DstSnapshot = &v
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *DfsSnapChangelistTask) GetGateway() DfsGatewayNestview {
	if o == nil || IsNil(o.Gateway) {
		var ret DfsGatewayNestview
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSnapChangelistTask) GetGatewayOk() (*DfsGatewayNestview, bool) {
	if o == nil || IsNil(o.Gateway) {
		return nil, false
	}
	return o.Gateway, true
}

// HasGateway returns a boolean if a field has been set.
func (o *DfsSnapChangelistTask) HasGateway() bool {
	if o != nil && !IsNil(o.Gateway) {
		return true
	}

	return false
}

// SetGateway gets a reference to the given DfsGatewayNestview and assigns it to the Gateway field.
func (o *DfsSnapChangelistTask) SetGateway(v DfsGatewayNestview) {
	o.Gateway = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DfsSnapChangelistTask) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSnapChangelistTask) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DfsSnapChangelistTask) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *DfsSnapChangelistTask) SetId(v int64) {
	o.Id = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *DfsSnapChangelistTask) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSnapChangelistTask) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *DfsSnapChangelistTask) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *DfsSnapChangelistTask) SetPath(v string) {
	o.Path = &v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *DfsSnapChangelistTask) GetResult() []string {
	if o == nil || IsNil(o.Result) {
		var ret []string
		return ret
	}
	return o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSnapChangelistTask) GetResultOk() ([]string, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *DfsSnapChangelistTask) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given []string and assigns it to the Result field.
func (o *DfsSnapChangelistTask) SetResult(v []string) {
	o.Result = v
}

// GetSrcName returns the SrcName field value if set, zero value otherwise.
func (o *DfsSnapChangelistTask) GetSrcName() string {
	if o == nil || IsNil(o.SrcName) {
		var ret string
		return ret
	}
	return *o.SrcName
}

// GetSrcNameOk returns a tuple with the SrcName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSnapChangelistTask) GetSrcNameOk() (*string, bool) {
	if o == nil || IsNil(o.SrcName) {
		return nil, false
	}
	return o.SrcName, true
}

// HasSrcName returns a boolean if a field has been set.
func (o *DfsSnapChangelistTask) HasSrcName() bool {
	if o != nil && !IsNil(o.SrcName) {
		return true
	}

	return false
}

// SetSrcName gets a reference to the given string and assigns it to the SrcName field.
func (o *DfsSnapChangelistTask) SetSrcName(v string) {
	o.SrcName = &v
}

// GetSrcSnapshot returns the SrcSnapshot field value if set, zero value otherwise.
func (o *DfsSnapChangelistTask) GetSrcSnapshot() DfsSnapshotNestview {
	if o == nil || IsNil(o.SrcSnapshot) {
		var ret DfsSnapshotNestview
		return ret
	}
	return *o.SrcSnapshot
}

// GetSrcSnapshotOk returns a tuple with the SrcSnapshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSnapChangelistTask) GetSrcSnapshotOk() (*DfsSnapshotNestview, bool) {
	if o == nil || IsNil(o.SrcSnapshot) {
		return nil, false
	}
	return o.SrcSnapshot, true
}

// HasSrcSnapshot returns a boolean if a field has been set.
func (o *DfsSnapChangelistTask) HasSrcSnapshot() bool {
	if o != nil && !IsNil(o.SrcSnapshot) {
		return true
	}

	return false
}

// SetSrcSnapshot gets a reference to the given DfsSnapshotNestview and assigns it to the SrcSnapshot field.
func (o *DfsSnapChangelistTask) SetSrcSnapshot(v DfsSnapshotNestview) {
	o.SrcSnapshot = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DfsSnapChangelistTask) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSnapChangelistTask) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DfsSnapChangelistTask) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DfsSnapChangelistTask) SetStatus(v string) {
	o.Status = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *DfsSnapChangelistTask) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSnapChangelistTask) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *DfsSnapChangelistTask) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *DfsSnapChangelistTask) SetUpdate(v time.Time) {
	o.Update = &v
}

func (o DfsSnapChangelistTask) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsSnapChangelistTask) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.DstName) {
		toSerialize["dst_name"] = o.DstName
	}
	if !IsNil(o.DstSnapshot) {
		toSerialize["dst_snapshot"] = o.DstSnapshot
	}
	if !IsNil(o.Gateway) {
		toSerialize["gateway"] = o.Gateway
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	if !IsNil(o.SrcName) {
		toSerialize["src_name"] = o.SrcName
	}
	if !IsNil(o.SrcSnapshot) {
		toSerialize["src_snapshot"] = o.SrcSnapshot
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	return toSerialize, nil
}

type NullableDfsSnapChangelistTask struct {
	value *DfsSnapChangelistTask
	isSet bool
}

func (v NullableDfsSnapChangelistTask) Get() *DfsSnapChangelistTask {
	return v.value
}

func (v *NullableDfsSnapChangelistTask) Set(val *DfsSnapChangelistTask) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsSnapChangelistTask) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsSnapChangelistTask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsSnapChangelistTask(val *DfsSnapChangelistTask) *NullableDfsSnapChangelistTask {
	return &NullableDfsSnapChangelistTask{value: val, isSet: true}
}

func (v NullableDfsSnapChangelistTask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsSnapChangelistTask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


