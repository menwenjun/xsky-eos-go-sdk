/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the S3LoadBalancerSamplesElem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &S3LoadBalancerSamplesElem{}

// S3LoadBalancerSamplesElem struct for S3LoadBalancerSamplesElem
type S3LoadBalancerSamplesElem struct {
	Id *int64 `json:"id,omitempty"`
	Paging *Paging `json:"paging,omitempty"`
	Samples []S3LoadBalancerStat `json:"samples,omitempty"`
}

// NewS3LoadBalancerSamplesElem instantiates a new S3LoadBalancerSamplesElem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewS3LoadBalancerSamplesElem() *S3LoadBalancerSamplesElem {
	this := S3LoadBalancerSamplesElem{}
	return &this
}

// NewS3LoadBalancerSamplesElemWithDefaults instantiates a new S3LoadBalancerSamplesElem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewS3LoadBalancerSamplesElemWithDefaults() *S3LoadBalancerSamplesElem {
	this := S3LoadBalancerSamplesElem{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *S3LoadBalancerSamplesElem) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3LoadBalancerSamplesElem) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *S3LoadBalancerSamplesElem) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *S3LoadBalancerSamplesElem) SetId(v int64) {
	o.Id = &v
}

// GetPaging returns the Paging field value if set, zero value otherwise.
func (o *S3LoadBalancerSamplesElem) GetPaging() Paging {
	if o == nil || IsNil(o.Paging) {
		var ret Paging
		return ret
	}
	return *o.Paging
}

// GetPagingOk returns a tuple with the Paging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3LoadBalancerSamplesElem) GetPagingOk() (*Paging, bool) {
	if o == nil || IsNil(o.Paging) {
		return nil, false
	}
	return o.Paging, true
}

// HasPaging returns a boolean if a field has been set.
func (o *S3LoadBalancerSamplesElem) HasPaging() bool {
	if o != nil && !IsNil(o.Paging) {
		return true
	}

	return false
}

// SetPaging gets a reference to the given Paging and assigns it to the Paging field.
func (o *S3LoadBalancerSamplesElem) SetPaging(v Paging) {
	o.Paging = &v
}

// GetSamples returns the Samples field value if set, zero value otherwise.
func (o *S3LoadBalancerSamplesElem) GetSamples() []S3LoadBalancerStat {
	if o == nil || IsNil(o.Samples) {
		var ret []S3LoadBalancerStat
		return ret
	}
	return o.Samples
}

// GetSamplesOk returns a tuple with the Samples field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3LoadBalancerSamplesElem) GetSamplesOk() ([]S3LoadBalancerStat, bool) {
	if o == nil || IsNil(o.Samples) {
		return nil, false
	}
	return o.Samples, true
}

// HasSamples returns a boolean if a field has been set.
func (o *S3LoadBalancerSamplesElem) HasSamples() bool {
	if o != nil && !IsNil(o.Samples) {
		return true
	}

	return false
}

// SetSamples gets a reference to the given []S3LoadBalancerStat and assigns it to the Samples field.
func (o *S3LoadBalancerSamplesElem) SetSamples(v []S3LoadBalancerStat) {
	o.Samples = v
}

func (o S3LoadBalancerSamplesElem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o S3LoadBalancerSamplesElem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Paging) {
		toSerialize["paging"] = o.Paging
	}
	if !IsNil(o.Samples) {
		toSerialize["samples"] = o.Samples
	}
	return toSerialize, nil
}

type NullableS3LoadBalancerSamplesElem struct {
	value *S3LoadBalancerSamplesElem
	isSet bool
}

func (v NullableS3LoadBalancerSamplesElem) Get() *S3LoadBalancerSamplesElem {
	return v.value
}

func (v *NullableS3LoadBalancerSamplesElem) Set(val *S3LoadBalancerSamplesElem) {
	v.value = val
	v.isSet = true
}

func (v NullableS3LoadBalancerSamplesElem) IsSet() bool {
	return v.isSet
}

func (v *NullableS3LoadBalancerSamplesElem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableS3LoadBalancerSamplesElem(val *S3LoadBalancerSamplesElem) *NullableS3LoadBalancerSamplesElem {
	return &NullableS3LoadBalancerSamplesElem{value: val, isSet: true}
}

func (v NullableS3LoadBalancerSamplesElem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableS3LoadBalancerSamplesElem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


