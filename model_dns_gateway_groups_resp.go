/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DNSGatewayGroupsResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DNSGatewayGroupsResp{}

// DNSGatewayGroupsResp struct for DNSGatewayGroupsResp
type DNSGatewayGroupsResp struct {
	// dns gateway group list
	DnsGatewayGroups []DNSGatewayGroup `json:"dns_gateway_groups,omitempty"`
}

// NewDNSGatewayGroupsResp instantiates a new DNSGatewayGroupsResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDNSGatewayGroupsResp() *DNSGatewayGroupsResp {
	this := DNSGatewayGroupsResp{}
	return &this
}

// NewDNSGatewayGroupsRespWithDefaults instantiates a new DNSGatewayGroupsResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDNSGatewayGroupsRespWithDefaults() *DNSGatewayGroupsResp {
	this := DNSGatewayGroupsResp{}
	return &this
}

// GetDnsGatewayGroups returns the DnsGatewayGroups field value if set, zero value otherwise.
func (o *DNSGatewayGroupsResp) GetDnsGatewayGroups() []DNSGatewayGroup {
	if o == nil || IsNil(o.DnsGatewayGroups) {
		var ret []DNSGatewayGroup
		return ret
	}
	return o.DnsGatewayGroups
}

// GetDnsGatewayGroupsOk returns a tuple with the DnsGatewayGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DNSGatewayGroupsResp) GetDnsGatewayGroupsOk() ([]DNSGatewayGroup, bool) {
	if o == nil || IsNil(o.DnsGatewayGroups) {
		return nil, false
	}
	return o.DnsGatewayGroups, true
}

// HasDnsGatewayGroups returns a boolean if a field has been set.
func (o *DNSGatewayGroupsResp) HasDnsGatewayGroups() bool {
	if o != nil && !IsNil(o.DnsGatewayGroups) {
		return true
	}

	return false
}

// SetDnsGatewayGroups gets a reference to the given []DNSGatewayGroup and assigns it to the DnsGatewayGroups field.
func (o *DNSGatewayGroupsResp) SetDnsGatewayGroups(v []DNSGatewayGroup) {
	o.DnsGatewayGroups = v
}

func (o DNSGatewayGroupsResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DNSGatewayGroupsResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DnsGatewayGroups) {
		toSerialize["dns_gateway_groups"] = o.DnsGatewayGroups
	}
	return toSerialize, nil
}

type NullableDNSGatewayGroupsResp struct {
	value *DNSGatewayGroupsResp
	isSet bool
}

func (v NullableDNSGatewayGroupsResp) Get() *DNSGatewayGroupsResp {
	return v.value
}

func (v *NullableDNSGatewayGroupsResp) Set(val *DNSGatewayGroupsResp) {
	v.value = val
	v.isSet = true
}

func (v NullableDNSGatewayGroupsResp) IsSet() bool {
	return v.isSet
}

func (v *NullableDNSGatewayGroupsResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDNSGatewayGroupsResp(val *DNSGatewayGroupsResp) *NullableDNSGatewayGroupsResp {
	return &NullableDNSGatewayGroupsResp{value: val, isSet: true}
}

func (v NullableDNSGatewayGroupsResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDNSGatewayGroupsResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


