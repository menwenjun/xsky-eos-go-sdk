/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DNSGatewayGroupCreateReqGroupVIPGroupsElt type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DNSGatewayGroupCreateReqGroupVIPGroupsElt{}

// DNSGatewayGroupCreateReqGroupVIPGroupsElt struct for DNSGatewayGroupCreateReqGroupVIPGroupsElt
type DNSGatewayGroupCreateReqGroupVIPGroupsElt struct {
	// network of vip group
	Network string `json:"network"`
	// vip list
	Vips []VIPArgs `json:"vips,omitempty"`
}

type _DNSGatewayGroupCreateReqGroupVIPGroupsElt DNSGatewayGroupCreateReqGroupVIPGroupsElt

// NewDNSGatewayGroupCreateReqGroupVIPGroupsElt instantiates a new DNSGatewayGroupCreateReqGroupVIPGroupsElt object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDNSGatewayGroupCreateReqGroupVIPGroupsElt(network string) *DNSGatewayGroupCreateReqGroupVIPGroupsElt {
	this := DNSGatewayGroupCreateReqGroupVIPGroupsElt{}
	this.Network = network
	return &this
}

// NewDNSGatewayGroupCreateReqGroupVIPGroupsEltWithDefaults instantiates a new DNSGatewayGroupCreateReqGroupVIPGroupsElt object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDNSGatewayGroupCreateReqGroupVIPGroupsEltWithDefaults() *DNSGatewayGroupCreateReqGroupVIPGroupsElt {
	this := DNSGatewayGroupCreateReqGroupVIPGroupsElt{}
	return &this
}

// GetNetwork returns the Network field value
func (o *DNSGatewayGroupCreateReqGroupVIPGroupsElt) GetNetwork() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Network
}

// GetNetworkOk returns a tuple with the Network field value
// and a boolean to check if the value has been set.
func (o *DNSGatewayGroupCreateReqGroupVIPGroupsElt) GetNetworkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Network, true
}

// SetNetwork sets field value
func (o *DNSGatewayGroupCreateReqGroupVIPGroupsElt) SetNetwork(v string) {
	o.Network = v
}

// GetVips returns the Vips field value if set, zero value otherwise.
func (o *DNSGatewayGroupCreateReqGroupVIPGroupsElt) GetVips() []VIPArgs {
	if o == nil || IsNil(o.Vips) {
		var ret []VIPArgs
		return ret
	}
	return o.Vips
}

// GetVipsOk returns a tuple with the Vips field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DNSGatewayGroupCreateReqGroupVIPGroupsElt) GetVipsOk() ([]VIPArgs, bool) {
	if o == nil || IsNil(o.Vips) {
		return nil, false
	}
	return o.Vips, true
}

// HasVips returns a boolean if a field has been set.
func (o *DNSGatewayGroupCreateReqGroupVIPGroupsElt) HasVips() bool {
	if o != nil && !IsNil(o.Vips) {
		return true
	}

	return false
}

// SetVips gets a reference to the given []VIPArgs and assigns it to the Vips field.
func (o *DNSGatewayGroupCreateReqGroupVIPGroupsElt) SetVips(v []VIPArgs) {
	o.Vips = v
}

func (o DNSGatewayGroupCreateReqGroupVIPGroupsElt) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DNSGatewayGroupCreateReqGroupVIPGroupsElt) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["network"] = o.Network
	if !IsNil(o.Vips) {
		toSerialize["vips"] = o.Vips
	}
	return toSerialize, nil
}

func (o *DNSGatewayGroupCreateReqGroupVIPGroupsElt) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"network",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDNSGatewayGroupCreateReqGroupVIPGroupsElt := _DNSGatewayGroupCreateReqGroupVIPGroupsElt{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDNSGatewayGroupCreateReqGroupVIPGroupsElt)

	if err != nil {
		return err
	}

	*o = DNSGatewayGroupCreateReqGroupVIPGroupsElt(varDNSGatewayGroupCreateReqGroupVIPGroupsElt)

	return err
}

type NullableDNSGatewayGroupCreateReqGroupVIPGroupsElt struct {
	value *DNSGatewayGroupCreateReqGroupVIPGroupsElt
	isSet bool
}

func (v NullableDNSGatewayGroupCreateReqGroupVIPGroupsElt) Get() *DNSGatewayGroupCreateReqGroupVIPGroupsElt {
	return v.value
}

func (v *NullableDNSGatewayGroupCreateReqGroupVIPGroupsElt) Set(val *DNSGatewayGroupCreateReqGroupVIPGroupsElt) {
	v.value = val
	v.isSet = true
}

func (v NullableDNSGatewayGroupCreateReqGroupVIPGroupsElt) IsSet() bool {
	return v.isSet
}

func (v *NullableDNSGatewayGroupCreateReqGroupVIPGroupsElt) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDNSGatewayGroupCreateReqGroupVIPGroupsElt(val *DNSGatewayGroupCreateReqGroupVIPGroupsElt) *NullableDNSGatewayGroupCreateReqGroupVIPGroupsElt {
	return &NullableDNSGatewayGroupCreateReqGroupVIPGroupsElt{value: val, isSet: true}
}

func (v NullableDNSGatewayGroupCreateReqGroupVIPGroupsElt) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDNSGatewayGroupCreateReqGroupVIPGroupsElt) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


