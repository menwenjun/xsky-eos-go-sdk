/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ActionLogUserResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActionLogUserResp{}

// ActionLogUserResp struct for ActionLogUserResp
type ActionLogUserResp struct {
	Roles []string `json:"roles,omitempty"`
	UserId *int64 `json:"user_id,omitempty"`
}

// NewActionLogUserResp instantiates a new ActionLogUserResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionLogUserResp() *ActionLogUserResp {
	this := ActionLogUserResp{}
	return &this
}

// NewActionLogUserRespWithDefaults instantiates a new ActionLogUserResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionLogUserRespWithDefaults() *ActionLogUserResp {
	this := ActionLogUserResp{}
	return &this
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *ActionLogUserResp) GetRoles() []string {
	if o == nil || IsNil(o.Roles) {
		var ret []string
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionLogUserResp) GetRolesOk() ([]string, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *ActionLogUserResp) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []string and assigns it to the Roles field.
func (o *ActionLogUserResp) SetRoles(v []string) {
	o.Roles = v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ActionLogUserResp) GetUserId() int64 {
	if o == nil || IsNil(o.UserId) {
		var ret int64
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionLogUserResp) GetUserIdOk() (*int64, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ActionLogUserResp) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int64 and assigns it to the UserId field.
func (o *ActionLogUserResp) SetUserId(v int64) {
	o.UserId = &v
}

func (o ActionLogUserResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActionLogUserResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	return toSerialize, nil
}

type NullableActionLogUserResp struct {
	value *ActionLogUserResp
	isSet bool
}

func (v NullableActionLogUserResp) Get() *ActionLogUserResp {
	return v.value
}

func (v *NullableActionLogUserResp) Set(val *ActionLogUserResp) {
	v.value = val
	v.isSet = true
}

func (v NullableActionLogUserResp) IsSet() bool {
	return v.isSet
}

func (v *NullableActionLogUserResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionLogUserResp(val *ActionLogUserResp) *NullableActionLogUserResp {
	return &NullableActionLogUserResp{value: val, isSet: true}
}

func (v NullableActionLogUserResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionLogUserResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


