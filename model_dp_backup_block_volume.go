/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DpBackupBlockVolume type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DpBackupBlockVolume{}

// DpBackupBlockVolume DpBackupBlockVolume is a block volume stored on a site
type DpBackupBlockVolume struct {
	Format *int64 `json:"format,omitempty"`
	Name *string `json:"name,omitempty"`
	Size *int64 `json:"size,omitempty"`
	VolumeName *string `json:"volume_name,omitempty"`
}

// NewDpBackupBlockVolume instantiates a new DpBackupBlockVolume object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDpBackupBlockVolume() *DpBackupBlockVolume {
	this := DpBackupBlockVolume{}
	return &this
}

// NewDpBackupBlockVolumeWithDefaults instantiates a new DpBackupBlockVolume object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDpBackupBlockVolumeWithDefaults() *DpBackupBlockVolume {
	this := DpBackupBlockVolume{}
	return &this
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *DpBackupBlockVolume) GetFormat() int64 {
	if o == nil || IsNil(o.Format) {
		var ret int64
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpBackupBlockVolume) GetFormatOk() (*int64, bool) {
	if o == nil || IsNil(o.Format) {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *DpBackupBlockVolume) HasFormat() bool {
	if o != nil && !IsNil(o.Format) {
		return true
	}

	return false
}

// SetFormat gets a reference to the given int64 and assigns it to the Format field.
func (o *DpBackupBlockVolume) SetFormat(v int64) {
	o.Format = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DpBackupBlockVolume) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpBackupBlockVolume) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DpBackupBlockVolume) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DpBackupBlockVolume) SetName(v string) {
	o.Name = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *DpBackupBlockVolume) GetSize() int64 {
	if o == nil || IsNil(o.Size) {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpBackupBlockVolume) GetSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *DpBackupBlockVolume) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *DpBackupBlockVolume) SetSize(v int64) {
	o.Size = &v
}

// GetVolumeName returns the VolumeName field value if set, zero value otherwise.
func (o *DpBackupBlockVolume) GetVolumeName() string {
	if o == nil || IsNil(o.VolumeName) {
		var ret string
		return ret
	}
	return *o.VolumeName
}

// GetVolumeNameOk returns a tuple with the VolumeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpBackupBlockVolume) GetVolumeNameOk() (*string, bool) {
	if o == nil || IsNil(o.VolumeName) {
		return nil, false
	}
	return o.VolumeName, true
}

// HasVolumeName returns a boolean if a field has been set.
func (o *DpBackupBlockVolume) HasVolumeName() bool {
	if o != nil && !IsNil(o.VolumeName) {
		return true
	}

	return false
}

// SetVolumeName gets a reference to the given string and assigns it to the VolumeName field.
func (o *DpBackupBlockVolume) SetVolumeName(v string) {
	o.VolumeName = &v
}

func (o DpBackupBlockVolume) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DpBackupBlockVolume) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Format) {
		toSerialize["format"] = o.Format
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.VolumeName) {
		toSerialize["volume_name"] = o.VolumeName
	}
	return toSerialize, nil
}

type NullableDpBackupBlockVolume struct {
	value *DpBackupBlockVolume
	isSet bool
}

func (v NullableDpBackupBlockVolume) Get() *DpBackupBlockVolume {
	return v.value
}

func (v *NullableDpBackupBlockVolume) Set(val *DpBackupBlockVolume) {
	v.value = val
	v.isSet = true
}

func (v NullableDpBackupBlockVolume) IsSet() bool {
	return v.isSet
}

func (v *NullableDpBackupBlockVolume) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDpBackupBlockVolume(val *DpBackupBlockVolume) *NullableDpBackupBlockVolume {
	return &NullableDpBackupBlockVolume{value: val, isSet: true}
}

func (v NullableDpBackupBlockVolume) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDpBackupBlockVolume) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


