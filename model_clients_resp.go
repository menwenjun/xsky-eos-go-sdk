/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ClientsResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClientsResp{}

// ClientsResp struct for ClientsResp
type ClientsResp struct {
	Clients []Client `json:"clients"`
}

type _ClientsResp ClientsResp

// NewClientsResp instantiates a new ClientsResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientsResp(clients []Client) *ClientsResp {
	this := ClientsResp{}
	this.Clients = clients
	return &this
}

// NewClientsRespWithDefaults instantiates a new ClientsResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientsRespWithDefaults() *ClientsResp {
	this := ClientsResp{}
	return &this
}

// GetClients returns the Clients field value
func (o *ClientsResp) GetClients() []Client {
	if o == nil {
		var ret []Client
		return ret
	}

	return o.Clients
}

// GetClientsOk returns a tuple with the Clients field value
// and a boolean to check if the value has been set.
func (o *ClientsResp) GetClientsOk() ([]Client, bool) {
	if o == nil {
		return nil, false
	}
	return o.Clients, true
}

// SetClients sets field value
func (o *ClientsResp) SetClients(v []Client) {
	o.Clients = v
}

func (o ClientsResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientsResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["clients"] = o.Clients
	return toSerialize, nil
}

func (o *ClientsResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"clients",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varClientsResp := _ClientsResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varClientsResp)

	if err != nil {
		return err
	}

	*o = ClientsResp(varClientsResp)

	return err
}

type NullableClientsResp struct {
	value *ClientsResp
	isSet bool
}

func (v NullableClientsResp) Get() *ClientsResp {
	return v.value
}

func (v *NullableClientsResp) Set(val *ClientsResp) {
	v.value = val
	v.isSet = true
}

func (v NullableClientsResp) IsSet() bool {
	return v.isSet
}

func (v *NullableClientsResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientsResp(val *ClientsResp) *NullableClientsResp {
	return &NullableClientsResp{value: val, isSet: true}
}

func (v NullableClientsResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientsResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


