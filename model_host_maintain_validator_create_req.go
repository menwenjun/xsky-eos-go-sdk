/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the HostMaintainValidatorCreateReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HostMaintainValidatorCreateReq{}

// HostMaintainValidatorCreateReq struct for HostMaintainValidatorCreateReq
type HostMaintainValidatorCreateReq struct {
	HostMaintainValidator *HostMaintainValidatorCreateReqValidator `json:"host_maintain_validator,omitempty"`
}

// NewHostMaintainValidatorCreateReq instantiates a new HostMaintainValidatorCreateReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHostMaintainValidatorCreateReq() *HostMaintainValidatorCreateReq {
	this := HostMaintainValidatorCreateReq{}
	return &this
}

// NewHostMaintainValidatorCreateReqWithDefaults instantiates a new HostMaintainValidatorCreateReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHostMaintainValidatorCreateReqWithDefaults() *HostMaintainValidatorCreateReq {
	this := HostMaintainValidatorCreateReq{}
	return &this
}

// GetHostMaintainValidator returns the HostMaintainValidator field value if set, zero value otherwise.
func (o *HostMaintainValidatorCreateReq) GetHostMaintainValidator() HostMaintainValidatorCreateReqValidator {
	if o == nil || IsNil(o.HostMaintainValidator) {
		var ret HostMaintainValidatorCreateReqValidator
		return ret
	}
	return *o.HostMaintainValidator
}

// GetHostMaintainValidatorOk returns a tuple with the HostMaintainValidator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostMaintainValidatorCreateReq) GetHostMaintainValidatorOk() (*HostMaintainValidatorCreateReqValidator, bool) {
	if o == nil || IsNil(o.HostMaintainValidator) {
		return nil, false
	}
	return o.HostMaintainValidator, true
}

// HasHostMaintainValidator returns a boolean if a field has been set.
func (o *HostMaintainValidatorCreateReq) HasHostMaintainValidator() bool {
	if o != nil && !IsNil(o.HostMaintainValidator) {
		return true
	}

	return false
}

// SetHostMaintainValidator gets a reference to the given HostMaintainValidatorCreateReqValidator and assigns it to the HostMaintainValidator field.
func (o *HostMaintainValidatorCreateReq) SetHostMaintainValidator(v HostMaintainValidatorCreateReqValidator) {
	o.HostMaintainValidator = &v
}

func (o HostMaintainValidatorCreateReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HostMaintainValidatorCreateReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HostMaintainValidator) {
		toSerialize["host_maintain_validator"] = o.HostMaintainValidator
	}
	return toSerialize, nil
}

type NullableHostMaintainValidatorCreateReq struct {
	value *HostMaintainValidatorCreateReq
	isSet bool
}

func (v NullableHostMaintainValidatorCreateReq) Get() *HostMaintainValidatorCreateReq {
	return v.value
}

func (v *NullableHostMaintainValidatorCreateReq) Set(val *HostMaintainValidatorCreateReq) {
	v.value = val
	v.isSet = true
}

func (v NullableHostMaintainValidatorCreateReq) IsSet() bool {
	return v.isSet
}

func (v *NullableHostMaintainValidatorCreateReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHostMaintainValidatorCreateReq(val *HostMaintainValidatorCreateReq) *NullableHostMaintainValidatorCreateReq {
	return &NullableHostMaintainValidatorCreateReq{value: val, isSet: true}
}

func (v NullableHostMaintainValidatorCreateReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHostMaintainValidatorCreateReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


