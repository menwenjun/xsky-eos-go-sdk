/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the IdentityPlatformsResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentityPlatformsResp{}

// IdentityPlatformsResp struct for IdentityPlatformsResp
type IdentityPlatformsResp struct {
	// identity platforms
	IdentityPlatforms []IdentityPlatform `json:"identity_platforms,omitempty"`
}

// NewIdentityPlatformsResp instantiates a new IdentityPlatformsResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityPlatformsResp() *IdentityPlatformsResp {
	this := IdentityPlatformsResp{}
	return &this
}

// NewIdentityPlatformsRespWithDefaults instantiates a new IdentityPlatformsResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityPlatformsRespWithDefaults() *IdentityPlatformsResp {
	this := IdentityPlatformsResp{}
	return &this
}

// GetIdentityPlatforms returns the IdentityPlatforms field value if set, zero value otherwise.
func (o *IdentityPlatformsResp) GetIdentityPlatforms() []IdentityPlatform {
	if o == nil || IsNil(o.IdentityPlatforms) {
		var ret []IdentityPlatform
		return ret
	}
	return o.IdentityPlatforms
}

// GetIdentityPlatformsOk returns a tuple with the IdentityPlatforms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityPlatformsResp) GetIdentityPlatformsOk() ([]IdentityPlatform, bool) {
	if o == nil || IsNil(o.IdentityPlatforms) {
		return nil, false
	}
	return o.IdentityPlatforms, true
}

// HasIdentityPlatforms returns a boolean if a field has been set.
func (o *IdentityPlatformsResp) HasIdentityPlatforms() bool {
	if o != nil && !IsNil(o.IdentityPlatforms) {
		return true
	}

	return false
}

// SetIdentityPlatforms gets a reference to the given []IdentityPlatform and assigns it to the IdentityPlatforms field.
func (o *IdentityPlatformsResp) SetIdentityPlatforms(v []IdentityPlatform) {
	o.IdentityPlatforms = v
}

func (o IdentityPlatformsResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentityPlatformsResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IdentityPlatforms) {
		toSerialize["identity_platforms"] = o.IdentityPlatforms
	}
	return toSerialize, nil
}

type NullableIdentityPlatformsResp struct {
	value *IdentityPlatformsResp
	isSet bool
}

func (v NullableIdentityPlatformsResp) Get() *IdentityPlatformsResp {
	return v.value
}

func (v *NullableIdentityPlatformsResp) Set(val *IdentityPlatformsResp) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityPlatformsResp) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityPlatformsResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityPlatformsResp(val *IdentityPlatformsResp) *NullableIdentityPlatformsResp {
	return &NullableIdentityPlatformsResp{value: val, isSet: true}
}

func (v NullableIdentityPlatformsResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityPlatformsResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


