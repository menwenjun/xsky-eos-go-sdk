/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AlertWechatSendReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertWechatSendReq{}

// AlertWechatSendReq struct for AlertWechatSendReq
type AlertWechatSendReq struct {
	AlertWechatConfig *AlertWechatSendReqAlertWechatConfig `json:"alert_wechat_config,omitempty"`
	AlertWechatSend AlertWechatSendReqAlertWechatSend `json:"alert_wechat_send"`
}

type _AlertWechatSendReq AlertWechatSendReq

// NewAlertWechatSendReq instantiates a new AlertWechatSendReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertWechatSendReq(alertWechatSend AlertWechatSendReqAlertWechatSend) *AlertWechatSendReq {
	this := AlertWechatSendReq{}
	this.AlertWechatSend = alertWechatSend
	return &this
}

// NewAlertWechatSendReqWithDefaults instantiates a new AlertWechatSendReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertWechatSendReqWithDefaults() *AlertWechatSendReq {
	this := AlertWechatSendReq{}
	return &this
}

// GetAlertWechatConfig returns the AlertWechatConfig field value if set, zero value otherwise.
func (o *AlertWechatSendReq) GetAlertWechatConfig() AlertWechatSendReqAlertWechatConfig {
	if o == nil || IsNil(o.AlertWechatConfig) {
		var ret AlertWechatSendReqAlertWechatConfig
		return ret
	}
	return *o.AlertWechatConfig
}

// GetAlertWechatConfigOk returns a tuple with the AlertWechatConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertWechatSendReq) GetAlertWechatConfigOk() (*AlertWechatSendReqAlertWechatConfig, bool) {
	if o == nil || IsNil(o.AlertWechatConfig) {
		return nil, false
	}
	return o.AlertWechatConfig, true
}

// HasAlertWechatConfig returns a boolean if a field has been set.
func (o *AlertWechatSendReq) HasAlertWechatConfig() bool {
	if o != nil && !IsNil(o.AlertWechatConfig) {
		return true
	}

	return false
}

// SetAlertWechatConfig gets a reference to the given AlertWechatSendReqAlertWechatConfig and assigns it to the AlertWechatConfig field.
func (o *AlertWechatSendReq) SetAlertWechatConfig(v AlertWechatSendReqAlertWechatConfig) {
	o.AlertWechatConfig = &v
}

// GetAlertWechatSend returns the AlertWechatSend field value
func (o *AlertWechatSendReq) GetAlertWechatSend() AlertWechatSendReqAlertWechatSend {
	if o == nil {
		var ret AlertWechatSendReqAlertWechatSend
		return ret
	}

	return o.AlertWechatSend
}

// GetAlertWechatSendOk returns a tuple with the AlertWechatSend field value
// and a boolean to check if the value has been set.
func (o *AlertWechatSendReq) GetAlertWechatSendOk() (*AlertWechatSendReqAlertWechatSend, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AlertWechatSend, true
}

// SetAlertWechatSend sets field value
func (o *AlertWechatSendReq) SetAlertWechatSend(v AlertWechatSendReqAlertWechatSend) {
	o.AlertWechatSend = v
}

func (o AlertWechatSendReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertWechatSendReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlertWechatConfig) {
		toSerialize["alert_wechat_config"] = o.AlertWechatConfig
	}
	toSerialize["alert_wechat_send"] = o.AlertWechatSend
	return toSerialize, nil
}

func (o *AlertWechatSendReq) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"alert_wechat_send",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAlertWechatSendReq := _AlertWechatSendReq{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAlertWechatSendReq)

	if err != nil {
		return err
	}

	*o = AlertWechatSendReq(varAlertWechatSendReq)

	return err
}

type NullableAlertWechatSendReq struct {
	value *AlertWechatSendReq
	isSet bool
}

func (v NullableAlertWechatSendReq) Get() *AlertWechatSendReq {
	return v.value
}

func (v *NullableAlertWechatSendReq) Set(val *AlertWechatSendReq) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertWechatSendReq) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertWechatSendReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertWechatSendReq(val *AlertWechatSendReq) *NullableAlertWechatSendReq {
	return &NullableAlertWechatSendReq{value: val, isSet: true}
}

func (v NullableAlertWechatSendReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertWechatSendReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


