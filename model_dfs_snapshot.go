/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the DfsSnapshot type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsSnapshot{}

// DfsSnapshot DfsSnapshot is the corresponding dfs snapshot record.
type DfsSnapshot struct {
	ActionStatus *string `json:"action_status,omitempty"`
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	Creator *string `json:"creator,omitempty"`
	Description *string `json:"description,omitempty"`
	DpDfsSnapshotPolicy *DpDfsSnapshotPolicyNestview `json:"dp_dfs_snapshot_policy,omitempty"`
	ExpireTime *time.Time `json:"expire_time,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Lock *bool `json:"lock,omitempty"`
	Name *string `json:"name,omitempty"`
	Path *DfsPathNestview `json:"path,omitempty"`
	Progress *float64 `json:"progress,omitempty"`
	Rootfs *DfsRootfsNestview `json:"rootfs,omitempty"`
	SnapshotName *string `json:"snapshot_name,omitempty"`
	Status *string `json:"status,omitempty"`
	Update *time.Time `json:"update,omitempty"`
}

// NewDfsSnapshot instantiates a new DfsSnapshot object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsSnapshot() *DfsSnapshot {
	this := DfsSnapshot{}
	return &this
}

// NewDfsSnapshotWithDefaults instantiates a new DfsSnapshot object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsSnapshotWithDefaults() *DfsSnapshot {
	this := DfsSnapshot{}
	return &this
}

// GetActionStatus returns the ActionStatus field value if set, zero value otherwise.
func (o *DfsSnapshot) GetActionStatus() string {
	if o == nil || IsNil(o.ActionStatus) {
		var ret string
		return ret
	}
	return *o.ActionStatus
}

// GetActionStatusOk returns a tuple with the ActionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSnapshot) GetActionStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ActionStatus) {
		return nil, false
	}
	return o.ActionStatus, true
}

// HasActionStatus returns a boolean if a field has been set.
func (o *DfsSnapshot) HasActionStatus() bool {
	if o != nil && !IsNil(o.ActionStatus) {
		return true
	}

	return false
}

// SetActionStatus gets a reference to the given string and assigns it to the ActionStatus field.
func (o *DfsSnapshot) SetActionStatus(v string) {
	o.ActionStatus = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *DfsSnapshot) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSnapshot) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *DfsSnapshot) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *DfsSnapshot) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *DfsSnapshot) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSnapshot) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *DfsSnapshot) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *DfsSnapshot) SetCreate(v time.Time) {
	o.Create = &v
}

// GetCreator returns the Creator field value if set, zero value otherwise.
func (o *DfsSnapshot) GetCreator() string {
	if o == nil || IsNil(o.Creator) {
		var ret string
		return ret
	}
	return *o.Creator
}

// GetCreatorOk returns a tuple with the Creator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSnapshot) GetCreatorOk() (*string, bool) {
	if o == nil || IsNil(o.Creator) {
		return nil, false
	}
	return o.Creator, true
}

// HasCreator returns a boolean if a field has been set.
func (o *DfsSnapshot) HasCreator() bool {
	if o != nil && !IsNil(o.Creator) {
		return true
	}

	return false
}

// SetCreator gets a reference to the given string and assigns it to the Creator field.
func (o *DfsSnapshot) SetCreator(v string) {
	o.Creator = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *DfsSnapshot) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSnapshot) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *DfsSnapshot) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DfsSnapshot) SetDescription(v string) {
	o.Description = &v
}

// GetDpDfsSnapshotPolicy returns the DpDfsSnapshotPolicy field value if set, zero value otherwise.
func (o *DfsSnapshot) GetDpDfsSnapshotPolicy() DpDfsSnapshotPolicyNestview {
	if o == nil || IsNil(o.DpDfsSnapshotPolicy) {
		var ret DpDfsSnapshotPolicyNestview
		return ret
	}
	return *o.DpDfsSnapshotPolicy
}

// GetDpDfsSnapshotPolicyOk returns a tuple with the DpDfsSnapshotPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSnapshot) GetDpDfsSnapshotPolicyOk() (*DpDfsSnapshotPolicyNestview, bool) {
	if o == nil || IsNil(o.DpDfsSnapshotPolicy) {
		return nil, false
	}
	return o.DpDfsSnapshotPolicy, true
}

// HasDpDfsSnapshotPolicy returns a boolean if a field has been set.
func (o *DfsSnapshot) HasDpDfsSnapshotPolicy() bool {
	if o != nil && !IsNil(o.DpDfsSnapshotPolicy) {
		return true
	}

	return false
}

// SetDpDfsSnapshotPolicy gets a reference to the given DpDfsSnapshotPolicyNestview and assigns it to the DpDfsSnapshotPolicy field.
func (o *DfsSnapshot) SetDpDfsSnapshotPolicy(v DpDfsSnapshotPolicyNestview) {
	o.DpDfsSnapshotPolicy = &v
}

// GetExpireTime returns the ExpireTime field value if set, zero value otherwise.
func (o *DfsSnapshot) GetExpireTime() time.Time {
	if o == nil || IsNil(o.ExpireTime) {
		var ret time.Time
		return ret
	}
	return *o.ExpireTime
}

// GetExpireTimeOk returns a tuple with the ExpireTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSnapshot) GetExpireTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpireTime) {
		return nil, false
	}
	return o.ExpireTime, true
}

// HasExpireTime returns a boolean if a field has been set.
func (o *DfsSnapshot) HasExpireTime() bool {
	if o != nil && !IsNil(o.ExpireTime) {
		return true
	}

	return false
}

// SetExpireTime gets a reference to the given time.Time and assigns it to the ExpireTime field.
func (o *DfsSnapshot) SetExpireTime(v time.Time) {
	o.ExpireTime = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DfsSnapshot) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSnapshot) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DfsSnapshot) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *DfsSnapshot) SetId(v int64) {
	o.Id = &v
}

// GetLock returns the Lock field value if set, zero value otherwise.
func (o *DfsSnapshot) GetLock() bool {
	if o == nil || IsNil(o.Lock) {
		var ret bool
		return ret
	}
	return *o.Lock
}

// GetLockOk returns a tuple with the Lock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSnapshot) GetLockOk() (*bool, bool) {
	if o == nil || IsNil(o.Lock) {
		return nil, false
	}
	return o.Lock, true
}

// HasLock returns a boolean if a field has been set.
func (o *DfsSnapshot) HasLock() bool {
	if o != nil && !IsNil(o.Lock) {
		return true
	}

	return false
}

// SetLock gets a reference to the given bool and assigns it to the Lock field.
func (o *DfsSnapshot) SetLock(v bool) {
	o.Lock = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DfsSnapshot) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSnapshot) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DfsSnapshot) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DfsSnapshot) SetName(v string) {
	o.Name = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *DfsSnapshot) GetPath() DfsPathNestview {
	if o == nil || IsNil(o.Path) {
		var ret DfsPathNestview
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSnapshot) GetPathOk() (*DfsPathNestview, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *DfsSnapshot) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given DfsPathNestview and assigns it to the Path field.
func (o *DfsSnapshot) SetPath(v DfsPathNestview) {
	o.Path = &v
}

// GetProgress returns the Progress field value if set, zero value otherwise.
func (o *DfsSnapshot) GetProgress() float64 {
	if o == nil || IsNil(o.Progress) {
		var ret float64
		return ret
	}
	return *o.Progress
}

// GetProgressOk returns a tuple with the Progress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSnapshot) GetProgressOk() (*float64, bool) {
	if o == nil || IsNil(o.Progress) {
		return nil, false
	}
	return o.Progress, true
}

// HasProgress returns a boolean if a field has been set.
func (o *DfsSnapshot) HasProgress() bool {
	if o != nil && !IsNil(o.Progress) {
		return true
	}

	return false
}

// SetProgress gets a reference to the given float64 and assigns it to the Progress field.
func (o *DfsSnapshot) SetProgress(v float64) {
	o.Progress = &v
}

// GetRootfs returns the Rootfs field value if set, zero value otherwise.
func (o *DfsSnapshot) GetRootfs() DfsRootfsNestview {
	if o == nil || IsNil(o.Rootfs) {
		var ret DfsRootfsNestview
		return ret
	}
	return *o.Rootfs
}

// GetRootfsOk returns a tuple with the Rootfs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSnapshot) GetRootfsOk() (*DfsRootfsNestview, bool) {
	if o == nil || IsNil(o.Rootfs) {
		return nil, false
	}
	return o.Rootfs, true
}

// HasRootfs returns a boolean if a field has been set.
func (o *DfsSnapshot) HasRootfs() bool {
	if o != nil && !IsNil(o.Rootfs) {
		return true
	}

	return false
}

// SetRootfs gets a reference to the given DfsRootfsNestview and assigns it to the Rootfs field.
func (o *DfsSnapshot) SetRootfs(v DfsRootfsNestview) {
	o.Rootfs = &v
}

// GetSnapshotName returns the SnapshotName field value if set, zero value otherwise.
func (o *DfsSnapshot) GetSnapshotName() string {
	if o == nil || IsNil(o.SnapshotName) {
		var ret string
		return ret
	}
	return *o.SnapshotName
}

// GetSnapshotNameOk returns a tuple with the SnapshotName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSnapshot) GetSnapshotNameOk() (*string, bool) {
	if o == nil || IsNil(o.SnapshotName) {
		return nil, false
	}
	return o.SnapshotName, true
}

// HasSnapshotName returns a boolean if a field has been set.
func (o *DfsSnapshot) HasSnapshotName() bool {
	if o != nil && !IsNil(o.SnapshotName) {
		return true
	}

	return false
}

// SetSnapshotName gets a reference to the given string and assigns it to the SnapshotName field.
func (o *DfsSnapshot) SetSnapshotName(v string) {
	o.SnapshotName = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DfsSnapshot) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSnapshot) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DfsSnapshot) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DfsSnapshot) SetStatus(v string) {
	o.Status = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *DfsSnapshot) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSnapshot) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *DfsSnapshot) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *DfsSnapshot) SetUpdate(v time.Time) {
	o.Update = &v
}

func (o DfsSnapshot) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsSnapshot) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActionStatus) {
		toSerialize["action_status"] = o.ActionStatus
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.Creator) {
		toSerialize["creator"] = o.Creator
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DpDfsSnapshotPolicy) {
		toSerialize["dp_dfs_snapshot_policy"] = o.DpDfsSnapshotPolicy
	}
	if !IsNil(o.ExpireTime) {
		toSerialize["expire_time"] = o.ExpireTime
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Lock) {
		toSerialize["lock"] = o.Lock
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.Progress) {
		toSerialize["progress"] = o.Progress
	}
	if !IsNil(o.Rootfs) {
		toSerialize["rootfs"] = o.Rootfs
	}
	if !IsNil(o.SnapshotName) {
		toSerialize["snapshot_name"] = o.SnapshotName
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	return toSerialize, nil
}

type NullableDfsSnapshot struct {
	value *DfsSnapshot
	isSet bool
}

func (v NullableDfsSnapshot) Get() *DfsSnapshot {
	return v.value
}

func (v *NullableDfsSnapshot) Set(val *DfsSnapshot) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsSnapshot) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsSnapshot) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsSnapshot(val *DfsSnapshot) *NullableDfsSnapshot {
	return &NullableDfsSnapshot{value: val, isSet: true}
}

func (v NullableDfsSnapshot) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsSnapshot) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


