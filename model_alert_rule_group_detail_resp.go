/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AlertRuleGroupDetailResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertRuleGroupDetailResp{}

// AlertRuleGroupDetailResp struct for AlertRuleGroupDetailResp
type AlertRuleGroupDetailResp struct {
	AlertRuleGroup AlertRuleGroup `json:"alert_rule_group"`
	// alert rule group members
	AlertRules []AlertRule `json:"alert_rules"`
}

type _AlertRuleGroupDetailResp AlertRuleGroupDetailResp

// NewAlertRuleGroupDetailResp instantiates a new AlertRuleGroupDetailResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertRuleGroupDetailResp(alertRuleGroup AlertRuleGroup, alertRules []AlertRule) *AlertRuleGroupDetailResp {
	this := AlertRuleGroupDetailResp{}
	this.AlertRuleGroup = alertRuleGroup
	this.AlertRules = alertRules
	return &this
}

// NewAlertRuleGroupDetailRespWithDefaults instantiates a new AlertRuleGroupDetailResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertRuleGroupDetailRespWithDefaults() *AlertRuleGroupDetailResp {
	this := AlertRuleGroupDetailResp{}
	return &this
}

// GetAlertRuleGroup returns the AlertRuleGroup field value
func (o *AlertRuleGroupDetailResp) GetAlertRuleGroup() AlertRuleGroup {
	if o == nil {
		var ret AlertRuleGroup
		return ret
	}

	return o.AlertRuleGroup
}

// GetAlertRuleGroupOk returns a tuple with the AlertRuleGroup field value
// and a boolean to check if the value has been set.
func (o *AlertRuleGroupDetailResp) GetAlertRuleGroupOk() (*AlertRuleGroup, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AlertRuleGroup, true
}

// SetAlertRuleGroup sets field value
func (o *AlertRuleGroupDetailResp) SetAlertRuleGroup(v AlertRuleGroup) {
	o.AlertRuleGroup = v
}

// GetAlertRules returns the AlertRules field value
func (o *AlertRuleGroupDetailResp) GetAlertRules() []AlertRule {
	if o == nil {
		var ret []AlertRule
		return ret
	}

	return o.AlertRules
}

// GetAlertRulesOk returns a tuple with the AlertRules field value
// and a boolean to check if the value has been set.
func (o *AlertRuleGroupDetailResp) GetAlertRulesOk() ([]AlertRule, bool) {
	if o == nil {
		return nil, false
	}
	return o.AlertRules, true
}

// SetAlertRules sets field value
func (o *AlertRuleGroupDetailResp) SetAlertRules(v []AlertRule) {
	o.AlertRules = v
}

func (o AlertRuleGroupDetailResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertRuleGroupDetailResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["alert_rule_group"] = o.AlertRuleGroup
	toSerialize["alert_rules"] = o.AlertRules
	return toSerialize, nil
}

func (o *AlertRuleGroupDetailResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"alert_rule_group",
		"alert_rules",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAlertRuleGroupDetailResp := _AlertRuleGroupDetailResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAlertRuleGroupDetailResp)

	if err != nil {
		return err
	}

	*o = AlertRuleGroupDetailResp(varAlertRuleGroupDetailResp)

	return err
}

type NullableAlertRuleGroupDetailResp struct {
	value *AlertRuleGroupDetailResp
	isSet bool
}

func (v NullableAlertRuleGroupDetailResp) Get() *AlertRuleGroupDetailResp {
	return v.value
}

func (v *NullableAlertRuleGroupDetailResp) Set(val *AlertRuleGroupDetailResp) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertRuleGroupDetailResp) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertRuleGroupDetailResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertRuleGroupDetailResp(val *AlertRuleGroupDetailResp) *NullableAlertRuleGroupDetailResp {
	return &NullableAlertRuleGroupDetailResp{value: val, isSet: true}
}

func (v NullableAlertRuleGroupDetailResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertRuleGroupDetailResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


