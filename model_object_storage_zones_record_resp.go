/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ObjectStorageZonesRecordResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ObjectStorageZonesRecordResp{}

// ObjectStorageZonesRecordResp struct for ObjectStorageZonesRecordResp
type ObjectStorageZonesRecordResp struct {
	OsZones []ObjectStorageZoneRecord `json:"os_zones,omitempty"`
}

// NewObjectStorageZonesRecordResp instantiates a new ObjectStorageZonesRecordResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectStorageZonesRecordResp() *ObjectStorageZonesRecordResp {
	this := ObjectStorageZonesRecordResp{}
	return &this
}

// NewObjectStorageZonesRecordRespWithDefaults instantiates a new ObjectStorageZonesRecordResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectStorageZonesRecordRespWithDefaults() *ObjectStorageZonesRecordResp {
	this := ObjectStorageZonesRecordResp{}
	return &this
}

// GetOsZones returns the OsZones field value if set, zero value otherwise.
func (o *ObjectStorageZonesRecordResp) GetOsZones() []ObjectStorageZoneRecord {
	if o == nil || IsNil(o.OsZones) {
		var ret []ObjectStorageZoneRecord
		return ret
	}
	return o.OsZones
}

// GetOsZonesOk returns a tuple with the OsZones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageZonesRecordResp) GetOsZonesOk() ([]ObjectStorageZoneRecord, bool) {
	if o == nil || IsNil(o.OsZones) {
		return nil, false
	}
	return o.OsZones, true
}

// HasOsZones returns a boolean if a field has been set.
func (o *ObjectStorageZonesRecordResp) HasOsZones() bool {
	if o != nil && !IsNil(o.OsZones) {
		return true
	}

	return false
}

// SetOsZones gets a reference to the given []ObjectStorageZoneRecord and assigns it to the OsZones field.
func (o *ObjectStorageZonesRecordResp) SetOsZones(v []ObjectStorageZoneRecord) {
	o.OsZones = v
}

func (o ObjectStorageZonesRecordResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ObjectStorageZonesRecordResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OsZones) {
		toSerialize["os_zones"] = o.OsZones
	}
	return toSerialize, nil
}

type NullableObjectStorageZonesRecordResp struct {
	value *ObjectStorageZonesRecordResp
	isSet bool
}

func (v NullableObjectStorageZonesRecordResp) Get() *ObjectStorageZonesRecordResp {
	return v.value
}

func (v *NullableObjectStorageZonesRecordResp) Set(val *ObjectStorageZonesRecordResp) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectStorageZonesRecordResp) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectStorageZonesRecordResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectStorageZonesRecordResp(val *ObjectStorageZonesRecordResp) *NullableObjectStorageZonesRecordResp {
	return &NullableObjectStorageZonesRecordResp{value: val, isSet: true}
}

func (v NullableObjectStorageZonesRecordResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectStorageZonesRecordResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


