/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AlertRuleGroupDetailUpdateReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertRuleGroupDetailUpdateReq{}

// AlertRuleGroupDetailUpdateReq struct for AlertRuleGroupDetailUpdateReq
type AlertRuleGroupDetailUpdateReq struct {
	AlertRuleGroup *AlertRuleGroupDetailUpdateReqGroup `json:"alert_rule_group,omitempty"`
	// alert rule group members
	AlertRules []AlertRuleGroupDetailUpdateReqRulesElt `json:"alert_rules,omitempty"`
}

// NewAlertRuleGroupDetailUpdateReq instantiates a new AlertRuleGroupDetailUpdateReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertRuleGroupDetailUpdateReq() *AlertRuleGroupDetailUpdateReq {
	this := AlertRuleGroupDetailUpdateReq{}
	return &this
}

// NewAlertRuleGroupDetailUpdateReqWithDefaults instantiates a new AlertRuleGroupDetailUpdateReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertRuleGroupDetailUpdateReqWithDefaults() *AlertRuleGroupDetailUpdateReq {
	this := AlertRuleGroupDetailUpdateReq{}
	return &this
}

// GetAlertRuleGroup returns the AlertRuleGroup field value if set, zero value otherwise.
func (o *AlertRuleGroupDetailUpdateReq) GetAlertRuleGroup() AlertRuleGroupDetailUpdateReqGroup {
	if o == nil || IsNil(o.AlertRuleGroup) {
		var ret AlertRuleGroupDetailUpdateReqGroup
		return ret
	}
	return *o.AlertRuleGroup
}

// GetAlertRuleGroupOk returns a tuple with the AlertRuleGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertRuleGroupDetailUpdateReq) GetAlertRuleGroupOk() (*AlertRuleGroupDetailUpdateReqGroup, bool) {
	if o == nil || IsNil(o.AlertRuleGroup) {
		return nil, false
	}
	return o.AlertRuleGroup, true
}

// HasAlertRuleGroup returns a boolean if a field has been set.
func (o *AlertRuleGroupDetailUpdateReq) HasAlertRuleGroup() bool {
	if o != nil && !IsNil(o.AlertRuleGroup) {
		return true
	}

	return false
}

// SetAlertRuleGroup gets a reference to the given AlertRuleGroupDetailUpdateReqGroup and assigns it to the AlertRuleGroup field.
func (o *AlertRuleGroupDetailUpdateReq) SetAlertRuleGroup(v AlertRuleGroupDetailUpdateReqGroup) {
	o.AlertRuleGroup = &v
}

// GetAlertRules returns the AlertRules field value if set, zero value otherwise.
func (o *AlertRuleGroupDetailUpdateReq) GetAlertRules() []AlertRuleGroupDetailUpdateReqRulesElt {
	if o == nil || IsNil(o.AlertRules) {
		var ret []AlertRuleGroupDetailUpdateReqRulesElt
		return ret
	}
	return o.AlertRules
}

// GetAlertRulesOk returns a tuple with the AlertRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertRuleGroupDetailUpdateReq) GetAlertRulesOk() ([]AlertRuleGroupDetailUpdateReqRulesElt, bool) {
	if o == nil || IsNil(o.AlertRules) {
		return nil, false
	}
	return o.AlertRules, true
}

// HasAlertRules returns a boolean if a field has been set.
func (o *AlertRuleGroupDetailUpdateReq) HasAlertRules() bool {
	if o != nil && !IsNil(o.AlertRules) {
		return true
	}

	return false
}

// SetAlertRules gets a reference to the given []AlertRuleGroupDetailUpdateReqRulesElt and assigns it to the AlertRules field.
func (o *AlertRuleGroupDetailUpdateReq) SetAlertRules(v []AlertRuleGroupDetailUpdateReqRulesElt) {
	o.AlertRules = v
}

func (o AlertRuleGroupDetailUpdateReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertRuleGroupDetailUpdateReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlertRuleGroup) {
		toSerialize["alert_rule_group"] = o.AlertRuleGroup
	}
	if !IsNil(o.AlertRules) {
		toSerialize["alert_rules"] = o.AlertRules
	}
	return toSerialize, nil
}

type NullableAlertRuleGroupDetailUpdateReq struct {
	value *AlertRuleGroupDetailUpdateReq
	isSet bool
}

func (v NullableAlertRuleGroupDetailUpdateReq) Get() *AlertRuleGroupDetailUpdateReq {
	return v.value
}

func (v *NullableAlertRuleGroupDetailUpdateReq) Set(val *AlertRuleGroupDetailUpdateReq) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertRuleGroupDetailUpdateReq) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertRuleGroupDetailUpdateReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertRuleGroupDetailUpdateReq(val *AlertRuleGroupDetailUpdateReq) *NullableAlertRuleGroupDetailUpdateReq {
	return &NullableAlertRuleGroupDetailUpdateReq{value: val, isSet: true}
}

func (v NullableAlertRuleGroupDetailUpdateReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertRuleGroupDetailUpdateReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


