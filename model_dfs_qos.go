/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the DfsQos type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsQos{}

// DfsQos DfsQos defines model of dfs qos
type DfsQos struct {
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	DfsPath *DfsPath `json:"dfs_path,omitempty"`
	DfsQosPolicy *DfsQosPolicy `json:"dfs_qos_policy,omitempty"`
	DfsRootfs *DfsRootfs `json:"dfs_rootfs,omitempty"`
	Id *int64 `json:"id,omitempty"`
	IoStatus *string `json:"io_status,omitempty"`
	Status *string `json:"status,omitempty"`
	Update *time.Time `json:"update,omitempty"`
}

// NewDfsQos instantiates a new DfsQos object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsQos() *DfsQos {
	this := DfsQos{}
	return &this
}

// NewDfsQosWithDefaults instantiates a new DfsQos object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsQosWithDefaults() *DfsQos {
	this := DfsQos{}
	return &this
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *DfsQos) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQos) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *DfsQos) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *DfsQos) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *DfsQos) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQos) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *DfsQos) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *DfsQos) SetCreate(v time.Time) {
	o.Create = &v
}

// GetDfsPath returns the DfsPath field value if set, zero value otherwise.
func (o *DfsQos) GetDfsPath() DfsPath {
	if o == nil || IsNil(o.DfsPath) {
		var ret DfsPath
		return ret
	}
	return *o.DfsPath
}

// GetDfsPathOk returns a tuple with the DfsPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQos) GetDfsPathOk() (*DfsPath, bool) {
	if o == nil || IsNil(o.DfsPath) {
		return nil, false
	}
	return o.DfsPath, true
}

// HasDfsPath returns a boolean if a field has been set.
func (o *DfsQos) HasDfsPath() bool {
	if o != nil && !IsNil(o.DfsPath) {
		return true
	}

	return false
}

// SetDfsPath gets a reference to the given DfsPath and assigns it to the DfsPath field.
func (o *DfsQos) SetDfsPath(v DfsPath) {
	o.DfsPath = &v
}

// GetDfsQosPolicy returns the DfsQosPolicy field value if set, zero value otherwise.
func (o *DfsQos) GetDfsQosPolicy() DfsQosPolicy {
	if o == nil || IsNil(o.DfsQosPolicy) {
		var ret DfsQosPolicy
		return ret
	}
	return *o.DfsQosPolicy
}

// GetDfsQosPolicyOk returns a tuple with the DfsQosPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQos) GetDfsQosPolicyOk() (*DfsQosPolicy, bool) {
	if o == nil || IsNil(o.DfsQosPolicy) {
		return nil, false
	}
	return o.DfsQosPolicy, true
}

// HasDfsQosPolicy returns a boolean if a field has been set.
func (o *DfsQos) HasDfsQosPolicy() bool {
	if o != nil && !IsNil(o.DfsQosPolicy) {
		return true
	}

	return false
}

// SetDfsQosPolicy gets a reference to the given DfsQosPolicy and assigns it to the DfsQosPolicy field.
func (o *DfsQos) SetDfsQosPolicy(v DfsQosPolicy) {
	o.DfsQosPolicy = &v
}

// GetDfsRootfs returns the DfsRootfs field value if set, zero value otherwise.
func (o *DfsQos) GetDfsRootfs() DfsRootfs {
	if o == nil || IsNil(o.DfsRootfs) {
		var ret DfsRootfs
		return ret
	}
	return *o.DfsRootfs
}

// GetDfsRootfsOk returns a tuple with the DfsRootfs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQos) GetDfsRootfsOk() (*DfsRootfs, bool) {
	if o == nil || IsNil(o.DfsRootfs) {
		return nil, false
	}
	return o.DfsRootfs, true
}

// HasDfsRootfs returns a boolean if a field has been set.
func (o *DfsQos) HasDfsRootfs() bool {
	if o != nil && !IsNil(o.DfsRootfs) {
		return true
	}

	return false
}

// SetDfsRootfs gets a reference to the given DfsRootfs and assigns it to the DfsRootfs field.
func (o *DfsQos) SetDfsRootfs(v DfsRootfs) {
	o.DfsRootfs = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DfsQos) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQos) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DfsQos) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *DfsQos) SetId(v int64) {
	o.Id = &v
}

// GetIoStatus returns the IoStatus field value if set, zero value otherwise.
func (o *DfsQos) GetIoStatus() string {
	if o == nil || IsNil(o.IoStatus) {
		var ret string
		return ret
	}
	return *o.IoStatus
}

// GetIoStatusOk returns a tuple with the IoStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQos) GetIoStatusOk() (*string, bool) {
	if o == nil || IsNil(o.IoStatus) {
		return nil, false
	}
	return o.IoStatus, true
}

// HasIoStatus returns a boolean if a field has been set.
func (o *DfsQos) HasIoStatus() bool {
	if o != nil && !IsNil(o.IoStatus) {
		return true
	}

	return false
}

// SetIoStatus gets a reference to the given string and assigns it to the IoStatus field.
func (o *DfsQos) SetIoStatus(v string) {
	o.IoStatus = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DfsQos) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQos) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DfsQos) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DfsQos) SetStatus(v string) {
	o.Status = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *DfsQos) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQos) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *DfsQos) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *DfsQos) SetUpdate(v time.Time) {
	o.Update = &v
}

func (o DfsQos) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsQos) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.DfsPath) {
		toSerialize["dfs_path"] = o.DfsPath
	}
	if !IsNil(o.DfsQosPolicy) {
		toSerialize["dfs_qos_policy"] = o.DfsQosPolicy
	}
	if !IsNil(o.DfsRootfs) {
		toSerialize["dfs_rootfs"] = o.DfsRootfs
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IoStatus) {
		toSerialize["io_status"] = o.IoStatus
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	return toSerialize, nil
}

type NullableDfsQos struct {
	value *DfsQos
	isSet bool
}

func (v NullableDfsQos) Get() *DfsQos {
	return v.value
}

func (v *NullableDfsQos) Set(val *DfsQos) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsQos) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsQos) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsQos(val *DfsQos) *NullableDfsQos {
	return &NullableDfsQos{value: val, isSet: true}
}

func (v NullableDfsQos) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsQos) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


