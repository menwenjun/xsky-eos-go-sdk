/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OsdCreateReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OsdCreateReq{}

// OsdCreateReq struct for OsdCreateReq
type OsdCreateReq struct {
	Osd *OsdCreateReqOsd `json:"osd,omitempty"`
}

// NewOsdCreateReq instantiates a new OsdCreateReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOsdCreateReq() *OsdCreateReq {
	this := OsdCreateReq{}
	return &this
}

// NewOsdCreateReqWithDefaults instantiates a new OsdCreateReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOsdCreateReqWithDefaults() *OsdCreateReq {
	this := OsdCreateReq{}
	return &this
}

// GetOsd returns the Osd field value if set, zero value otherwise.
func (o *OsdCreateReq) GetOsd() OsdCreateReqOsd {
	if o == nil || IsNil(o.Osd) {
		var ret OsdCreateReqOsd
		return ret
	}
	return *o.Osd
}

// GetOsdOk returns a tuple with the Osd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsdCreateReq) GetOsdOk() (*OsdCreateReqOsd, bool) {
	if o == nil || IsNil(o.Osd) {
		return nil, false
	}
	return o.Osd, true
}

// HasOsd returns a boolean if a field has been set.
func (o *OsdCreateReq) HasOsd() bool {
	if o != nil && !IsNil(o.Osd) {
		return true
	}

	return false
}

// SetOsd gets a reference to the given OsdCreateReqOsd and assigns it to the Osd field.
func (o *OsdCreateReq) SetOsd(v OsdCreateReqOsd) {
	o.Osd = &v
}

func (o OsdCreateReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OsdCreateReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Osd) {
		toSerialize["osd"] = o.Osd
	}
	return toSerialize, nil
}

type NullableOsdCreateReq struct {
	value *OsdCreateReq
	isSet bool
}

func (v NullableOsdCreateReq) Get() *OsdCreateReq {
	return v.value
}

func (v *NullableOsdCreateReq) Set(val *OsdCreateReq) {
	v.value = val
	v.isSet = true
}

func (v NullableOsdCreateReq) IsSet() bool {
	return v.isSet
}

func (v *NullableOsdCreateReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOsdCreateReq(val *OsdCreateReq) *NullableOsdCreateReq {
	return &NullableOsdCreateReq{value: val, isSet: true}
}

func (v NullableOsdCreateReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOsdCreateReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


