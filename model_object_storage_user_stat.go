/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the ObjectStorageUserStat type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ObjectStorageUserStat{}

// ObjectStorageUserStat ObjectStorageUserStat define the object storage user statistics
type ObjectStorageUserStat struct {
	AllocatedObjects *int64 `json:"allocated_objects,omitempty"`
	AllocatedSize *int64 `json:"allocated_size,omitempty"`
	CacheAllocatedObjects *int64 `json:"cache_allocated_objects,omitempty"`
	CacheAllocatedSize *int64 `json:"cache_allocated_size,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	DelOpsPm *float64 `json:"del_ops_pm,omitempty"`
	ExternalAllocatedObjects *int64 `json:"external_allocated_objects,omitempty"`
	ExternalAllocatedSize *int64 `json:"external_allocated_size,omitempty"`
	LocalAllocatedObjects *int64 `json:"local_allocated_objects,omitempty"`
	LocalAllocatedSize *int64 `json:"local_allocated_size,omitempty"`
	Policies *map[string]ObjectStoragePolicyStat `json:"policies,omitempty"`
	RxBandwidthKbyte *float64 `json:"rx_bandwidth_kbyte,omitempty"`
	RxOpsPm *float64 `json:"rx_ops_pm,omitempty"`
	TotalDelOps *int64 `json:"total_del_ops,omitempty"`
	TotalDelSuccessOps *int64 `json:"total_del_success_ops,omitempty"`
	TotalRxBytes *int64 `json:"total_rx_bytes,omitempty"`
	TotalRxOps *int64 `json:"total_rx_ops,omitempty"`
	TotalRxSuccessOps *int64 `json:"total_rx_success_ops,omitempty"`
	TotalTxBytes *int64 `json:"total_tx_bytes,omitempty"`
	TotalTxOps *int64 `json:"total_tx_ops,omitempty"`
	TotalTxSuccessOps *int64 `json:"total_tx_success_ops,omitempty"`
	TxBandwidthKbyte *float64 `json:"tx_bandwidth_kbyte,omitempty"`
	TxOpsPm *float64 `json:"tx_ops_pm,omitempty"`
}

// NewObjectStorageUserStat instantiates a new ObjectStorageUserStat object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectStorageUserStat() *ObjectStorageUserStat {
	this := ObjectStorageUserStat{}
	return &this
}

// NewObjectStorageUserStatWithDefaults instantiates a new ObjectStorageUserStat object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectStorageUserStatWithDefaults() *ObjectStorageUserStat {
	this := ObjectStorageUserStat{}
	return &this
}

// GetAllocatedObjects returns the AllocatedObjects field value if set, zero value otherwise.
func (o *ObjectStorageUserStat) GetAllocatedObjects() int64 {
	if o == nil || IsNil(o.AllocatedObjects) {
		var ret int64
		return ret
	}
	return *o.AllocatedObjects
}

// GetAllocatedObjectsOk returns a tuple with the AllocatedObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserStat) GetAllocatedObjectsOk() (*int64, bool) {
	if o == nil || IsNil(o.AllocatedObjects) {
		return nil, false
	}
	return o.AllocatedObjects, true
}

// HasAllocatedObjects returns a boolean if a field has been set.
func (o *ObjectStorageUserStat) HasAllocatedObjects() bool {
	if o != nil && !IsNil(o.AllocatedObjects) {
		return true
	}

	return false
}

// SetAllocatedObjects gets a reference to the given int64 and assigns it to the AllocatedObjects field.
func (o *ObjectStorageUserStat) SetAllocatedObjects(v int64) {
	o.AllocatedObjects = &v
}

// GetAllocatedSize returns the AllocatedSize field value if set, zero value otherwise.
func (o *ObjectStorageUserStat) GetAllocatedSize() int64 {
	if o == nil || IsNil(o.AllocatedSize) {
		var ret int64
		return ret
	}
	return *o.AllocatedSize
}

// GetAllocatedSizeOk returns a tuple with the AllocatedSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserStat) GetAllocatedSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.AllocatedSize) {
		return nil, false
	}
	return o.AllocatedSize, true
}

// HasAllocatedSize returns a boolean if a field has been set.
func (o *ObjectStorageUserStat) HasAllocatedSize() bool {
	if o != nil && !IsNil(o.AllocatedSize) {
		return true
	}

	return false
}

// SetAllocatedSize gets a reference to the given int64 and assigns it to the AllocatedSize field.
func (o *ObjectStorageUserStat) SetAllocatedSize(v int64) {
	o.AllocatedSize = &v
}

// GetCacheAllocatedObjects returns the CacheAllocatedObjects field value if set, zero value otherwise.
func (o *ObjectStorageUserStat) GetCacheAllocatedObjects() int64 {
	if o == nil || IsNil(o.CacheAllocatedObjects) {
		var ret int64
		return ret
	}
	return *o.CacheAllocatedObjects
}

// GetCacheAllocatedObjectsOk returns a tuple with the CacheAllocatedObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserStat) GetCacheAllocatedObjectsOk() (*int64, bool) {
	if o == nil || IsNil(o.CacheAllocatedObjects) {
		return nil, false
	}
	return o.CacheAllocatedObjects, true
}

// HasCacheAllocatedObjects returns a boolean if a field has been set.
func (o *ObjectStorageUserStat) HasCacheAllocatedObjects() bool {
	if o != nil && !IsNil(o.CacheAllocatedObjects) {
		return true
	}

	return false
}

// SetCacheAllocatedObjects gets a reference to the given int64 and assigns it to the CacheAllocatedObjects field.
func (o *ObjectStorageUserStat) SetCacheAllocatedObjects(v int64) {
	o.CacheAllocatedObjects = &v
}

// GetCacheAllocatedSize returns the CacheAllocatedSize field value if set, zero value otherwise.
func (o *ObjectStorageUserStat) GetCacheAllocatedSize() int64 {
	if o == nil || IsNil(o.CacheAllocatedSize) {
		var ret int64
		return ret
	}
	return *o.CacheAllocatedSize
}

// GetCacheAllocatedSizeOk returns a tuple with the CacheAllocatedSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserStat) GetCacheAllocatedSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.CacheAllocatedSize) {
		return nil, false
	}
	return o.CacheAllocatedSize, true
}

// HasCacheAllocatedSize returns a boolean if a field has been set.
func (o *ObjectStorageUserStat) HasCacheAllocatedSize() bool {
	if o != nil && !IsNil(o.CacheAllocatedSize) {
		return true
	}

	return false
}

// SetCacheAllocatedSize gets a reference to the given int64 and assigns it to the CacheAllocatedSize field.
func (o *ObjectStorageUserStat) SetCacheAllocatedSize(v int64) {
	o.CacheAllocatedSize = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *ObjectStorageUserStat) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserStat) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *ObjectStorageUserStat) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *ObjectStorageUserStat) SetCreate(v time.Time) {
	o.Create = &v
}

// GetDelOpsPm returns the DelOpsPm field value if set, zero value otherwise.
func (o *ObjectStorageUserStat) GetDelOpsPm() float64 {
	if o == nil || IsNil(o.DelOpsPm) {
		var ret float64
		return ret
	}
	return *o.DelOpsPm
}

// GetDelOpsPmOk returns a tuple with the DelOpsPm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserStat) GetDelOpsPmOk() (*float64, bool) {
	if o == nil || IsNil(o.DelOpsPm) {
		return nil, false
	}
	return o.DelOpsPm, true
}

// HasDelOpsPm returns a boolean if a field has been set.
func (o *ObjectStorageUserStat) HasDelOpsPm() bool {
	if o != nil && !IsNil(o.DelOpsPm) {
		return true
	}

	return false
}

// SetDelOpsPm gets a reference to the given float64 and assigns it to the DelOpsPm field.
func (o *ObjectStorageUserStat) SetDelOpsPm(v float64) {
	o.DelOpsPm = &v
}

// GetExternalAllocatedObjects returns the ExternalAllocatedObjects field value if set, zero value otherwise.
func (o *ObjectStorageUserStat) GetExternalAllocatedObjects() int64 {
	if o == nil || IsNil(o.ExternalAllocatedObjects) {
		var ret int64
		return ret
	}
	return *o.ExternalAllocatedObjects
}

// GetExternalAllocatedObjectsOk returns a tuple with the ExternalAllocatedObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserStat) GetExternalAllocatedObjectsOk() (*int64, bool) {
	if o == nil || IsNil(o.ExternalAllocatedObjects) {
		return nil, false
	}
	return o.ExternalAllocatedObjects, true
}

// HasExternalAllocatedObjects returns a boolean if a field has been set.
func (o *ObjectStorageUserStat) HasExternalAllocatedObjects() bool {
	if o != nil && !IsNil(o.ExternalAllocatedObjects) {
		return true
	}

	return false
}

// SetExternalAllocatedObjects gets a reference to the given int64 and assigns it to the ExternalAllocatedObjects field.
func (o *ObjectStorageUserStat) SetExternalAllocatedObjects(v int64) {
	o.ExternalAllocatedObjects = &v
}

// GetExternalAllocatedSize returns the ExternalAllocatedSize field value if set, zero value otherwise.
func (o *ObjectStorageUserStat) GetExternalAllocatedSize() int64 {
	if o == nil || IsNil(o.ExternalAllocatedSize) {
		var ret int64
		return ret
	}
	return *o.ExternalAllocatedSize
}

// GetExternalAllocatedSizeOk returns a tuple with the ExternalAllocatedSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserStat) GetExternalAllocatedSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.ExternalAllocatedSize) {
		return nil, false
	}
	return o.ExternalAllocatedSize, true
}

// HasExternalAllocatedSize returns a boolean if a field has been set.
func (o *ObjectStorageUserStat) HasExternalAllocatedSize() bool {
	if o != nil && !IsNil(o.ExternalAllocatedSize) {
		return true
	}

	return false
}

// SetExternalAllocatedSize gets a reference to the given int64 and assigns it to the ExternalAllocatedSize field.
func (o *ObjectStorageUserStat) SetExternalAllocatedSize(v int64) {
	o.ExternalAllocatedSize = &v
}

// GetLocalAllocatedObjects returns the LocalAllocatedObjects field value if set, zero value otherwise.
func (o *ObjectStorageUserStat) GetLocalAllocatedObjects() int64 {
	if o == nil || IsNil(o.LocalAllocatedObjects) {
		var ret int64
		return ret
	}
	return *o.LocalAllocatedObjects
}

// GetLocalAllocatedObjectsOk returns a tuple with the LocalAllocatedObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserStat) GetLocalAllocatedObjectsOk() (*int64, bool) {
	if o == nil || IsNil(o.LocalAllocatedObjects) {
		return nil, false
	}
	return o.LocalAllocatedObjects, true
}

// HasLocalAllocatedObjects returns a boolean if a field has been set.
func (o *ObjectStorageUserStat) HasLocalAllocatedObjects() bool {
	if o != nil && !IsNil(o.LocalAllocatedObjects) {
		return true
	}

	return false
}

// SetLocalAllocatedObjects gets a reference to the given int64 and assigns it to the LocalAllocatedObjects field.
func (o *ObjectStorageUserStat) SetLocalAllocatedObjects(v int64) {
	o.LocalAllocatedObjects = &v
}

// GetLocalAllocatedSize returns the LocalAllocatedSize field value if set, zero value otherwise.
func (o *ObjectStorageUserStat) GetLocalAllocatedSize() int64 {
	if o == nil || IsNil(o.LocalAllocatedSize) {
		var ret int64
		return ret
	}
	return *o.LocalAllocatedSize
}

// GetLocalAllocatedSizeOk returns a tuple with the LocalAllocatedSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserStat) GetLocalAllocatedSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.LocalAllocatedSize) {
		return nil, false
	}
	return o.LocalAllocatedSize, true
}

// HasLocalAllocatedSize returns a boolean if a field has been set.
func (o *ObjectStorageUserStat) HasLocalAllocatedSize() bool {
	if o != nil && !IsNil(o.LocalAllocatedSize) {
		return true
	}

	return false
}

// SetLocalAllocatedSize gets a reference to the given int64 and assigns it to the LocalAllocatedSize field.
func (o *ObjectStorageUserStat) SetLocalAllocatedSize(v int64) {
	o.LocalAllocatedSize = &v
}

// GetPolicies returns the Policies field value if set, zero value otherwise.
func (o *ObjectStorageUserStat) GetPolicies() map[string]ObjectStoragePolicyStat {
	if o == nil || IsNil(o.Policies) {
		var ret map[string]ObjectStoragePolicyStat
		return ret
	}
	return *o.Policies
}

// GetPoliciesOk returns a tuple with the Policies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserStat) GetPoliciesOk() (*map[string]ObjectStoragePolicyStat, bool) {
	if o == nil || IsNil(o.Policies) {
		return nil, false
	}
	return o.Policies, true
}

// HasPolicies returns a boolean if a field has been set.
func (o *ObjectStorageUserStat) HasPolicies() bool {
	if o != nil && !IsNil(o.Policies) {
		return true
	}

	return false
}

// SetPolicies gets a reference to the given map[string]ObjectStoragePolicyStat and assigns it to the Policies field.
func (o *ObjectStorageUserStat) SetPolicies(v map[string]ObjectStoragePolicyStat) {
	o.Policies = &v
}

// GetRxBandwidthKbyte returns the RxBandwidthKbyte field value if set, zero value otherwise.
func (o *ObjectStorageUserStat) GetRxBandwidthKbyte() float64 {
	if o == nil || IsNil(o.RxBandwidthKbyte) {
		var ret float64
		return ret
	}
	return *o.RxBandwidthKbyte
}

// GetRxBandwidthKbyteOk returns a tuple with the RxBandwidthKbyte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserStat) GetRxBandwidthKbyteOk() (*float64, bool) {
	if o == nil || IsNil(o.RxBandwidthKbyte) {
		return nil, false
	}
	return o.RxBandwidthKbyte, true
}

// HasRxBandwidthKbyte returns a boolean if a field has been set.
func (o *ObjectStorageUserStat) HasRxBandwidthKbyte() bool {
	if o != nil && !IsNil(o.RxBandwidthKbyte) {
		return true
	}

	return false
}

// SetRxBandwidthKbyte gets a reference to the given float64 and assigns it to the RxBandwidthKbyte field.
func (o *ObjectStorageUserStat) SetRxBandwidthKbyte(v float64) {
	o.RxBandwidthKbyte = &v
}

// GetRxOpsPm returns the RxOpsPm field value if set, zero value otherwise.
func (o *ObjectStorageUserStat) GetRxOpsPm() float64 {
	if o == nil || IsNil(o.RxOpsPm) {
		var ret float64
		return ret
	}
	return *o.RxOpsPm
}

// GetRxOpsPmOk returns a tuple with the RxOpsPm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserStat) GetRxOpsPmOk() (*float64, bool) {
	if o == nil || IsNil(o.RxOpsPm) {
		return nil, false
	}
	return o.RxOpsPm, true
}

// HasRxOpsPm returns a boolean if a field has been set.
func (o *ObjectStorageUserStat) HasRxOpsPm() bool {
	if o != nil && !IsNil(o.RxOpsPm) {
		return true
	}

	return false
}

// SetRxOpsPm gets a reference to the given float64 and assigns it to the RxOpsPm field.
func (o *ObjectStorageUserStat) SetRxOpsPm(v float64) {
	o.RxOpsPm = &v
}

// GetTotalDelOps returns the TotalDelOps field value if set, zero value otherwise.
func (o *ObjectStorageUserStat) GetTotalDelOps() int64 {
	if o == nil || IsNil(o.TotalDelOps) {
		var ret int64
		return ret
	}
	return *o.TotalDelOps
}

// GetTotalDelOpsOk returns a tuple with the TotalDelOps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserStat) GetTotalDelOpsOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalDelOps) {
		return nil, false
	}
	return o.TotalDelOps, true
}

// HasTotalDelOps returns a boolean if a field has been set.
func (o *ObjectStorageUserStat) HasTotalDelOps() bool {
	if o != nil && !IsNil(o.TotalDelOps) {
		return true
	}

	return false
}

// SetTotalDelOps gets a reference to the given int64 and assigns it to the TotalDelOps field.
func (o *ObjectStorageUserStat) SetTotalDelOps(v int64) {
	o.TotalDelOps = &v
}

// GetTotalDelSuccessOps returns the TotalDelSuccessOps field value if set, zero value otherwise.
func (o *ObjectStorageUserStat) GetTotalDelSuccessOps() int64 {
	if o == nil || IsNil(o.TotalDelSuccessOps) {
		var ret int64
		return ret
	}
	return *o.TotalDelSuccessOps
}

// GetTotalDelSuccessOpsOk returns a tuple with the TotalDelSuccessOps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserStat) GetTotalDelSuccessOpsOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalDelSuccessOps) {
		return nil, false
	}
	return o.TotalDelSuccessOps, true
}

// HasTotalDelSuccessOps returns a boolean if a field has been set.
func (o *ObjectStorageUserStat) HasTotalDelSuccessOps() bool {
	if o != nil && !IsNil(o.TotalDelSuccessOps) {
		return true
	}

	return false
}

// SetTotalDelSuccessOps gets a reference to the given int64 and assigns it to the TotalDelSuccessOps field.
func (o *ObjectStorageUserStat) SetTotalDelSuccessOps(v int64) {
	o.TotalDelSuccessOps = &v
}

// GetTotalRxBytes returns the TotalRxBytes field value if set, zero value otherwise.
func (o *ObjectStorageUserStat) GetTotalRxBytes() int64 {
	if o == nil || IsNil(o.TotalRxBytes) {
		var ret int64
		return ret
	}
	return *o.TotalRxBytes
}

// GetTotalRxBytesOk returns a tuple with the TotalRxBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserStat) GetTotalRxBytesOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalRxBytes) {
		return nil, false
	}
	return o.TotalRxBytes, true
}

// HasTotalRxBytes returns a boolean if a field has been set.
func (o *ObjectStorageUserStat) HasTotalRxBytes() bool {
	if o != nil && !IsNil(o.TotalRxBytes) {
		return true
	}

	return false
}

// SetTotalRxBytes gets a reference to the given int64 and assigns it to the TotalRxBytes field.
func (o *ObjectStorageUserStat) SetTotalRxBytes(v int64) {
	o.TotalRxBytes = &v
}

// GetTotalRxOps returns the TotalRxOps field value if set, zero value otherwise.
func (o *ObjectStorageUserStat) GetTotalRxOps() int64 {
	if o == nil || IsNil(o.TotalRxOps) {
		var ret int64
		return ret
	}
	return *o.TotalRxOps
}

// GetTotalRxOpsOk returns a tuple with the TotalRxOps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserStat) GetTotalRxOpsOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalRxOps) {
		return nil, false
	}
	return o.TotalRxOps, true
}

// HasTotalRxOps returns a boolean if a field has been set.
func (o *ObjectStorageUserStat) HasTotalRxOps() bool {
	if o != nil && !IsNil(o.TotalRxOps) {
		return true
	}

	return false
}

// SetTotalRxOps gets a reference to the given int64 and assigns it to the TotalRxOps field.
func (o *ObjectStorageUserStat) SetTotalRxOps(v int64) {
	o.TotalRxOps = &v
}

// GetTotalRxSuccessOps returns the TotalRxSuccessOps field value if set, zero value otherwise.
func (o *ObjectStorageUserStat) GetTotalRxSuccessOps() int64 {
	if o == nil || IsNil(o.TotalRxSuccessOps) {
		var ret int64
		return ret
	}
	return *o.TotalRxSuccessOps
}

// GetTotalRxSuccessOpsOk returns a tuple with the TotalRxSuccessOps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserStat) GetTotalRxSuccessOpsOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalRxSuccessOps) {
		return nil, false
	}
	return o.TotalRxSuccessOps, true
}

// HasTotalRxSuccessOps returns a boolean if a field has been set.
func (o *ObjectStorageUserStat) HasTotalRxSuccessOps() bool {
	if o != nil && !IsNil(o.TotalRxSuccessOps) {
		return true
	}

	return false
}

// SetTotalRxSuccessOps gets a reference to the given int64 and assigns it to the TotalRxSuccessOps field.
func (o *ObjectStorageUserStat) SetTotalRxSuccessOps(v int64) {
	o.TotalRxSuccessOps = &v
}

// GetTotalTxBytes returns the TotalTxBytes field value if set, zero value otherwise.
func (o *ObjectStorageUserStat) GetTotalTxBytes() int64 {
	if o == nil || IsNil(o.TotalTxBytes) {
		var ret int64
		return ret
	}
	return *o.TotalTxBytes
}

// GetTotalTxBytesOk returns a tuple with the TotalTxBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserStat) GetTotalTxBytesOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalTxBytes) {
		return nil, false
	}
	return o.TotalTxBytes, true
}

// HasTotalTxBytes returns a boolean if a field has been set.
func (o *ObjectStorageUserStat) HasTotalTxBytes() bool {
	if o != nil && !IsNil(o.TotalTxBytes) {
		return true
	}

	return false
}

// SetTotalTxBytes gets a reference to the given int64 and assigns it to the TotalTxBytes field.
func (o *ObjectStorageUserStat) SetTotalTxBytes(v int64) {
	o.TotalTxBytes = &v
}

// GetTotalTxOps returns the TotalTxOps field value if set, zero value otherwise.
func (o *ObjectStorageUserStat) GetTotalTxOps() int64 {
	if o == nil || IsNil(o.TotalTxOps) {
		var ret int64
		return ret
	}
	return *o.TotalTxOps
}

// GetTotalTxOpsOk returns a tuple with the TotalTxOps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserStat) GetTotalTxOpsOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalTxOps) {
		return nil, false
	}
	return o.TotalTxOps, true
}

// HasTotalTxOps returns a boolean if a field has been set.
func (o *ObjectStorageUserStat) HasTotalTxOps() bool {
	if o != nil && !IsNil(o.TotalTxOps) {
		return true
	}

	return false
}

// SetTotalTxOps gets a reference to the given int64 and assigns it to the TotalTxOps field.
func (o *ObjectStorageUserStat) SetTotalTxOps(v int64) {
	o.TotalTxOps = &v
}

// GetTotalTxSuccessOps returns the TotalTxSuccessOps field value if set, zero value otherwise.
func (o *ObjectStorageUserStat) GetTotalTxSuccessOps() int64 {
	if o == nil || IsNil(o.TotalTxSuccessOps) {
		var ret int64
		return ret
	}
	return *o.TotalTxSuccessOps
}

// GetTotalTxSuccessOpsOk returns a tuple with the TotalTxSuccessOps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserStat) GetTotalTxSuccessOpsOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalTxSuccessOps) {
		return nil, false
	}
	return o.TotalTxSuccessOps, true
}

// HasTotalTxSuccessOps returns a boolean if a field has been set.
func (o *ObjectStorageUserStat) HasTotalTxSuccessOps() bool {
	if o != nil && !IsNil(o.TotalTxSuccessOps) {
		return true
	}

	return false
}

// SetTotalTxSuccessOps gets a reference to the given int64 and assigns it to the TotalTxSuccessOps field.
func (o *ObjectStorageUserStat) SetTotalTxSuccessOps(v int64) {
	o.TotalTxSuccessOps = &v
}

// GetTxBandwidthKbyte returns the TxBandwidthKbyte field value if set, zero value otherwise.
func (o *ObjectStorageUserStat) GetTxBandwidthKbyte() float64 {
	if o == nil || IsNil(o.TxBandwidthKbyte) {
		var ret float64
		return ret
	}
	return *o.TxBandwidthKbyte
}

// GetTxBandwidthKbyteOk returns a tuple with the TxBandwidthKbyte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserStat) GetTxBandwidthKbyteOk() (*float64, bool) {
	if o == nil || IsNil(o.TxBandwidthKbyte) {
		return nil, false
	}
	return o.TxBandwidthKbyte, true
}

// HasTxBandwidthKbyte returns a boolean if a field has been set.
func (o *ObjectStorageUserStat) HasTxBandwidthKbyte() bool {
	if o != nil && !IsNil(o.TxBandwidthKbyte) {
		return true
	}

	return false
}

// SetTxBandwidthKbyte gets a reference to the given float64 and assigns it to the TxBandwidthKbyte field.
func (o *ObjectStorageUserStat) SetTxBandwidthKbyte(v float64) {
	o.TxBandwidthKbyte = &v
}

// GetTxOpsPm returns the TxOpsPm field value if set, zero value otherwise.
func (o *ObjectStorageUserStat) GetTxOpsPm() float64 {
	if o == nil || IsNil(o.TxOpsPm) {
		var ret float64
		return ret
	}
	return *o.TxOpsPm
}

// GetTxOpsPmOk returns a tuple with the TxOpsPm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserStat) GetTxOpsPmOk() (*float64, bool) {
	if o == nil || IsNil(o.TxOpsPm) {
		return nil, false
	}
	return o.TxOpsPm, true
}

// HasTxOpsPm returns a boolean if a field has been set.
func (o *ObjectStorageUserStat) HasTxOpsPm() bool {
	if o != nil && !IsNil(o.TxOpsPm) {
		return true
	}

	return false
}

// SetTxOpsPm gets a reference to the given float64 and assigns it to the TxOpsPm field.
func (o *ObjectStorageUserStat) SetTxOpsPm(v float64) {
	o.TxOpsPm = &v
}

func (o ObjectStorageUserStat) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ObjectStorageUserStat) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllocatedObjects) {
		toSerialize["allocated_objects"] = o.AllocatedObjects
	}
	if !IsNil(o.AllocatedSize) {
		toSerialize["allocated_size"] = o.AllocatedSize
	}
	if !IsNil(o.CacheAllocatedObjects) {
		toSerialize["cache_allocated_objects"] = o.CacheAllocatedObjects
	}
	if !IsNil(o.CacheAllocatedSize) {
		toSerialize["cache_allocated_size"] = o.CacheAllocatedSize
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.DelOpsPm) {
		toSerialize["del_ops_pm"] = o.DelOpsPm
	}
	if !IsNil(o.ExternalAllocatedObjects) {
		toSerialize["external_allocated_objects"] = o.ExternalAllocatedObjects
	}
	if !IsNil(o.ExternalAllocatedSize) {
		toSerialize["external_allocated_size"] = o.ExternalAllocatedSize
	}
	if !IsNil(o.LocalAllocatedObjects) {
		toSerialize["local_allocated_objects"] = o.LocalAllocatedObjects
	}
	if !IsNil(o.LocalAllocatedSize) {
		toSerialize["local_allocated_size"] = o.LocalAllocatedSize
	}
	if !IsNil(o.Policies) {
		toSerialize["policies"] = o.Policies
	}
	if !IsNil(o.RxBandwidthKbyte) {
		toSerialize["rx_bandwidth_kbyte"] = o.RxBandwidthKbyte
	}
	if !IsNil(o.RxOpsPm) {
		toSerialize["rx_ops_pm"] = o.RxOpsPm
	}
	if !IsNil(o.TotalDelOps) {
		toSerialize["total_del_ops"] = o.TotalDelOps
	}
	if !IsNil(o.TotalDelSuccessOps) {
		toSerialize["total_del_success_ops"] = o.TotalDelSuccessOps
	}
	if !IsNil(o.TotalRxBytes) {
		toSerialize["total_rx_bytes"] = o.TotalRxBytes
	}
	if !IsNil(o.TotalRxOps) {
		toSerialize["total_rx_ops"] = o.TotalRxOps
	}
	if !IsNil(o.TotalRxSuccessOps) {
		toSerialize["total_rx_success_ops"] = o.TotalRxSuccessOps
	}
	if !IsNil(o.TotalTxBytes) {
		toSerialize["total_tx_bytes"] = o.TotalTxBytes
	}
	if !IsNil(o.TotalTxOps) {
		toSerialize["total_tx_ops"] = o.TotalTxOps
	}
	if !IsNil(o.TotalTxSuccessOps) {
		toSerialize["total_tx_success_ops"] = o.TotalTxSuccessOps
	}
	if !IsNil(o.TxBandwidthKbyte) {
		toSerialize["tx_bandwidth_kbyte"] = o.TxBandwidthKbyte
	}
	if !IsNil(o.TxOpsPm) {
		toSerialize["tx_ops_pm"] = o.TxOpsPm
	}
	return toSerialize, nil
}

type NullableObjectStorageUserStat struct {
	value *ObjectStorageUserStat
	isSet bool
}

func (v NullableObjectStorageUserStat) Get() *ObjectStorageUserStat {
	return v.value
}

func (v *NullableObjectStorageUserStat) Set(val *ObjectStorageUserStat) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectStorageUserStat) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectStorageUserStat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectStorageUserStat(val *ObjectStorageUserStat) *NullableObjectStorageUserStat {
	return &NullableObjectStorageUserStat{value: val, isSet: true}
}

func (v NullableObjectStorageUserStat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectStorageUserStat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


