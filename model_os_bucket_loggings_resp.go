/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OSBucketLoggingsResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OSBucketLoggingsResp{}

// OSBucketLoggingsResp struct for OSBucketLoggingsResp
type OSBucketLoggingsResp struct {
	OsBucketLoggings []OSBucketLogging `json:"os_bucket_loggings,omitempty"`
}

// NewOSBucketLoggingsResp instantiates a new OSBucketLoggingsResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOSBucketLoggingsResp() *OSBucketLoggingsResp {
	this := OSBucketLoggingsResp{}
	return &this
}

// NewOSBucketLoggingsRespWithDefaults instantiates a new OSBucketLoggingsResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOSBucketLoggingsRespWithDefaults() *OSBucketLoggingsResp {
	this := OSBucketLoggingsResp{}
	return &this
}

// GetOsBucketLoggings returns the OsBucketLoggings field value if set, zero value otherwise.
func (o *OSBucketLoggingsResp) GetOsBucketLoggings() []OSBucketLogging {
	if o == nil || IsNil(o.OsBucketLoggings) {
		var ret []OSBucketLogging
		return ret
	}
	return o.OsBucketLoggings
}

// GetOsBucketLoggingsOk returns a tuple with the OsBucketLoggings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBucketLoggingsResp) GetOsBucketLoggingsOk() ([]OSBucketLogging, bool) {
	if o == nil || IsNil(o.OsBucketLoggings) {
		return nil, false
	}
	return o.OsBucketLoggings, true
}

// HasOsBucketLoggings returns a boolean if a field has been set.
func (o *OSBucketLoggingsResp) HasOsBucketLoggings() bool {
	if o != nil && !IsNil(o.OsBucketLoggings) {
		return true
	}

	return false
}

// SetOsBucketLoggings gets a reference to the given []OSBucketLogging and assigns it to the OsBucketLoggings field.
func (o *OSBucketLoggingsResp) SetOsBucketLoggings(v []OSBucketLogging) {
	o.OsBucketLoggings = v
}

func (o OSBucketLoggingsResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OSBucketLoggingsResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OsBucketLoggings) {
		toSerialize["os_bucket_loggings"] = o.OsBucketLoggings
	}
	return toSerialize, nil
}

type NullableOSBucketLoggingsResp struct {
	value *OSBucketLoggingsResp
	isSet bool
}

func (v NullableOSBucketLoggingsResp) Get() *OSBucketLoggingsResp {
	return v.value
}

func (v *NullableOSBucketLoggingsResp) Set(val *OSBucketLoggingsResp) {
	v.value = val
	v.isSet = true
}

func (v NullableOSBucketLoggingsResp) IsSet() bool {
	return v.isSet
}

func (v *NullableOSBucketLoggingsResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSBucketLoggingsResp(val *OSBucketLoggingsResp) *NullableOSBucketLoggingsResp {
	return &NullableOSBucketLoggingsResp{value: val, isSet: true}
}

func (v NullableOSBucketLoggingsResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSBucketLoggingsResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


