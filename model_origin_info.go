/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OriginInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OriginInfo{}

// OriginInfo OriginInfo defines os origin info
type OriginInfo struct {
	AccessKey *string `json:"access_key,omitempty"`
	Authentication *string `json:"authentication,omitempty"`
	Bucket *string `json:"bucket,omitempty"`
	Directory *string `json:"directory,omitempty"`
	Endpoint *string `json:"endpoint,omitempty"`
	HostStyle *string `json:"host_style,omitempty"`
	Password *string `json:"password,omitempty"`
	Path *string `json:"path,omitempty"`
	Platform *string `json:"platform,omitempty"`
	PlatformType *string `json:"platform_type,omitempty"`
	Prefix *string `json:"prefix,omitempty"`
	Region *string `json:"region,omitempty"`
	SecretKey *string `json:"secret_key,omitempty"`
	Type *string `json:"type,omitempty"`
	UserName *string `json:"user_name,omitempty"`
}

// NewOriginInfo instantiates a new OriginInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOriginInfo() *OriginInfo {
	this := OriginInfo{}
	return &this
}

// NewOriginInfoWithDefaults instantiates a new OriginInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOriginInfoWithDefaults() *OriginInfo {
	this := OriginInfo{}
	return &this
}

// GetAccessKey returns the AccessKey field value if set, zero value otherwise.
func (o *OriginInfo) GetAccessKey() string {
	if o == nil || IsNil(o.AccessKey) {
		var ret string
		return ret
	}
	return *o.AccessKey
}

// GetAccessKeyOk returns a tuple with the AccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginInfo) GetAccessKeyOk() (*string, bool) {
	if o == nil || IsNil(o.AccessKey) {
		return nil, false
	}
	return o.AccessKey, true
}

// HasAccessKey returns a boolean if a field has been set.
func (o *OriginInfo) HasAccessKey() bool {
	if o != nil && !IsNil(o.AccessKey) {
		return true
	}

	return false
}

// SetAccessKey gets a reference to the given string and assigns it to the AccessKey field.
func (o *OriginInfo) SetAccessKey(v string) {
	o.AccessKey = &v
}

// GetAuthentication returns the Authentication field value if set, zero value otherwise.
func (o *OriginInfo) GetAuthentication() string {
	if o == nil || IsNil(o.Authentication) {
		var ret string
		return ret
	}
	return *o.Authentication
}

// GetAuthenticationOk returns a tuple with the Authentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginInfo) GetAuthenticationOk() (*string, bool) {
	if o == nil || IsNil(o.Authentication) {
		return nil, false
	}
	return o.Authentication, true
}

// HasAuthentication returns a boolean if a field has been set.
func (o *OriginInfo) HasAuthentication() bool {
	if o != nil && !IsNil(o.Authentication) {
		return true
	}

	return false
}

// SetAuthentication gets a reference to the given string and assigns it to the Authentication field.
func (o *OriginInfo) SetAuthentication(v string) {
	o.Authentication = &v
}

// GetBucket returns the Bucket field value if set, zero value otherwise.
func (o *OriginInfo) GetBucket() string {
	if o == nil || IsNil(o.Bucket) {
		var ret string
		return ret
	}
	return *o.Bucket
}

// GetBucketOk returns a tuple with the Bucket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginInfo) GetBucketOk() (*string, bool) {
	if o == nil || IsNil(o.Bucket) {
		return nil, false
	}
	return o.Bucket, true
}

// HasBucket returns a boolean if a field has been set.
func (o *OriginInfo) HasBucket() bool {
	if o != nil && !IsNil(o.Bucket) {
		return true
	}

	return false
}

// SetBucket gets a reference to the given string and assigns it to the Bucket field.
func (o *OriginInfo) SetBucket(v string) {
	o.Bucket = &v
}

// GetDirectory returns the Directory field value if set, zero value otherwise.
func (o *OriginInfo) GetDirectory() string {
	if o == nil || IsNil(o.Directory) {
		var ret string
		return ret
	}
	return *o.Directory
}

// GetDirectoryOk returns a tuple with the Directory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginInfo) GetDirectoryOk() (*string, bool) {
	if o == nil || IsNil(o.Directory) {
		return nil, false
	}
	return o.Directory, true
}

// HasDirectory returns a boolean if a field has been set.
func (o *OriginInfo) HasDirectory() bool {
	if o != nil && !IsNil(o.Directory) {
		return true
	}

	return false
}

// SetDirectory gets a reference to the given string and assigns it to the Directory field.
func (o *OriginInfo) SetDirectory(v string) {
	o.Directory = &v
}

// GetEndpoint returns the Endpoint field value if set, zero value otherwise.
func (o *OriginInfo) GetEndpoint() string {
	if o == nil || IsNil(o.Endpoint) {
		var ret string
		return ret
	}
	return *o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginInfo) GetEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.Endpoint) {
		return nil, false
	}
	return o.Endpoint, true
}

// HasEndpoint returns a boolean if a field has been set.
func (o *OriginInfo) HasEndpoint() bool {
	if o != nil && !IsNil(o.Endpoint) {
		return true
	}

	return false
}

// SetEndpoint gets a reference to the given string and assigns it to the Endpoint field.
func (o *OriginInfo) SetEndpoint(v string) {
	o.Endpoint = &v
}

// GetHostStyle returns the HostStyle field value if set, zero value otherwise.
func (o *OriginInfo) GetHostStyle() string {
	if o == nil || IsNil(o.HostStyle) {
		var ret string
		return ret
	}
	return *o.HostStyle
}

// GetHostStyleOk returns a tuple with the HostStyle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginInfo) GetHostStyleOk() (*string, bool) {
	if o == nil || IsNil(o.HostStyle) {
		return nil, false
	}
	return o.HostStyle, true
}

// HasHostStyle returns a boolean if a field has been set.
func (o *OriginInfo) HasHostStyle() bool {
	if o != nil && !IsNil(o.HostStyle) {
		return true
	}

	return false
}

// SetHostStyle gets a reference to the given string and assigns it to the HostStyle field.
func (o *OriginInfo) SetHostStyle(v string) {
	o.HostStyle = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *OriginInfo) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginInfo) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *OriginInfo) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *OriginInfo) SetPassword(v string) {
	o.Password = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *OriginInfo) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginInfo) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *OriginInfo) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *OriginInfo) SetPath(v string) {
	o.Path = &v
}

// GetPlatform returns the Platform field value if set, zero value otherwise.
func (o *OriginInfo) GetPlatform() string {
	if o == nil || IsNil(o.Platform) {
		var ret string
		return ret
	}
	return *o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginInfo) GetPlatformOk() (*string, bool) {
	if o == nil || IsNil(o.Platform) {
		return nil, false
	}
	return o.Platform, true
}

// HasPlatform returns a boolean if a field has been set.
func (o *OriginInfo) HasPlatform() bool {
	if o != nil && !IsNil(o.Platform) {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given string and assigns it to the Platform field.
func (o *OriginInfo) SetPlatform(v string) {
	o.Platform = &v
}

// GetPlatformType returns the PlatformType field value if set, zero value otherwise.
func (o *OriginInfo) GetPlatformType() string {
	if o == nil || IsNil(o.PlatformType) {
		var ret string
		return ret
	}
	return *o.PlatformType
}

// GetPlatformTypeOk returns a tuple with the PlatformType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginInfo) GetPlatformTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PlatformType) {
		return nil, false
	}
	return o.PlatformType, true
}

// HasPlatformType returns a boolean if a field has been set.
func (o *OriginInfo) HasPlatformType() bool {
	if o != nil && !IsNil(o.PlatformType) {
		return true
	}

	return false
}

// SetPlatformType gets a reference to the given string and assigns it to the PlatformType field.
func (o *OriginInfo) SetPlatformType(v string) {
	o.PlatformType = &v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *OriginInfo) GetPrefix() string {
	if o == nil || IsNil(o.Prefix) {
		var ret string
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginInfo) GetPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.Prefix) {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *OriginInfo) HasPrefix() bool {
	if o != nil && !IsNil(o.Prefix) {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given string and assigns it to the Prefix field.
func (o *OriginInfo) SetPrefix(v string) {
	o.Prefix = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *OriginInfo) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginInfo) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *OriginInfo) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *OriginInfo) SetRegion(v string) {
	o.Region = &v
}

// GetSecretKey returns the SecretKey field value if set, zero value otherwise.
func (o *OriginInfo) GetSecretKey() string {
	if o == nil || IsNil(o.SecretKey) {
		var ret string
		return ret
	}
	return *o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginInfo) GetSecretKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SecretKey) {
		return nil, false
	}
	return o.SecretKey, true
}

// HasSecretKey returns a boolean if a field has been set.
func (o *OriginInfo) HasSecretKey() bool {
	if o != nil && !IsNil(o.SecretKey) {
		return true
	}

	return false
}

// SetSecretKey gets a reference to the given string and assigns it to the SecretKey field.
func (o *OriginInfo) SetSecretKey(v string) {
	o.SecretKey = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *OriginInfo) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginInfo) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *OriginInfo) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *OriginInfo) SetType(v string) {
	o.Type = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *OriginInfo) GetUserName() string {
	if o == nil || IsNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginInfo) GetUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *OriginInfo) HasUserName() bool {
	if o != nil && !IsNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *OriginInfo) SetUserName(v string) {
	o.UserName = &v
}

func (o OriginInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OriginInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessKey) {
		toSerialize["access_key"] = o.AccessKey
	}
	if !IsNil(o.Authentication) {
		toSerialize["authentication"] = o.Authentication
	}
	if !IsNil(o.Bucket) {
		toSerialize["bucket"] = o.Bucket
	}
	if !IsNil(o.Directory) {
		toSerialize["directory"] = o.Directory
	}
	if !IsNil(o.Endpoint) {
		toSerialize["endpoint"] = o.Endpoint
	}
	if !IsNil(o.HostStyle) {
		toSerialize["host_style"] = o.HostStyle
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.Platform) {
		toSerialize["platform"] = o.Platform
	}
	if !IsNil(o.PlatformType) {
		toSerialize["platform_type"] = o.PlatformType
	}
	if !IsNil(o.Prefix) {
		toSerialize["prefix"] = o.Prefix
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.SecretKey) {
		toSerialize["secret_key"] = o.SecretKey
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.UserName) {
		toSerialize["user_name"] = o.UserName
	}
	return toSerialize, nil
}

type NullableOriginInfo struct {
	value *OriginInfo
	isSet bool
}

func (v NullableOriginInfo) Get() *OriginInfo {
	return v.value
}

func (v *NullableOriginInfo) Set(val *OriginInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableOriginInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableOriginInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOriginInfo(val *OriginInfo) *NullableOriginInfo {
	return &NullableOriginInfo{value: val, isSet: true}
}

func (v NullableOriginInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOriginInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


