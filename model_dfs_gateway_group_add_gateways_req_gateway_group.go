/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DfsGatewayGroupAddGatewaysReqGatewayGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsGatewayGroupAddGatewaysReqGatewayGroup{}

// DfsGatewayGroupAddGatewaysReqGatewayGroup struct for DfsGatewayGroupAddGatewaysReqGatewayGroup
type DfsGatewayGroupAddGatewaysReqGatewayGroup struct {
	// dfs gateway zone id
	DfsGatewayZoneId *int64 `json:"dfs_gateway_zone_id,omitempty"`
	// dfs gateways list
	DfsGateways []DfsGatewayReq `json:"dfs_gateways"`
}

type _DfsGatewayGroupAddGatewaysReqGatewayGroup DfsGatewayGroupAddGatewaysReqGatewayGroup

// NewDfsGatewayGroupAddGatewaysReqGatewayGroup instantiates a new DfsGatewayGroupAddGatewaysReqGatewayGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsGatewayGroupAddGatewaysReqGatewayGroup(dfsGateways []DfsGatewayReq) *DfsGatewayGroupAddGatewaysReqGatewayGroup {
	this := DfsGatewayGroupAddGatewaysReqGatewayGroup{}
	this.DfsGateways = dfsGateways
	return &this
}

// NewDfsGatewayGroupAddGatewaysReqGatewayGroupWithDefaults instantiates a new DfsGatewayGroupAddGatewaysReqGatewayGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsGatewayGroupAddGatewaysReqGatewayGroupWithDefaults() *DfsGatewayGroupAddGatewaysReqGatewayGroup {
	this := DfsGatewayGroupAddGatewaysReqGatewayGroup{}
	return &this
}

// GetDfsGatewayZoneId returns the DfsGatewayZoneId field value if set, zero value otherwise.
func (o *DfsGatewayGroupAddGatewaysReqGatewayGroup) GetDfsGatewayZoneId() int64 {
	if o == nil || IsNil(o.DfsGatewayZoneId) {
		var ret int64
		return ret
	}
	return *o.DfsGatewayZoneId
}

// GetDfsGatewayZoneIdOk returns a tuple with the DfsGatewayZoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupAddGatewaysReqGatewayGroup) GetDfsGatewayZoneIdOk() (*int64, bool) {
	if o == nil || IsNil(o.DfsGatewayZoneId) {
		return nil, false
	}
	return o.DfsGatewayZoneId, true
}

// HasDfsGatewayZoneId returns a boolean if a field has been set.
func (o *DfsGatewayGroupAddGatewaysReqGatewayGroup) HasDfsGatewayZoneId() bool {
	if o != nil && !IsNil(o.DfsGatewayZoneId) {
		return true
	}

	return false
}

// SetDfsGatewayZoneId gets a reference to the given int64 and assigns it to the DfsGatewayZoneId field.
func (o *DfsGatewayGroupAddGatewaysReqGatewayGroup) SetDfsGatewayZoneId(v int64) {
	o.DfsGatewayZoneId = &v
}

// GetDfsGateways returns the DfsGateways field value
func (o *DfsGatewayGroupAddGatewaysReqGatewayGroup) GetDfsGateways() []DfsGatewayReq {
	if o == nil {
		var ret []DfsGatewayReq
		return ret
	}

	return o.DfsGateways
}

// GetDfsGatewaysOk returns a tuple with the DfsGateways field value
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupAddGatewaysReqGatewayGroup) GetDfsGatewaysOk() ([]DfsGatewayReq, bool) {
	if o == nil {
		return nil, false
	}
	return o.DfsGateways, true
}

// SetDfsGateways sets field value
func (o *DfsGatewayGroupAddGatewaysReqGatewayGroup) SetDfsGateways(v []DfsGatewayReq) {
	o.DfsGateways = v
}

func (o DfsGatewayGroupAddGatewaysReqGatewayGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsGatewayGroupAddGatewaysReqGatewayGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DfsGatewayZoneId) {
		toSerialize["dfs_gateway_zone_id"] = o.DfsGatewayZoneId
	}
	toSerialize["dfs_gateways"] = o.DfsGateways
	return toSerialize, nil
}

func (o *DfsGatewayGroupAddGatewaysReqGatewayGroup) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dfs_gateways",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDfsGatewayGroupAddGatewaysReqGatewayGroup := _DfsGatewayGroupAddGatewaysReqGatewayGroup{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDfsGatewayGroupAddGatewaysReqGatewayGroup)

	if err != nil {
		return err
	}

	*o = DfsGatewayGroupAddGatewaysReqGatewayGroup(varDfsGatewayGroupAddGatewaysReqGatewayGroup)

	return err
}

type NullableDfsGatewayGroupAddGatewaysReqGatewayGroup struct {
	value *DfsGatewayGroupAddGatewaysReqGatewayGroup
	isSet bool
}

func (v NullableDfsGatewayGroupAddGatewaysReqGatewayGroup) Get() *DfsGatewayGroupAddGatewaysReqGatewayGroup {
	return v.value
}

func (v *NullableDfsGatewayGroupAddGatewaysReqGatewayGroup) Set(val *DfsGatewayGroupAddGatewaysReqGatewayGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsGatewayGroupAddGatewaysReqGatewayGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsGatewayGroupAddGatewaysReqGatewayGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsGatewayGroupAddGatewaysReqGatewayGroup(val *DfsGatewayGroupAddGatewaysReqGatewayGroup) *NullableDfsGatewayGroupAddGatewaysReqGatewayGroup {
	return &NullableDfsGatewayGroupAddGatewaysReqGatewayGroup{value: val, isSet: true}
}

func (v NullableDfsGatewayGroupAddGatewaysReqGatewayGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsGatewayGroupAddGatewaysReqGatewayGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


