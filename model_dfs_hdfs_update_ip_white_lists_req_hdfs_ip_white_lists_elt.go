/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt{}

// DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt struct for DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt
type DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt struct {
	// ip white list id
	Id int64 `json:"id"`
	// allow ips in hdfs
	Ips string `json:"ips"`
	// permission
	Permission string `json:"permission"`
}

type _DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt

// NewDfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt instantiates a new DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt(id int64, ips string, permission string) *DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt {
	this := DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt{}
	this.Id = id
	this.Ips = ips
	this.Permission = permission
	return &this
}

// NewDfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsEltWithDefaults instantiates a new DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsEltWithDefaults() *DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt {
	this := DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt{}
	return &this
}

// GetId returns the Id field value
func (o *DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt) SetId(v int64) {
	o.Id = v
}

// GetIps returns the Ips field value
func (o *DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt) GetIps() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ips
}

// GetIpsOk returns a tuple with the Ips field value
// and a boolean to check if the value has been set.
func (o *DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt) GetIpsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ips, true
}

// SetIps sets field value
func (o *DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt) SetIps(v string) {
	o.Ips = v
}

// GetPermission returns the Permission field value
func (o *DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt) GetPermission() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Permission
}

// GetPermissionOk returns a tuple with the Permission field value
// and a boolean to check if the value has been set.
func (o *DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt) GetPermissionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Permission, true
}

// SetPermission sets field value
func (o *DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt) SetPermission(v string) {
	o.Permission = v
}

func (o DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["ips"] = o.Ips
	toSerialize["permission"] = o.Permission
	return toSerialize, nil
}

func (o *DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"ips",
		"permission",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt := _DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt)

	if err != nil {
		return err
	}

	*o = DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt(varDfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt)

	return err
}

type NullableDfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt struct {
	value *DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt
	isSet bool
}

func (v NullableDfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt) Get() *DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt {
	return v.value
}

func (v *NullableDfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt) Set(val *DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt(val *DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt) *NullableDfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt {
	return &NullableDfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt{value: val, isSet: true}
}

func (v NullableDfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


