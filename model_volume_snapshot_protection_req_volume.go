/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the VolumeSnapshotProtectionReqVolume type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeSnapshotProtectionReqVolume{}

// VolumeSnapshotProtectionReqVolume struct for VolumeSnapshotProtectionReqVolume
type VolumeSnapshotProtectionReqVolume struct {
	// policy
	DpBlockSnapshotPolicyId int64 `json:"dp_block_snapshot_policy_id"`
}

type _VolumeSnapshotProtectionReqVolume VolumeSnapshotProtectionReqVolume

// NewVolumeSnapshotProtectionReqVolume instantiates a new VolumeSnapshotProtectionReqVolume object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeSnapshotProtectionReqVolume(dpBlockSnapshotPolicyId int64) *VolumeSnapshotProtectionReqVolume {
	this := VolumeSnapshotProtectionReqVolume{}
	this.DpBlockSnapshotPolicyId = dpBlockSnapshotPolicyId
	return &this
}

// NewVolumeSnapshotProtectionReqVolumeWithDefaults instantiates a new VolumeSnapshotProtectionReqVolume object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeSnapshotProtectionReqVolumeWithDefaults() *VolumeSnapshotProtectionReqVolume {
	this := VolumeSnapshotProtectionReqVolume{}
	return &this
}

// GetDpBlockSnapshotPolicyId returns the DpBlockSnapshotPolicyId field value
func (o *VolumeSnapshotProtectionReqVolume) GetDpBlockSnapshotPolicyId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DpBlockSnapshotPolicyId
}

// GetDpBlockSnapshotPolicyIdOk returns a tuple with the DpBlockSnapshotPolicyId field value
// and a boolean to check if the value has been set.
func (o *VolumeSnapshotProtectionReqVolume) GetDpBlockSnapshotPolicyIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DpBlockSnapshotPolicyId, true
}

// SetDpBlockSnapshotPolicyId sets field value
func (o *VolumeSnapshotProtectionReqVolume) SetDpBlockSnapshotPolicyId(v int64) {
	o.DpBlockSnapshotPolicyId = v
}

func (o VolumeSnapshotProtectionReqVolume) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeSnapshotProtectionReqVolume) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dp_block_snapshot_policy_id"] = o.DpBlockSnapshotPolicyId
	return toSerialize, nil
}

func (o *VolumeSnapshotProtectionReqVolume) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dp_block_snapshot_policy_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVolumeSnapshotProtectionReqVolume := _VolumeSnapshotProtectionReqVolume{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVolumeSnapshotProtectionReqVolume)

	if err != nil {
		return err
	}

	*o = VolumeSnapshotProtectionReqVolume(varVolumeSnapshotProtectionReqVolume)

	return err
}

type NullableVolumeSnapshotProtectionReqVolume struct {
	value *VolumeSnapshotProtectionReqVolume
	isSet bool
}

func (v NullableVolumeSnapshotProtectionReqVolume) Get() *VolumeSnapshotProtectionReqVolume {
	return v.value
}

func (v *NullableVolumeSnapshotProtectionReqVolume) Set(val *VolumeSnapshotProtectionReqVolume) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeSnapshotProtectionReqVolume) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeSnapshotProtectionReqVolume) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeSnapshotProtectionReqVolume(val *VolumeSnapshotProtectionReqVolume) *NullableVolumeSnapshotProtectionReqVolume {
	return &NullableVolumeSnapshotProtectionReqVolume{value: val, isSet: true}
}

func (v NullableVolumeSnapshotProtectionReqVolume) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeSnapshotProtectionReqVolume) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


