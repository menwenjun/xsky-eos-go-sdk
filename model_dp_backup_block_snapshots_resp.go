/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DpBackupBlockSnapshotsResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DpBackupBlockSnapshotsResp{}

// DpBackupBlockSnapshotsResp struct for DpBackupBlockSnapshotsResp
type DpBackupBlockSnapshotsResp struct {
	// block snapshots
	BackupBlockSnapshots []DpBackupBlockSnapshot `json:"backup_block_snapshots"`
}

type _DpBackupBlockSnapshotsResp DpBackupBlockSnapshotsResp

// NewDpBackupBlockSnapshotsResp instantiates a new DpBackupBlockSnapshotsResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDpBackupBlockSnapshotsResp(backupBlockSnapshots []DpBackupBlockSnapshot) *DpBackupBlockSnapshotsResp {
	this := DpBackupBlockSnapshotsResp{}
	this.BackupBlockSnapshots = backupBlockSnapshots
	return &this
}

// NewDpBackupBlockSnapshotsRespWithDefaults instantiates a new DpBackupBlockSnapshotsResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDpBackupBlockSnapshotsRespWithDefaults() *DpBackupBlockSnapshotsResp {
	this := DpBackupBlockSnapshotsResp{}
	return &this
}

// GetBackupBlockSnapshots returns the BackupBlockSnapshots field value
func (o *DpBackupBlockSnapshotsResp) GetBackupBlockSnapshots() []DpBackupBlockSnapshot {
	if o == nil {
		var ret []DpBackupBlockSnapshot
		return ret
	}

	return o.BackupBlockSnapshots
}

// GetBackupBlockSnapshotsOk returns a tuple with the BackupBlockSnapshots field value
// and a boolean to check if the value has been set.
func (o *DpBackupBlockSnapshotsResp) GetBackupBlockSnapshotsOk() ([]DpBackupBlockSnapshot, bool) {
	if o == nil {
		return nil, false
	}
	return o.BackupBlockSnapshots, true
}

// SetBackupBlockSnapshots sets field value
func (o *DpBackupBlockSnapshotsResp) SetBackupBlockSnapshots(v []DpBackupBlockSnapshot) {
	o.BackupBlockSnapshots = v
}

func (o DpBackupBlockSnapshotsResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DpBackupBlockSnapshotsResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["backup_block_snapshots"] = o.BackupBlockSnapshots
	return toSerialize, nil
}

func (o *DpBackupBlockSnapshotsResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"backup_block_snapshots",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDpBackupBlockSnapshotsResp := _DpBackupBlockSnapshotsResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDpBackupBlockSnapshotsResp)

	if err != nil {
		return err
	}

	*o = DpBackupBlockSnapshotsResp(varDpBackupBlockSnapshotsResp)

	return err
}

type NullableDpBackupBlockSnapshotsResp struct {
	value *DpBackupBlockSnapshotsResp
	isSet bool
}

func (v NullableDpBackupBlockSnapshotsResp) Get() *DpBackupBlockSnapshotsResp {
	return v.value
}

func (v *NullableDpBackupBlockSnapshotsResp) Set(val *DpBackupBlockSnapshotsResp) {
	v.value = val
	v.isSet = true
}

func (v NullableDpBackupBlockSnapshotsResp) IsSet() bool {
	return v.isSet
}

func (v *NullableDpBackupBlockSnapshotsResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDpBackupBlockSnapshotsResp(val *DpBackupBlockSnapshotsResp) *NullableDpBackupBlockSnapshotsResp {
	return &NullableDpBackupBlockSnapshotsResp{value: val, isSet: true}
}

func (v NullableDpBackupBlockSnapshotsResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDpBackupBlockSnapshotsResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


