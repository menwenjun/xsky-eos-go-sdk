/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ClusterInstallation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterInstallation{}

// ClusterInstallation ClusterInstallation returns installation status of the cluster
type ClusterInstallation struct {
	Finished *bool `json:"finished,omitempty"`
	Steps *ClusterInstallationSteps `json:"steps,omitempty"`
}

// NewClusterInstallation instantiates a new ClusterInstallation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterInstallation() *ClusterInstallation {
	this := ClusterInstallation{}
	return &this
}

// NewClusterInstallationWithDefaults instantiates a new ClusterInstallation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterInstallationWithDefaults() *ClusterInstallation {
	this := ClusterInstallation{}
	return &this
}

// GetFinished returns the Finished field value if set, zero value otherwise.
func (o *ClusterInstallation) GetFinished() bool {
	if o == nil || IsNil(o.Finished) {
		var ret bool
		return ret
	}
	return *o.Finished
}

// GetFinishedOk returns a tuple with the Finished field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterInstallation) GetFinishedOk() (*bool, bool) {
	if o == nil || IsNil(o.Finished) {
		return nil, false
	}
	return o.Finished, true
}

// HasFinished returns a boolean if a field has been set.
func (o *ClusterInstallation) HasFinished() bool {
	if o != nil && !IsNil(o.Finished) {
		return true
	}

	return false
}

// SetFinished gets a reference to the given bool and assigns it to the Finished field.
func (o *ClusterInstallation) SetFinished(v bool) {
	o.Finished = &v
}

// GetSteps returns the Steps field value if set, zero value otherwise.
func (o *ClusterInstallation) GetSteps() ClusterInstallationSteps {
	if o == nil || IsNil(o.Steps) {
		var ret ClusterInstallationSteps
		return ret
	}
	return *o.Steps
}

// GetStepsOk returns a tuple with the Steps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterInstallation) GetStepsOk() (*ClusterInstallationSteps, bool) {
	if o == nil || IsNil(o.Steps) {
		return nil, false
	}
	return o.Steps, true
}

// HasSteps returns a boolean if a field has been set.
func (o *ClusterInstallation) HasSteps() bool {
	if o != nil && !IsNil(o.Steps) {
		return true
	}

	return false
}

// SetSteps gets a reference to the given ClusterInstallationSteps and assigns it to the Steps field.
func (o *ClusterInstallation) SetSteps(v ClusterInstallationSteps) {
	o.Steps = &v
}

func (o ClusterInstallation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterInstallation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Finished) {
		toSerialize["finished"] = o.Finished
	}
	if !IsNil(o.Steps) {
		toSerialize["steps"] = o.Steps
	}
	return toSerialize, nil
}

type NullableClusterInstallation struct {
	value *ClusterInstallation
	isSet bool
}

func (v NullableClusterInstallation) Get() *ClusterInstallation {
	return v.value
}

func (v *NullableClusterInstallation) Set(val *ClusterInstallation) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterInstallation) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterInstallation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterInstallation(val *ClusterInstallation) *NullableClusterInstallation {
	return &NullableClusterInstallation{value: val, isSet: true}
}

func (v NullableClusterInstallation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterInstallation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


