/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the CloudVolume type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloudVolume{}

// CloudVolume CloudVolume defines volumes of the cloud platform
type CloudVolume struct {
	BlockVolume *VolumeNestview `json:"block_volume,omitempty"`
	CloudDatacenter *CloudDatacenterNestview `json:"cloud_datacenter,omitempty"`
	CloudPlatform *CloudPlatformNestview `json:"cloud_platform,omitempty"`
	CloudVolumeId *string `json:"cloud_volume_id,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	Id *int64 `json:"id,omitempty"`
	MultiAttach *bool `json:"multi_attach,omitempty"`
	Name *string `json:"name,omitempty"`
	Type *string `json:"type,omitempty"`
	Update *time.Time `json:"update,omitempty"`
}

// NewCloudVolume instantiates a new CloudVolume object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudVolume() *CloudVolume {
	this := CloudVolume{}
	return &this
}

// NewCloudVolumeWithDefaults instantiates a new CloudVolume object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudVolumeWithDefaults() *CloudVolume {
	this := CloudVolume{}
	return &this
}

// GetBlockVolume returns the BlockVolume field value if set, zero value otherwise.
func (o *CloudVolume) GetBlockVolume() VolumeNestview {
	if o == nil || IsNil(o.BlockVolume) {
		var ret VolumeNestview
		return ret
	}
	return *o.BlockVolume
}

// GetBlockVolumeOk returns a tuple with the BlockVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudVolume) GetBlockVolumeOk() (*VolumeNestview, bool) {
	if o == nil || IsNil(o.BlockVolume) {
		return nil, false
	}
	return o.BlockVolume, true
}

// HasBlockVolume returns a boolean if a field has been set.
func (o *CloudVolume) HasBlockVolume() bool {
	if o != nil && !IsNil(o.BlockVolume) {
		return true
	}

	return false
}

// SetBlockVolume gets a reference to the given VolumeNestview and assigns it to the BlockVolume field.
func (o *CloudVolume) SetBlockVolume(v VolumeNestview) {
	o.BlockVolume = &v
}

// GetCloudDatacenter returns the CloudDatacenter field value if set, zero value otherwise.
func (o *CloudVolume) GetCloudDatacenter() CloudDatacenterNestview {
	if o == nil || IsNil(o.CloudDatacenter) {
		var ret CloudDatacenterNestview
		return ret
	}
	return *o.CloudDatacenter
}

// GetCloudDatacenterOk returns a tuple with the CloudDatacenter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudVolume) GetCloudDatacenterOk() (*CloudDatacenterNestview, bool) {
	if o == nil || IsNil(o.CloudDatacenter) {
		return nil, false
	}
	return o.CloudDatacenter, true
}

// HasCloudDatacenter returns a boolean if a field has been set.
func (o *CloudVolume) HasCloudDatacenter() bool {
	if o != nil && !IsNil(o.CloudDatacenter) {
		return true
	}

	return false
}

// SetCloudDatacenter gets a reference to the given CloudDatacenterNestview and assigns it to the CloudDatacenter field.
func (o *CloudVolume) SetCloudDatacenter(v CloudDatacenterNestview) {
	o.CloudDatacenter = &v
}

// GetCloudPlatform returns the CloudPlatform field value if set, zero value otherwise.
func (o *CloudVolume) GetCloudPlatform() CloudPlatformNestview {
	if o == nil || IsNil(o.CloudPlatform) {
		var ret CloudPlatformNestview
		return ret
	}
	return *o.CloudPlatform
}

// GetCloudPlatformOk returns a tuple with the CloudPlatform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudVolume) GetCloudPlatformOk() (*CloudPlatformNestview, bool) {
	if o == nil || IsNil(o.CloudPlatform) {
		return nil, false
	}
	return o.CloudPlatform, true
}

// HasCloudPlatform returns a boolean if a field has been set.
func (o *CloudVolume) HasCloudPlatform() bool {
	if o != nil && !IsNil(o.CloudPlatform) {
		return true
	}

	return false
}

// SetCloudPlatform gets a reference to the given CloudPlatformNestview and assigns it to the CloudPlatform field.
func (o *CloudVolume) SetCloudPlatform(v CloudPlatformNestview) {
	o.CloudPlatform = &v
}

// GetCloudVolumeId returns the CloudVolumeId field value if set, zero value otherwise.
func (o *CloudVolume) GetCloudVolumeId() string {
	if o == nil || IsNil(o.CloudVolumeId) {
		var ret string
		return ret
	}
	return *o.CloudVolumeId
}

// GetCloudVolumeIdOk returns a tuple with the CloudVolumeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudVolume) GetCloudVolumeIdOk() (*string, bool) {
	if o == nil || IsNil(o.CloudVolumeId) {
		return nil, false
	}
	return o.CloudVolumeId, true
}

// HasCloudVolumeId returns a boolean if a field has been set.
func (o *CloudVolume) HasCloudVolumeId() bool {
	if o != nil && !IsNil(o.CloudVolumeId) {
		return true
	}

	return false
}

// SetCloudVolumeId gets a reference to the given string and assigns it to the CloudVolumeId field.
func (o *CloudVolume) SetCloudVolumeId(v string) {
	o.CloudVolumeId = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *CloudVolume) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudVolume) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *CloudVolume) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *CloudVolume) SetCreate(v time.Time) {
	o.Create = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CloudVolume) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudVolume) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CloudVolume) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *CloudVolume) SetId(v int64) {
	o.Id = &v
}

// GetMultiAttach returns the MultiAttach field value if set, zero value otherwise.
func (o *CloudVolume) GetMultiAttach() bool {
	if o == nil || IsNil(o.MultiAttach) {
		var ret bool
		return ret
	}
	return *o.MultiAttach
}

// GetMultiAttachOk returns a tuple with the MultiAttach field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudVolume) GetMultiAttachOk() (*bool, bool) {
	if o == nil || IsNil(o.MultiAttach) {
		return nil, false
	}
	return o.MultiAttach, true
}

// HasMultiAttach returns a boolean if a field has been set.
func (o *CloudVolume) HasMultiAttach() bool {
	if o != nil && !IsNil(o.MultiAttach) {
		return true
	}

	return false
}

// SetMultiAttach gets a reference to the given bool and assigns it to the MultiAttach field.
func (o *CloudVolume) SetMultiAttach(v bool) {
	o.MultiAttach = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CloudVolume) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudVolume) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CloudVolume) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CloudVolume) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CloudVolume) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudVolume) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CloudVolume) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CloudVolume) SetType(v string) {
	o.Type = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *CloudVolume) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudVolume) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *CloudVolume) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *CloudVolume) SetUpdate(v time.Time) {
	o.Update = &v
}

func (o CloudVolume) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudVolume) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BlockVolume) {
		toSerialize["block_volume"] = o.BlockVolume
	}
	if !IsNil(o.CloudDatacenter) {
		toSerialize["cloud_datacenter"] = o.CloudDatacenter
	}
	if !IsNil(o.CloudPlatform) {
		toSerialize["cloud_platform"] = o.CloudPlatform
	}
	if !IsNil(o.CloudVolumeId) {
		toSerialize["cloud_volume_id"] = o.CloudVolumeId
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.MultiAttach) {
		toSerialize["multi_attach"] = o.MultiAttach
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	return toSerialize, nil
}

type NullableCloudVolume struct {
	value *CloudVolume
	isSet bool
}

func (v NullableCloudVolume) Get() *CloudVolume {
	return v.value
}

func (v *NullableCloudVolume) Set(val *CloudVolume) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudVolume) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudVolume) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudVolume(val *CloudVolume) *NullableCloudVolume {
	return &NullableCloudVolume{value: val, isSet: true}
}

func (v NullableCloudVolume) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudVolume) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


