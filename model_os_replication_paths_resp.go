/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OSReplicationPathsResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OSReplicationPathsResp{}

// OSReplicationPathsResp struct for OSReplicationPathsResp
type OSReplicationPathsResp struct {
	OsReplicationPaths []OSReplicationPath `json:"os_replication_paths,omitempty"`
}

// NewOSReplicationPathsResp instantiates a new OSReplicationPathsResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOSReplicationPathsResp() *OSReplicationPathsResp {
	this := OSReplicationPathsResp{}
	return &this
}

// NewOSReplicationPathsRespWithDefaults instantiates a new OSReplicationPathsResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOSReplicationPathsRespWithDefaults() *OSReplicationPathsResp {
	this := OSReplicationPathsResp{}
	return &this
}

// GetOsReplicationPaths returns the OsReplicationPaths field value if set, zero value otherwise.
func (o *OSReplicationPathsResp) GetOsReplicationPaths() []OSReplicationPath {
	if o == nil || IsNil(o.OsReplicationPaths) {
		var ret []OSReplicationPath
		return ret
	}
	return o.OsReplicationPaths
}

// GetOsReplicationPathsOk returns a tuple with the OsReplicationPaths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSReplicationPathsResp) GetOsReplicationPathsOk() ([]OSReplicationPath, bool) {
	if o == nil || IsNil(o.OsReplicationPaths) {
		return nil, false
	}
	return o.OsReplicationPaths, true
}

// HasOsReplicationPaths returns a boolean if a field has been set.
func (o *OSReplicationPathsResp) HasOsReplicationPaths() bool {
	if o != nil && !IsNil(o.OsReplicationPaths) {
		return true
	}

	return false
}

// SetOsReplicationPaths gets a reference to the given []OSReplicationPath and assigns it to the OsReplicationPaths field.
func (o *OSReplicationPathsResp) SetOsReplicationPaths(v []OSReplicationPath) {
	o.OsReplicationPaths = v
}

func (o OSReplicationPathsResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OSReplicationPathsResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OsReplicationPaths) {
		toSerialize["os_replication_paths"] = o.OsReplicationPaths
	}
	return toSerialize, nil
}

type NullableOSReplicationPathsResp struct {
	value *OSReplicationPathsResp
	isSet bool
}

func (v NullableOSReplicationPathsResp) Get() *OSReplicationPathsResp {
	return v.value
}

func (v *NullableOSReplicationPathsResp) Set(val *OSReplicationPathsResp) {
	v.value = val
	v.isSet = true
}

func (v NullableOSReplicationPathsResp) IsSet() bool {
	return v.isSet
}

func (v *NullableOSReplicationPathsResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSReplicationPathsResp(val *OSReplicationPathsResp) *NullableOSReplicationPathsResp {
	return &NullableOSReplicationPathsResp{value: val, isSet: true}
}

func (v NullableOSReplicationPathsResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSReplicationPathsResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


