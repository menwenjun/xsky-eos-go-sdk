/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateVolumeStatReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateVolumeStatReq{}

// UpdateVolumeStatReq struct for UpdateVolumeStatReq
type UpdateVolumeStatReq struct {
	PoolName *string `json:"pool_name,omitempty"`
	Stat *VolumeStat `json:"stat,omitempty"`
	VolumeName *string `json:"volume_name,omitempty"`
}

// NewUpdateVolumeStatReq instantiates a new UpdateVolumeStatReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateVolumeStatReq() *UpdateVolumeStatReq {
	this := UpdateVolumeStatReq{}
	return &this
}

// NewUpdateVolumeStatReqWithDefaults instantiates a new UpdateVolumeStatReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateVolumeStatReqWithDefaults() *UpdateVolumeStatReq {
	this := UpdateVolumeStatReq{}
	return &this
}

// GetPoolName returns the PoolName field value if set, zero value otherwise.
func (o *UpdateVolumeStatReq) GetPoolName() string {
	if o == nil || IsNil(o.PoolName) {
		var ret string
		return ret
	}
	return *o.PoolName
}

// GetPoolNameOk returns a tuple with the PoolName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVolumeStatReq) GetPoolNameOk() (*string, bool) {
	if o == nil || IsNil(o.PoolName) {
		return nil, false
	}
	return o.PoolName, true
}

// HasPoolName returns a boolean if a field has been set.
func (o *UpdateVolumeStatReq) HasPoolName() bool {
	if o != nil && !IsNil(o.PoolName) {
		return true
	}

	return false
}

// SetPoolName gets a reference to the given string and assigns it to the PoolName field.
func (o *UpdateVolumeStatReq) SetPoolName(v string) {
	o.PoolName = &v
}

// GetStat returns the Stat field value if set, zero value otherwise.
func (o *UpdateVolumeStatReq) GetStat() VolumeStat {
	if o == nil || IsNil(o.Stat) {
		var ret VolumeStat
		return ret
	}
	return *o.Stat
}

// GetStatOk returns a tuple with the Stat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVolumeStatReq) GetStatOk() (*VolumeStat, bool) {
	if o == nil || IsNil(o.Stat) {
		return nil, false
	}
	return o.Stat, true
}

// HasStat returns a boolean if a field has been set.
func (o *UpdateVolumeStatReq) HasStat() bool {
	if o != nil && !IsNil(o.Stat) {
		return true
	}

	return false
}

// SetStat gets a reference to the given VolumeStat and assigns it to the Stat field.
func (o *UpdateVolumeStatReq) SetStat(v VolumeStat) {
	o.Stat = &v
}

// GetVolumeName returns the VolumeName field value if set, zero value otherwise.
func (o *UpdateVolumeStatReq) GetVolumeName() string {
	if o == nil || IsNil(o.VolumeName) {
		var ret string
		return ret
	}
	return *o.VolumeName
}

// GetVolumeNameOk returns a tuple with the VolumeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVolumeStatReq) GetVolumeNameOk() (*string, bool) {
	if o == nil || IsNil(o.VolumeName) {
		return nil, false
	}
	return o.VolumeName, true
}

// HasVolumeName returns a boolean if a field has been set.
func (o *UpdateVolumeStatReq) HasVolumeName() bool {
	if o != nil && !IsNil(o.VolumeName) {
		return true
	}

	return false
}

// SetVolumeName gets a reference to the given string and assigns it to the VolumeName field.
func (o *UpdateVolumeStatReq) SetVolumeName(v string) {
	o.VolumeName = &v
}

func (o UpdateVolumeStatReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateVolumeStatReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PoolName) {
		toSerialize["pool_name"] = o.PoolName
	}
	if !IsNil(o.Stat) {
		toSerialize["stat"] = o.Stat
	}
	if !IsNil(o.VolumeName) {
		toSerialize["volume_name"] = o.VolumeName
	}
	return toSerialize, nil
}

type NullableUpdateVolumeStatReq struct {
	value *UpdateVolumeStatReq
	isSet bool
}

func (v NullableUpdateVolumeStatReq) Get() *UpdateVolumeStatReq {
	return v.value
}

func (v *NullableUpdateVolumeStatReq) Set(val *UpdateVolumeStatReq) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateVolumeStatReq) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateVolumeStatReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateVolumeStatReq(val *UpdateVolumeStatReq) *NullableUpdateVolumeStatReq {
	return &NullableUpdateVolumeStatReq{value: val, isSet: true}
}

func (v NullableUpdateVolumeStatReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateVolumeStatReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


