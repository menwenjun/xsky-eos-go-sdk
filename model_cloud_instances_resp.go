/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CloudInstancesResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloudInstancesResp{}

// CloudInstancesResp struct for CloudInstancesResp
type CloudInstancesResp struct {
	// cloud instance records
	CloudInstances []CloudInstanceRecord `json:"cloud_instances,omitempty"`
}

// NewCloudInstancesResp instantiates a new CloudInstancesResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudInstancesResp() *CloudInstancesResp {
	this := CloudInstancesResp{}
	return &this
}

// NewCloudInstancesRespWithDefaults instantiates a new CloudInstancesResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudInstancesRespWithDefaults() *CloudInstancesResp {
	this := CloudInstancesResp{}
	return &this
}

// GetCloudInstances returns the CloudInstances field value if set, zero value otherwise.
func (o *CloudInstancesResp) GetCloudInstances() []CloudInstanceRecord {
	if o == nil || IsNil(o.CloudInstances) {
		var ret []CloudInstanceRecord
		return ret
	}
	return o.CloudInstances
}

// GetCloudInstancesOk returns a tuple with the CloudInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudInstancesResp) GetCloudInstancesOk() ([]CloudInstanceRecord, bool) {
	if o == nil || IsNil(o.CloudInstances) {
		return nil, false
	}
	return o.CloudInstances, true
}

// HasCloudInstances returns a boolean if a field has been set.
func (o *CloudInstancesResp) HasCloudInstances() bool {
	if o != nil && !IsNil(o.CloudInstances) {
		return true
	}

	return false
}

// SetCloudInstances gets a reference to the given []CloudInstanceRecord and assigns it to the CloudInstances field.
func (o *CloudInstancesResp) SetCloudInstances(v []CloudInstanceRecord) {
	o.CloudInstances = v
}

func (o CloudInstancesResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudInstancesResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CloudInstances) {
		toSerialize["cloud_instances"] = o.CloudInstances
	}
	return toSerialize, nil
}

type NullableCloudInstancesResp struct {
	value *CloudInstancesResp
	isSet bool
}

func (v NullableCloudInstancesResp) Get() *CloudInstancesResp {
	return v.value
}

func (v *NullableCloudInstancesResp) Set(val *CloudInstancesResp) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudInstancesResp) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudInstancesResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudInstancesResp(val *CloudInstancesResp) *NullableCloudInstancesResp {
	return &NullableCloudInstancesResp{value: val, isSet: true}
}

func (v NullableCloudInstancesResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudInstancesResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


