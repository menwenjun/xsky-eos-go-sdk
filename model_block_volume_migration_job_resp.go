/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BlockVolumeMigrationJobResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlockVolumeMigrationJobResp{}

// BlockVolumeMigrationJobResp struct for BlockVolumeMigrationJobResp
type BlockVolumeMigrationJobResp struct {
	BlockVolumeMigrationJob VolumeMigrationJob `json:"block_volume_migration_job"`
}

type _BlockVolumeMigrationJobResp BlockVolumeMigrationJobResp

// NewBlockVolumeMigrationJobResp instantiates a new BlockVolumeMigrationJobResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockVolumeMigrationJobResp(blockVolumeMigrationJob VolumeMigrationJob) *BlockVolumeMigrationJobResp {
	this := BlockVolumeMigrationJobResp{}
	this.BlockVolumeMigrationJob = blockVolumeMigrationJob
	return &this
}

// NewBlockVolumeMigrationJobRespWithDefaults instantiates a new BlockVolumeMigrationJobResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockVolumeMigrationJobRespWithDefaults() *BlockVolumeMigrationJobResp {
	this := BlockVolumeMigrationJobResp{}
	return &this
}

// GetBlockVolumeMigrationJob returns the BlockVolumeMigrationJob field value
func (o *BlockVolumeMigrationJobResp) GetBlockVolumeMigrationJob() VolumeMigrationJob {
	if o == nil {
		var ret VolumeMigrationJob
		return ret
	}

	return o.BlockVolumeMigrationJob
}

// GetBlockVolumeMigrationJobOk returns a tuple with the BlockVolumeMigrationJob field value
// and a boolean to check if the value has been set.
func (o *BlockVolumeMigrationJobResp) GetBlockVolumeMigrationJobOk() (*VolumeMigrationJob, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BlockVolumeMigrationJob, true
}

// SetBlockVolumeMigrationJob sets field value
func (o *BlockVolumeMigrationJobResp) SetBlockVolumeMigrationJob(v VolumeMigrationJob) {
	o.BlockVolumeMigrationJob = v
}

func (o BlockVolumeMigrationJobResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlockVolumeMigrationJobResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["block_volume_migration_job"] = o.BlockVolumeMigrationJob
	return toSerialize, nil
}

func (o *BlockVolumeMigrationJobResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"block_volume_migration_job",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBlockVolumeMigrationJobResp := _BlockVolumeMigrationJobResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBlockVolumeMigrationJobResp)

	if err != nil {
		return err
	}

	*o = BlockVolumeMigrationJobResp(varBlockVolumeMigrationJobResp)

	return err
}

type NullableBlockVolumeMigrationJobResp struct {
	value *BlockVolumeMigrationJobResp
	isSet bool
}

func (v NullableBlockVolumeMigrationJobResp) Get() *BlockVolumeMigrationJobResp {
	return v.value
}

func (v *NullableBlockVolumeMigrationJobResp) Set(val *BlockVolumeMigrationJobResp) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockVolumeMigrationJobResp) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockVolumeMigrationJobResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockVolumeMigrationJobResp(val *BlockVolumeMigrationJobResp) *NullableBlockVolumeMigrationJobResp {
	return &NullableBlockVolumeMigrationJobResp{value: val, isSet: true}
}

func (v NullableBlockVolumeMigrationJobResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockVolumeMigrationJobResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


