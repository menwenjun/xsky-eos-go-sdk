/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OspMetadataClusterSamplesResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OspMetadataClusterSamplesResp{}

// OspMetadataClusterSamplesResp struct for OspMetadataClusterSamplesResp
type OspMetadataClusterSamplesResp struct {
	// osp metadata cluster samples
	OspMetadataClusterSamples []OspMetadataClusterStat `json:"osp_metadata_cluster_samples,omitempty"`
}

// NewOspMetadataClusterSamplesResp instantiates a new OspMetadataClusterSamplesResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOspMetadataClusterSamplesResp() *OspMetadataClusterSamplesResp {
	this := OspMetadataClusterSamplesResp{}
	return &this
}

// NewOspMetadataClusterSamplesRespWithDefaults instantiates a new OspMetadataClusterSamplesResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOspMetadataClusterSamplesRespWithDefaults() *OspMetadataClusterSamplesResp {
	this := OspMetadataClusterSamplesResp{}
	return &this
}

// GetOspMetadataClusterSamples returns the OspMetadataClusterSamples field value if set, zero value otherwise.
func (o *OspMetadataClusterSamplesResp) GetOspMetadataClusterSamples() []OspMetadataClusterStat {
	if o == nil || IsNil(o.OspMetadataClusterSamples) {
		var ret []OspMetadataClusterStat
		return ret
	}
	return o.OspMetadataClusterSamples
}

// GetOspMetadataClusterSamplesOk returns a tuple with the OspMetadataClusterSamples field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataClusterSamplesResp) GetOspMetadataClusterSamplesOk() ([]OspMetadataClusterStat, bool) {
	if o == nil || IsNil(o.OspMetadataClusterSamples) {
		return nil, false
	}
	return o.OspMetadataClusterSamples, true
}

// HasOspMetadataClusterSamples returns a boolean if a field has been set.
func (o *OspMetadataClusterSamplesResp) HasOspMetadataClusterSamples() bool {
	if o != nil && !IsNil(o.OspMetadataClusterSamples) {
		return true
	}

	return false
}

// SetOspMetadataClusterSamples gets a reference to the given []OspMetadataClusterStat and assigns it to the OspMetadataClusterSamples field.
func (o *OspMetadataClusterSamplesResp) SetOspMetadataClusterSamples(v []OspMetadataClusterStat) {
	o.OspMetadataClusterSamples = v
}

func (o OspMetadataClusterSamplesResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OspMetadataClusterSamplesResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OspMetadataClusterSamples) {
		toSerialize["osp_metadata_cluster_samples"] = o.OspMetadataClusterSamples
	}
	return toSerialize, nil
}

type NullableOspMetadataClusterSamplesResp struct {
	value *OspMetadataClusterSamplesResp
	isSet bool
}

func (v NullableOspMetadataClusterSamplesResp) Get() *OspMetadataClusterSamplesResp {
	return v.value
}

func (v *NullableOspMetadataClusterSamplesResp) Set(val *OspMetadataClusterSamplesResp) {
	v.value = val
	v.isSet = true
}

func (v NullableOspMetadataClusterSamplesResp) IsSet() bool {
	return v.isSet
}

func (v *NullableOspMetadataClusterSamplesResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOspMetadataClusterSamplesResp(val *OspMetadataClusterSamplesResp) *NullableOspMetadataClusterSamplesResp {
	return &NullableOspMetadataClusterSamplesResp{value: val, isSet: true}
}

func (v NullableOspMetadataClusterSamplesResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOspMetadataClusterSamplesResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


