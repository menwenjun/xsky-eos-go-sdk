/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DfsHdfsConnectionsResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsHdfsConnectionsResp{}

// DfsHdfsConnectionsResp struct for DfsHdfsConnectionsResp
type DfsHdfsConnectionsResp struct {
	// dfs hdfs connections
	DfsHdfsConnections []DfsHdfsConnection `json:"dfs_hdfs_connections"`
}

type _DfsHdfsConnectionsResp DfsHdfsConnectionsResp

// NewDfsHdfsConnectionsResp instantiates a new DfsHdfsConnectionsResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsHdfsConnectionsResp(dfsHdfsConnections []DfsHdfsConnection) *DfsHdfsConnectionsResp {
	this := DfsHdfsConnectionsResp{}
	this.DfsHdfsConnections = dfsHdfsConnections
	return &this
}

// NewDfsHdfsConnectionsRespWithDefaults instantiates a new DfsHdfsConnectionsResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsHdfsConnectionsRespWithDefaults() *DfsHdfsConnectionsResp {
	this := DfsHdfsConnectionsResp{}
	return &this
}

// GetDfsHdfsConnections returns the DfsHdfsConnections field value
func (o *DfsHdfsConnectionsResp) GetDfsHdfsConnections() []DfsHdfsConnection {
	if o == nil {
		var ret []DfsHdfsConnection
		return ret
	}

	return o.DfsHdfsConnections
}

// GetDfsHdfsConnectionsOk returns a tuple with the DfsHdfsConnections field value
// and a boolean to check if the value has been set.
func (o *DfsHdfsConnectionsResp) GetDfsHdfsConnectionsOk() ([]DfsHdfsConnection, bool) {
	if o == nil {
		return nil, false
	}
	return o.DfsHdfsConnections, true
}

// SetDfsHdfsConnections sets field value
func (o *DfsHdfsConnectionsResp) SetDfsHdfsConnections(v []DfsHdfsConnection) {
	o.DfsHdfsConnections = v
}

func (o DfsHdfsConnectionsResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsHdfsConnectionsResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dfs_hdfs_connections"] = o.DfsHdfsConnections
	return toSerialize, nil
}

func (o *DfsHdfsConnectionsResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dfs_hdfs_connections",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDfsHdfsConnectionsResp := _DfsHdfsConnectionsResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDfsHdfsConnectionsResp)

	if err != nil {
		return err
	}

	*o = DfsHdfsConnectionsResp(varDfsHdfsConnectionsResp)

	return err
}

type NullableDfsHdfsConnectionsResp struct {
	value *DfsHdfsConnectionsResp
	isSet bool
}

func (v NullableDfsHdfsConnectionsResp) Get() *DfsHdfsConnectionsResp {
	return v.value
}

func (v *NullableDfsHdfsConnectionsResp) Set(val *DfsHdfsConnectionsResp) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsHdfsConnectionsResp) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsHdfsConnectionsResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsHdfsConnectionsResp(val *DfsHdfsConnectionsResp) *NullableDfsHdfsConnectionsResp {
	return &NullableDfsHdfsConnectionsResp{value: val, isSet: true}
}

func (v NullableDfsHdfsConnectionsResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsHdfsConnectionsResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


