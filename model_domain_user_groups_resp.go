/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DomainUserGroupsResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DomainUserGroupsResp{}

// DomainUserGroupsResp struct for DomainUserGroupsResp
type DomainUserGroupsResp struct {
	DomainUserGroups []DomainUserGroup `json:"domain_user_groups,omitempty"`
}

// NewDomainUserGroupsResp instantiates a new DomainUserGroupsResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDomainUserGroupsResp() *DomainUserGroupsResp {
	this := DomainUserGroupsResp{}
	return &this
}

// NewDomainUserGroupsRespWithDefaults instantiates a new DomainUserGroupsResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDomainUserGroupsRespWithDefaults() *DomainUserGroupsResp {
	this := DomainUserGroupsResp{}
	return &this
}

// GetDomainUserGroups returns the DomainUserGroups field value if set, zero value otherwise.
func (o *DomainUserGroupsResp) GetDomainUserGroups() []DomainUserGroup {
	if o == nil || IsNil(o.DomainUserGroups) {
		var ret []DomainUserGroup
		return ret
	}
	return o.DomainUserGroups
}

// GetDomainUserGroupsOk returns a tuple with the DomainUserGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainUserGroupsResp) GetDomainUserGroupsOk() ([]DomainUserGroup, bool) {
	if o == nil || IsNil(o.DomainUserGroups) {
		return nil, false
	}
	return o.DomainUserGroups, true
}

// HasDomainUserGroups returns a boolean if a field has been set.
func (o *DomainUserGroupsResp) HasDomainUserGroups() bool {
	if o != nil && !IsNil(o.DomainUserGroups) {
		return true
	}

	return false
}

// SetDomainUserGroups gets a reference to the given []DomainUserGroup and assigns it to the DomainUserGroups field.
func (o *DomainUserGroupsResp) SetDomainUserGroups(v []DomainUserGroup) {
	o.DomainUserGroups = v
}

func (o DomainUserGroupsResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DomainUserGroupsResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DomainUserGroups) {
		toSerialize["domain_user_groups"] = o.DomainUserGroups
	}
	return toSerialize, nil
}

type NullableDomainUserGroupsResp struct {
	value *DomainUserGroupsResp
	isSet bool
}

func (v NullableDomainUserGroupsResp) Get() *DomainUserGroupsResp {
	return v.value
}

func (v *NullableDomainUserGroupsResp) Set(val *DomainUserGroupsResp) {
	v.value = val
	v.isSet = true
}

func (v NullableDomainUserGroupsResp) IsSet() bool {
	return v.isSet
}

func (v *NullableDomainUserGroupsResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDomainUserGroupsResp(val *DomainUserGroupsResp) *NullableDomainUserGroupsResp {
	return &NullableDomainUserGroupsResp{value: val, isSet: true}
}

func (v NullableDomainUserGroupsResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDomainUserGroupsResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


