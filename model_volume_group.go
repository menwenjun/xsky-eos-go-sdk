/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the VolumeGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeGroup{}

// VolumeGroup VolumeGroup defines the model of volume group
type VolumeGroup struct {
	ActionStatus *string `json:"action_status,omitempty"`
	BlockVolumeGroupSnapshot *VolumeGroupSnapshotNestview `json:"block_volume_group_snapshot,omitempty"`
	BlockVolumeGroupSnapshotNum *int64 `json:"block_volume_group_snapshot_num,omitempty"`
	BlockVolumeNum *int64 `json:"block_volume_num,omitempty"`
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	Description *string `json:"description,omitempty"`
	Flattened *bool `json:"flattened,omitempty"`
	GroupName *string `json:"group_name,omitempty"`
	Id *int64 `json:"id,omitempty"`
	LatestSnapshotTime *time.Time `json:"latest_snapshot_time,omitempty"`
	Name *string `json:"name,omitempty"`
	Passive *bool `json:"passive,omitempty"`
	Pool *PoolNestview `json:"pool,omitempty"`
	Progress *float64 `json:"progress,omitempty"`
	SnapshotReplicationRole *string `json:"snapshot_replication_role,omitempty"`
	SnapshotReplicationStatus *string `json:"snapshot_replication_status,omitempty"`
	Status *string `json:"status,omitempty"`
	Update *time.Time `json:"update,omitempty"`
}

// NewVolumeGroup instantiates a new VolumeGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeGroup() *VolumeGroup {
	this := VolumeGroup{}
	return &this
}

// NewVolumeGroupWithDefaults instantiates a new VolumeGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeGroupWithDefaults() *VolumeGroup {
	this := VolumeGroup{}
	return &this
}

// GetActionStatus returns the ActionStatus field value if set, zero value otherwise.
func (o *VolumeGroup) GetActionStatus() string {
	if o == nil || IsNil(o.ActionStatus) {
		var ret string
		return ret
	}
	return *o.ActionStatus
}

// GetActionStatusOk returns a tuple with the ActionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroup) GetActionStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ActionStatus) {
		return nil, false
	}
	return o.ActionStatus, true
}

// HasActionStatus returns a boolean if a field has been set.
func (o *VolumeGroup) HasActionStatus() bool {
	if o != nil && !IsNil(o.ActionStatus) {
		return true
	}

	return false
}

// SetActionStatus gets a reference to the given string and assigns it to the ActionStatus field.
func (o *VolumeGroup) SetActionStatus(v string) {
	o.ActionStatus = &v
}

// GetBlockVolumeGroupSnapshot returns the BlockVolumeGroupSnapshot field value if set, zero value otherwise.
func (o *VolumeGroup) GetBlockVolumeGroupSnapshot() VolumeGroupSnapshotNestview {
	if o == nil || IsNil(o.BlockVolumeGroupSnapshot) {
		var ret VolumeGroupSnapshotNestview
		return ret
	}
	return *o.BlockVolumeGroupSnapshot
}

// GetBlockVolumeGroupSnapshotOk returns a tuple with the BlockVolumeGroupSnapshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroup) GetBlockVolumeGroupSnapshotOk() (*VolumeGroupSnapshotNestview, bool) {
	if o == nil || IsNil(o.BlockVolumeGroupSnapshot) {
		return nil, false
	}
	return o.BlockVolumeGroupSnapshot, true
}

// HasBlockVolumeGroupSnapshot returns a boolean if a field has been set.
func (o *VolumeGroup) HasBlockVolumeGroupSnapshot() bool {
	if o != nil && !IsNil(o.BlockVolumeGroupSnapshot) {
		return true
	}

	return false
}

// SetBlockVolumeGroupSnapshot gets a reference to the given VolumeGroupSnapshotNestview and assigns it to the BlockVolumeGroupSnapshot field.
func (o *VolumeGroup) SetBlockVolumeGroupSnapshot(v VolumeGroupSnapshotNestview) {
	o.BlockVolumeGroupSnapshot = &v
}

// GetBlockVolumeGroupSnapshotNum returns the BlockVolumeGroupSnapshotNum field value if set, zero value otherwise.
func (o *VolumeGroup) GetBlockVolumeGroupSnapshotNum() int64 {
	if o == nil || IsNil(o.BlockVolumeGroupSnapshotNum) {
		var ret int64
		return ret
	}
	return *o.BlockVolumeGroupSnapshotNum
}

// GetBlockVolumeGroupSnapshotNumOk returns a tuple with the BlockVolumeGroupSnapshotNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroup) GetBlockVolumeGroupSnapshotNumOk() (*int64, bool) {
	if o == nil || IsNil(o.BlockVolumeGroupSnapshotNum) {
		return nil, false
	}
	return o.BlockVolumeGroupSnapshotNum, true
}

// HasBlockVolumeGroupSnapshotNum returns a boolean if a field has been set.
func (o *VolumeGroup) HasBlockVolumeGroupSnapshotNum() bool {
	if o != nil && !IsNil(o.BlockVolumeGroupSnapshotNum) {
		return true
	}

	return false
}

// SetBlockVolumeGroupSnapshotNum gets a reference to the given int64 and assigns it to the BlockVolumeGroupSnapshotNum field.
func (o *VolumeGroup) SetBlockVolumeGroupSnapshotNum(v int64) {
	o.BlockVolumeGroupSnapshotNum = &v
}

// GetBlockVolumeNum returns the BlockVolumeNum field value if set, zero value otherwise.
func (o *VolumeGroup) GetBlockVolumeNum() int64 {
	if o == nil || IsNil(o.BlockVolumeNum) {
		var ret int64
		return ret
	}
	return *o.BlockVolumeNum
}

// GetBlockVolumeNumOk returns a tuple with the BlockVolumeNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroup) GetBlockVolumeNumOk() (*int64, bool) {
	if o == nil || IsNil(o.BlockVolumeNum) {
		return nil, false
	}
	return o.BlockVolumeNum, true
}

// HasBlockVolumeNum returns a boolean if a field has been set.
func (o *VolumeGroup) HasBlockVolumeNum() bool {
	if o != nil && !IsNil(o.BlockVolumeNum) {
		return true
	}

	return false
}

// SetBlockVolumeNum gets a reference to the given int64 and assigns it to the BlockVolumeNum field.
func (o *VolumeGroup) SetBlockVolumeNum(v int64) {
	o.BlockVolumeNum = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *VolumeGroup) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroup) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *VolumeGroup) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *VolumeGroup) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *VolumeGroup) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroup) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *VolumeGroup) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *VolumeGroup) SetCreate(v time.Time) {
	o.Create = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *VolumeGroup) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroup) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *VolumeGroup) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *VolumeGroup) SetDescription(v string) {
	o.Description = &v
}

// GetFlattened returns the Flattened field value if set, zero value otherwise.
func (o *VolumeGroup) GetFlattened() bool {
	if o == nil || IsNil(o.Flattened) {
		var ret bool
		return ret
	}
	return *o.Flattened
}

// GetFlattenedOk returns a tuple with the Flattened field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroup) GetFlattenedOk() (*bool, bool) {
	if o == nil || IsNil(o.Flattened) {
		return nil, false
	}
	return o.Flattened, true
}

// HasFlattened returns a boolean if a field has been set.
func (o *VolumeGroup) HasFlattened() bool {
	if o != nil && !IsNil(o.Flattened) {
		return true
	}

	return false
}

// SetFlattened gets a reference to the given bool and assigns it to the Flattened field.
func (o *VolumeGroup) SetFlattened(v bool) {
	o.Flattened = &v
}

// GetGroupName returns the GroupName field value if set, zero value otherwise.
func (o *VolumeGroup) GetGroupName() string {
	if o == nil || IsNil(o.GroupName) {
		var ret string
		return ret
	}
	return *o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroup) GetGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.GroupName) {
		return nil, false
	}
	return o.GroupName, true
}

// HasGroupName returns a boolean if a field has been set.
func (o *VolumeGroup) HasGroupName() bool {
	if o != nil && !IsNil(o.GroupName) {
		return true
	}

	return false
}

// SetGroupName gets a reference to the given string and assigns it to the GroupName field.
func (o *VolumeGroup) SetGroupName(v string) {
	o.GroupName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VolumeGroup) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroup) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VolumeGroup) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *VolumeGroup) SetId(v int64) {
	o.Id = &v
}

// GetLatestSnapshotTime returns the LatestSnapshotTime field value if set, zero value otherwise.
func (o *VolumeGroup) GetLatestSnapshotTime() time.Time {
	if o == nil || IsNil(o.LatestSnapshotTime) {
		var ret time.Time
		return ret
	}
	return *o.LatestSnapshotTime
}

// GetLatestSnapshotTimeOk returns a tuple with the LatestSnapshotTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroup) GetLatestSnapshotTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LatestSnapshotTime) {
		return nil, false
	}
	return o.LatestSnapshotTime, true
}

// HasLatestSnapshotTime returns a boolean if a field has been set.
func (o *VolumeGroup) HasLatestSnapshotTime() bool {
	if o != nil && !IsNil(o.LatestSnapshotTime) {
		return true
	}

	return false
}

// SetLatestSnapshotTime gets a reference to the given time.Time and assigns it to the LatestSnapshotTime field.
func (o *VolumeGroup) SetLatestSnapshotTime(v time.Time) {
	o.LatestSnapshotTime = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VolumeGroup) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroup) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VolumeGroup) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VolumeGroup) SetName(v string) {
	o.Name = &v
}

// GetPassive returns the Passive field value if set, zero value otherwise.
func (o *VolumeGroup) GetPassive() bool {
	if o == nil || IsNil(o.Passive) {
		var ret bool
		return ret
	}
	return *o.Passive
}

// GetPassiveOk returns a tuple with the Passive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroup) GetPassiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Passive) {
		return nil, false
	}
	return o.Passive, true
}

// HasPassive returns a boolean if a field has been set.
func (o *VolumeGroup) HasPassive() bool {
	if o != nil && !IsNil(o.Passive) {
		return true
	}

	return false
}

// SetPassive gets a reference to the given bool and assigns it to the Passive field.
func (o *VolumeGroup) SetPassive(v bool) {
	o.Passive = &v
}

// GetPool returns the Pool field value if set, zero value otherwise.
func (o *VolumeGroup) GetPool() PoolNestview {
	if o == nil || IsNil(o.Pool) {
		var ret PoolNestview
		return ret
	}
	return *o.Pool
}

// GetPoolOk returns a tuple with the Pool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroup) GetPoolOk() (*PoolNestview, bool) {
	if o == nil || IsNil(o.Pool) {
		return nil, false
	}
	return o.Pool, true
}

// HasPool returns a boolean if a field has been set.
func (o *VolumeGroup) HasPool() bool {
	if o != nil && !IsNil(o.Pool) {
		return true
	}

	return false
}

// SetPool gets a reference to the given PoolNestview and assigns it to the Pool field.
func (o *VolumeGroup) SetPool(v PoolNestview) {
	o.Pool = &v
}

// GetProgress returns the Progress field value if set, zero value otherwise.
func (o *VolumeGroup) GetProgress() float64 {
	if o == nil || IsNil(o.Progress) {
		var ret float64
		return ret
	}
	return *o.Progress
}

// GetProgressOk returns a tuple with the Progress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroup) GetProgressOk() (*float64, bool) {
	if o == nil || IsNil(o.Progress) {
		return nil, false
	}
	return o.Progress, true
}

// HasProgress returns a boolean if a field has been set.
func (o *VolumeGroup) HasProgress() bool {
	if o != nil && !IsNil(o.Progress) {
		return true
	}

	return false
}

// SetProgress gets a reference to the given float64 and assigns it to the Progress field.
func (o *VolumeGroup) SetProgress(v float64) {
	o.Progress = &v
}

// GetSnapshotReplicationRole returns the SnapshotReplicationRole field value if set, zero value otherwise.
func (o *VolumeGroup) GetSnapshotReplicationRole() string {
	if o == nil || IsNil(o.SnapshotReplicationRole) {
		var ret string
		return ret
	}
	return *o.SnapshotReplicationRole
}

// GetSnapshotReplicationRoleOk returns a tuple with the SnapshotReplicationRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroup) GetSnapshotReplicationRoleOk() (*string, bool) {
	if o == nil || IsNil(o.SnapshotReplicationRole) {
		return nil, false
	}
	return o.SnapshotReplicationRole, true
}

// HasSnapshotReplicationRole returns a boolean if a field has been set.
func (o *VolumeGroup) HasSnapshotReplicationRole() bool {
	if o != nil && !IsNil(o.SnapshotReplicationRole) {
		return true
	}

	return false
}

// SetSnapshotReplicationRole gets a reference to the given string and assigns it to the SnapshotReplicationRole field.
func (o *VolumeGroup) SetSnapshotReplicationRole(v string) {
	o.SnapshotReplicationRole = &v
}

// GetSnapshotReplicationStatus returns the SnapshotReplicationStatus field value if set, zero value otherwise.
func (o *VolumeGroup) GetSnapshotReplicationStatus() string {
	if o == nil || IsNil(o.SnapshotReplicationStatus) {
		var ret string
		return ret
	}
	return *o.SnapshotReplicationStatus
}

// GetSnapshotReplicationStatusOk returns a tuple with the SnapshotReplicationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroup) GetSnapshotReplicationStatusOk() (*string, bool) {
	if o == nil || IsNil(o.SnapshotReplicationStatus) {
		return nil, false
	}
	return o.SnapshotReplicationStatus, true
}

// HasSnapshotReplicationStatus returns a boolean if a field has been set.
func (o *VolumeGroup) HasSnapshotReplicationStatus() bool {
	if o != nil && !IsNil(o.SnapshotReplicationStatus) {
		return true
	}

	return false
}

// SetSnapshotReplicationStatus gets a reference to the given string and assigns it to the SnapshotReplicationStatus field.
func (o *VolumeGroup) SetSnapshotReplicationStatus(v string) {
	o.SnapshotReplicationStatus = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *VolumeGroup) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroup) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *VolumeGroup) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *VolumeGroup) SetStatus(v string) {
	o.Status = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *VolumeGroup) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroup) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *VolumeGroup) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *VolumeGroup) SetUpdate(v time.Time) {
	o.Update = &v
}

func (o VolumeGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActionStatus) {
		toSerialize["action_status"] = o.ActionStatus
	}
	if !IsNil(o.BlockVolumeGroupSnapshot) {
		toSerialize["block_volume_group_snapshot"] = o.BlockVolumeGroupSnapshot
	}
	if !IsNil(o.BlockVolumeGroupSnapshotNum) {
		toSerialize["block_volume_group_snapshot_num"] = o.BlockVolumeGroupSnapshotNum
	}
	if !IsNil(o.BlockVolumeNum) {
		toSerialize["block_volume_num"] = o.BlockVolumeNum
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Flattened) {
		toSerialize["flattened"] = o.Flattened
	}
	if !IsNil(o.GroupName) {
		toSerialize["group_name"] = o.GroupName
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LatestSnapshotTime) {
		toSerialize["latest_snapshot_time"] = o.LatestSnapshotTime
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Passive) {
		toSerialize["passive"] = o.Passive
	}
	if !IsNil(o.Pool) {
		toSerialize["pool"] = o.Pool
	}
	if !IsNil(o.Progress) {
		toSerialize["progress"] = o.Progress
	}
	if !IsNil(o.SnapshotReplicationRole) {
		toSerialize["snapshot_replication_role"] = o.SnapshotReplicationRole
	}
	if !IsNil(o.SnapshotReplicationStatus) {
		toSerialize["snapshot_replication_status"] = o.SnapshotReplicationStatus
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	return toSerialize, nil
}

type NullableVolumeGroup struct {
	value *VolumeGroup
	isSet bool
}

func (v NullableVolumeGroup) Get() *VolumeGroup {
	return v.value
}

func (v *NullableVolumeGroup) Set(val *VolumeGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeGroup(val *VolumeGroup) *NullableVolumeGroup {
	return &NullableVolumeGroup{value: val, isSet: true}
}

func (v NullableVolumeGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


