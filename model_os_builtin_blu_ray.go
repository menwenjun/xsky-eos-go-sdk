/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the OSBuiltinBluRay type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OSBuiltinBluRay{}

// OSBuiltinBluRay OSBuiltinBluRay is the model of os_builtin_blu_ray
type OSBuiltinBluRay struct {
	AdminEndpoint *string `json:"admin_endpoint,omitempty"`
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	OsPolicies []ObjectStoragePolicy `json:"os_policies,omitempty"`
	Password *string `json:"password,omitempty"`
	Status *string `json:"status,omitempty"`
	UserName *string `json:"user_name,omitempty"`
}

// NewOSBuiltinBluRay instantiates a new OSBuiltinBluRay object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOSBuiltinBluRay() *OSBuiltinBluRay {
	this := OSBuiltinBluRay{}
	return &this
}

// NewOSBuiltinBluRayWithDefaults instantiates a new OSBuiltinBluRay object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOSBuiltinBluRayWithDefaults() *OSBuiltinBluRay {
	this := OSBuiltinBluRay{}
	return &this
}

// GetAdminEndpoint returns the AdminEndpoint field value if set, zero value otherwise.
func (o *OSBuiltinBluRay) GetAdminEndpoint() string {
	if o == nil || IsNil(o.AdminEndpoint) {
		var ret string
		return ret
	}
	return *o.AdminEndpoint
}

// GetAdminEndpointOk returns a tuple with the AdminEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBuiltinBluRay) GetAdminEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.AdminEndpoint) {
		return nil, false
	}
	return o.AdminEndpoint, true
}

// HasAdminEndpoint returns a boolean if a field has been set.
func (o *OSBuiltinBluRay) HasAdminEndpoint() bool {
	if o != nil && !IsNil(o.AdminEndpoint) {
		return true
	}

	return false
}

// SetAdminEndpoint gets a reference to the given string and assigns it to the AdminEndpoint field.
func (o *OSBuiltinBluRay) SetAdminEndpoint(v string) {
	o.AdminEndpoint = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *OSBuiltinBluRay) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBuiltinBluRay) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *OSBuiltinBluRay) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *OSBuiltinBluRay) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *OSBuiltinBluRay) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBuiltinBluRay) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *OSBuiltinBluRay) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *OSBuiltinBluRay) SetCreate(v time.Time) {
	o.Create = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OSBuiltinBluRay) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBuiltinBluRay) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OSBuiltinBluRay) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *OSBuiltinBluRay) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OSBuiltinBluRay) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBuiltinBluRay) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OSBuiltinBluRay) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OSBuiltinBluRay) SetName(v string) {
	o.Name = &v
}

// GetOsPolicies returns the OsPolicies field value if set, zero value otherwise.
func (o *OSBuiltinBluRay) GetOsPolicies() []ObjectStoragePolicy {
	if o == nil || IsNil(o.OsPolicies) {
		var ret []ObjectStoragePolicy
		return ret
	}
	return o.OsPolicies
}

// GetOsPoliciesOk returns a tuple with the OsPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBuiltinBluRay) GetOsPoliciesOk() ([]ObjectStoragePolicy, bool) {
	if o == nil || IsNil(o.OsPolicies) {
		return nil, false
	}
	return o.OsPolicies, true
}

// HasOsPolicies returns a boolean if a field has been set.
func (o *OSBuiltinBluRay) HasOsPolicies() bool {
	if o != nil && !IsNil(o.OsPolicies) {
		return true
	}

	return false
}

// SetOsPolicies gets a reference to the given []ObjectStoragePolicy and assigns it to the OsPolicies field.
func (o *OSBuiltinBluRay) SetOsPolicies(v []ObjectStoragePolicy) {
	o.OsPolicies = v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *OSBuiltinBluRay) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBuiltinBluRay) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *OSBuiltinBluRay) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *OSBuiltinBluRay) SetPassword(v string) {
	o.Password = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *OSBuiltinBluRay) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBuiltinBluRay) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *OSBuiltinBluRay) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *OSBuiltinBluRay) SetStatus(v string) {
	o.Status = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *OSBuiltinBluRay) GetUserName() string {
	if o == nil || IsNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBuiltinBluRay) GetUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *OSBuiltinBluRay) HasUserName() bool {
	if o != nil && !IsNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *OSBuiltinBluRay) SetUserName(v string) {
	o.UserName = &v
}

func (o OSBuiltinBluRay) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OSBuiltinBluRay) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdminEndpoint) {
		toSerialize["admin_endpoint"] = o.AdminEndpoint
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OsPolicies) {
		toSerialize["os_policies"] = o.OsPolicies
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.UserName) {
		toSerialize["user_name"] = o.UserName
	}
	return toSerialize, nil
}

type NullableOSBuiltinBluRay struct {
	value *OSBuiltinBluRay
	isSet bool
}

func (v NullableOSBuiltinBluRay) Get() *OSBuiltinBluRay {
	return v.value
}

func (v *NullableOSBuiltinBluRay) Set(val *OSBuiltinBluRay) {
	v.value = val
	v.isSet = true
}

func (v NullableOSBuiltinBluRay) IsSet() bool {
	return v.isSet
}

func (v *NullableOSBuiltinBluRay) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSBuiltinBluRay(val *OSBuiltinBluRay) *NullableOSBuiltinBluRay {
	return &NullableOSBuiltinBluRay{value: val, isSet: true}
}

func (v NullableOSBuiltinBluRay) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSBuiltinBluRay) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


