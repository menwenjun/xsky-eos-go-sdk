/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PlacementNodeProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PlacementNodeProperties{}

// PlacementNodeProperties PlacementNodeProperties contains properties for a placement node.
type PlacementNodeProperties struct {
	// whether this is a witness node
	IsWitness *bool `json:"is_witness,omitempty"`
}

// NewPlacementNodeProperties instantiates a new PlacementNodeProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlacementNodeProperties() *PlacementNodeProperties {
	this := PlacementNodeProperties{}
	return &this
}

// NewPlacementNodePropertiesWithDefaults instantiates a new PlacementNodeProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlacementNodePropertiesWithDefaults() *PlacementNodeProperties {
	this := PlacementNodeProperties{}
	return &this
}

// GetIsWitness returns the IsWitness field value if set, zero value otherwise.
func (o *PlacementNodeProperties) GetIsWitness() bool {
	if o == nil || IsNil(o.IsWitness) {
		var ret bool
		return ret
	}
	return *o.IsWitness
}

// GetIsWitnessOk returns a tuple with the IsWitness field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlacementNodeProperties) GetIsWitnessOk() (*bool, bool) {
	if o == nil || IsNil(o.IsWitness) {
		return nil, false
	}
	return o.IsWitness, true
}

// HasIsWitness returns a boolean if a field has been set.
func (o *PlacementNodeProperties) HasIsWitness() bool {
	if o != nil && !IsNil(o.IsWitness) {
		return true
	}

	return false
}

// SetIsWitness gets a reference to the given bool and assigns it to the IsWitness field.
func (o *PlacementNodeProperties) SetIsWitness(v bool) {
	o.IsWitness = &v
}

func (o PlacementNodeProperties) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PlacementNodeProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsWitness) {
		toSerialize["is_witness"] = o.IsWitness
	}
	return toSerialize, nil
}

type NullablePlacementNodeProperties struct {
	value *PlacementNodeProperties
	isSet bool
}

func (v NullablePlacementNodeProperties) Get() *PlacementNodeProperties {
	return v.value
}

func (v *NullablePlacementNodeProperties) Set(val *PlacementNodeProperties) {
	v.value = val
	v.isSet = true
}

func (v NullablePlacementNodeProperties) IsSet() bool {
	return v.isSet
}

func (v *NullablePlacementNodeProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlacementNodeProperties(val *PlacementNodeProperties) *NullablePlacementNodeProperties {
	return &NullablePlacementNodeProperties{value: val, isSet: true}
}

func (v NullablePlacementNodeProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlacementNodeProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


