/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DfsGatewayServiceSamplesElem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsGatewayServiceSamplesElem{}

// DfsGatewayServiceSamplesElem struct for DfsGatewayServiceSamplesElem
type DfsGatewayServiceSamplesElem struct {
	// id of dfs gateway service
	Id *int64 `json:"id,omitempty"`
	// name of dfs gateway service
	Name *string `json:"name,omitempty"`
	Paging *Paging `json:"paging,omitempty"`
	// sample list of dfs gateway service
	Samples []DfsGatewayServiceStat `json:"samples,omitempty"`
}

// NewDfsGatewayServiceSamplesElem instantiates a new DfsGatewayServiceSamplesElem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsGatewayServiceSamplesElem() *DfsGatewayServiceSamplesElem {
	this := DfsGatewayServiceSamplesElem{}
	return &this
}

// NewDfsGatewayServiceSamplesElemWithDefaults instantiates a new DfsGatewayServiceSamplesElem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsGatewayServiceSamplesElemWithDefaults() *DfsGatewayServiceSamplesElem {
	this := DfsGatewayServiceSamplesElem{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DfsGatewayServiceSamplesElem) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayServiceSamplesElem) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DfsGatewayServiceSamplesElem) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *DfsGatewayServiceSamplesElem) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DfsGatewayServiceSamplesElem) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayServiceSamplesElem) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DfsGatewayServiceSamplesElem) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DfsGatewayServiceSamplesElem) SetName(v string) {
	o.Name = &v
}

// GetPaging returns the Paging field value if set, zero value otherwise.
func (o *DfsGatewayServiceSamplesElem) GetPaging() Paging {
	if o == nil || IsNil(o.Paging) {
		var ret Paging
		return ret
	}
	return *o.Paging
}

// GetPagingOk returns a tuple with the Paging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayServiceSamplesElem) GetPagingOk() (*Paging, bool) {
	if o == nil || IsNil(o.Paging) {
		return nil, false
	}
	return o.Paging, true
}

// HasPaging returns a boolean if a field has been set.
func (o *DfsGatewayServiceSamplesElem) HasPaging() bool {
	if o != nil && !IsNil(o.Paging) {
		return true
	}

	return false
}

// SetPaging gets a reference to the given Paging and assigns it to the Paging field.
func (o *DfsGatewayServiceSamplesElem) SetPaging(v Paging) {
	o.Paging = &v
}

// GetSamples returns the Samples field value if set, zero value otherwise.
func (o *DfsGatewayServiceSamplesElem) GetSamples() []DfsGatewayServiceStat {
	if o == nil || IsNil(o.Samples) {
		var ret []DfsGatewayServiceStat
		return ret
	}
	return o.Samples
}

// GetSamplesOk returns a tuple with the Samples field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayServiceSamplesElem) GetSamplesOk() ([]DfsGatewayServiceStat, bool) {
	if o == nil || IsNil(o.Samples) {
		return nil, false
	}
	return o.Samples, true
}

// HasSamples returns a boolean if a field has been set.
func (o *DfsGatewayServiceSamplesElem) HasSamples() bool {
	if o != nil && !IsNil(o.Samples) {
		return true
	}

	return false
}

// SetSamples gets a reference to the given []DfsGatewayServiceStat and assigns it to the Samples field.
func (o *DfsGatewayServiceSamplesElem) SetSamples(v []DfsGatewayServiceStat) {
	o.Samples = v
}

func (o DfsGatewayServiceSamplesElem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsGatewayServiceSamplesElem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Paging) {
		toSerialize["paging"] = o.Paging
	}
	if !IsNil(o.Samples) {
		toSerialize["samples"] = o.Samples
	}
	return toSerialize, nil
}

type NullableDfsGatewayServiceSamplesElem struct {
	value *DfsGatewayServiceSamplesElem
	isSet bool
}

func (v NullableDfsGatewayServiceSamplesElem) Get() *DfsGatewayServiceSamplesElem {
	return v.value
}

func (v *NullableDfsGatewayServiceSamplesElem) Set(val *DfsGatewayServiceSamplesElem) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsGatewayServiceSamplesElem) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsGatewayServiceSamplesElem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsGatewayServiceSamplesElem(val *DfsGatewayServiceSamplesElem) *NullableDfsGatewayServiceSamplesElem {
	return &NullableDfsGatewayServiceSamplesElem{value: val, isSet: true}
}

func (v NullableDfsGatewayServiceSamplesElem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsGatewayServiceSamplesElem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


