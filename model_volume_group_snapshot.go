/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the VolumeGroupSnapshot type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeGroupSnapshot{}

// VolumeGroupSnapshot VolumeGroupSnapshot defines the model of volume group snapshot
type VolumeGroupSnapshot struct {
	ActionStatus *string `json:"action_status,omitempty"`
	BlockSnapshotNum *int64 `json:"block_snapshot_num,omitempty"`
	BlockVolumeGroup *VolumeGroupNestview `json:"block_volume_group,omitempty"`
	ClonedBlockVolumeGroupNum *int64 `json:"cloned_block_volume_group_num,omitempty"`
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	Creator *string `json:"creator,omitempty"`
	Description *string `json:"description,omitempty"`
	GroupSnapshotName *string `json:"group_snapshot_name,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Passive *bool `json:"passive,omitempty"`
	Status *string `json:"status,omitempty"`
	Update *time.Time `json:"update,omitempty"`
}

// NewVolumeGroupSnapshot instantiates a new VolumeGroupSnapshot object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeGroupSnapshot() *VolumeGroupSnapshot {
	this := VolumeGroupSnapshot{}
	return &this
}

// NewVolumeGroupSnapshotWithDefaults instantiates a new VolumeGroupSnapshot object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeGroupSnapshotWithDefaults() *VolumeGroupSnapshot {
	this := VolumeGroupSnapshot{}
	return &this
}

// GetActionStatus returns the ActionStatus field value if set, zero value otherwise.
func (o *VolumeGroupSnapshot) GetActionStatus() string {
	if o == nil || IsNil(o.ActionStatus) {
		var ret string
		return ret
	}
	return *o.ActionStatus
}

// GetActionStatusOk returns a tuple with the ActionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupSnapshot) GetActionStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ActionStatus) {
		return nil, false
	}
	return o.ActionStatus, true
}

// HasActionStatus returns a boolean if a field has been set.
func (o *VolumeGroupSnapshot) HasActionStatus() bool {
	if o != nil && !IsNil(o.ActionStatus) {
		return true
	}

	return false
}

// SetActionStatus gets a reference to the given string and assigns it to the ActionStatus field.
func (o *VolumeGroupSnapshot) SetActionStatus(v string) {
	o.ActionStatus = &v
}

// GetBlockSnapshotNum returns the BlockSnapshotNum field value if set, zero value otherwise.
func (o *VolumeGroupSnapshot) GetBlockSnapshotNum() int64 {
	if o == nil || IsNil(o.BlockSnapshotNum) {
		var ret int64
		return ret
	}
	return *o.BlockSnapshotNum
}

// GetBlockSnapshotNumOk returns a tuple with the BlockSnapshotNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupSnapshot) GetBlockSnapshotNumOk() (*int64, bool) {
	if o == nil || IsNil(o.BlockSnapshotNum) {
		return nil, false
	}
	return o.BlockSnapshotNum, true
}

// HasBlockSnapshotNum returns a boolean if a field has been set.
func (o *VolumeGroupSnapshot) HasBlockSnapshotNum() bool {
	if o != nil && !IsNil(o.BlockSnapshotNum) {
		return true
	}

	return false
}

// SetBlockSnapshotNum gets a reference to the given int64 and assigns it to the BlockSnapshotNum field.
func (o *VolumeGroupSnapshot) SetBlockSnapshotNum(v int64) {
	o.BlockSnapshotNum = &v
}

// GetBlockVolumeGroup returns the BlockVolumeGroup field value if set, zero value otherwise.
func (o *VolumeGroupSnapshot) GetBlockVolumeGroup() VolumeGroupNestview {
	if o == nil || IsNil(o.BlockVolumeGroup) {
		var ret VolumeGroupNestview
		return ret
	}
	return *o.BlockVolumeGroup
}

// GetBlockVolumeGroupOk returns a tuple with the BlockVolumeGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupSnapshot) GetBlockVolumeGroupOk() (*VolumeGroupNestview, bool) {
	if o == nil || IsNil(o.BlockVolumeGroup) {
		return nil, false
	}
	return o.BlockVolumeGroup, true
}

// HasBlockVolumeGroup returns a boolean if a field has been set.
func (o *VolumeGroupSnapshot) HasBlockVolumeGroup() bool {
	if o != nil && !IsNil(o.BlockVolumeGroup) {
		return true
	}

	return false
}

// SetBlockVolumeGroup gets a reference to the given VolumeGroupNestview and assigns it to the BlockVolumeGroup field.
func (o *VolumeGroupSnapshot) SetBlockVolumeGroup(v VolumeGroupNestview) {
	o.BlockVolumeGroup = &v
}

// GetClonedBlockVolumeGroupNum returns the ClonedBlockVolumeGroupNum field value if set, zero value otherwise.
func (o *VolumeGroupSnapshot) GetClonedBlockVolumeGroupNum() int64 {
	if o == nil || IsNil(o.ClonedBlockVolumeGroupNum) {
		var ret int64
		return ret
	}
	return *o.ClonedBlockVolumeGroupNum
}

// GetClonedBlockVolumeGroupNumOk returns a tuple with the ClonedBlockVolumeGroupNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupSnapshot) GetClonedBlockVolumeGroupNumOk() (*int64, bool) {
	if o == nil || IsNil(o.ClonedBlockVolumeGroupNum) {
		return nil, false
	}
	return o.ClonedBlockVolumeGroupNum, true
}

// HasClonedBlockVolumeGroupNum returns a boolean if a field has been set.
func (o *VolumeGroupSnapshot) HasClonedBlockVolumeGroupNum() bool {
	if o != nil && !IsNil(o.ClonedBlockVolumeGroupNum) {
		return true
	}

	return false
}

// SetClonedBlockVolumeGroupNum gets a reference to the given int64 and assigns it to the ClonedBlockVolumeGroupNum field.
func (o *VolumeGroupSnapshot) SetClonedBlockVolumeGroupNum(v int64) {
	o.ClonedBlockVolumeGroupNum = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *VolumeGroupSnapshot) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupSnapshot) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *VolumeGroupSnapshot) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *VolumeGroupSnapshot) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *VolumeGroupSnapshot) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupSnapshot) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *VolumeGroupSnapshot) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *VolumeGroupSnapshot) SetCreate(v time.Time) {
	o.Create = &v
}

// GetCreator returns the Creator field value if set, zero value otherwise.
func (o *VolumeGroupSnapshot) GetCreator() string {
	if o == nil || IsNil(o.Creator) {
		var ret string
		return ret
	}
	return *o.Creator
}

// GetCreatorOk returns a tuple with the Creator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupSnapshot) GetCreatorOk() (*string, bool) {
	if o == nil || IsNil(o.Creator) {
		return nil, false
	}
	return o.Creator, true
}

// HasCreator returns a boolean if a field has been set.
func (o *VolumeGroupSnapshot) HasCreator() bool {
	if o != nil && !IsNil(o.Creator) {
		return true
	}

	return false
}

// SetCreator gets a reference to the given string and assigns it to the Creator field.
func (o *VolumeGroupSnapshot) SetCreator(v string) {
	o.Creator = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *VolumeGroupSnapshot) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupSnapshot) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *VolumeGroupSnapshot) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *VolumeGroupSnapshot) SetDescription(v string) {
	o.Description = &v
}

// GetGroupSnapshotName returns the GroupSnapshotName field value if set, zero value otherwise.
func (o *VolumeGroupSnapshot) GetGroupSnapshotName() string {
	if o == nil || IsNil(o.GroupSnapshotName) {
		var ret string
		return ret
	}
	return *o.GroupSnapshotName
}

// GetGroupSnapshotNameOk returns a tuple with the GroupSnapshotName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupSnapshot) GetGroupSnapshotNameOk() (*string, bool) {
	if o == nil || IsNil(o.GroupSnapshotName) {
		return nil, false
	}
	return o.GroupSnapshotName, true
}

// HasGroupSnapshotName returns a boolean if a field has been set.
func (o *VolumeGroupSnapshot) HasGroupSnapshotName() bool {
	if o != nil && !IsNil(o.GroupSnapshotName) {
		return true
	}

	return false
}

// SetGroupSnapshotName gets a reference to the given string and assigns it to the GroupSnapshotName field.
func (o *VolumeGroupSnapshot) SetGroupSnapshotName(v string) {
	o.GroupSnapshotName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VolumeGroupSnapshot) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupSnapshot) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VolumeGroupSnapshot) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *VolumeGroupSnapshot) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VolumeGroupSnapshot) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupSnapshot) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VolumeGroupSnapshot) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VolumeGroupSnapshot) SetName(v string) {
	o.Name = &v
}

// GetPassive returns the Passive field value if set, zero value otherwise.
func (o *VolumeGroupSnapshot) GetPassive() bool {
	if o == nil || IsNil(o.Passive) {
		var ret bool
		return ret
	}
	return *o.Passive
}

// GetPassiveOk returns a tuple with the Passive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupSnapshot) GetPassiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Passive) {
		return nil, false
	}
	return o.Passive, true
}

// HasPassive returns a boolean if a field has been set.
func (o *VolumeGroupSnapshot) HasPassive() bool {
	if o != nil && !IsNil(o.Passive) {
		return true
	}

	return false
}

// SetPassive gets a reference to the given bool and assigns it to the Passive field.
func (o *VolumeGroupSnapshot) SetPassive(v bool) {
	o.Passive = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *VolumeGroupSnapshot) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupSnapshot) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *VolumeGroupSnapshot) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *VolumeGroupSnapshot) SetStatus(v string) {
	o.Status = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *VolumeGroupSnapshot) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupSnapshot) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *VolumeGroupSnapshot) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *VolumeGroupSnapshot) SetUpdate(v time.Time) {
	o.Update = &v
}

func (o VolumeGroupSnapshot) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeGroupSnapshot) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActionStatus) {
		toSerialize["action_status"] = o.ActionStatus
	}
	if !IsNil(o.BlockSnapshotNum) {
		toSerialize["block_snapshot_num"] = o.BlockSnapshotNum
	}
	if !IsNil(o.BlockVolumeGroup) {
		toSerialize["block_volume_group"] = o.BlockVolumeGroup
	}
	if !IsNil(o.ClonedBlockVolumeGroupNum) {
		toSerialize["cloned_block_volume_group_num"] = o.ClonedBlockVolumeGroupNum
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.Creator) {
		toSerialize["creator"] = o.Creator
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.GroupSnapshotName) {
		toSerialize["group_snapshot_name"] = o.GroupSnapshotName
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Passive) {
		toSerialize["passive"] = o.Passive
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	return toSerialize, nil
}

type NullableVolumeGroupSnapshot struct {
	value *VolumeGroupSnapshot
	isSet bool
}

func (v NullableVolumeGroupSnapshot) Get() *VolumeGroupSnapshot {
	return v.value
}

func (v *NullableVolumeGroupSnapshot) Set(val *VolumeGroupSnapshot) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeGroupSnapshot) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeGroupSnapshot) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeGroupSnapshot(val *VolumeGroupSnapshot) *NullableVolumeGroupSnapshot {
	return &NullableVolumeGroupSnapshot{value: val, isSet: true}
}

func (v NullableVolumeGroupSnapshot) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeGroupSnapshot) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


