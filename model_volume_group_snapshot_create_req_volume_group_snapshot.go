/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the VolumeGroupSnapshotCreateReqVolumeGroupSnapshot type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeGroupSnapshotCreateReqVolumeGroupSnapshot{}

// VolumeGroupSnapshotCreateReqVolumeGroupSnapshot struct for VolumeGroupSnapshotCreateReqVolumeGroupSnapshot
type VolumeGroupSnapshotCreateReqVolumeGroupSnapshot struct {
	BlockVolumeGroupId int64 `json:"block_volume_group_id"`
	Description string `json:"description"`
	Name string `json:"name"`
}

type _VolumeGroupSnapshotCreateReqVolumeGroupSnapshot VolumeGroupSnapshotCreateReqVolumeGroupSnapshot

// NewVolumeGroupSnapshotCreateReqVolumeGroupSnapshot instantiates a new VolumeGroupSnapshotCreateReqVolumeGroupSnapshot object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeGroupSnapshotCreateReqVolumeGroupSnapshot(blockVolumeGroupId int64, description string, name string) *VolumeGroupSnapshotCreateReqVolumeGroupSnapshot {
	this := VolumeGroupSnapshotCreateReqVolumeGroupSnapshot{}
	this.BlockVolumeGroupId = blockVolumeGroupId
	this.Description = description
	this.Name = name
	return &this
}

// NewVolumeGroupSnapshotCreateReqVolumeGroupSnapshotWithDefaults instantiates a new VolumeGroupSnapshotCreateReqVolumeGroupSnapshot object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeGroupSnapshotCreateReqVolumeGroupSnapshotWithDefaults() *VolumeGroupSnapshotCreateReqVolumeGroupSnapshot {
	this := VolumeGroupSnapshotCreateReqVolumeGroupSnapshot{}
	return &this
}

// GetBlockVolumeGroupId returns the BlockVolumeGroupId field value
func (o *VolumeGroupSnapshotCreateReqVolumeGroupSnapshot) GetBlockVolumeGroupId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.BlockVolumeGroupId
}

// GetBlockVolumeGroupIdOk returns a tuple with the BlockVolumeGroupId field value
// and a boolean to check if the value has been set.
func (o *VolumeGroupSnapshotCreateReqVolumeGroupSnapshot) GetBlockVolumeGroupIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BlockVolumeGroupId, true
}

// SetBlockVolumeGroupId sets field value
func (o *VolumeGroupSnapshotCreateReqVolumeGroupSnapshot) SetBlockVolumeGroupId(v int64) {
	o.BlockVolumeGroupId = v
}

// GetDescription returns the Description field value
func (o *VolumeGroupSnapshotCreateReqVolumeGroupSnapshot) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *VolumeGroupSnapshotCreateReqVolumeGroupSnapshot) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *VolumeGroupSnapshotCreateReqVolumeGroupSnapshot) SetDescription(v string) {
	o.Description = v
}

// GetName returns the Name field value
func (o *VolumeGroupSnapshotCreateReqVolumeGroupSnapshot) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *VolumeGroupSnapshotCreateReqVolumeGroupSnapshot) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *VolumeGroupSnapshotCreateReqVolumeGroupSnapshot) SetName(v string) {
	o.Name = v
}

func (o VolumeGroupSnapshotCreateReqVolumeGroupSnapshot) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeGroupSnapshotCreateReqVolumeGroupSnapshot) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["block_volume_group_id"] = o.BlockVolumeGroupId
	toSerialize["description"] = o.Description
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

func (o *VolumeGroupSnapshotCreateReqVolumeGroupSnapshot) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"block_volume_group_id",
		"description",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVolumeGroupSnapshotCreateReqVolumeGroupSnapshot := _VolumeGroupSnapshotCreateReqVolumeGroupSnapshot{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVolumeGroupSnapshotCreateReqVolumeGroupSnapshot)

	if err != nil {
		return err
	}

	*o = VolumeGroupSnapshotCreateReqVolumeGroupSnapshot(varVolumeGroupSnapshotCreateReqVolumeGroupSnapshot)

	return err
}

type NullableVolumeGroupSnapshotCreateReqVolumeGroupSnapshot struct {
	value *VolumeGroupSnapshotCreateReqVolumeGroupSnapshot
	isSet bool
}

func (v NullableVolumeGroupSnapshotCreateReqVolumeGroupSnapshot) Get() *VolumeGroupSnapshotCreateReqVolumeGroupSnapshot {
	return v.value
}

func (v *NullableVolumeGroupSnapshotCreateReqVolumeGroupSnapshot) Set(val *VolumeGroupSnapshotCreateReqVolumeGroupSnapshot) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeGroupSnapshotCreateReqVolumeGroupSnapshot) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeGroupSnapshotCreateReqVolumeGroupSnapshot) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeGroupSnapshotCreateReqVolumeGroupSnapshot(val *VolumeGroupSnapshotCreateReqVolumeGroupSnapshot) *NullableVolumeGroupSnapshotCreateReqVolumeGroupSnapshot {
	return &NullableVolumeGroupSnapshotCreateReqVolumeGroupSnapshot{value: val, isSet: true}
}

func (v NullableVolumeGroupSnapshotCreateReqVolumeGroupSnapshot) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeGroupSnapshotCreateReqVolumeGroupSnapshot) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


