/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ObjectStorageSetReqInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ObjectStorageSetReqInfo{}

// ObjectStorageSetReqInfo struct for ObjectStorageSetReqInfo
type ObjectStorageSetReqInfo struct {
	// lifecycle end execute time
	LifecycleEndOn *string `json:"lifecycle_end_on,omitempty"`
	// lifecycle start execute time
	LifecycleStartOn *string `json:"lifecycle_start_on,omitempty"`
	// SecondMergenceEnabled enable second mergence or not
	SecondMergenceEnabled *bool `json:"second_mergence_enabled,omitempty"`
	// SecondMergenceEndOn indicates second mergence end time
	SecondMergenceEndOn *string `json:"second_mergence_end_on,omitempty"`
	// SecondMergenceStartOn indicates second mergence start time
	SecondMergenceStartOn *string `json:"second_mergence_start_on,omitempty"`
}

// NewObjectStorageSetReqInfo instantiates a new ObjectStorageSetReqInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectStorageSetReqInfo() *ObjectStorageSetReqInfo {
	this := ObjectStorageSetReqInfo{}
	return &this
}

// NewObjectStorageSetReqInfoWithDefaults instantiates a new ObjectStorageSetReqInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectStorageSetReqInfoWithDefaults() *ObjectStorageSetReqInfo {
	this := ObjectStorageSetReqInfo{}
	return &this
}

// GetLifecycleEndOn returns the LifecycleEndOn field value if set, zero value otherwise.
func (o *ObjectStorageSetReqInfo) GetLifecycleEndOn() string {
	if o == nil || IsNil(o.LifecycleEndOn) {
		var ret string
		return ret
	}
	return *o.LifecycleEndOn
}

// GetLifecycleEndOnOk returns a tuple with the LifecycleEndOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageSetReqInfo) GetLifecycleEndOnOk() (*string, bool) {
	if o == nil || IsNil(o.LifecycleEndOn) {
		return nil, false
	}
	return o.LifecycleEndOn, true
}

// HasLifecycleEndOn returns a boolean if a field has been set.
func (o *ObjectStorageSetReqInfo) HasLifecycleEndOn() bool {
	if o != nil && !IsNil(o.LifecycleEndOn) {
		return true
	}

	return false
}

// SetLifecycleEndOn gets a reference to the given string and assigns it to the LifecycleEndOn field.
func (o *ObjectStorageSetReqInfo) SetLifecycleEndOn(v string) {
	o.LifecycleEndOn = &v
}

// GetLifecycleStartOn returns the LifecycleStartOn field value if set, zero value otherwise.
func (o *ObjectStorageSetReqInfo) GetLifecycleStartOn() string {
	if o == nil || IsNil(o.LifecycleStartOn) {
		var ret string
		return ret
	}
	return *o.LifecycleStartOn
}

// GetLifecycleStartOnOk returns a tuple with the LifecycleStartOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageSetReqInfo) GetLifecycleStartOnOk() (*string, bool) {
	if o == nil || IsNil(o.LifecycleStartOn) {
		return nil, false
	}
	return o.LifecycleStartOn, true
}

// HasLifecycleStartOn returns a boolean if a field has been set.
func (o *ObjectStorageSetReqInfo) HasLifecycleStartOn() bool {
	if o != nil && !IsNil(o.LifecycleStartOn) {
		return true
	}

	return false
}

// SetLifecycleStartOn gets a reference to the given string and assigns it to the LifecycleStartOn field.
func (o *ObjectStorageSetReqInfo) SetLifecycleStartOn(v string) {
	o.LifecycleStartOn = &v
}

// GetSecondMergenceEnabled returns the SecondMergenceEnabled field value if set, zero value otherwise.
func (o *ObjectStorageSetReqInfo) GetSecondMergenceEnabled() bool {
	if o == nil || IsNil(o.SecondMergenceEnabled) {
		var ret bool
		return ret
	}
	return *o.SecondMergenceEnabled
}

// GetSecondMergenceEnabledOk returns a tuple with the SecondMergenceEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageSetReqInfo) GetSecondMergenceEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SecondMergenceEnabled) {
		return nil, false
	}
	return o.SecondMergenceEnabled, true
}

// HasSecondMergenceEnabled returns a boolean if a field has been set.
func (o *ObjectStorageSetReqInfo) HasSecondMergenceEnabled() bool {
	if o != nil && !IsNil(o.SecondMergenceEnabled) {
		return true
	}

	return false
}

// SetSecondMergenceEnabled gets a reference to the given bool and assigns it to the SecondMergenceEnabled field.
func (o *ObjectStorageSetReqInfo) SetSecondMergenceEnabled(v bool) {
	o.SecondMergenceEnabled = &v
}

// GetSecondMergenceEndOn returns the SecondMergenceEndOn field value if set, zero value otherwise.
func (o *ObjectStorageSetReqInfo) GetSecondMergenceEndOn() string {
	if o == nil || IsNil(o.SecondMergenceEndOn) {
		var ret string
		return ret
	}
	return *o.SecondMergenceEndOn
}

// GetSecondMergenceEndOnOk returns a tuple with the SecondMergenceEndOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageSetReqInfo) GetSecondMergenceEndOnOk() (*string, bool) {
	if o == nil || IsNil(o.SecondMergenceEndOn) {
		return nil, false
	}
	return o.SecondMergenceEndOn, true
}

// HasSecondMergenceEndOn returns a boolean if a field has been set.
func (o *ObjectStorageSetReqInfo) HasSecondMergenceEndOn() bool {
	if o != nil && !IsNil(o.SecondMergenceEndOn) {
		return true
	}

	return false
}

// SetSecondMergenceEndOn gets a reference to the given string and assigns it to the SecondMergenceEndOn field.
func (o *ObjectStorageSetReqInfo) SetSecondMergenceEndOn(v string) {
	o.SecondMergenceEndOn = &v
}

// GetSecondMergenceStartOn returns the SecondMergenceStartOn field value if set, zero value otherwise.
func (o *ObjectStorageSetReqInfo) GetSecondMergenceStartOn() string {
	if o == nil || IsNil(o.SecondMergenceStartOn) {
		var ret string
		return ret
	}
	return *o.SecondMergenceStartOn
}

// GetSecondMergenceStartOnOk returns a tuple with the SecondMergenceStartOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageSetReqInfo) GetSecondMergenceStartOnOk() (*string, bool) {
	if o == nil || IsNil(o.SecondMergenceStartOn) {
		return nil, false
	}
	return o.SecondMergenceStartOn, true
}

// HasSecondMergenceStartOn returns a boolean if a field has been set.
func (o *ObjectStorageSetReqInfo) HasSecondMergenceStartOn() bool {
	if o != nil && !IsNil(o.SecondMergenceStartOn) {
		return true
	}

	return false
}

// SetSecondMergenceStartOn gets a reference to the given string and assigns it to the SecondMergenceStartOn field.
func (o *ObjectStorageSetReqInfo) SetSecondMergenceStartOn(v string) {
	o.SecondMergenceStartOn = &v
}

func (o ObjectStorageSetReqInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ObjectStorageSetReqInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LifecycleEndOn) {
		toSerialize["lifecycle_end_on"] = o.LifecycleEndOn
	}
	if !IsNil(o.LifecycleStartOn) {
		toSerialize["lifecycle_start_on"] = o.LifecycleStartOn
	}
	if !IsNil(o.SecondMergenceEnabled) {
		toSerialize["second_mergence_enabled"] = o.SecondMergenceEnabled
	}
	if !IsNil(o.SecondMergenceEndOn) {
		toSerialize["second_mergence_end_on"] = o.SecondMergenceEndOn
	}
	if !IsNil(o.SecondMergenceStartOn) {
		toSerialize["second_mergence_start_on"] = o.SecondMergenceStartOn
	}
	return toSerialize, nil
}

type NullableObjectStorageSetReqInfo struct {
	value *ObjectStorageSetReqInfo
	isSet bool
}

func (v NullableObjectStorageSetReqInfo) Get() *ObjectStorageSetReqInfo {
	return v.value
}

func (v *NullableObjectStorageSetReqInfo) Set(val *ObjectStorageSetReqInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectStorageSetReqInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectStorageSetReqInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectStorageSetReqInfo(val *ObjectStorageSetReqInfo) *NullableObjectStorageSetReqInfo {
	return &NullableObjectStorageSetReqInfo{value: val, isSet: true}
}

func (v NullableObjectStorageSetReqInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectStorageSetReqInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


