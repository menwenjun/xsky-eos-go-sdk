/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ClusterInstallationSteps type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterInstallationSteps{}

// ClusterInstallationSteps struct for ClusterInstallationSteps
type ClusterInstallationSteps struct {
	// step of setting boot node
	Bootnode *bool `json:"bootnode,omitempty"`
	// step of registering license
	License *bool `json:"license,omitempty"`
	// step of creating user
	User *bool `json:"user,omitempty"`
}

// NewClusterInstallationSteps instantiates a new ClusterInstallationSteps object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterInstallationSteps() *ClusterInstallationSteps {
	this := ClusterInstallationSteps{}
	return &this
}

// NewClusterInstallationStepsWithDefaults instantiates a new ClusterInstallationSteps object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterInstallationStepsWithDefaults() *ClusterInstallationSteps {
	this := ClusterInstallationSteps{}
	return &this
}

// GetBootnode returns the Bootnode field value if set, zero value otherwise.
func (o *ClusterInstallationSteps) GetBootnode() bool {
	if o == nil || IsNil(o.Bootnode) {
		var ret bool
		return ret
	}
	return *o.Bootnode
}

// GetBootnodeOk returns a tuple with the Bootnode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterInstallationSteps) GetBootnodeOk() (*bool, bool) {
	if o == nil || IsNil(o.Bootnode) {
		return nil, false
	}
	return o.Bootnode, true
}

// HasBootnode returns a boolean if a field has been set.
func (o *ClusterInstallationSteps) HasBootnode() bool {
	if o != nil && !IsNil(o.Bootnode) {
		return true
	}

	return false
}

// SetBootnode gets a reference to the given bool and assigns it to the Bootnode field.
func (o *ClusterInstallationSteps) SetBootnode(v bool) {
	o.Bootnode = &v
}

// GetLicense returns the License field value if set, zero value otherwise.
func (o *ClusterInstallationSteps) GetLicense() bool {
	if o == nil || IsNil(o.License) {
		var ret bool
		return ret
	}
	return *o.License
}

// GetLicenseOk returns a tuple with the License field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterInstallationSteps) GetLicenseOk() (*bool, bool) {
	if o == nil || IsNil(o.License) {
		return nil, false
	}
	return o.License, true
}

// HasLicense returns a boolean if a field has been set.
func (o *ClusterInstallationSteps) HasLicense() bool {
	if o != nil && !IsNil(o.License) {
		return true
	}

	return false
}

// SetLicense gets a reference to the given bool and assigns it to the License field.
func (o *ClusterInstallationSteps) SetLicense(v bool) {
	o.License = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *ClusterInstallationSteps) GetUser() bool {
	if o == nil || IsNil(o.User) {
		var ret bool
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterInstallationSteps) GetUserOk() (*bool, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *ClusterInstallationSteps) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given bool and assigns it to the User field.
func (o *ClusterInstallationSteps) SetUser(v bool) {
	o.User = &v
}

func (o ClusterInstallationSteps) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterInstallationSteps) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Bootnode) {
		toSerialize["bootnode"] = o.Bootnode
	}
	if !IsNil(o.License) {
		toSerialize["license"] = o.License
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	return toSerialize, nil
}

type NullableClusterInstallationSteps struct {
	value *ClusterInstallationSteps
	isSet bool
}

func (v NullableClusterInstallationSteps) Get() *ClusterInstallationSteps {
	return v.value
}

func (v *NullableClusterInstallationSteps) Set(val *ClusterInstallationSteps) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterInstallationSteps) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterInstallationSteps) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterInstallationSteps(val *ClusterInstallationSteps) *NullableClusterInstallationSteps {
	return &NullableClusterInstallationSteps{value: val, isSet: true}
}

func (v NullableClusterInstallationSteps) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterInstallationSteps) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


