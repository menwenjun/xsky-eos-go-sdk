/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the VIPGroupCreateReqVIPGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VIPGroupCreateReqVIPGroup{}

// VIPGroupCreateReqVIPGroup struct for VIPGroupCreateReqVIPGroup
type VIPGroupCreateReqVIPGroup struct {
	Network string `json:"network"`
	Preempt *bool `json:"preempt,omitempty"`
	ResourceId int64 `json:"resource_id"`
	ResourceType string `json:"resource_type"`
	Vips []VIPArgs `json:"vips"`
}

type _VIPGroupCreateReqVIPGroup VIPGroupCreateReqVIPGroup

// NewVIPGroupCreateReqVIPGroup instantiates a new VIPGroupCreateReqVIPGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVIPGroupCreateReqVIPGroup(network string, resourceId int64, resourceType string, vips []VIPArgs) *VIPGroupCreateReqVIPGroup {
	this := VIPGroupCreateReqVIPGroup{}
	this.Network = network
	this.ResourceId = resourceId
	this.ResourceType = resourceType
	this.Vips = vips
	return &this
}

// NewVIPGroupCreateReqVIPGroupWithDefaults instantiates a new VIPGroupCreateReqVIPGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVIPGroupCreateReqVIPGroupWithDefaults() *VIPGroupCreateReqVIPGroup {
	this := VIPGroupCreateReqVIPGroup{}
	return &this
}

// GetNetwork returns the Network field value
func (o *VIPGroupCreateReqVIPGroup) GetNetwork() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Network
}

// GetNetworkOk returns a tuple with the Network field value
// and a boolean to check if the value has been set.
func (o *VIPGroupCreateReqVIPGroup) GetNetworkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Network, true
}

// SetNetwork sets field value
func (o *VIPGroupCreateReqVIPGroup) SetNetwork(v string) {
	o.Network = v
}

// GetPreempt returns the Preempt field value if set, zero value otherwise.
func (o *VIPGroupCreateReqVIPGroup) GetPreempt() bool {
	if o == nil || IsNil(o.Preempt) {
		var ret bool
		return ret
	}
	return *o.Preempt
}

// GetPreemptOk returns a tuple with the Preempt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VIPGroupCreateReqVIPGroup) GetPreemptOk() (*bool, bool) {
	if o == nil || IsNil(o.Preempt) {
		return nil, false
	}
	return o.Preempt, true
}

// HasPreempt returns a boolean if a field has been set.
func (o *VIPGroupCreateReqVIPGroup) HasPreempt() bool {
	if o != nil && !IsNil(o.Preempt) {
		return true
	}

	return false
}

// SetPreempt gets a reference to the given bool and assigns it to the Preempt field.
func (o *VIPGroupCreateReqVIPGroup) SetPreempt(v bool) {
	o.Preempt = &v
}

// GetResourceId returns the ResourceId field value
func (o *VIPGroupCreateReqVIPGroup) GetResourceId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value
// and a boolean to check if the value has been set.
func (o *VIPGroupCreateReqVIPGroup) GetResourceIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceId, true
}

// SetResourceId sets field value
func (o *VIPGroupCreateReqVIPGroup) SetResourceId(v int64) {
	o.ResourceId = v
}

// GetResourceType returns the ResourceType field value
func (o *VIPGroupCreateReqVIPGroup) GetResourceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value
// and a boolean to check if the value has been set.
func (o *VIPGroupCreateReqVIPGroup) GetResourceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceType, true
}

// SetResourceType sets field value
func (o *VIPGroupCreateReqVIPGroup) SetResourceType(v string) {
	o.ResourceType = v
}

// GetVips returns the Vips field value
func (o *VIPGroupCreateReqVIPGroup) GetVips() []VIPArgs {
	if o == nil {
		var ret []VIPArgs
		return ret
	}

	return o.Vips
}

// GetVipsOk returns a tuple with the Vips field value
// and a boolean to check if the value has been set.
func (o *VIPGroupCreateReqVIPGroup) GetVipsOk() ([]VIPArgs, bool) {
	if o == nil {
		return nil, false
	}
	return o.Vips, true
}

// SetVips sets field value
func (o *VIPGroupCreateReqVIPGroup) SetVips(v []VIPArgs) {
	o.Vips = v
}

func (o VIPGroupCreateReqVIPGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VIPGroupCreateReqVIPGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["network"] = o.Network
	if !IsNil(o.Preempt) {
		toSerialize["preempt"] = o.Preempt
	}
	toSerialize["resource_id"] = o.ResourceId
	toSerialize["resource_type"] = o.ResourceType
	toSerialize["vips"] = o.Vips
	return toSerialize, nil
}

func (o *VIPGroupCreateReqVIPGroup) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"network",
		"resource_id",
		"resource_type",
		"vips",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVIPGroupCreateReqVIPGroup := _VIPGroupCreateReqVIPGroup{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVIPGroupCreateReqVIPGroup)

	if err != nil {
		return err
	}

	*o = VIPGroupCreateReqVIPGroup(varVIPGroupCreateReqVIPGroup)

	return err
}

type NullableVIPGroupCreateReqVIPGroup struct {
	value *VIPGroupCreateReqVIPGroup
	isSet bool
}

func (v NullableVIPGroupCreateReqVIPGroup) Get() *VIPGroupCreateReqVIPGroup {
	return v.value
}

func (v *NullableVIPGroupCreateReqVIPGroup) Set(val *VIPGroupCreateReqVIPGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableVIPGroupCreateReqVIPGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableVIPGroupCreateReqVIPGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVIPGroupCreateReqVIPGroup(val *VIPGroupCreateReqVIPGroup) *NullableVIPGroupCreateReqVIPGroup {
	return &NullableVIPGroupCreateReqVIPGroup{value: val, isSet: true}
}

func (v NullableVIPGroupCreateReqVIPGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVIPGroupCreateReqVIPGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


