/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the S3LoadBalancerGroupCreateReqGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &S3LoadBalancerGroupCreateReqGroup{}

// S3LoadBalancerGroupCreateReqGroup struct for S3LoadBalancerGroupCreateReqGroup
type S3LoadBalancerGroupCreateReqGroup struct {
	// group description
	Description *string `json:"description,omitempty"`
	// group access http2 enabled
	Http2Enabled *bool `json:"http2_enabled,omitempty"`
	// group access https port
	HttpsPort *int64 `json:"https_port,omitempty"`
	// group name
	Name string `json:"name"`
	// osp zone id
	OspZoneId *int64 `json:"osp_zone_id,omitempty"`
	OssApiEnabled *bool `json:"oss_api_enabled,omitempty"`
	// group access http port
	Port *int64 `json:"port,omitempty"`
	// group roles
	Roles []string `json:"roles,omitempty"`
	// s3 load balancers
	S3LoadBalancers []S3LoadBalancerGroupCreateReqGroupLoadBalancersElt `json:"s3_load_balancers"`
	// group search https port
	SearchHttpsPort *int64 `json:"search_https_port,omitempty"`
	// group search http port
	SearchPort *int64 `json:"search_port,omitempty"`
	// group sync https port
	SyncHttpsPort *int64 `json:"sync_https_port,omitempty"`
	// group sync http port
	SyncPort *int64 `json:"sync_port,omitempty"`
	WebServiceConfig *S3LbGroupWebServiceConfig `json:"web_service_config,omitempty"`
	// group web service http port
	WebServicePort *int64 `json:"web_service_port,omitempty"`
}

type _S3LoadBalancerGroupCreateReqGroup S3LoadBalancerGroupCreateReqGroup

// NewS3LoadBalancerGroupCreateReqGroup instantiates a new S3LoadBalancerGroupCreateReqGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewS3LoadBalancerGroupCreateReqGroup(name string, s3LoadBalancers []S3LoadBalancerGroupCreateReqGroupLoadBalancersElt) *S3LoadBalancerGroupCreateReqGroup {
	this := S3LoadBalancerGroupCreateReqGroup{}
	this.Name = name
	this.S3LoadBalancers = s3LoadBalancers
	return &this
}

// NewS3LoadBalancerGroupCreateReqGroupWithDefaults instantiates a new S3LoadBalancerGroupCreateReqGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewS3LoadBalancerGroupCreateReqGroupWithDefaults() *S3LoadBalancerGroupCreateReqGroup {
	this := S3LoadBalancerGroupCreateReqGroup{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *S3LoadBalancerGroupCreateReqGroup) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3LoadBalancerGroupCreateReqGroup) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *S3LoadBalancerGroupCreateReqGroup) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *S3LoadBalancerGroupCreateReqGroup) SetDescription(v string) {
	o.Description = &v
}

// GetHttp2Enabled returns the Http2Enabled field value if set, zero value otherwise.
func (o *S3LoadBalancerGroupCreateReqGroup) GetHttp2Enabled() bool {
	if o == nil || IsNil(o.Http2Enabled) {
		var ret bool
		return ret
	}
	return *o.Http2Enabled
}

// GetHttp2EnabledOk returns a tuple with the Http2Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3LoadBalancerGroupCreateReqGroup) GetHttp2EnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Http2Enabled) {
		return nil, false
	}
	return o.Http2Enabled, true
}

// HasHttp2Enabled returns a boolean if a field has been set.
func (o *S3LoadBalancerGroupCreateReqGroup) HasHttp2Enabled() bool {
	if o != nil && !IsNil(o.Http2Enabled) {
		return true
	}

	return false
}

// SetHttp2Enabled gets a reference to the given bool and assigns it to the Http2Enabled field.
func (o *S3LoadBalancerGroupCreateReqGroup) SetHttp2Enabled(v bool) {
	o.Http2Enabled = &v
}

// GetHttpsPort returns the HttpsPort field value if set, zero value otherwise.
func (o *S3LoadBalancerGroupCreateReqGroup) GetHttpsPort() int64 {
	if o == nil || IsNil(o.HttpsPort) {
		var ret int64
		return ret
	}
	return *o.HttpsPort
}

// GetHttpsPortOk returns a tuple with the HttpsPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3LoadBalancerGroupCreateReqGroup) GetHttpsPortOk() (*int64, bool) {
	if o == nil || IsNil(o.HttpsPort) {
		return nil, false
	}
	return o.HttpsPort, true
}

// HasHttpsPort returns a boolean if a field has been set.
func (o *S3LoadBalancerGroupCreateReqGroup) HasHttpsPort() bool {
	if o != nil && !IsNil(o.HttpsPort) {
		return true
	}

	return false
}

// SetHttpsPort gets a reference to the given int64 and assigns it to the HttpsPort field.
func (o *S3LoadBalancerGroupCreateReqGroup) SetHttpsPort(v int64) {
	o.HttpsPort = &v
}

// GetName returns the Name field value
func (o *S3LoadBalancerGroupCreateReqGroup) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *S3LoadBalancerGroupCreateReqGroup) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *S3LoadBalancerGroupCreateReqGroup) SetName(v string) {
	o.Name = v
}

// GetOspZoneId returns the OspZoneId field value if set, zero value otherwise.
func (o *S3LoadBalancerGroupCreateReqGroup) GetOspZoneId() int64 {
	if o == nil || IsNil(o.OspZoneId) {
		var ret int64
		return ret
	}
	return *o.OspZoneId
}

// GetOspZoneIdOk returns a tuple with the OspZoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3LoadBalancerGroupCreateReqGroup) GetOspZoneIdOk() (*int64, bool) {
	if o == nil || IsNil(o.OspZoneId) {
		return nil, false
	}
	return o.OspZoneId, true
}

// HasOspZoneId returns a boolean if a field has been set.
func (o *S3LoadBalancerGroupCreateReqGroup) HasOspZoneId() bool {
	if o != nil && !IsNil(o.OspZoneId) {
		return true
	}

	return false
}

// SetOspZoneId gets a reference to the given int64 and assigns it to the OspZoneId field.
func (o *S3LoadBalancerGroupCreateReqGroup) SetOspZoneId(v int64) {
	o.OspZoneId = &v
}

// GetOssApiEnabled returns the OssApiEnabled field value if set, zero value otherwise.
func (o *S3LoadBalancerGroupCreateReqGroup) GetOssApiEnabled() bool {
	if o == nil || IsNil(o.OssApiEnabled) {
		var ret bool
		return ret
	}
	return *o.OssApiEnabled
}

// GetOssApiEnabledOk returns a tuple with the OssApiEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3LoadBalancerGroupCreateReqGroup) GetOssApiEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.OssApiEnabled) {
		return nil, false
	}
	return o.OssApiEnabled, true
}

// HasOssApiEnabled returns a boolean if a field has been set.
func (o *S3LoadBalancerGroupCreateReqGroup) HasOssApiEnabled() bool {
	if o != nil && !IsNil(o.OssApiEnabled) {
		return true
	}

	return false
}

// SetOssApiEnabled gets a reference to the given bool and assigns it to the OssApiEnabled field.
func (o *S3LoadBalancerGroupCreateReqGroup) SetOssApiEnabled(v bool) {
	o.OssApiEnabled = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *S3LoadBalancerGroupCreateReqGroup) GetPort() int64 {
	if o == nil || IsNil(o.Port) {
		var ret int64
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3LoadBalancerGroupCreateReqGroup) GetPortOk() (*int64, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *S3LoadBalancerGroupCreateReqGroup) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int64 and assigns it to the Port field.
func (o *S3LoadBalancerGroupCreateReqGroup) SetPort(v int64) {
	o.Port = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *S3LoadBalancerGroupCreateReqGroup) GetRoles() []string {
	if o == nil || IsNil(o.Roles) {
		var ret []string
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3LoadBalancerGroupCreateReqGroup) GetRolesOk() ([]string, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *S3LoadBalancerGroupCreateReqGroup) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []string and assigns it to the Roles field.
func (o *S3LoadBalancerGroupCreateReqGroup) SetRoles(v []string) {
	o.Roles = v
}

// GetS3LoadBalancers returns the S3LoadBalancers field value
func (o *S3LoadBalancerGroupCreateReqGroup) GetS3LoadBalancers() []S3LoadBalancerGroupCreateReqGroupLoadBalancersElt {
	if o == nil {
		var ret []S3LoadBalancerGroupCreateReqGroupLoadBalancersElt
		return ret
	}

	return o.S3LoadBalancers
}

// GetS3LoadBalancersOk returns a tuple with the S3LoadBalancers field value
// and a boolean to check if the value has been set.
func (o *S3LoadBalancerGroupCreateReqGroup) GetS3LoadBalancersOk() ([]S3LoadBalancerGroupCreateReqGroupLoadBalancersElt, bool) {
	if o == nil {
		return nil, false
	}
	return o.S3LoadBalancers, true
}

// SetS3LoadBalancers sets field value
func (o *S3LoadBalancerGroupCreateReqGroup) SetS3LoadBalancers(v []S3LoadBalancerGroupCreateReqGroupLoadBalancersElt) {
	o.S3LoadBalancers = v
}

// GetSearchHttpsPort returns the SearchHttpsPort field value if set, zero value otherwise.
func (o *S3LoadBalancerGroupCreateReqGroup) GetSearchHttpsPort() int64 {
	if o == nil || IsNil(o.SearchHttpsPort) {
		var ret int64
		return ret
	}
	return *o.SearchHttpsPort
}

// GetSearchHttpsPortOk returns a tuple with the SearchHttpsPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3LoadBalancerGroupCreateReqGroup) GetSearchHttpsPortOk() (*int64, bool) {
	if o == nil || IsNil(o.SearchHttpsPort) {
		return nil, false
	}
	return o.SearchHttpsPort, true
}

// HasSearchHttpsPort returns a boolean if a field has been set.
func (o *S3LoadBalancerGroupCreateReqGroup) HasSearchHttpsPort() bool {
	if o != nil && !IsNil(o.SearchHttpsPort) {
		return true
	}

	return false
}

// SetSearchHttpsPort gets a reference to the given int64 and assigns it to the SearchHttpsPort field.
func (o *S3LoadBalancerGroupCreateReqGroup) SetSearchHttpsPort(v int64) {
	o.SearchHttpsPort = &v
}

// GetSearchPort returns the SearchPort field value if set, zero value otherwise.
func (o *S3LoadBalancerGroupCreateReqGroup) GetSearchPort() int64 {
	if o == nil || IsNil(o.SearchPort) {
		var ret int64
		return ret
	}
	return *o.SearchPort
}

// GetSearchPortOk returns a tuple with the SearchPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3LoadBalancerGroupCreateReqGroup) GetSearchPortOk() (*int64, bool) {
	if o == nil || IsNil(o.SearchPort) {
		return nil, false
	}
	return o.SearchPort, true
}

// HasSearchPort returns a boolean if a field has been set.
func (o *S3LoadBalancerGroupCreateReqGroup) HasSearchPort() bool {
	if o != nil && !IsNil(o.SearchPort) {
		return true
	}

	return false
}

// SetSearchPort gets a reference to the given int64 and assigns it to the SearchPort field.
func (o *S3LoadBalancerGroupCreateReqGroup) SetSearchPort(v int64) {
	o.SearchPort = &v
}

// GetSyncHttpsPort returns the SyncHttpsPort field value if set, zero value otherwise.
func (o *S3LoadBalancerGroupCreateReqGroup) GetSyncHttpsPort() int64 {
	if o == nil || IsNil(o.SyncHttpsPort) {
		var ret int64
		return ret
	}
	return *o.SyncHttpsPort
}

// GetSyncHttpsPortOk returns a tuple with the SyncHttpsPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3LoadBalancerGroupCreateReqGroup) GetSyncHttpsPortOk() (*int64, bool) {
	if o == nil || IsNil(o.SyncHttpsPort) {
		return nil, false
	}
	return o.SyncHttpsPort, true
}

// HasSyncHttpsPort returns a boolean if a field has been set.
func (o *S3LoadBalancerGroupCreateReqGroup) HasSyncHttpsPort() bool {
	if o != nil && !IsNil(o.SyncHttpsPort) {
		return true
	}

	return false
}

// SetSyncHttpsPort gets a reference to the given int64 and assigns it to the SyncHttpsPort field.
func (o *S3LoadBalancerGroupCreateReqGroup) SetSyncHttpsPort(v int64) {
	o.SyncHttpsPort = &v
}

// GetSyncPort returns the SyncPort field value if set, zero value otherwise.
func (o *S3LoadBalancerGroupCreateReqGroup) GetSyncPort() int64 {
	if o == nil || IsNil(o.SyncPort) {
		var ret int64
		return ret
	}
	return *o.SyncPort
}

// GetSyncPortOk returns a tuple with the SyncPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3LoadBalancerGroupCreateReqGroup) GetSyncPortOk() (*int64, bool) {
	if o == nil || IsNil(o.SyncPort) {
		return nil, false
	}
	return o.SyncPort, true
}

// HasSyncPort returns a boolean if a field has been set.
func (o *S3LoadBalancerGroupCreateReqGroup) HasSyncPort() bool {
	if o != nil && !IsNil(o.SyncPort) {
		return true
	}

	return false
}

// SetSyncPort gets a reference to the given int64 and assigns it to the SyncPort field.
func (o *S3LoadBalancerGroupCreateReqGroup) SetSyncPort(v int64) {
	o.SyncPort = &v
}

// GetWebServiceConfig returns the WebServiceConfig field value if set, zero value otherwise.
func (o *S3LoadBalancerGroupCreateReqGroup) GetWebServiceConfig() S3LbGroupWebServiceConfig {
	if o == nil || IsNil(o.WebServiceConfig) {
		var ret S3LbGroupWebServiceConfig
		return ret
	}
	return *o.WebServiceConfig
}

// GetWebServiceConfigOk returns a tuple with the WebServiceConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3LoadBalancerGroupCreateReqGroup) GetWebServiceConfigOk() (*S3LbGroupWebServiceConfig, bool) {
	if o == nil || IsNil(o.WebServiceConfig) {
		return nil, false
	}
	return o.WebServiceConfig, true
}

// HasWebServiceConfig returns a boolean if a field has been set.
func (o *S3LoadBalancerGroupCreateReqGroup) HasWebServiceConfig() bool {
	if o != nil && !IsNil(o.WebServiceConfig) {
		return true
	}

	return false
}

// SetWebServiceConfig gets a reference to the given S3LbGroupWebServiceConfig and assigns it to the WebServiceConfig field.
func (o *S3LoadBalancerGroupCreateReqGroup) SetWebServiceConfig(v S3LbGroupWebServiceConfig) {
	o.WebServiceConfig = &v
}

// GetWebServicePort returns the WebServicePort field value if set, zero value otherwise.
func (o *S3LoadBalancerGroupCreateReqGroup) GetWebServicePort() int64 {
	if o == nil || IsNil(o.WebServicePort) {
		var ret int64
		return ret
	}
	return *o.WebServicePort
}

// GetWebServicePortOk returns a tuple with the WebServicePort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3LoadBalancerGroupCreateReqGroup) GetWebServicePortOk() (*int64, bool) {
	if o == nil || IsNil(o.WebServicePort) {
		return nil, false
	}
	return o.WebServicePort, true
}

// HasWebServicePort returns a boolean if a field has been set.
func (o *S3LoadBalancerGroupCreateReqGroup) HasWebServicePort() bool {
	if o != nil && !IsNil(o.WebServicePort) {
		return true
	}

	return false
}

// SetWebServicePort gets a reference to the given int64 and assigns it to the WebServicePort field.
func (o *S3LoadBalancerGroupCreateReqGroup) SetWebServicePort(v int64) {
	o.WebServicePort = &v
}

func (o S3LoadBalancerGroupCreateReqGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o S3LoadBalancerGroupCreateReqGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Http2Enabled) {
		toSerialize["http2_enabled"] = o.Http2Enabled
	}
	if !IsNil(o.HttpsPort) {
		toSerialize["https_port"] = o.HttpsPort
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.OspZoneId) {
		toSerialize["osp_zone_id"] = o.OspZoneId
	}
	if !IsNil(o.OssApiEnabled) {
		toSerialize["oss_api_enabled"] = o.OssApiEnabled
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	toSerialize["s3_load_balancers"] = o.S3LoadBalancers
	if !IsNil(o.SearchHttpsPort) {
		toSerialize["search_https_port"] = o.SearchHttpsPort
	}
	if !IsNil(o.SearchPort) {
		toSerialize["search_port"] = o.SearchPort
	}
	if !IsNil(o.SyncHttpsPort) {
		toSerialize["sync_https_port"] = o.SyncHttpsPort
	}
	if !IsNil(o.SyncPort) {
		toSerialize["sync_port"] = o.SyncPort
	}
	if !IsNil(o.WebServiceConfig) {
		toSerialize["web_service_config"] = o.WebServiceConfig
	}
	if !IsNil(o.WebServicePort) {
		toSerialize["web_service_port"] = o.WebServicePort
	}
	return toSerialize, nil
}

func (o *S3LoadBalancerGroupCreateReqGroup) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"s3_load_balancers",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varS3LoadBalancerGroupCreateReqGroup := _S3LoadBalancerGroupCreateReqGroup{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varS3LoadBalancerGroupCreateReqGroup)

	if err != nil {
		return err
	}

	*o = S3LoadBalancerGroupCreateReqGroup(varS3LoadBalancerGroupCreateReqGroup)

	return err
}

type NullableS3LoadBalancerGroupCreateReqGroup struct {
	value *S3LoadBalancerGroupCreateReqGroup
	isSet bool
}

func (v NullableS3LoadBalancerGroupCreateReqGroup) Get() *S3LoadBalancerGroupCreateReqGroup {
	return v.value
}

func (v *NullableS3LoadBalancerGroupCreateReqGroup) Set(val *S3LoadBalancerGroupCreateReqGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableS3LoadBalancerGroupCreateReqGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableS3LoadBalancerGroupCreateReqGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableS3LoadBalancerGroupCreateReqGroup(val *S3LoadBalancerGroupCreateReqGroup) *NullableS3LoadBalancerGroupCreateReqGroup {
	return &NullableS3LoadBalancerGroupCreateReqGroup{value: val, isSet: true}
}

func (v NullableS3LoadBalancerGroupCreateReqGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableS3LoadBalancerGroupCreateReqGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


