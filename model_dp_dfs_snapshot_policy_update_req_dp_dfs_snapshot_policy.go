/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy{}

// DpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy struct for DpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy
type DpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy struct {
	CronExpr *string `json:"cron_expr,omitempty"`
	Description *string `json:"description,omitempty"`
	Name *string `json:"name,omitempty"`
	RetainTime *string `json:"retain_time,omitempty"`
}

// NewDpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy instantiates a new DpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy() *DpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy {
	this := DpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy{}
	return &this
}

// NewDpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicyWithDefaults instantiates a new DpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicyWithDefaults() *DpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy {
	this := DpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy{}
	return &this
}

// GetCronExpr returns the CronExpr field value if set, zero value otherwise.
func (o *DpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy) GetCronExpr() string {
	if o == nil || IsNil(o.CronExpr) {
		var ret string
		return ret
	}
	return *o.CronExpr
}

// GetCronExprOk returns a tuple with the CronExpr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy) GetCronExprOk() (*string, bool) {
	if o == nil || IsNil(o.CronExpr) {
		return nil, false
	}
	return o.CronExpr, true
}

// HasCronExpr returns a boolean if a field has been set.
func (o *DpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy) HasCronExpr() bool {
	if o != nil && !IsNil(o.CronExpr) {
		return true
	}

	return false
}

// SetCronExpr gets a reference to the given string and assigns it to the CronExpr field.
func (o *DpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy) SetCronExpr(v string) {
	o.CronExpr = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *DpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *DpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy) SetName(v string) {
	o.Name = &v
}

// GetRetainTime returns the RetainTime field value if set, zero value otherwise.
func (o *DpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy) GetRetainTime() string {
	if o == nil || IsNil(o.RetainTime) {
		var ret string
		return ret
	}
	return *o.RetainTime
}

// GetRetainTimeOk returns a tuple with the RetainTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy) GetRetainTimeOk() (*string, bool) {
	if o == nil || IsNil(o.RetainTime) {
		return nil, false
	}
	return o.RetainTime, true
}

// HasRetainTime returns a boolean if a field has been set.
func (o *DpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy) HasRetainTime() bool {
	if o != nil && !IsNil(o.RetainTime) {
		return true
	}

	return false
}

// SetRetainTime gets a reference to the given string and assigns it to the RetainTime field.
func (o *DpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy) SetRetainTime(v string) {
	o.RetainTime = &v
}

func (o DpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CronExpr) {
		toSerialize["cron_expr"] = o.CronExpr
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.RetainTime) {
		toSerialize["retain_time"] = o.RetainTime
	}
	return toSerialize, nil
}

type NullableDpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy struct {
	value *DpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy
	isSet bool
}

func (v NullableDpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy) Get() *DpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy {
	return v.value
}

func (v *NullableDpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy) Set(val *DpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableDpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableDpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy(val *DpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy) *NullableDpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy {
	return &NullableDpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy{value: val, isSet: true}
}

func (v NullableDpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDpDfsSnapshotPolicyUpdateReqDpDfsSnapshotPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


