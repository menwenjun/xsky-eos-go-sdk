/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the DpDfsSnapshotPolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DpDfsSnapshotPolicy{}

// DpDfsSnapshotPolicy DpDfsSnapshotPolicy protects a dfs by snapshot
type DpDfsSnapshotPolicy struct {
	Cluster *Cluster `json:"cluster,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	CronExpr *string `json:"cron_expr,omitempty"`
	Description *string `json:"description,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	ProtectedPathNum *int64 `json:"protected_path_num,omitempty"`
	RetainTime *string `json:"retain_time,omitempty"`
	Status *string `json:"status,omitempty"`
	Update *time.Time `json:"update,omitempty"`
}

// NewDpDfsSnapshotPolicy instantiates a new DpDfsSnapshotPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDpDfsSnapshotPolicy() *DpDfsSnapshotPolicy {
	this := DpDfsSnapshotPolicy{}
	return &this
}

// NewDpDfsSnapshotPolicyWithDefaults instantiates a new DpDfsSnapshotPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDpDfsSnapshotPolicyWithDefaults() *DpDfsSnapshotPolicy {
	this := DpDfsSnapshotPolicy{}
	return &this
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *DpDfsSnapshotPolicy) GetCluster() Cluster {
	if o == nil || IsNil(o.Cluster) {
		var ret Cluster
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpDfsSnapshotPolicy) GetClusterOk() (*Cluster, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *DpDfsSnapshotPolicy) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given Cluster and assigns it to the Cluster field.
func (o *DpDfsSnapshotPolicy) SetCluster(v Cluster) {
	o.Cluster = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *DpDfsSnapshotPolicy) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpDfsSnapshotPolicy) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *DpDfsSnapshotPolicy) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *DpDfsSnapshotPolicy) SetCreate(v time.Time) {
	o.Create = &v
}

// GetCronExpr returns the CronExpr field value if set, zero value otherwise.
func (o *DpDfsSnapshotPolicy) GetCronExpr() string {
	if o == nil || IsNil(o.CronExpr) {
		var ret string
		return ret
	}
	return *o.CronExpr
}

// GetCronExprOk returns a tuple with the CronExpr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpDfsSnapshotPolicy) GetCronExprOk() (*string, bool) {
	if o == nil || IsNil(o.CronExpr) {
		return nil, false
	}
	return o.CronExpr, true
}

// HasCronExpr returns a boolean if a field has been set.
func (o *DpDfsSnapshotPolicy) HasCronExpr() bool {
	if o != nil && !IsNil(o.CronExpr) {
		return true
	}

	return false
}

// SetCronExpr gets a reference to the given string and assigns it to the CronExpr field.
func (o *DpDfsSnapshotPolicy) SetCronExpr(v string) {
	o.CronExpr = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *DpDfsSnapshotPolicy) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpDfsSnapshotPolicy) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *DpDfsSnapshotPolicy) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DpDfsSnapshotPolicy) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DpDfsSnapshotPolicy) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpDfsSnapshotPolicy) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DpDfsSnapshotPolicy) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *DpDfsSnapshotPolicy) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DpDfsSnapshotPolicy) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpDfsSnapshotPolicy) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DpDfsSnapshotPolicy) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DpDfsSnapshotPolicy) SetName(v string) {
	o.Name = &v
}

// GetProtectedPathNum returns the ProtectedPathNum field value if set, zero value otherwise.
func (o *DpDfsSnapshotPolicy) GetProtectedPathNum() int64 {
	if o == nil || IsNil(o.ProtectedPathNum) {
		var ret int64
		return ret
	}
	return *o.ProtectedPathNum
}

// GetProtectedPathNumOk returns a tuple with the ProtectedPathNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpDfsSnapshotPolicy) GetProtectedPathNumOk() (*int64, bool) {
	if o == nil || IsNil(o.ProtectedPathNum) {
		return nil, false
	}
	return o.ProtectedPathNum, true
}

// HasProtectedPathNum returns a boolean if a field has been set.
func (o *DpDfsSnapshotPolicy) HasProtectedPathNum() bool {
	if o != nil && !IsNil(o.ProtectedPathNum) {
		return true
	}

	return false
}

// SetProtectedPathNum gets a reference to the given int64 and assigns it to the ProtectedPathNum field.
func (o *DpDfsSnapshotPolicy) SetProtectedPathNum(v int64) {
	o.ProtectedPathNum = &v
}

// GetRetainTime returns the RetainTime field value if set, zero value otherwise.
func (o *DpDfsSnapshotPolicy) GetRetainTime() string {
	if o == nil || IsNil(o.RetainTime) {
		var ret string
		return ret
	}
	return *o.RetainTime
}

// GetRetainTimeOk returns a tuple with the RetainTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpDfsSnapshotPolicy) GetRetainTimeOk() (*string, bool) {
	if o == nil || IsNil(o.RetainTime) {
		return nil, false
	}
	return o.RetainTime, true
}

// HasRetainTime returns a boolean if a field has been set.
func (o *DpDfsSnapshotPolicy) HasRetainTime() bool {
	if o != nil && !IsNil(o.RetainTime) {
		return true
	}

	return false
}

// SetRetainTime gets a reference to the given string and assigns it to the RetainTime field.
func (o *DpDfsSnapshotPolicy) SetRetainTime(v string) {
	o.RetainTime = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DpDfsSnapshotPolicy) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpDfsSnapshotPolicy) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DpDfsSnapshotPolicy) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DpDfsSnapshotPolicy) SetStatus(v string) {
	o.Status = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *DpDfsSnapshotPolicy) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpDfsSnapshotPolicy) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *DpDfsSnapshotPolicy) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *DpDfsSnapshotPolicy) SetUpdate(v time.Time) {
	o.Update = &v
}

func (o DpDfsSnapshotPolicy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DpDfsSnapshotPolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.CronExpr) {
		toSerialize["cron_expr"] = o.CronExpr
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ProtectedPathNum) {
		toSerialize["protected_path_num"] = o.ProtectedPathNum
	}
	if !IsNil(o.RetainTime) {
		toSerialize["retain_time"] = o.RetainTime
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	return toSerialize, nil
}

type NullableDpDfsSnapshotPolicy struct {
	value *DpDfsSnapshotPolicy
	isSet bool
}

func (v NullableDpDfsSnapshotPolicy) Get() *DpDfsSnapshotPolicy {
	return v.value
}

func (v *NullableDpDfsSnapshotPolicy) Set(val *DpDfsSnapshotPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableDpDfsSnapshotPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableDpDfsSnapshotPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDpDfsSnapshotPolicy(val *DpDfsSnapshotPolicy) *NullableDpDfsSnapshotPolicy {
	return &NullableDpDfsSnapshotPolicy{value: val, isSet: true}
}

func (v NullableDpDfsSnapshotPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDpDfsSnapshotPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


