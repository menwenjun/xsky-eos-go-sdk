/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ObjectStorageBucketUpdateReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ObjectStorageBucketUpdateReq{}

// ObjectStorageBucketUpdateReq struct for ObjectStorageBucketUpdateReq
type ObjectStorageBucketUpdateReq struct {
	OsBucket *ObjectStorageBucketUpdateReqBucket `json:"os_bucket,omitempty"`
}

// NewObjectStorageBucketUpdateReq instantiates a new ObjectStorageBucketUpdateReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectStorageBucketUpdateReq() *ObjectStorageBucketUpdateReq {
	this := ObjectStorageBucketUpdateReq{}
	return &this
}

// NewObjectStorageBucketUpdateReqWithDefaults instantiates a new ObjectStorageBucketUpdateReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectStorageBucketUpdateReqWithDefaults() *ObjectStorageBucketUpdateReq {
	this := ObjectStorageBucketUpdateReq{}
	return &this
}

// GetOsBucket returns the OsBucket field value if set, zero value otherwise.
func (o *ObjectStorageBucketUpdateReq) GetOsBucket() ObjectStorageBucketUpdateReqBucket {
	if o == nil || IsNil(o.OsBucket) {
		var ret ObjectStorageBucketUpdateReqBucket
		return ret
	}
	return *o.OsBucket
}

// GetOsBucketOk returns a tuple with the OsBucket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketUpdateReq) GetOsBucketOk() (*ObjectStorageBucketUpdateReqBucket, bool) {
	if o == nil || IsNil(o.OsBucket) {
		return nil, false
	}
	return o.OsBucket, true
}

// HasOsBucket returns a boolean if a field has been set.
func (o *ObjectStorageBucketUpdateReq) HasOsBucket() bool {
	if o != nil && !IsNil(o.OsBucket) {
		return true
	}

	return false
}

// SetOsBucket gets a reference to the given ObjectStorageBucketUpdateReqBucket and assigns it to the OsBucket field.
func (o *ObjectStorageBucketUpdateReq) SetOsBucket(v ObjectStorageBucketUpdateReqBucket) {
	o.OsBucket = &v
}

func (o ObjectStorageBucketUpdateReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ObjectStorageBucketUpdateReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OsBucket) {
		toSerialize["os_bucket"] = o.OsBucket
	}
	return toSerialize, nil
}

type NullableObjectStorageBucketUpdateReq struct {
	value *ObjectStorageBucketUpdateReq
	isSet bool
}

func (v NullableObjectStorageBucketUpdateReq) Get() *ObjectStorageBucketUpdateReq {
	return v.value
}

func (v *NullableObjectStorageBucketUpdateReq) Set(val *ObjectStorageBucketUpdateReq) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectStorageBucketUpdateReq) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectStorageBucketUpdateReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectStorageBucketUpdateReq(val *ObjectStorageBucketUpdateReq) *NullableObjectStorageBucketUpdateReq {
	return &NullableObjectStorageBucketUpdateReq{value: val, isSet: true}
}

func (v NullableObjectStorageBucketUpdateReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectStorageBucketUpdateReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


