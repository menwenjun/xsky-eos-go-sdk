/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DpSiteCreateReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DpSiteCreateReq{}

// DpSiteCreateReq struct for DpSiteCreateReq
type DpSiteCreateReq struct {
	DpSite *DpSiteCreateReqSite `json:"dp_site,omitempty"`
}

// NewDpSiteCreateReq instantiates a new DpSiteCreateReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDpSiteCreateReq() *DpSiteCreateReq {
	this := DpSiteCreateReq{}
	return &this
}

// NewDpSiteCreateReqWithDefaults instantiates a new DpSiteCreateReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDpSiteCreateReqWithDefaults() *DpSiteCreateReq {
	this := DpSiteCreateReq{}
	return &this
}

// GetDpSite returns the DpSite field value if set, zero value otherwise.
func (o *DpSiteCreateReq) GetDpSite() DpSiteCreateReqSite {
	if o == nil || IsNil(o.DpSite) {
		var ret DpSiteCreateReqSite
		return ret
	}
	return *o.DpSite
}

// GetDpSiteOk returns a tuple with the DpSite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpSiteCreateReq) GetDpSiteOk() (*DpSiteCreateReqSite, bool) {
	if o == nil || IsNil(o.DpSite) {
		return nil, false
	}
	return o.DpSite, true
}

// HasDpSite returns a boolean if a field has been set.
func (o *DpSiteCreateReq) HasDpSite() bool {
	if o != nil && !IsNil(o.DpSite) {
		return true
	}

	return false
}

// SetDpSite gets a reference to the given DpSiteCreateReqSite and assigns it to the DpSite field.
func (o *DpSiteCreateReq) SetDpSite(v DpSiteCreateReqSite) {
	o.DpSite = &v
}

func (o DpSiteCreateReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DpSiteCreateReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DpSite) {
		toSerialize["dp_site"] = o.DpSite
	}
	return toSerialize, nil
}

type NullableDpSiteCreateReq struct {
	value *DpSiteCreateReq
	isSet bool
}

func (v NullableDpSiteCreateReq) Get() *DpSiteCreateReq {
	return v.value
}

func (v *NullableDpSiteCreateReq) Set(val *DpSiteCreateReq) {
	v.value = val
	v.isSet = true
}

func (v NullableDpSiteCreateReq) IsSet() bool {
	return v.isSet
}

func (v *NullableDpSiteCreateReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDpSiteCreateReq(val *DpSiteCreateReq) *NullableDpSiteCreateReq {
	return &NullableDpSiteCreateReq{value: val, isSet: true}
}

func (v NullableDpSiteCreateReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDpSiteCreateReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


