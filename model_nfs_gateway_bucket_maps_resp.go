/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the NFSGatewayBucketMapsResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NFSGatewayBucketMapsResp{}

// NFSGatewayBucketMapsResp struct for NFSGatewayBucketMapsResp
type NFSGatewayBucketMapsResp struct {
	// maps of nfs gateway and bucket
	NfsGatewayBucketMaps []NFSGatewayBucketMap `json:"nfs_gateway_bucket_maps"`
}

type _NFSGatewayBucketMapsResp NFSGatewayBucketMapsResp

// NewNFSGatewayBucketMapsResp instantiates a new NFSGatewayBucketMapsResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNFSGatewayBucketMapsResp(nfsGatewayBucketMaps []NFSGatewayBucketMap) *NFSGatewayBucketMapsResp {
	this := NFSGatewayBucketMapsResp{}
	this.NfsGatewayBucketMaps = nfsGatewayBucketMaps
	return &this
}

// NewNFSGatewayBucketMapsRespWithDefaults instantiates a new NFSGatewayBucketMapsResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNFSGatewayBucketMapsRespWithDefaults() *NFSGatewayBucketMapsResp {
	this := NFSGatewayBucketMapsResp{}
	return &this
}

// GetNfsGatewayBucketMaps returns the NfsGatewayBucketMaps field value
func (o *NFSGatewayBucketMapsResp) GetNfsGatewayBucketMaps() []NFSGatewayBucketMap {
	if o == nil {
		var ret []NFSGatewayBucketMap
		return ret
	}

	return o.NfsGatewayBucketMaps
}

// GetNfsGatewayBucketMapsOk returns a tuple with the NfsGatewayBucketMaps field value
// and a boolean to check if the value has been set.
func (o *NFSGatewayBucketMapsResp) GetNfsGatewayBucketMapsOk() ([]NFSGatewayBucketMap, bool) {
	if o == nil {
		return nil, false
	}
	return o.NfsGatewayBucketMaps, true
}

// SetNfsGatewayBucketMaps sets field value
func (o *NFSGatewayBucketMapsResp) SetNfsGatewayBucketMaps(v []NFSGatewayBucketMap) {
	o.NfsGatewayBucketMaps = v
}

func (o NFSGatewayBucketMapsResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NFSGatewayBucketMapsResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["nfs_gateway_bucket_maps"] = o.NfsGatewayBucketMaps
	return toSerialize, nil
}

func (o *NFSGatewayBucketMapsResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"nfs_gateway_bucket_maps",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNFSGatewayBucketMapsResp := _NFSGatewayBucketMapsResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varNFSGatewayBucketMapsResp)

	if err != nil {
		return err
	}

	*o = NFSGatewayBucketMapsResp(varNFSGatewayBucketMapsResp)

	return err
}

type NullableNFSGatewayBucketMapsResp struct {
	value *NFSGatewayBucketMapsResp
	isSet bool
}

func (v NullableNFSGatewayBucketMapsResp) Get() *NFSGatewayBucketMapsResp {
	return v.value
}

func (v *NullableNFSGatewayBucketMapsResp) Set(val *NFSGatewayBucketMapsResp) {
	v.value = val
	v.isSet = true
}

func (v NullableNFSGatewayBucketMapsResp) IsSet() bool {
	return v.isSet
}

func (v *NullableNFSGatewayBucketMapsResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNFSGatewayBucketMapsResp(val *NFSGatewayBucketMapsResp) *NullableNFSGatewayBucketMapsResp {
	return &NullableNFSGatewayBucketMapsResp{value: val, isSet: true}
}

func (v NullableNFSGatewayBucketMapsResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNFSGatewayBucketMapsResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


