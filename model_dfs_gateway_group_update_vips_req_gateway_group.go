/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DfsGatewayGroupUpdateVIPsReqGatewayGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsGatewayGroupUpdateVIPsReqGatewayGroup{}

// DfsGatewayGroupUpdateVIPsReqGatewayGroup struct for DfsGatewayGroupUpdateVIPsReqGatewayGroup
type DfsGatewayGroupUpdateVIPsReqGatewayGroup struct {
	// gateway zone to which the VIP belongs
	DfsGatewayZoneId *int64 `json:"dfs_gateway_zone_id,omitempty"`
	// all gateways used in VIP networks
	DfsVipGateways []string `json:"dfs_vip_gateways,omitempty"`
	// vip info of dfs gateway group
	DfsVips []string `json:"dfs_vips,omitempty"`
}

// NewDfsGatewayGroupUpdateVIPsReqGatewayGroup instantiates a new DfsGatewayGroupUpdateVIPsReqGatewayGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsGatewayGroupUpdateVIPsReqGatewayGroup() *DfsGatewayGroupUpdateVIPsReqGatewayGroup {
	this := DfsGatewayGroupUpdateVIPsReqGatewayGroup{}
	return &this
}

// NewDfsGatewayGroupUpdateVIPsReqGatewayGroupWithDefaults instantiates a new DfsGatewayGroupUpdateVIPsReqGatewayGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsGatewayGroupUpdateVIPsReqGatewayGroupWithDefaults() *DfsGatewayGroupUpdateVIPsReqGatewayGroup {
	this := DfsGatewayGroupUpdateVIPsReqGatewayGroup{}
	return &this
}

// GetDfsGatewayZoneId returns the DfsGatewayZoneId field value if set, zero value otherwise.
func (o *DfsGatewayGroupUpdateVIPsReqGatewayGroup) GetDfsGatewayZoneId() int64 {
	if o == nil || IsNil(o.DfsGatewayZoneId) {
		var ret int64
		return ret
	}
	return *o.DfsGatewayZoneId
}

// GetDfsGatewayZoneIdOk returns a tuple with the DfsGatewayZoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupUpdateVIPsReqGatewayGroup) GetDfsGatewayZoneIdOk() (*int64, bool) {
	if o == nil || IsNil(o.DfsGatewayZoneId) {
		return nil, false
	}
	return o.DfsGatewayZoneId, true
}

// HasDfsGatewayZoneId returns a boolean if a field has been set.
func (o *DfsGatewayGroupUpdateVIPsReqGatewayGroup) HasDfsGatewayZoneId() bool {
	if o != nil && !IsNil(o.DfsGatewayZoneId) {
		return true
	}

	return false
}

// SetDfsGatewayZoneId gets a reference to the given int64 and assigns it to the DfsGatewayZoneId field.
func (o *DfsGatewayGroupUpdateVIPsReqGatewayGroup) SetDfsGatewayZoneId(v int64) {
	o.DfsGatewayZoneId = &v
}

// GetDfsVipGateways returns the DfsVipGateways field value if set, zero value otherwise.
func (o *DfsGatewayGroupUpdateVIPsReqGatewayGroup) GetDfsVipGateways() []string {
	if o == nil || IsNil(o.DfsVipGateways) {
		var ret []string
		return ret
	}
	return o.DfsVipGateways
}

// GetDfsVipGatewaysOk returns a tuple with the DfsVipGateways field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupUpdateVIPsReqGatewayGroup) GetDfsVipGatewaysOk() ([]string, bool) {
	if o == nil || IsNil(o.DfsVipGateways) {
		return nil, false
	}
	return o.DfsVipGateways, true
}

// HasDfsVipGateways returns a boolean if a field has been set.
func (o *DfsGatewayGroupUpdateVIPsReqGatewayGroup) HasDfsVipGateways() bool {
	if o != nil && !IsNil(o.DfsVipGateways) {
		return true
	}

	return false
}

// SetDfsVipGateways gets a reference to the given []string and assigns it to the DfsVipGateways field.
func (o *DfsGatewayGroupUpdateVIPsReqGatewayGroup) SetDfsVipGateways(v []string) {
	o.DfsVipGateways = v
}

// GetDfsVips returns the DfsVips field value if set, zero value otherwise.
func (o *DfsGatewayGroupUpdateVIPsReqGatewayGroup) GetDfsVips() []string {
	if o == nil || IsNil(o.DfsVips) {
		var ret []string
		return ret
	}
	return o.DfsVips
}

// GetDfsVipsOk returns a tuple with the DfsVips field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupUpdateVIPsReqGatewayGroup) GetDfsVipsOk() ([]string, bool) {
	if o == nil || IsNil(o.DfsVips) {
		return nil, false
	}
	return o.DfsVips, true
}

// HasDfsVips returns a boolean if a field has been set.
func (o *DfsGatewayGroupUpdateVIPsReqGatewayGroup) HasDfsVips() bool {
	if o != nil && !IsNil(o.DfsVips) {
		return true
	}

	return false
}

// SetDfsVips gets a reference to the given []string and assigns it to the DfsVips field.
func (o *DfsGatewayGroupUpdateVIPsReqGatewayGroup) SetDfsVips(v []string) {
	o.DfsVips = v
}

func (o DfsGatewayGroupUpdateVIPsReqGatewayGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsGatewayGroupUpdateVIPsReqGatewayGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DfsGatewayZoneId) {
		toSerialize["dfs_gateway_zone_id"] = o.DfsGatewayZoneId
	}
	if !IsNil(o.DfsVipGateways) {
		toSerialize["dfs_vip_gateways"] = o.DfsVipGateways
	}
	if !IsNil(o.DfsVips) {
		toSerialize["dfs_vips"] = o.DfsVips
	}
	return toSerialize, nil
}

type NullableDfsGatewayGroupUpdateVIPsReqGatewayGroup struct {
	value *DfsGatewayGroupUpdateVIPsReqGatewayGroup
	isSet bool
}

func (v NullableDfsGatewayGroupUpdateVIPsReqGatewayGroup) Get() *DfsGatewayGroupUpdateVIPsReqGatewayGroup {
	return v.value
}

func (v *NullableDfsGatewayGroupUpdateVIPsReqGatewayGroup) Set(val *DfsGatewayGroupUpdateVIPsReqGatewayGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsGatewayGroupUpdateVIPsReqGatewayGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsGatewayGroupUpdateVIPsReqGatewayGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsGatewayGroupUpdateVIPsReqGatewayGroup(val *DfsGatewayGroupUpdateVIPsReqGatewayGroup) *NullableDfsGatewayGroupUpdateVIPsReqGatewayGroup {
	return &NullableDfsGatewayGroupUpdateVIPsReqGatewayGroup{value: val, isSet: true}
}

func (v NullableDfsGatewayGroupUpdateVIPsReqGatewayGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsGatewayGroupUpdateVIPsReqGatewayGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


