/*
XMS API

Testing OsUsersAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	openapiclient "github.com/menwenjun/xsky-eos-go-sdk"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_openapi_OsUsersAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test OsUsersAPIService CreateObjectStorageUser", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.OsUsersAPI.CreateObjectStorageUser(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test OsUsersAPIService DeleteObjectStorageUser", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var userId int64

		resp, httpRes, err := apiClient.OsUsersAPI.DeleteObjectStorageUser(context.Background(), userId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test OsUsersAPIService GetObjectStorageUser", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var userId int64

		resp, httpRes, err := apiClient.OsUsersAPI.GetObjectStorageUser(context.Background(), userId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test OsUsersAPIService GetObjectStorageUserSamples", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var userId int64

		resp, httpRes, err := apiClient.OsUsersAPI.GetObjectStorageUserSamples(context.Background(), userId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test OsUsersAPIService ListObjectStorageUsers", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.OsUsersAPI.ListObjectStorageUsers(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test OsUsersAPIService UpdateObjectStorageUser", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var userId int64

		resp, httpRes, err := apiClient.OsUsersAPI.UpdateObjectStorageUser(context.Background(), userId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
