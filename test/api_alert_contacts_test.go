/*
XMS API

Testing AlertContactsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	openapiclient "github.com/menwenjun/xsky-eos-go-sdk"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_openapi_AlertContactsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test AlertContactsAPIService CheckAlertContact", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var alertContactId int64

		resp, httpRes, err := apiClient.AlertContactsAPI.CheckAlertContact(context.Background(), alertContactId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AlertContactsAPIService CreateAlertContact", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.AlertContactsAPI.CreateAlertContact(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AlertContactsAPIService DeleteAlertContact", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var alertContactId int64

		httpRes, err := apiClient.AlertContactsAPI.DeleteAlertContact(context.Background(), alertContactId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AlertContactsAPIService GetAlertContact", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var alertContactId int64

		resp, httpRes, err := apiClient.AlertContactsAPI.GetAlertContact(context.Background(), alertContactId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AlertContactsAPIService ListAlertContacts", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.AlertContactsAPI.ListAlertContacts(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AlertContactsAPIService UpdateAlertContact", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var alertContactId int64

		httpRes, err := apiClient.AlertContactsAPI.UpdateAlertContact(context.Background(), alertContactId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
