/*
XMS API

Testing DfsSnapChangelistTasksAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	openapiclient "github.com/menwenjun/xsky-eos-go-sdk"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_openapi_DfsSnapChangelistTasksAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test DfsSnapChangelistTasksAPIService CreateDfsSnapChangelistTask", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.DfsSnapChangelistTasksAPI.CreateDfsSnapChangelistTask(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DfsSnapChangelistTasksAPIService DeleteDfsSnapChangelistTask", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var dfsSnapChangelistTaskId int64

		httpRes, err := apiClient.DfsSnapChangelistTasksAPI.DeleteDfsSnapChangelistTask(context.Background(), dfsSnapChangelistTaskId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DfsSnapChangelistTasksAPIService GetDfsSnapChangelistTask", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var dfsSnapChangelistTaskId int64

		resp, httpRes, err := apiClient.DfsSnapChangelistTasksAPI.GetDfsSnapChangelistTask(context.Background(), dfsSnapChangelistTaskId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DfsSnapChangelistTasksAPIService ListDfsSnapChangelistTasks", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.DfsSnapChangelistTasksAPI.ListDfsSnapChangelistTasks(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
