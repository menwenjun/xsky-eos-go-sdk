/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DpBlockBackupPolicyCreateReqPolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DpBlockBackupPolicyCreateReqPolicy{}

// DpBlockBackupPolicyCreateReqPolicy struct for DpBlockBackupPolicyCreateReqPolicy
type DpBlockBackupPolicyCreateReqPolicy struct {
	// dp gateway
	DpGatewayId int64 `json:"dp_gateway_id"`
	// dp site
	DpSiteId int64 `json:"dp_site_id"`
	// encrypted or not
	Encrypted *bool `json:"encrypted,omitempty"`
	// cron expression for full backup
	FullCronExpr string `json:"full_cron_expr"`
	// cron expression for increment backup
	IncCronExpr *string `json:"inc_cron_expr,omitempty"`
	// name
	Name string `json:"name"`
	// retained max number of backups
	RetainedMax int64 `json:"retained_max"`
}

type _DpBlockBackupPolicyCreateReqPolicy DpBlockBackupPolicyCreateReqPolicy

// NewDpBlockBackupPolicyCreateReqPolicy instantiates a new DpBlockBackupPolicyCreateReqPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDpBlockBackupPolicyCreateReqPolicy(dpGatewayId int64, dpSiteId int64, fullCronExpr string, name string, retainedMax int64) *DpBlockBackupPolicyCreateReqPolicy {
	this := DpBlockBackupPolicyCreateReqPolicy{}
	this.DpGatewayId = dpGatewayId
	this.DpSiteId = dpSiteId
	this.FullCronExpr = fullCronExpr
	this.Name = name
	this.RetainedMax = retainedMax
	return &this
}

// NewDpBlockBackupPolicyCreateReqPolicyWithDefaults instantiates a new DpBlockBackupPolicyCreateReqPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDpBlockBackupPolicyCreateReqPolicyWithDefaults() *DpBlockBackupPolicyCreateReqPolicy {
	this := DpBlockBackupPolicyCreateReqPolicy{}
	return &this
}

// GetDpGatewayId returns the DpGatewayId field value
func (o *DpBlockBackupPolicyCreateReqPolicy) GetDpGatewayId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DpGatewayId
}

// GetDpGatewayIdOk returns a tuple with the DpGatewayId field value
// and a boolean to check if the value has been set.
func (o *DpBlockBackupPolicyCreateReqPolicy) GetDpGatewayIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DpGatewayId, true
}

// SetDpGatewayId sets field value
func (o *DpBlockBackupPolicyCreateReqPolicy) SetDpGatewayId(v int64) {
	o.DpGatewayId = v
}

// GetDpSiteId returns the DpSiteId field value
func (o *DpBlockBackupPolicyCreateReqPolicy) GetDpSiteId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DpSiteId
}

// GetDpSiteIdOk returns a tuple with the DpSiteId field value
// and a boolean to check if the value has been set.
func (o *DpBlockBackupPolicyCreateReqPolicy) GetDpSiteIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DpSiteId, true
}

// SetDpSiteId sets field value
func (o *DpBlockBackupPolicyCreateReqPolicy) SetDpSiteId(v int64) {
	o.DpSiteId = v
}

// GetEncrypted returns the Encrypted field value if set, zero value otherwise.
func (o *DpBlockBackupPolicyCreateReqPolicy) GetEncrypted() bool {
	if o == nil || IsNil(o.Encrypted) {
		var ret bool
		return ret
	}
	return *o.Encrypted
}

// GetEncryptedOk returns a tuple with the Encrypted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpBlockBackupPolicyCreateReqPolicy) GetEncryptedOk() (*bool, bool) {
	if o == nil || IsNil(o.Encrypted) {
		return nil, false
	}
	return o.Encrypted, true
}

// HasEncrypted returns a boolean if a field has been set.
func (o *DpBlockBackupPolicyCreateReqPolicy) HasEncrypted() bool {
	if o != nil && !IsNil(o.Encrypted) {
		return true
	}

	return false
}

// SetEncrypted gets a reference to the given bool and assigns it to the Encrypted field.
func (o *DpBlockBackupPolicyCreateReqPolicy) SetEncrypted(v bool) {
	o.Encrypted = &v
}

// GetFullCronExpr returns the FullCronExpr field value
func (o *DpBlockBackupPolicyCreateReqPolicy) GetFullCronExpr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FullCronExpr
}

// GetFullCronExprOk returns a tuple with the FullCronExpr field value
// and a boolean to check if the value has been set.
func (o *DpBlockBackupPolicyCreateReqPolicy) GetFullCronExprOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FullCronExpr, true
}

// SetFullCronExpr sets field value
func (o *DpBlockBackupPolicyCreateReqPolicy) SetFullCronExpr(v string) {
	o.FullCronExpr = v
}

// GetIncCronExpr returns the IncCronExpr field value if set, zero value otherwise.
func (o *DpBlockBackupPolicyCreateReqPolicy) GetIncCronExpr() string {
	if o == nil || IsNil(o.IncCronExpr) {
		var ret string
		return ret
	}
	return *o.IncCronExpr
}

// GetIncCronExprOk returns a tuple with the IncCronExpr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpBlockBackupPolicyCreateReqPolicy) GetIncCronExprOk() (*string, bool) {
	if o == nil || IsNil(o.IncCronExpr) {
		return nil, false
	}
	return o.IncCronExpr, true
}

// HasIncCronExpr returns a boolean if a field has been set.
func (o *DpBlockBackupPolicyCreateReqPolicy) HasIncCronExpr() bool {
	if o != nil && !IsNil(o.IncCronExpr) {
		return true
	}

	return false
}

// SetIncCronExpr gets a reference to the given string and assigns it to the IncCronExpr field.
func (o *DpBlockBackupPolicyCreateReqPolicy) SetIncCronExpr(v string) {
	o.IncCronExpr = &v
}

// GetName returns the Name field value
func (o *DpBlockBackupPolicyCreateReqPolicy) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DpBlockBackupPolicyCreateReqPolicy) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DpBlockBackupPolicyCreateReqPolicy) SetName(v string) {
	o.Name = v
}

// GetRetainedMax returns the RetainedMax field value
func (o *DpBlockBackupPolicyCreateReqPolicy) GetRetainedMax() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.RetainedMax
}

// GetRetainedMaxOk returns a tuple with the RetainedMax field value
// and a boolean to check if the value has been set.
func (o *DpBlockBackupPolicyCreateReqPolicy) GetRetainedMaxOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RetainedMax, true
}

// SetRetainedMax sets field value
func (o *DpBlockBackupPolicyCreateReqPolicy) SetRetainedMax(v int64) {
	o.RetainedMax = v
}

func (o DpBlockBackupPolicyCreateReqPolicy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DpBlockBackupPolicyCreateReqPolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dp_gateway_id"] = o.DpGatewayId
	toSerialize["dp_site_id"] = o.DpSiteId
	if !IsNil(o.Encrypted) {
		toSerialize["encrypted"] = o.Encrypted
	}
	toSerialize["full_cron_expr"] = o.FullCronExpr
	if !IsNil(o.IncCronExpr) {
		toSerialize["inc_cron_expr"] = o.IncCronExpr
	}
	toSerialize["name"] = o.Name
	toSerialize["retained_max"] = o.RetainedMax
	return toSerialize, nil
}

func (o *DpBlockBackupPolicyCreateReqPolicy) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dp_gateway_id",
		"dp_site_id",
		"full_cron_expr",
		"name",
		"retained_max",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDpBlockBackupPolicyCreateReqPolicy := _DpBlockBackupPolicyCreateReqPolicy{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDpBlockBackupPolicyCreateReqPolicy)

	if err != nil {
		return err
	}

	*o = DpBlockBackupPolicyCreateReqPolicy(varDpBlockBackupPolicyCreateReqPolicy)

	return err
}

type NullableDpBlockBackupPolicyCreateReqPolicy struct {
	value *DpBlockBackupPolicyCreateReqPolicy
	isSet bool
}

func (v NullableDpBlockBackupPolicyCreateReqPolicy) Get() *DpBlockBackupPolicyCreateReqPolicy {
	return v.value
}

func (v *NullableDpBlockBackupPolicyCreateReqPolicy) Set(val *DpBlockBackupPolicyCreateReqPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableDpBlockBackupPolicyCreateReqPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableDpBlockBackupPolicyCreateReqPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDpBlockBackupPolicyCreateReqPolicy(val *DpBlockBackupPolicyCreateReqPolicy) *NullableDpBlockBackupPolicyCreateReqPolicy {
	return &NullableDpBlockBackupPolicyCreateReqPolicy{value: val, isSet: true}
}

func (v NullableDpBlockBackupPolicyCreateReqPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDpBlockBackupPolicyCreateReqPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


