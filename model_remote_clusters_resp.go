/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RemoteClustersResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RemoteClustersResp{}

// RemoteClustersResp struct for RemoteClustersResp
type RemoteClustersResp struct {
	RemoteClusters []RemoteCluster `json:"remote_clusters,omitempty"`
}

// NewRemoteClustersResp instantiates a new RemoteClustersResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRemoteClustersResp() *RemoteClustersResp {
	this := RemoteClustersResp{}
	return &this
}

// NewRemoteClustersRespWithDefaults instantiates a new RemoteClustersResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemoteClustersRespWithDefaults() *RemoteClustersResp {
	this := RemoteClustersResp{}
	return &this
}

// GetRemoteClusters returns the RemoteClusters field value if set, zero value otherwise.
func (o *RemoteClustersResp) GetRemoteClusters() []RemoteCluster {
	if o == nil || IsNil(o.RemoteClusters) {
		var ret []RemoteCluster
		return ret
	}
	return o.RemoteClusters
}

// GetRemoteClustersOk returns a tuple with the RemoteClusters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteClustersResp) GetRemoteClustersOk() ([]RemoteCluster, bool) {
	if o == nil || IsNil(o.RemoteClusters) {
		return nil, false
	}
	return o.RemoteClusters, true
}

// HasRemoteClusters returns a boolean if a field has been set.
func (o *RemoteClustersResp) HasRemoteClusters() bool {
	if o != nil && !IsNil(o.RemoteClusters) {
		return true
	}

	return false
}

// SetRemoteClusters gets a reference to the given []RemoteCluster and assigns it to the RemoteClusters field.
func (o *RemoteClustersResp) SetRemoteClusters(v []RemoteCluster) {
	o.RemoteClusters = v
}

func (o RemoteClustersResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RemoteClustersResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RemoteClusters) {
		toSerialize["remote_clusters"] = o.RemoteClusters
	}
	return toSerialize, nil
}

type NullableRemoteClustersResp struct {
	value *RemoteClustersResp
	isSet bool
}

func (v NullableRemoteClustersResp) Get() *RemoteClustersResp {
	return v.value
}

func (v *NullableRemoteClustersResp) Set(val *RemoteClustersResp) {
	v.value = val
	v.isSet = true
}

func (v NullableRemoteClustersResp) IsSet() bool {
	return v.isSet
}

func (v *NullableRemoteClustersResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRemoteClustersResp(val *RemoteClustersResp) *NullableRemoteClustersResp {
	return &NullableRemoteClustersResp{value: val, isSet: true}
}

func (v NullableRemoteClustersResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRemoteClustersResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


