/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OriginConf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OriginConf{}

// OriginConf OriginConf defines some others origin configuration
type OriginConf struct {
	ClassId *string `json:"class_id,omitempty"`
	ClassName *string `json:"class_name,omitempty"`
	DeleteOrigin *bool `json:"delete_origin,omitempty"`
	ExpirationDays *int64 `json:"expiration_days,omitempty"`
	FollowRedirect *bool `json:"follow_redirect,omitempty"`
	PolicyId *int64 `json:"policy_id,omitempty"`
	RedirectCode *int64 `json:"redirect_code,omitempty"`
}

// NewOriginConf instantiates a new OriginConf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOriginConf() *OriginConf {
	this := OriginConf{}
	return &this
}

// NewOriginConfWithDefaults instantiates a new OriginConf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOriginConfWithDefaults() *OriginConf {
	this := OriginConf{}
	return &this
}

// GetClassId returns the ClassId field value if set, zero value otherwise.
func (o *OriginConf) GetClassId() string {
	if o == nil || IsNil(o.ClassId) {
		var ret string
		return ret
	}
	return *o.ClassId
}

// GetClassIdOk returns a tuple with the ClassId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginConf) GetClassIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClassId) {
		return nil, false
	}
	return o.ClassId, true
}

// HasClassId returns a boolean if a field has been set.
func (o *OriginConf) HasClassId() bool {
	if o != nil && !IsNil(o.ClassId) {
		return true
	}

	return false
}

// SetClassId gets a reference to the given string and assigns it to the ClassId field.
func (o *OriginConf) SetClassId(v string) {
	o.ClassId = &v
}

// GetClassName returns the ClassName field value if set, zero value otherwise.
func (o *OriginConf) GetClassName() string {
	if o == nil || IsNil(o.ClassName) {
		var ret string
		return ret
	}
	return *o.ClassName
}

// GetClassNameOk returns a tuple with the ClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginConf) GetClassNameOk() (*string, bool) {
	if o == nil || IsNil(o.ClassName) {
		return nil, false
	}
	return o.ClassName, true
}

// HasClassName returns a boolean if a field has been set.
func (o *OriginConf) HasClassName() bool {
	if o != nil && !IsNil(o.ClassName) {
		return true
	}

	return false
}

// SetClassName gets a reference to the given string and assigns it to the ClassName field.
func (o *OriginConf) SetClassName(v string) {
	o.ClassName = &v
}

// GetDeleteOrigin returns the DeleteOrigin field value if set, zero value otherwise.
func (o *OriginConf) GetDeleteOrigin() bool {
	if o == nil || IsNil(o.DeleteOrigin) {
		var ret bool
		return ret
	}
	return *o.DeleteOrigin
}

// GetDeleteOriginOk returns a tuple with the DeleteOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginConf) GetDeleteOriginOk() (*bool, bool) {
	if o == nil || IsNil(o.DeleteOrigin) {
		return nil, false
	}
	return o.DeleteOrigin, true
}

// HasDeleteOrigin returns a boolean if a field has been set.
func (o *OriginConf) HasDeleteOrigin() bool {
	if o != nil && !IsNil(o.DeleteOrigin) {
		return true
	}

	return false
}

// SetDeleteOrigin gets a reference to the given bool and assigns it to the DeleteOrigin field.
func (o *OriginConf) SetDeleteOrigin(v bool) {
	o.DeleteOrigin = &v
}

// GetExpirationDays returns the ExpirationDays field value if set, zero value otherwise.
func (o *OriginConf) GetExpirationDays() int64 {
	if o == nil || IsNil(o.ExpirationDays) {
		var ret int64
		return ret
	}
	return *o.ExpirationDays
}

// GetExpirationDaysOk returns a tuple with the ExpirationDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginConf) GetExpirationDaysOk() (*int64, bool) {
	if o == nil || IsNil(o.ExpirationDays) {
		return nil, false
	}
	return o.ExpirationDays, true
}

// HasExpirationDays returns a boolean if a field has been set.
func (o *OriginConf) HasExpirationDays() bool {
	if o != nil && !IsNil(o.ExpirationDays) {
		return true
	}

	return false
}

// SetExpirationDays gets a reference to the given int64 and assigns it to the ExpirationDays field.
func (o *OriginConf) SetExpirationDays(v int64) {
	o.ExpirationDays = &v
}

// GetFollowRedirect returns the FollowRedirect field value if set, zero value otherwise.
func (o *OriginConf) GetFollowRedirect() bool {
	if o == nil || IsNil(o.FollowRedirect) {
		var ret bool
		return ret
	}
	return *o.FollowRedirect
}

// GetFollowRedirectOk returns a tuple with the FollowRedirect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginConf) GetFollowRedirectOk() (*bool, bool) {
	if o == nil || IsNil(o.FollowRedirect) {
		return nil, false
	}
	return o.FollowRedirect, true
}

// HasFollowRedirect returns a boolean if a field has been set.
func (o *OriginConf) HasFollowRedirect() bool {
	if o != nil && !IsNil(o.FollowRedirect) {
		return true
	}

	return false
}

// SetFollowRedirect gets a reference to the given bool and assigns it to the FollowRedirect field.
func (o *OriginConf) SetFollowRedirect(v bool) {
	o.FollowRedirect = &v
}

// GetPolicyId returns the PolicyId field value if set, zero value otherwise.
func (o *OriginConf) GetPolicyId() int64 {
	if o == nil || IsNil(o.PolicyId) {
		var ret int64
		return ret
	}
	return *o.PolicyId
}

// GetPolicyIdOk returns a tuple with the PolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginConf) GetPolicyIdOk() (*int64, bool) {
	if o == nil || IsNil(o.PolicyId) {
		return nil, false
	}
	return o.PolicyId, true
}

// HasPolicyId returns a boolean if a field has been set.
func (o *OriginConf) HasPolicyId() bool {
	if o != nil && !IsNil(o.PolicyId) {
		return true
	}

	return false
}

// SetPolicyId gets a reference to the given int64 and assigns it to the PolicyId field.
func (o *OriginConf) SetPolicyId(v int64) {
	o.PolicyId = &v
}

// GetRedirectCode returns the RedirectCode field value if set, zero value otherwise.
func (o *OriginConf) GetRedirectCode() int64 {
	if o == nil || IsNil(o.RedirectCode) {
		var ret int64
		return ret
	}
	return *o.RedirectCode
}

// GetRedirectCodeOk returns a tuple with the RedirectCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OriginConf) GetRedirectCodeOk() (*int64, bool) {
	if o == nil || IsNil(o.RedirectCode) {
		return nil, false
	}
	return o.RedirectCode, true
}

// HasRedirectCode returns a boolean if a field has been set.
func (o *OriginConf) HasRedirectCode() bool {
	if o != nil && !IsNil(o.RedirectCode) {
		return true
	}

	return false
}

// SetRedirectCode gets a reference to the given int64 and assigns it to the RedirectCode field.
func (o *OriginConf) SetRedirectCode(v int64) {
	o.RedirectCode = &v
}

func (o OriginConf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OriginConf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClassId) {
		toSerialize["class_id"] = o.ClassId
	}
	if !IsNil(o.ClassName) {
		toSerialize["class_name"] = o.ClassName
	}
	if !IsNil(o.DeleteOrigin) {
		toSerialize["delete_origin"] = o.DeleteOrigin
	}
	if !IsNil(o.ExpirationDays) {
		toSerialize["expiration_days"] = o.ExpirationDays
	}
	if !IsNil(o.FollowRedirect) {
		toSerialize["follow_redirect"] = o.FollowRedirect
	}
	if !IsNil(o.PolicyId) {
		toSerialize["policy_id"] = o.PolicyId
	}
	if !IsNil(o.RedirectCode) {
		toSerialize["redirect_code"] = o.RedirectCode
	}
	return toSerialize, nil
}

type NullableOriginConf struct {
	value *OriginConf
	isSet bool
}

func (v NullableOriginConf) Get() *OriginConf {
	return v.value
}

func (v *NullableOriginConf) Set(val *OriginConf) {
	v.value = val
	v.isSet = true
}

func (v NullableOriginConf) IsSet() bool {
	return v.isSet
}

func (v *NullableOriginConf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOriginConf(val *OriginConf) *NullableOriginConf {
	return &NullableOriginConf{value: val, isSet: true}
}

func (v NullableOriginConf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOriginConf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


