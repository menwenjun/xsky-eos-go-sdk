/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PoolPredictionsResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PoolPredictionsResp{}

// PoolPredictionsResp struct for PoolPredictionsResp
type PoolPredictionsResp struct {
	// pool predictions
	PoolPredictions []PoolPrediction `json:"pool_predictions"`
}

type _PoolPredictionsResp PoolPredictionsResp

// NewPoolPredictionsResp instantiates a new PoolPredictionsResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPoolPredictionsResp(poolPredictions []PoolPrediction) *PoolPredictionsResp {
	this := PoolPredictionsResp{}
	this.PoolPredictions = poolPredictions
	return &this
}

// NewPoolPredictionsRespWithDefaults instantiates a new PoolPredictionsResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPoolPredictionsRespWithDefaults() *PoolPredictionsResp {
	this := PoolPredictionsResp{}
	return &this
}

// GetPoolPredictions returns the PoolPredictions field value
func (o *PoolPredictionsResp) GetPoolPredictions() []PoolPrediction {
	if o == nil {
		var ret []PoolPrediction
		return ret
	}

	return o.PoolPredictions
}

// GetPoolPredictionsOk returns a tuple with the PoolPredictions field value
// and a boolean to check if the value has been set.
func (o *PoolPredictionsResp) GetPoolPredictionsOk() ([]PoolPrediction, bool) {
	if o == nil {
		return nil, false
	}
	return o.PoolPredictions, true
}

// SetPoolPredictions sets field value
func (o *PoolPredictionsResp) SetPoolPredictions(v []PoolPrediction) {
	o.PoolPredictions = v
}

func (o PoolPredictionsResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PoolPredictionsResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pool_predictions"] = o.PoolPredictions
	return toSerialize, nil
}

func (o *PoolPredictionsResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pool_predictions",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPoolPredictionsResp := _PoolPredictionsResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPoolPredictionsResp)

	if err != nil {
		return err
	}

	*o = PoolPredictionsResp(varPoolPredictionsResp)

	return err
}

type NullablePoolPredictionsResp struct {
	value *PoolPredictionsResp
	isSet bool
}

func (v NullablePoolPredictionsResp) Get() *PoolPredictionsResp {
	return v.value
}

func (v *NullablePoolPredictionsResp) Set(val *PoolPredictionsResp) {
	v.value = val
	v.isSet = true
}

func (v NullablePoolPredictionsResp) IsSet() bool {
	return v.isSet
}

func (v *NullablePoolPredictionsResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePoolPredictionsResp(val *PoolPredictionsResp) *NullablePoolPredictionsResp {
	return &NullablePoolPredictionsResp{value: val, isSet: true}
}

func (v NullablePoolPredictionsResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePoolPredictionsResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


