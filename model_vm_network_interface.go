/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the VMNetworkInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VMNetworkInterface{}

// VMNetworkInterface VMNetworkInterface defines the nic of vm
type VMNetworkInterface struct {
	Create *time.Time `json:"create,omitempty"`
	Gateway *string `json:"gateway,omitempty"`
	Id *int64 `json:"id,omitempty"`
	IpAddress *string `json:"ip_address,omitempty"`
	MacAddress *string `json:"mac_address,omitempty"`
	Mask *int64 `json:"mask,omitempty"`
	Master *VMNetworkInterfaceNestview `json:"master,omitempty"`
	Name *string `json:"name,omitempty"`
	NatConfig []PortMapPair `json:"nat_config,omitempty"`
	NetworkType *string `json:"network_type,omitempty"`
	PciAddress *string `json:"pci_address,omitempty"`
	Type *string `json:"type,omitempty"`
	Update *time.Time `json:"update,omitempty"`
	Vm *VirtualMachineNestview `json:"vm,omitempty"`
}

// NewVMNetworkInterface instantiates a new VMNetworkInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVMNetworkInterface() *VMNetworkInterface {
	this := VMNetworkInterface{}
	return &this
}

// NewVMNetworkInterfaceWithDefaults instantiates a new VMNetworkInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVMNetworkInterfaceWithDefaults() *VMNetworkInterface {
	this := VMNetworkInterface{}
	return &this
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *VMNetworkInterface) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VMNetworkInterface) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *VMNetworkInterface) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *VMNetworkInterface) SetCreate(v time.Time) {
	o.Create = &v
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *VMNetworkInterface) GetGateway() string {
	if o == nil || IsNil(o.Gateway) {
		var ret string
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VMNetworkInterface) GetGatewayOk() (*string, bool) {
	if o == nil || IsNil(o.Gateway) {
		return nil, false
	}
	return o.Gateway, true
}

// HasGateway returns a boolean if a field has been set.
func (o *VMNetworkInterface) HasGateway() bool {
	if o != nil && !IsNil(o.Gateway) {
		return true
	}

	return false
}

// SetGateway gets a reference to the given string and assigns it to the Gateway field.
func (o *VMNetworkInterface) SetGateway(v string) {
	o.Gateway = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VMNetworkInterface) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VMNetworkInterface) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VMNetworkInterface) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *VMNetworkInterface) SetId(v int64) {
	o.Id = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *VMNetworkInterface) GetIpAddress() string {
	if o == nil || IsNil(o.IpAddress) {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VMNetworkInterface) GetIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.IpAddress) {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *VMNetworkInterface) HasIpAddress() bool {
	if o != nil && !IsNil(o.IpAddress) {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *VMNetworkInterface) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetMacAddress returns the MacAddress field value if set, zero value otherwise.
func (o *VMNetworkInterface) GetMacAddress() string {
	if o == nil || IsNil(o.MacAddress) {
		var ret string
		return ret
	}
	return *o.MacAddress
}

// GetMacAddressOk returns a tuple with the MacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VMNetworkInterface) GetMacAddressOk() (*string, bool) {
	if o == nil || IsNil(o.MacAddress) {
		return nil, false
	}
	return o.MacAddress, true
}

// HasMacAddress returns a boolean if a field has been set.
func (o *VMNetworkInterface) HasMacAddress() bool {
	if o != nil && !IsNil(o.MacAddress) {
		return true
	}

	return false
}

// SetMacAddress gets a reference to the given string and assigns it to the MacAddress field.
func (o *VMNetworkInterface) SetMacAddress(v string) {
	o.MacAddress = &v
}

// GetMask returns the Mask field value if set, zero value otherwise.
func (o *VMNetworkInterface) GetMask() int64 {
	if o == nil || IsNil(o.Mask) {
		var ret int64
		return ret
	}
	return *o.Mask
}

// GetMaskOk returns a tuple with the Mask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VMNetworkInterface) GetMaskOk() (*int64, bool) {
	if o == nil || IsNil(o.Mask) {
		return nil, false
	}
	return o.Mask, true
}

// HasMask returns a boolean if a field has been set.
func (o *VMNetworkInterface) HasMask() bool {
	if o != nil && !IsNil(o.Mask) {
		return true
	}

	return false
}

// SetMask gets a reference to the given int64 and assigns it to the Mask field.
func (o *VMNetworkInterface) SetMask(v int64) {
	o.Mask = &v
}

// GetMaster returns the Master field value if set, zero value otherwise.
func (o *VMNetworkInterface) GetMaster() VMNetworkInterfaceNestview {
	if o == nil || IsNil(o.Master) {
		var ret VMNetworkInterfaceNestview
		return ret
	}
	return *o.Master
}

// GetMasterOk returns a tuple with the Master field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VMNetworkInterface) GetMasterOk() (*VMNetworkInterfaceNestview, bool) {
	if o == nil || IsNil(o.Master) {
		return nil, false
	}
	return o.Master, true
}

// HasMaster returns a boolean if a field has been set.
func (o *VMNetworkInterface) HasMaster() bool {
	if o != nil && !IsNil(o.Master) {
		return true
	}

	return false
}

// SetMaster gets a reference to the given VMNetworkInterfaceNestview and assigns it to the Master field.
func (o *VMNetworkInterface) SetMaster(v VMNetworkInterfaceNestview) {
	o.Master = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VMNetworkInterface) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VMNetworkInterface) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VMNetworkInterface) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VMNetworkInterface) SetName(v string) {
	o.Name = &v
}

// GetNatConfig returns the NatConfig field value if set, zero value otherwise.
func (o *VMNetworkInterface) GetNatConfig() []PortMapPair {
	if o == nil || IsNil(o.NatConfig) {
		var ret []PortMapPair
		return ret
	}
	return o.NatConfig
}

// GetNatConfigOk returns a tuple with the NatConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VMNetworkInterface) GetNatConfigOk() ([]PortMapPair, bool) {
	if o == nil || IsNil(o.NatConfig) {
		return nil, false
	}
	return o.NatConfig, true
}

// HasNatConfig returns a boolean if a field has been set.
func (o *VMNetworkInterface) HasNatConfig() bool {
	if o != nil && !IsNil(o.NatConfig) {
		return true
	}

	return false
}

// SetNatConfig gets a reference to the given []PortMapPair and assigns it to the NatConfig field.
func (o *VMNetworkInterface) SetNatConfig(v []PortMapPair) {
	o.NatConfig = v
}

// GetNetworkType returns the NetworkType field value if set, zero value otherwise.
func (o *VMNetworkInterface) GetNetworkType() string {
	if o == nil || IsNil(o.NetworkType) {
		var ret string
		return ret
	}
	return *o.NetworkType
}

// GetNetworkTypeOk returns a tuple with the NetworkType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VMNetworkInterface) GetNetworkTypeOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkType) {
		return nil, false
	}
	return o.NetworkType, true
}

// HasNetworkType returns a boolean if a field has been set.
func (o *VMNetworkInterface) HasNetworkType() bool {
	if o != nil && !IsNil(o.NetworkType) {
		return true
	}

	return false
}

// SetNetworkType gets a reference to the given string and assigns it to the NetworkType field.
func (o *VMNetworkInterface) SetNetworkType(v string) {
	o.NetworkType = &v
}

// GetPciAddress returns the PciAddress field value if set, zero value otherwise.
func (o *VMNetworkInterface) GetPciAddress() string {
	if o == nil || IsNil(o.PciAddress) {
		var ret string
		return ret
	}
	return *o.PciAddress
}

// GetPciAddressOk returns a tuple with the PciAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VMNetworkInterface) GetPciAddressOk() (*string, bool) {
	if o == nil || IsNil(o.PciAddress) {
		return nil, false
	}
	return o.PciAddress, true
}

// HasPciAddress returns a boolean if a field has been set.
func (o *VMNetworkInterface) HasPciAddress() bool {
	if o != nil && !IsNil(o.PciAddress) {
		return true
	}

	return false
}

// SetPciAddress gets a reference to the given string and assigns it to the PciAddress field.
func (o *VMNetworkInterface) SetPciAddress(v string) {
	o.PciAddress = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *VMNetworkInterface) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VMNetworkInterface) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *VMNetworkInterface) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *VMNetworkInterface) SetType(v string) {
	o.Type = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *VMNetworkInterface) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VMNetworkInterface) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *VMNetworkInterface) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *VMNetworkInterface) SetUpdate(v time.Time) {
	o.Update = &v
}

// GetVm returns the Vm field value if set, zero value otherwise.
func (o *VMNetworkInterface) GetVm() VirtualMachineNestview {
	if o == nil || IsNil(o.Vm) {
		var ret VirtualMachineNestview
		return ret
	}
	return *o.Vm
}

// GetVmOk returns a tuple with the Vm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VMNetworkInterface) GetVmOk() (*VirtualMachineNestview, bool) {
	if o == nil || IsNil(o.Vm) {
		return nil, false
	}
	return o.Vm, true
}

// HasVm returns a boolean if a field has been set.
func (o *VMNetworkInterface) HasVm() bool {
	if o != nil && !IsNil(o.Vm) {
		return true
	}

	return false
}

// SetVm gets a reference to the given VirtualMachineNestview and assigns it to the Vm field.
func (o *VMNetworkInterface) SetVm(v VirtualMachineNestview) {
	o.Vm = &v
}

func (o VMNetworkInterface) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VMNetworkInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.Gateway) {
		toSerialize["gateway"] = o.Gateway
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IpAddress) {
		toSerialize["ip_address"] = o.IpAddress
	}
	if !IsNil(o.MacAddress) {
		toSerialize["mac_address"] = o.MacAddress
	}
	if !IsNil(o.Mask) {
		toSerialize["mask"] = o.Mask
	}
	if !IsNil(o.Master) {
		toSerialize["master"] = o.Master
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NatConfig) {
		toSerialize["nat_config"] = o.NatConfig
	}
	if !IsNil(o.NetworkType) {
		toSerialize["network_type"] = o.NetworkType
	}
	if !IsNil(o.PciAddress) {
		toSerialize["pci_address"] = o.PciAddress
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	if !IsNil(o.Vm) {
		toSerialize["vm"] = o.Vm
	}
	return toSerialize, nil
}

type NullableVMNetworkInterface struct {
	value *VMNetworkInterface
	isSet bool
}

func (v NullableVMNetworkInterface) Get() *VMNetworkInterface {
	return v.value
}

func (v *NullableVMNetworkInterface) Set(val *VMNetworkInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableVMNetworkInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableVMNetworkInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVMNetworkInterface(val *VMNetworkInterface) *NullableVMNetworkInterface {
	return &NullableVMNetworkInterface{value: val, isSet: true}
}

func (v NullableVMNetworkInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVMNetworkInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


