/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OspPoolOutsideReqPool type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OspPoolOutsideReqPool{}

// OspPoolOutsideReqPool struct for OspPoolOutsideReqPool
type OspPoolOutsideReqPool struct {
	BackendId *int64 `json:"backend_id,omitempty"`
	BackendName *string `json:"backend_name,omitempty"`
	ClusterName *string `json:"cluster_name,omitempty"`
	ClusterUuid *string `json:"cluster_uuid,omitempty"`
	PoolIds []int64 `json:"pool_ids,omitempty"`
}

// NewOspPoolOutsideReqPool instantiates a new OspPoolOutsideReqPool object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOspPoolOutsideReqPool() *OspPoolOutsideReqPool {
	this := OspPoolOutsideReqPool{}
	return &this
}

// NewOspPoolOutsideReqPoolWithDefaults instantiates a new OspPoolOutsideReqPool object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOspPoolOutsideReqPoolWithDefaults() *OspPoolOutsideReqPool {
	this := OspPoolOutsideReqPool{}
	return &this
}

// GetBackendId returns the BackendId field value if set, zero value otherwise.
func (o *OspPoolOutsideReqPool) GetBackendId() int64 {
	if o == nil || IsNil(o.BackendId) {
		var ret int64
		return ret
	}
	return *o.BackendId
}

// GetBackendIdOk returns a tuple with the BackendId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspPoolOutsideReqPool) GetBackendIdOk() (*int64, bool) {
	if o == nil || IsNil(o.BackendId) {
		return nil, false
	}
	return o.BackendId, true
}

// HasBackendId returns a boolean if a field has been set.
func (o *OspPoolOutsideReqPool) HasBackendId() bool {
	if o != nil && !IsNil(o.BackendId) {
		return true
	}

	return false
}

// SetBackendId gets a reference to the given int64 and assigns it to the BackendId field.
func (o *OspPoolOutsideReqPool) SetBackendId(v int64) {
	o.BackendId = &v
}

// GetBackendName returns the BackendName field value if set, zero value otherwise.
func (o *OspPoolOutsideReqPool) GetBackendName() string {
	if o == nil || IsNil(o.BackendName) {
		var ret string
		return ret
	}
	return *o.BackendName
}

// GetBackendNameOk returns a tuple with the BackendName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspPoolOutsideReqPool) GetBackendNameOk() (*string, bool) {
	if o == nil || IsNil(o.BackendName) {
		return nil, false
	}
	return o.BackendName, true
}

// HasBackendName returns a boolean if a field has been set.
func (o *OspPoolOutsideReqPool) HasBackendName() bool {
	if o != nil && !IsNil(o.BackendName) {
		return true
	}

	return false
}

// SetBackendName gets a reference to the given string and assigns it to the BackendName field.
func (o *OspPoolOutsideReqPool) SetBackendName(v string) {
	o.BackendName = &v
}

// GetClusterName returns the ClusterName field value if set, zero value otherwise.
func (o *OspPoolOutsideReqPool) GetClusterName() string {
	if o == nil || IsNil(o.ClusterName) {
		var ret string
		return ret
	}
	return *o.ClusterName
}

// GetClusterNameOk returns a tuple with the ClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspPoolOutsideReqPool) GetClusterNameOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterName) {
		return nil, false
	}
	return o.ClusterName, true
}

// HasClusterName returns a boolean if a field has been set.
func (o *OspPoolOutsideReqPool) HasClusterName() bool {
	if o != nil && !IsNil(o.ClusterName) {
		return true
	}

	return false
}

// SetClusterName gets a reference to the given string and assigns it to the ClusterName field.
func (o *OspPoolOutsideReqPool) SetClusterName(v string) {
	o.ClusterName = &v
}

// GetClusterUuid returns the ClusterUuid field value if set, zero value otherwise.
func (o *OspPoolOutsideReqPool) GetClusterUuid() string {
	if o == nil || IsNil(o.ClusterUuid) {
		var ret string
		return ret
	}
	return *o.ClusterUuid
}

// GetClusterUuidOk returns a tuple with the ClusterUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspPoolOutsideReqPool) GetClusterUuidOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterUuid) {
		return nil, false
	}
	return o.ClusterUuid, true
}

// HasClusterUuid returns a boolean if a field has been set.
func (o *OspPoolOutsideReqPool) HasClusterUuid() bool {
	if o != nil && !IsNil(o.ClusterUuid) {
		return true
	}

	return false
}

// SetClusterUuid gets a reference to the given string and assigns it to the ClusterUuid field.
func (o *OspPoolOutsideReqPool) SetClusterUuid(v string) {
	o.ClusterUuid = &v
}

// GetPoolIds returns the PoolIds field value if set, zero value otherwise.
func (o *OspPoolOutsideReqPool) GetPoolIds() []int64 {
	if o == nil || IsNil(o.PoolIds) {
		var ret []int64
		return ret
	}
	return o.PoolIds
}

// GetPoolIdsOk returns a tuple with the PoolIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspPoolOutsideReqPool) GetPoolIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.PoolIds) {
		return nil, false
	}
	return o.PoolIds, true
}

// HasPoolIds returns a boolean if a field has been set.
func (o *OspPoolOutsideReqPool) HasPoolIds() bool {
	if o != nil && !IsNil(o.PoolIds) {
		return true
	}

	return false
}

// SetPoolIds gets a reference to the given []int64 and assigns it to the PoolIds field.
func (o *OspPoolOutsideReqPool) SetPoolIds(v []int64) {
	o.PoolIds = v
}

func (o OspPoolOutsideReqPool) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OspPoolOutsideReqPool) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BackendId) {
		toSerialize["backend_id"] = o.BackendId
	}
	if !IsNil(o.BackendName) {
		toSerialize["backend_name"] = o.BackendName
	}
	if !IsNil(o.ClusterName) {
		toSerialize["cluster_name"] = o.ClusterName
	}
	if !IsNil(o.ClusterUuid) {
		toSerialize["cluster_uuid"] = o.ClusterUuid
	}
	if !IsNil(o.PoolIds) {
		toSerialize["pool_ids"] = o.PoolIds
	}
	return toSerialize, nil
}

type NullableOspPoolOutsideReqPool struct {
	value *OspPoolOutsideReqPool
	isSet bool
}

func (v NullableOspPoolOutsideReqPool) Get() *OspPoolOutsideReqPool {
	return v.value
}

func (v *NullableOspPoolOutsideReqPool) Set(val *OspPoolOutsideReqPool) {
	v.value = val
	v.isSet = true
}

func (v NullableOspPoolOutsideReqPool) IsSet() bool {
	return v.isSet
}

func (v *NullableOspPoolOutsideReqPool) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOspPoolOutsideReqPool(val *OspPoolOutsideReqPool) *NullableOspPoolOutsideReqPool {
	return &NullableOspPoolOutsideReqPool{value: val, isSet: true}
}

func (v NullableOspPoolOutsideReqPool) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOspPoolOutsideReqPool) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


