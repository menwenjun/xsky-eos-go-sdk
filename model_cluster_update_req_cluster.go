/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ClusterUpdateReqCluster type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterUpdateReqCluster{}

// ClusterUpdateReqCluster struct for ClusterUpdateReqCluster
type ClusterUpdateReqCluster struct {
	// disk lighting mode
	DiskLightingMode *string `json:"disk_lighting_mode,omitempty"`
	// down out interval
	DownOutInterval *int64 `json:"down_out_interval,omitempty"`
	// enabled or disable elasticsearch
	ElasticsearchEnabled *bool `json:"elasticsearch_enabled,omitempty"`
	// disk lighting mode
	Name *string `json:"name,omitempty"`
	// os gateway oplog switch
	OsGatewayOplogSwitch *bool `json:"os_gateway_oplog_switch,omitempty"`
	// stats reserve days
	StatsReservedDays *int64 `json:"stats_reserved_days,omitempty"`
}

// NewClusterUpdateReqCluster instantiates a new ClusterUpdateReqCluster object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterUpdateReqCluster() *ClusterUpdateReqCluster {
	this := ClusterUpdateReqCluster{}
	return &this
}

// NewClusterUpdateReqClusterWithDefaults instantiates a new ClusterUpdateReqCluster object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterUpdateReqClusterWithDefaults() *ClusterUpdateReqCluster {
	this := ClusterUpdateReqCluster{}
	return &this
}

// GetDiskLightingMode returns the DiskLightingMode field value if set, zero value otherwise.
func (o *ClusterUpdateReqCluster) GetDiskLightingMode() string {
	if o == nil || IsNil(o.DiskLightingMode) {
		var ret string
		return ret
	}
	return *o.DiskLightingMode
}

// GetDiskLightingModeOk returns a tuple with the DiskLightingMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterUpdateReqCluster) GetDiskLightingModeOk() (*string, bool) {
	if o == nil || IsNil(o.DiskLightingMode) {
		return nil, false
	}
	return o.DiskLightingMode, true
}

// HasDiskLightingMode returns a boolean if a field has been set.
func (o *ClusterUpdateReqCluster) HasDiskLightingMode() bool {
	if o != nil && !IsNil(o.DiskLightingMode) {
		return true
	}

	return false
}

// SetDiskLightingMode gets a reference to the given string and assigns it to the DiskLightingMode field.
func (o *ClusterUpdateReqCluster) SetDiskLightingMode(v string) {
	o.DiskLightingMode = &v
}

// GetDownOutInterval returns the DownOutInterval field value if set, zero value otherwise.
func (o *ClusterUpdateReqCluster) GetDownOutInterval() int64 {
	if o == nil || IsNil(o.DownOutInterval) {
		var ret int64
		return ret
	}
	return *o.DownOutInterval
}

// GetDownOutIntervalOk returns a tuple with the DownOutInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterUpdateReqCluster) GetDownOutIntervalOk() (*int64, bool) {
	if o == nil || IsNil(o.DownOutInterval) {
		return nil, false
	}
	return o.DownOutInterval, true
}

// HasDownOutInterval returns a boolean if a field has been set.
func (o *ClusterUpdateReqCluster) HasDownOutInterval() bool {
	if o != nil && !IsNil(o.DownOutInterval) {
		return true
	}

	return false
}

// SetDownOutInterval gets a reference to the given int64 and assigns it to the DownOutInterval field.
func (o *ClusterUpdateReqCluster) SetDownOutInterval(v int64) {
	o.DownOutInterval = &v
}

// GetElasticsearchEnabled returns the ElasticsearchEnabled field value if set, zero value otherwise.
func (o *ClusterUpdateReqCluster) GetElasticsearchEnabled() bool {
	if o == nil || IsNil(o.ElasticsearchEnabled) {
		var ret bool
		return ret
	}
	return *o.ElasticsearchEnabled
}

// GetElasticsearchEnabledOk returns a tuple with the ElasticsearchEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterUpdateReqCluster) GetElasticsearchEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ElasticsearchEnabled) {
		return nil, false
	}
	return o.ElasticsearchEnabled, true
}

// HasElasticsearchEnabled returns a boolean if a field has been set.
func (o *ClusterUpdateReqCluster) HasElasticsearchEnabled() bool {
	if o != nil && !IsNil(o.ElasticsearchEnabled) {
		return true
	}

	return false
}

// SetElasticsearchEnabled gets a reference to the given bool and assigns it to the ElasticsearchEnabled field.
func (o *ClusterUpdateReqCluster) SetElasticsearchEnabled(v bool) {
	o.ElasticsearchEnabled = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ClusterUpdateReqCluster) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterUpdateReqCluster) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ClusterUpdateReqCluster) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ClusterUpdateReqCluster) SetName(v string) {
	o.Name = &v
}

// GetOsGatewayOplogSwitch returns the OsGatewayOplogSwitch field value if set, zero value otherwise.
func (o *ClusterUpdateReqCluster) GetOsGatewayOplogSwitch() bool {
	if o == nil || IsNil(o.OsGatewayOplogSwitch) {
		var ret bool
		return ret
	}
	return *o.OsGatewayOplogSwitch
}

// GetOsGatewayOplogSwitchOk returns a tuple with the OsGatewayOplogSwitch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterUpdateReqCluster) GetOsGatewayOplogSwitchOk() (*bool, bool) {
	if o == nil || IsNil(o.OsGatewayOplogSwitch) {
		return nil, false
	}
	return o.OsGatewayOplogSwitch, true
}

// HasOsGatewayOplogSwitch returns a boolean if a field has been set.
func (o *ClusterUpdateReqCluster) HasOsGatewayOplogSwitch() bool {
	if o != nil && !IsNil(o.OsGatewayOplogSwitch) {
		return true
	}

	return false
}

// SetOsGatewayOplogSwitch gets a reference to the given bool and assigns it to the OsGatewayOplogSwitch field.
func (o *ClusterUpdateReqCluster) SetOsGatewayOplogSwitch(v bool) {
	o.OsGatewayOplogSwitch = &v
}

// GetStatsReservedDays returns the StatsReservedDays field value if set, zero value otherwise.
func (o *ClusterUpdateReqCluster) GetStatsReservedDays() int64 {
	if o == nil || IsNil(o.StatsReservedDays) {
		var ret int64
		return ret
	}
	return *o.StatsReservedDays
}

// GetStatsReservedDaysOk returns a tuple with the StatsReservedDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterUpdateReqCluster) GetStatsReservedDaysOk() (*int64, bool) {
	if o == nil || IsNil(o.StatsReservedDays) {
		return nil, false
	}
	return o.StatsReservedDays, true
}

// HasStatsReservedDays returns a boolean if a field has been set.
func (o *ClusterUpdateReqCluster) HasStatsReservedDays() bool {
	if o != nil && !IsNil(o.StatsReservedDays) {
		return true
	}

	return false
}

// SetStatsReservedDays gets a reference to the given int64 and assigns it to the StatsReservedDays field.
func (o *ClusterUpdateReqCluster) SetStatsReservedDays(v int64) {
	o.StatsReservedDays = &v
}

func (o ClusterUpdateReqCluster) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterUpdateReqCluster) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DiskLightingMode) {
		toSerialize["disk_lighting_mode"] = o.DiskLightingMode
	}
	if !IsNil(o.DownOutInterval) {
		toSerialize["down_out_interval"] = o.DownOutInterval
	}
	if !IsNil(o.ElasticsearchEnabled) {
		toSerialize["elasticsearch_enabled"] = o.ElasticsearchEnabled
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OsGatewayOplogSwitch) {
		toSerialize["os_gateway_oplog_switch"] = o.OsGatewayOplogSwitch
	}
	if !IsNil(o.StatsReservedDays) {
		toSerialize["stats_reserved_days"] = o.StatsReservedDays
	}
	return toSerialize, nil
}

type NullableClusterUpdateReqCluster struct {
	value *ClusterUpdateReqCluster
	isSet bool
}

func (v NullableClusterUpdateReqCluster) Get() *ClusterUpdateReqCluster {
	return v.value
}

func (v *NullableClusterUpdateReqCluster) Set(val *ClusterUpdateReqCluster) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterUpdateReqCluster) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterUpdateReqCluster) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterUpdateReqCluster(val *ClusterUpdateReqCluster) *NullableClusterUpdateReqCluster {
	return &NullableClusterUpdateReqCluster{value: val, isSet: true}
}

func (v NullableClusterUpdateReqCluster) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterUpdateReqCluster) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


