/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the FCPortRecord type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FCPortRecord{}

// FCPortRecord FCPortRecord consists FCPort, FCPortErrCode models data
type FCPortRecord struct {
	ActionStatus *string `json:"action_status,omitempty"`
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	ConnOptMode *string `json:"conn_opt_mode,omitempty"`
	ConnType *string `json:"conn_type,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	DataRateMode *string `json:"data_rate_mode,omitempty"`
	Health *string `json:"health,omitempty"`
	Host *HostNestview `json:"host,omitempty"`
	Id *int64 `json:"id,omitempty"`
	LinkSpeed *string `json:"link_speed,omitempty"`
	LinkState *string `json:"link_state,omitempty"`
	MaxSpeed *string `json:"max_speed,omitempty"`
	PciAddress *string `json:"pci_address,omitempty"`
	PortId *string `json:"port_id,omitempty"`
	RecvBytes *int64 `json:"recv_bytes,omitempty"`
	RecvFrames *int64 `json:"recv_frames,omitempty"`
	RgHost *int64 `json:"rg_host,omitempty"`
	SendBytes *int64 `json:"send_bytes,omitempty"`
	SendFrames *int64 `json:"send_frames,omitempty"`
	Start *time.Time `json:"start,omitempty"`
	SupportedSpeeds []string `json:"supported_speeds,omitempty"`
	Update *time.Time `json:"update,omitempty"`
	Wwpn *string `json:"wwpn,omitempty"`
	FcPortErrcode *FCPortErrCode `json:"fc_port_errcode,omitempty"`
}

// NewFCPortRecord instantiates a new FCPortRecord object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFCPortRecord() *FCPortRecord {
	this := FCPortRecord{}
	return &this
}

// NewFCPortRecordWithDefaults instantiates a new FCPortRecord object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFCPortRecordWithDefaults() *FCPortRecord {
	this := FCPortRecord{}
	return &this
}

// GetActionStatus returns the ActionStatus field value if set, zero value otherwise.
func (o *FCPortRecord) GetActionStatus() string {
	if o == nil || IsNil(o.ActionStatus) {
		var ret string
		return ret
	}
	return *o.ActionStatus
}

// GetActionStatusOk returns a tuple with the ActionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FCPortRecord) GetActionStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ActionStatus) {
		return nil, false
	}
	return o.ActionStatus, true
}

// HasActionStatus returns a boolean if a field has been set.
func (o *FCPortRecord) HasActionStatus() bool {
	if o != nil && !IsNil(o.ActionStatus) {
		return true
	}

	return false
}

// SetActionStatus gets a reference to the given string and assigns it to the ActionStatus field.
func (o *FCPortRecord) SetActionStatus(v string) {
	o.ActionStatus = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *FCPortRecord) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FCPortRecord) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *FCPortRecord) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *FCPortRecord) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetConnOptMode returns the ConnOptMode field value if set, zero value otherwise.
func (o *FCPortRecord) GetConnOptMode() string {
	if o == nil || IsNil(o.ConnOptMode) {
		var ret string
		return ret
	}
	return *o.ConnOptMode
}

// GetConnOptModeOk returns a tuple with the ConnOptMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FCPortRecord) GetConnOptModeOk() (*string, bool) {
	if o == nil || IsNil(o.ConnOptMode) {
		return nil, false
	}
	return o.ConnOptMode, true
}

// HasConnOptMode returns a boolean if a field has been set.
func (o *FCPortRecord) HasConnOptMode() bool {
	if o != nil && !IsNil(o.ConnOptMode) {
		return true
	}

	return false
}

// SetConnOptMode gets a reference to the given string and assigns it to the ConnOptMode field.
func (o *FCPortRecord) SetConnOptMode(v string) {
	o.ConnOptMode = &v
}

// GetConnType returns the ConnType field value if set, zero value otherwise.
func (o *FCPortRecord) GetConnType() string {
	if o == nil || IsNil(o.ConnType) {
		var ret string
		return ret
	}
	return *o.ConnType
}

// GetConnTypeOk returns a tuple with the ConnType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FCPortRecord) GetConnTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ConnType) {
		return nil, false
	}
	return o.ConnType, true
}

// HasConnType returns a boolean if a field has been set.
func (o *FCPortRecord) HasConnType() bool {
	if o != nil && !IsNil(o.ConnType) {
		return true
	}

	return false
}

// SetConnType gets a reference to the given string and assigns it to the ConnType field.
func (o *FCPortRecord) SetConnType(v string) {
	o.ConnType = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *FCPortRecord) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FCPortRecord) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *FCPortRecord) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *FCPortRecord) SetCreate(v time.Time) {
	o.Create = &v
}

// GetDataRateMode returns the DataRateMode field value if set, zero value otherwise.
func (o *FCPortRecord) GetDataRateMode() string {
	if o == nil || IsNil(o.DataRateMode) {
		var ret string
		return ret
	}
	return *o.DataRateMode
}

// GetDataRateModeOk returns a tuple with the DataRateMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FCPortRecord) GetDataRateModeOk() (*string, bool) {
	if o == nil || IsNil(o.DataRateMode) {
		return nil, false
	}
	return o.DataRateMode, true
}

// HasDataRateMode returns a boolean if a field has been set.
func (o *FCPortRecord) HasDataRateMode() bool {
	if o != nil && !IsNil(o.DataRateMode) {
		return true
	}

	return false
}

// SetDataRateMode gets a reference to the given string and assigns it to the DataRateMode field.
func (o *FCPortRecord) SetDataRateMode(v string) {
	o.DataRateMode = &v
}

// GetHealth returns the Health field value if set, zero value otherwise.
func (o *FCPortRecord) GetHealth() string {
	if o == nil || IsNil(o.Health) {
		var ret string
		return ret
	}
	return *o.Health
}

// GetHealthOk returns a tuple with the Health field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FCPortRecord) GetHealthOk() (*string, bool) {
	if o == nil || IsNil(o.Health) {
		return nil, false
	}
	return o.Health, true
}

// HasHealth returns a boolean if a field has been set.
func (o *FCPortRecord) HasHealth() bool {
	if o != nil && !IsNil(o.Health) {
		return true
	}

	return false
}

// SetHealth gets a reference to the given string and assigns it to the Health field.
func (o *FCPortRecord) SetHealth(v string) {
	o.Health = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *FCPortRecord) GetHost() HostNestview {
	if o == nil || IsNil(o.Host) {
		var ret HostNestview
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FCPortRecord) GetHostOk() (*HostNestview, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *FCPortRecord) HasHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given HostNestview and assigns it to the Host field.
func (o *FCPortRecord) SetHost(v HostNestview) {
	o.Host = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FCPortRecord) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FCPortRecord) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FCPortRecord) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *FCPortRecord) SetId(v int64) {
	o.Id = &v
}

// GetLinkSpeed returns the LinkSpeed field value if set, zero value otherwise.
func (o *FCPortRecord) GetLinkSpeed() string {
	if o == nil || IsNil(o.LinkSpeed) {
		var ret string
		return ret
	}
	return *o.LinkSpeed
}

// GetLinkSpeedOk returns a tuple with the LinkSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FCPortRecord) GetLinkSpeedOk() (*string, bool) {
	if o == nil || IsNil(o.LinkSpeed) {
		return nil, false
	}
	return o.LinkSpeed, true
}

// HasLinkSpeed returns a boolean if a field has been set.
func (o *FCPortRecord) HasLinkSpeed() bool {
	if o != nil && !IsNil(o.LinkSpeed) {
		return true
	}

	return false
}

// SetLinkSpeed gets a reference to the given string and assigns it to the LinkSpeed field.
func (o *FCPortRecord) SetLinkSpeed(v string) {
	o.LinkSpeed = &v
}

// GetLinkState returns the LinkState field value if set, zero value otherwise.
func (o *FCPortRecord) GetLinkState() string {
	if o == nil || IsNil(o.LinkState) {
		var ret string
		return ret
	}
	return *o.LinkState
}

// GetLinkStateOk returns a tuple with the LinkState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FCPortRecord) GetLinkStateOk() (*string, bool) {
	if o == nil || IsNil(o.LinkState) {
		return nil, false
	}
	return o.LinkState, true
}

// HasLinkState returns a boolean if a field has been set.
func (o *FCPortRecord) HasLinkState() bool {
	if o != nil && !IsNil(o.LinkState) {
		return true
	}

	return false
}

// SetLinkState gets a reference to the given string and assigns it to the LinkState field.
func (o *FCPortRecord) SetLinkState(v string) {
	o.LinkState = &v
}

// GetMaxSpeed returns the MaxSpeed field value if set, zero value otherwise.
func (o *FCPortRecord) GetMaxSpeed() string {
	if o == nil || IsNil(o.MaxSpeed) {
		var ret string
		return ret
	}
	return *o.MaxSpeed
}

// GetMaxSpeedOk returns a tuple with the MaxSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FCPortRecord) GetMaxSpeedOk() (*string, bool) {
	if o == nil || IsNil(o.MaxSpeed) {
		return nil, false
	}
	return o.MaxSpeed, true
}

// HasMaxSpeed returns a boolean if a field has been set.
func (o *FCPortRecord) HasMaxSpeed() bool {
	if o != nil && !IsNil(o.MaxSpeed) {
		return true
	}

	return false
}

// SetMaxSpeed gets a reference to the given string and assigns it to the MaxSpeed field.
func (o *FCPortRecord) SetMaxSpeed(v string) {
	o.MaxSpeed = &v
}

// GetPciAddress returns the PciAddress field value if set, zero value otherwise.
func (o *FCPortRecord) GetPciAddress() string {
	if o == nil || IsNil(o.PciAddress) {
		var ret string
		return ret
	}
	return *o.PciAddress
}

// GetPciAddressOk returns a tuple with the PciAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FCPortRecord) GetPciAddressOk() (*string, bool) {
	if o == nil || IsNil(o.PciAddress) {
		return nil, false
	}
	return o.PciAddress, true
}

// HasPciAddress returns a boolean if a field has been set.
func (o *FCPortRecord) HasPciAddress() bool {
	if o != nil && !IsNil(o.PciAddress) {
		return true
	}

	return false
}

// SetPciAddress gets a reference to the given string and assigns it to the PciAddress field.
func (o *FCPortRecord) SetPciAddress(v string) {
	o.PciAddress = &v
}

// GetPortId returns the PortId field value if set, zero value otherwise.
func (o *FCPortRecord) GetPortId() string {
	if o == nil || IsNil(o.PortId) {
		var ret string
		return ret
	}
	return *o.PortId
}

// GetPortIdOk returns a tuple with the PortId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FCPortRecord) GetPortIdOk() (*string, bool) {
	if o == nil || IsNil(o.PortId) {
		return nil, false
	}
	return o.PortId, true
}

// HasPortId returns a boolean if a field has been set.
func (o *FCPortRecord) HasPortId() bool {
	if o != nil && !IsNil(o.PortId) {
		return true
	}

	return false
}

// SetPortId gets a reference to the given string and assigns it to the PortId field.
func (o *FCPortRecord) SetPortId(v string) {
	o.PortId = &v
}

// GetRecvBytes returns the RecvBytes field value if set, zero value otherwise.
func (o *FCPortRecord) GetRecvBytes() int64 {
	if o == nil || IsNil(o.RecvBytes) {
		var ret int64
		return ret
	}
	return *o.RecvBytes
}

// GetRecvBytesOk returns a tuple with the RecvBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FCPortRecord) GetRecvBytesOk() (*int64, bool) {
	if o == nil || IsNil(o.RecvBytes) {
		return nil, false
	}
	return o.RecvBytes, true
}

// HasRecvBytes returns a boolean if a field has been set.
func (o *FCPortRecord) HasRecvBytes() bool {
	if o != nil && !IsNil(o.RecvBytes) {
		return true
	}

	return false
}

// SetRecvBytes gets a reference to the given int64 and assigns it to the RecvBytes field.
func (o *FCPortRecord) SetRecvBytes(v int64) {
	o.RecvBytes = &v
}

// GetRecvFrames returns the RecvFrames field value if set, zero value otherwise.
func (o *FCPortRecord) GetRecvFrames() int64 {
	if o == nil || IsNil(o.RecvFrames) {
		var ret int64
		return ret
	}
	return *o.RecvFrames
}

// GetRecvFramesOk returns a tuple with the RecvFrames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FCPortRecord) GetRecvFramesOk() (*int64, bool) {
	if o == nil || IsNil(o.RecvFrames) {
		return nil, false
	}
	return o.RecvFrames, true
}

// HasRecvFrames returns a boolean if a field has been set.
func (o *FCPortRecord) HasRecvFrames() bool {
	if o != nil && !IsNil(o.RecvFrames) {
		return true
	}

	return false
}

// SetRecvFrames gets a reference to the given int64 and assigns it to the RecvFrames field.
func (o *FCPortRecord) SetRecvFrames(v int64) {
	o.RecvFrames = &v
}

// GetRgHost returns the RgHost field value if set, zero value otherwise.
func (o *FCPortRecord) GetRgHost() int64 {
	if o == nil || IsNil(o.RgHost) {
		var ret int64
		return ret
	}
	return *o.RgHost
}

// GetRgHostOk returns a tuple with the RgHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FCPortRecord) GetRgHostOk() (*int64, bool) {
	if o == nil || IsNil(o.RgHost) {
		return nil, false
	}
	return o.RgHost, true
}

// HasRgHost returns a boolean if a field has been set.
func (o *FCPortRecord) HasRgHost() bool {
	if o != nil && !IsNil(o.RgHost) {
		return true
	}

	return false
}

// SetRgHost gets a reference to the given int64 and assigns it to the RgHost field.
func (o *FCPortRecord) SetRgHost(v int64) {
	o.RgHost = &v
}

// GetSendBytes returns the SendBytes field value if set, zero value otherwise.
func (o *FCPortRecord) GetSendBytes() int64 {
	if o == nil || IsNil(o.SendBytes) {
		var ret int64
		return ret
	}
	return *o.SendBytes
}

// GetSendBytesOk returns a tuple with the SendBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FCPortRecord) GetSendBytesOk() (*int64, bool) {
	if o == nil || IsNil(o.SendBytes) {
		return nil, false
	}
	return o.SendBytes, true
}

// HasSendBytes returns a boolean if a field has been set.
func (o *FCPortRecord) HasSendBytes() bool {
	if o != nil && !IsNil(o.SendBytes) {
		return true
	}

	return false
}

// SetSendBytes gets a reference to the given int64 and assigns it to the SendBytes field.
func (o *FCPortRecord) SetSendBytes(v int64) {
	o.SendBytes = &v
}

// GetSendFrames returns the SendFrames field value if set, zero value otherwise.
func (o *FCPortRecord) GetSendFrames() int64 {
	if o == nil || IsNil(o.SendFrames) {
		var ret int64
		return ret
	}
	return *o.SendFrames
}

// GetSendFramesOk returns a tuple with the SendFrames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FCPortRecord) GetSendFramesOk() (*int64, bool) {
	if o == nil || IsNil(o.SendFrames) {
		return nil, false
	}
	return o.SendFrames, true
}

// HasSendFrames returns a boolean if a field has been set.
func (o *FCPortRecord) HasSendFrames() bool {
	if o != nil && !IsNil(o.SendFrames) {
		return true
	}

	return false
}

// SetSendFrames gets a reference to the given int64 and assigns it to the SendFrames field.
func (o *FCPortRecord) SetSendFrames(v int64) {
	o.SendFrames = &v
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *FCPortRecord) GetStart() time.Time {
	if o == nil || IsNil(o.Start) {
		var ret time.Time
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FCPortRecord) GetStartOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Start) {
		return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *FCPortRecord) HasStart() bool {
	if o != nil && !IsNil(o.Start) {
		return true
	}

	return false
}

// SetStart gets a reference to the given time.Time and assigns it to the Start field.
func (o *FCPortRecord) SetStart(v time.Time) {
	o.Start = &v
}

// GetSupportedSpeeds returns the SupportedSpeeds field value if set, zero value otherwise.
func (o *FCPortRecord) GetSupportedSpeeds() []string {
	if o == nil || IsNil(o.SupportedSpeeds) {
		var ret []string
		return ret
	}
	return o.SupportedSpeeds
}

// GetSupportedSpeedsOk returns a tuple with the SupportedSpeeds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FCPortRecord) GetSupportedSpeedsOk() ([]string, bool) {
	if o == nil || IsNil(o.SupportedSpeeds) {
		return nil, false
	}
	return o.SupportedSpeeds, true
}

// HasSupportedSpeeds returns a boolean if a field has been set.
func (o *FCPortRecord) HasSupportedSpeeds() bool {
	if o != nil && !IsNil(o.SupportedSpeeds) {
		return true
	}

	return false
}

// SetSupportedSpeeds gets a reference to the given []string and assigns it to the SupportedSpeeds field.
func (o *FCPortRecord) SetSupportedSpeeds(v []string) {
	o.SupportedSpeeds = v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *FCPortRecord) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FCPortRecord) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *FCPortRecord) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *FCPortRecord) SetUpdate(v time.Time) {
	o.Update = &v
}

// GetWwpn returns the Wwpn field value if set, zero value otherwise.
func (o *FCPortRecord) GetWwpn() string {
	if o == nil || IsNil(o.Wwpn) {
		var ret string
		return ret
	}
	return *o.Wwpn
}

// GetWwpnOk returns a tuple with the Wwpn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FCPortRecord) GetWwpnOk() (*string, bool) {
	if o == nil || IsNil(o.Wwpn) {
		return nil, false
	}
	return o.Wwpn, true
}

// HasWwpn returns a boolean if a field has been set.
func (o *FCPortRecord) HasWwpn() bool {
	if o != nil && !IsNil(o.Wwpn) {
		return true
	}

	return false
}

// SetWwpn gets a reference to the given string and assigns it to the Wwpn field.
func (o *FCPortRecord) SetWwpn(v string) {
	o.Wwpn = &v
}

// GetFcPortErrcode returns the FcPortErrcode field value if set, zero value otherwise.
func (o *FCPortRecord) GetFcPortErrcode() FCPortErrCode {
	if o == nil || IsNil(o.FcPortErrcode) {
		var ret FCPortErrCode
		return ret
	}
	return *o.FcPortErrcode
}

// GetFcPortErrcodeOk returns a tuple with the FcPortErrcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FCPortRecord) GetFcPortErrcodeOk() (*FCPortErrCode, bool) {
	if o == nil || IsNil(o.FcPortErrcode) {
		return nil, false
	}
	return o.FcPortErrcode, true
}

// HasFcPortErrcode returns a boolean if a field has been set.
func (o *FCPortRecord) HasFcPortErrcode() bool {
	if o != nil && !IsNil(o.FcPortErrcode) {
		return true
	}

	return false
}

// SetFcPortErrcode gets a reference to the given FCPortErrCode and assigns it to the FcPortErrcode field.
func (o *FCPortRecord) SetFcPortErrcode(v FCPortErrCode) {
	o.FcPortErrcode = &v
}

func (o FCPortRecord) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FCPortRecord) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActionStatus) {
		toSerialize["action_status"] = o.ActionStatus
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.ConnOptMode) {
		toSerialize["conn_opt_mode"] = o.ConnOptMode
	}
	if !IsNil(o.ConnType) {
		toSerialize["conn_type"] = o.ConnType
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.DataRateMode) {
		toSerialize["data_rate_mode"] = o.DataRateMode
	}
	if !IsNil(o.Health) {
		toSerialize["health"] = o.Health
	}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LinkSpeed) {
		toSerialize["link_speed"] = o.LinkSpeed
	}
	if !IsNil(o.LinkState) {
		toSerialize["link_state"] = o.LinkState
	}
	if !IsNil(o.MaxSpeed) {
		toSerialize["max_speed"] = o.MaxSpeed
	}
	if !IsNil(o.PciAddress) {
		toSerialize["pci_address"] = o.PciAddress
	}
	if !IsNil(o.PortId) {
		toSerialize["port_id"] = o.PortId
	}
	if !IsNil(o.RecvBytes) {
		toSerialize["recv_bytes"] = o.RecvBytes
	}
	if !IsNil(o.RecvFrames) {
		toSerialize["recv_frames"] = o.RecvFrames
	}
	if !IsNil(o.RgHost) {
		toSerialize["rg_host"] = o.RgHost
	}
	if !IsNil(o.SendBytes) {
		toSerialize["send_bytes"] = o.SendBytes
	}
	if !IsNil(o.SendFrames) {
		toSerialize["send_frames"] = o.SendFrames
	}
	if !IsNil(o.Start) {
		toSerialize["start"] = o.Start
	}
	if !IsNil(o.SupportedSpeeds) {
		toSerialize["supported_speeds"] = o.SupportedSpeeds
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	if !IsNil(o.Wwpn) {
		toSerialize["wwpn"] = o.Wwpn
	}
	if !IsNil(o.FcPortErrcode) {
		toSerialize["fc_port_errcode"] = o.FcPortErrcode
	}
	return toSerialize, nil
}

type NullableFCPortRecord struct {
	value *FCPortRecord
	isSet bool
}

func (v NullableFCPortRecord) Get() *FCPortRecord {
	return v.value
}

func (v *NullableFCPortRecord) Set(val *FCPortRecord) {
	v.value = val
	v.isSet = true
}

func (v NullableFCPortRecord) IsSet() bool {
	return v.isSet
}

func (v *NullableFCPortRecord) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFCPortRecord(val *FCPortRecord) *NullableFCPortRecord {
	return &NullableFCPortRecord{value: val, isSet: true}
}

func (v NullableFCPortRecord) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFCPortRecord) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


