/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the ObjectStorageBucket type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ObjectStorageBucket{}

// ObjectStorageBucket ObjectStorageBucket is the model of object_storage_bucket
type ObjectStorageBucket struct {
	ActionStatus *string `json:"action_status,omitempty"`
	AllUserPermission *string `json:"all_user_permission,omitempty"`
	AuthUserPermission *string `json:"auth_user_permission,omitempty"`
	BucketPolicy *string `json:"bucket_policy,omitempty"`
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	DeleteArchiveStorageClass *string `json:"delete_archive_storage_class,omitempty"`
	Description *string `json:"description,omitempty"`
	ExternalQuotaMaxObjects *int64 `json:"external_quota_max_objects,omitempty"`
	ExternalQuotaMaxSize *int64 `json:"external_quota_max_size,omitempty"`
	Flag *BucketFlag `json:"flag,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Lifecycle *ObjectStorageLifecycle `json:"lifecycle,omitempty"`
	LocalQuotaMaxObjects *int64 `json:"local_quota_max_objects,omitempty"`
	LocalQuotaMaxSize *int64 `json:"local_quota_max_size,omitempty"`
	LogDeliveryPermission *string `json:"log_delivery_permission,omitempty"`
	LoggingEnabled *bool `json:"logging_enabled,omitempty"`
	LoggingGrants []OSBucketLoggingGrant `json:"logging_grants,omitempty"`
	LoggingOwner *ObjectStorageUserNestview `json:"logging_owner,omitempty"`
	LoggingPrefix *string `json:"logging_prefix,omitempty"`
	LoggingSuspended *bool `json:"logging_suspended,omitempty"`
	LoggingTargetBucket *ObjectStorageBucketNestview `json:"logging_target_bucket,omitempty"`
	MetadataSearchEnabled *bool `json:"metadata_search_enabled,omitempty"`
	Name *string `json:"name,omitempty"`
	NfsClientNum *int64 `json:"nfs_client_num,omitempty"`
	ObjectCover *OSBucketObjectCoverConf `json:"object_cover,omitempty"`
	ObjectStorageClass *OSBucketObjectStorageClass `json:"object_storage_class,omitempty"`
	OsReplicationPathNum *int64 `json:"os_replication_path_num,omitempty"`
	OsReplicationZoneNum *int64 `json:"os_replication_zone_num,omitempty"`
	OsZone *ObjectStorageZoneNestview `json:"os_zone,omitempty"`
	OsZoneUuid *string `json:"os_zone_uuid,omitempty"`
	Owner *ObjectStorageUserNestview `json:"owner,omitempty"`
	OwnerPermission *string `json:"owner_permission,omitempty"`
	Policy *ObjectStoragePolicyNestview `json:"policy,omitempty"`
	PolicyEnabled *bool `json:"policy_enabled,omitempty"`
	Qos *OSBucketQos `json:"qos,omitempty"`
	QuotaMaxObjects *int64 `json:"quota_max_objects,omitempty"`
	QuotaMaxSize *int64 `json:"quota_max_size,omitempty"`
	RemoteCluster *RemoteClusterNestview `json:"remote_cluster,omitempty"`
	// NOTE: Use name of bucket as replication uuid for simplicity
	ReplicationUuid *string `json:"replication_uuid,omitempty"`
	RestoreDays *int64 `json:"restore_days,omitempty"`
	Shards *int64 `json:"shards,omitempty"`
	SpecificationObjects *int64 `json:"specification_objects,omitempty"`
	Status *string `json:"status,omitempty"`
	Update *time.Time `json:"update,omitempty"`
	Virtual *bool `json:"virtual,omitempty"`
}

// NewObjectStorageBucket instantiates a new ObjectStorageBucket object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectStorageBucket() *ObjectStorageBucket {
	this := ObjectStorageBucket{}
	return &this
}

// NewObjectStorageBucketWithDefaults instantiates a new ObjectStorageBucket object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectStorageBucketWithDefaults() *ObjectStorageBucket {
	this := ObjectStorageBucket{}
	return &this
}

// GetActionStatus returns the ActionStatus field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetActionStatus() string {
	if o == nil || IsNil(o.ActionStatus) {
		var ret string
		return ret
	}
	return *o.ActionStatus
}

// GetActionStatusOk returns a tuple with the ActionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetActionStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ActionStatus) {
		return nil, false
	}
	return o.ActionStatus, true
}

// HasActionStatus returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasActionStatus() bool {
	if o != nil && !IsNil(o.ActionStatus) {
		return true
	}

	return false
}

// SetActionStatus gets a reference to the given string and assigns it to the ActionStatus field.
func (o *ObjectStorageBucket) SetActionStatus(v string) {
	o.ActionStatus = &v
}

// GetAllUserPermission returns the AllUserPermission field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetAllUserPermission() string {
	if o == nil || IsNil(o.AllUserPermission) {
		var ret string
		return ret
	}
	return *o.AllUserPermission
}

// GetAllUserPermissionOk returns a tuple with the AllUserPermission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetAllUserPermissionOk() (*string, bool) {
	if o == nil || IsNil(o.AllUserPermission) {
		return nil, false
	}
	return o.AllUserPermission, true
}

// HasAllUserPermission returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasAllUserPermission() bool {
	if o != nil && !IsNil(o.AllUserPermission) {
		return true
	}

	return false
}

// SetAllUserPermission gets a reference to the given string and assigns it to the AllUserPermission field.
func (o *ObjectStorageBucket) SetAllUserPermission(v string) {
	o.AllUserPermission = &v
}

// GetAuthUserPermission returns the AuthUserPermission field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetAuthUserPermission() string {
	if o == nil || IsNil(o.AuthUserPermission) {
		var ret string
		return ret
	}
	return *o.AuthUserPermission
}

// GetAuthUserPermissionOk returns a tuple with the AuthUserPermission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetAuthUserPermissionOk() (*string, bool) {
	if o == nil || IsNil(o.AuthUserPermission) {
		return nil, false
	}
	return o.AuthUserPermission, true
}

// HasAuthUserPermission returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasAuthUserPermission() bool {
	if o != nil && !IsNil(o.AuthUserPermission) {
		return true
	}

	return false
}

// SetAuthUserPermission gets a reference to the given string and assigns it to the AuthUserPermission field.
func (o *ObjectStorageBucket) SetAuthUserPermission(v string) {
	o.AuthUserPermission = &v
}

// GetBucketPolicy returns the BucketPolicy field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetBucketPolicy() string {
	if o == nil || IsNil(o.BucketPolicy) {
		var ret string
		return ret
	}
	return *o.BucketPolicy
}

// GetBucketPolicyOk returns a tuple with the BucketPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetBucketPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.BucketPolicy) {
		return nil, false
	}
	return o.BucketPolicy, true
}

// HasBucketPolicy returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasBucketPolicy() bool {
	if o != nil && !IsNil(o.BucketPolicy) {
		return true
	}

	return false
}

// SetBucketPolicy gets a reference to the given string and assigns it to the BucketPolicy field.
func (o *ObjectStorageBucket) SetBucketPolicy(v string) {
	o.BucketPolicy = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *ObjectStorageBucket) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *ObjectStorageBucket) SetCreate(v time.Time) {
	o.Create = &v
}

// GetDeleteArchiveStorageClass returns the DeleteArchiveStorageClass field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetDeleteArchiveStorageClass() string {
	if o == nil || IsNil(o.DeleteArchiveStorageClass) {
		var ret string
		return ret
	}
	return *o.DeleteArchiveStorageClass
}

// GetDeleteArchiveStorageClassOk returns a tuple with the DeleteArchiveStorageClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetDeleteArchiveStorageClassOk() (*string, bool) {
	if o == nil || IsNil(o.DeleteArchiveStorageClass) {
		return nil, false
	}
	return o.DeleteArchiveStorageClass, true
}

// HasDeleteArchiveStorageClass returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasDeleteArchiveStorageClass() bool {
	if o != nil && !IsNil(o.DeleteArchiveStorageClass) {
		return true
	}

	return false
}

// SetDeleteArchiveStorageClass gets a reference to the given string and assigns it to the DeleteArchiveStorageClass field.
func (o *ObjectStorageBucket) SetDeleteArchiveStorageClass(v string) {
	o.DeleteArchiveStorageClass = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ObjectStorageBucket) SetDescription(v string) {
	o.Description = &v
}

// GetExternalQuotaMaxObjects returns the ExternalQuotaMaxObjects field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetExternalQuotaMaxObjects() int64 {
	if o == nil || IsNil(o.ExternalQuotaMaxObjects) {
		var ret int64
		return ret
	}
	return *o.ExternalQuotaMaxObjects
}

// GetExternalQuotaMaxObjectsOk returns a tuple with the ExternalQuotaMaxObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetExternalQuotaMaxObjectsOk() (*int64, bool) {
	if o == nil || IsNil(o.ExternalQuotaMaxObjects) {
		return nil, false
	}
	return o.ExternalQuotaMaxObjects, true
}

// HasExternalQuotaMaxObjects returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasExternalQuotaMaxObjects() bool {
	if o != nil && !IsNil(o.ExternalQuotaMaxObjects) {
		return true
	}

	return false
}

// SetExternalQuotaMaxObjects gets a reference to the given int64 and assigns it to the ExternalQuotaMaxObjects field.
func (o *ObjectStorageBucket) SetExternalQuotaMaxObjects(v int64) {
	o.ExternalQuotaMaxObjects = &v
}

// GetExternalQuotaMaxSize returns the ExternalQuotaMaxSize field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetExternalQuotaMaxSize() int64 {
	if o == nil || IsNil(o.ExternalQuotaMaxSize) {
		var ret int64
		return ret
	}
	return *o.ExternalQuotaMaxSize
}

// GetExternalQuotaMaxSizeOk returns a tuple with the ExternalQuotaMaxSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetExternalQuotaMaxSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.ExternalQuotaMaxSize) {
		return nil, false
	}
	return o.ExternalQuotaMaxSize, true
}

// HasExternalQuotaMaxSize returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasExternalQuotaMaxSize() bool {
	if o != nil && !IsNil(o.ExternalQuotaMaxSize) {
		return true
	}

	return false
}

// SetExternalQuotaMaxSize gets a reference to the given int64 and assigns it to the ExternalQuotaMaxSize field.
func (o *ObjectStorageBucket) SetExternalQuotaMaxSize(v int64) {
	o.ExternalQuotaMaxSize = &v
}

// GetFlag returns the Flag field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetFlag() BucketFlag {
	if o == nil || IsNil(o.Flag) {
		var ret BucketFlag
		return ret
	}
	return *o.Flag
}

// GetFlagOk returns a tuple with the Flag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetFlagOk() (*BucketFlag, bool) {
	if o == nil || IsNil(o.Flag) {
		return nil, false
	}
	return o.Flag, true
}

// HasFlag returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasFlag() bool {
	if o != nil && !IsNil(o.Flag) {
		return true
	}

	return false
}

// SetFlag gets a reference to the given BucketFlag and assigns it to the Flag field.
func (o *ObjectStorageBucket) SetFlag(v BucketFlag) {
	o.Flag = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ObjectStorageBucket) SetId(v int64) {
	o.Id = &v
}

// GetLifecycle returns the Lifecycle field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetLifecycle() ObjectStorageLifecycle {
	if o == nil || IsNil(o.Lifecycle) {
		var ret ObjectStorageLifecycle
		return ret
	}
	return *o.Lifecycle
}

// GetLifecycleOk returns a tuple with the Lifecycle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetLifecycleOk() (*ObjectStorageLifecycle, bool) {
	if o == nil || IsNil(o.Lifecycle) {
		return nil, false
	}
	return o.Lifecycle, true
}

// HasLifecycle returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasLifecycle() bool {
	if o != nil && !IsNil(o.Lifecycle) {
		return true
	}

	return false
}

// SetLifecycle gets a reference to the given ObjectStorageLifecycle and assigns it to the Lifecycle field.
func (o *ObjectStorageBucket) SetLifecycle(v ObjectStorageLifecycle) {
	o.Lifecycle = &v
}

// GetLocalQuotaMaxObjects returns the LocalQuotaMaxObjects field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetLocalQuotaMaxObjects() int64 {
	if o == nil || IsNil(o.LocalQuotaMaxObjects) {
		var ret int64
		return ret
	}
	return *o.LocalQuotaMaxObjects
}

// GetLocalQuotaMaxObjectsOk returns a tuple with the LocalQuotaMaxObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetLocalQuotaMaxObjectsOk() (*int64, bool) {
	if o == nil || IsNil(o.LocalQuotaMaxObjects) {
		return nil, false
	}
	return o.LocalQuotaMaxObjects, true
}

// HasLocalQuotaMaxObjects returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasLocalQuotaMaxObjects() bool {
	if o != nil && !IsNil(o.LocalQuotaMaxObjects) {
		return true
	}

	return false
}

// SetLocalQuotaMaxObjects gets a reference to the given int64 and assigns it to the LocalQuotaMaxObjects field.
func (o *ObjectStorageBucket) SetLocalQuotaMaxObjects(v int64) {
	o.LocalQuotaMaxObjects = &v
}

// GetLocalQuotaMaxSize returns the LocalQuotaMaxSize field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetLocalQuotaMaxSize() int64 {
	if o == nil || IsNil(o.LocalQuotaMaxSize) {
		var ret int64
		return ret
	}
	return *o.LocalQuotaMaxSize
}

// GetLocalQuotaMaxSizeOk returns a tuple with the LocalQuotaMaxSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetLocalQuotaMaxSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.LocalQuotaMaxSize) {
		return nil, false
	}
	return o.LocalQuotaMaxSize, true
}

// HasLocalQuotaMaxSize returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasLocalQuotaMaxSize() bool {
	if o != nil && !IsNil(o.LocalQuotaMaxSize) {
		return true
	}

	return false
}

// SetLocalQuotaMaxSize gets a reference to the given int64 and assigns it to the LocalQuotaMaxSize field.
func (o *ObjectStorageBucket) SetLocalQuotaMaxSize(v int64) {
	o.LocalQuotaMaxSize = &v
}

// GetLogDeliveryPermission returns the LogDeliveryPermission field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetLogDeliveryPermission() string {
	if o == nil || IsNil(o.LogDeliveryPermission) {
		var ret string
		return ret
	}
	return *o.LogDeliveryPermission
}

// GetLogDeliveryPermissionOk returns a tuple with the LogDeliveryPermission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetLogDeliveryPermissionOk() (*string, bool) {
	if o == nil || IsNil(o.LogDeliveryPermission) {
		return nil, false
	}
	return o.LogDeliveryPermission, true
}

// HasLogDeliveryPermission returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasLogDeliveryPermission() bool {
	if o != nil && !IsNil(o.LogDeliveryPermission) {
		return true
	}

	return false
}

// SetLogDeliveryPermission gets a reference to the given string and assigns it to the LogDeliveryPermission field.
func (o *ObjectStorageBucket) SetLogDeliveryPermission(v string) {
	o.LogDeliveryPermission = &v
}

// GetLoggingEnabled returns the LoggingEnabled field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetLoggingEnabled() bool {
	if o == nil || IsNil(o.LoggingEnabled) {
		var ret bool
		return ret
	}
	return *o.LoggingEnabled
}

// GetLoggingEnabledOk returns a tuple with the LoggingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetLoggingEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.LoggingEnabled) {
		return nil, false
	}
	return o.LoggingEnabled, true
}

// HasLoggingEnabled returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasLoggingEnabled() bool {
	if o != nil && !IsNil(o.LoggingEnabled) {
		return true
	}

	return false
}

// SetLoggingEnabled gets a reference to the given bool and assigns it to the LoggingEnabled field.
func (o *ObjectStorageBucket) SetLoggingEnabled(v bool) {
	o.LoggingEnabled = &v
}

// GetLoggingGrants returns the LoggingGrants field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetLoggingGrants() []OSBucketLoggingGrant {
	if o == nil || IsNil(o.LoggingGrants) {
		var ret []OSBucketLoggingGrant
		return ret
	}
	return o.LoggingGrants
}

// GetLoggingGrantsOk returns a tuple with the LoggingGrants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetLoggingGrantsOk() ([]OSBucketLoggingGrant, bool) {
	if o == nil || IsNil(o.LoggingGrants) {
		return nil, false
	}
	return o.LoggingGrants, true
}

// HasLoggingGrants returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasLoggingGrants() bool {
	if o != nil && !IsNil(o.LoggingGrants) {
		return true
	}

	return false
}

// SetLoggingGrants gets a reference to the given []OSBucketLoggingGrant and assigns it to the LoggingGrants field.
func (o *ObjectStorageBucket) SetLoggingGrants(v []OSBucketLoggingGrant) {
	o.LoggingGrants = v
}

// GetLoggingOwner returns the LoggingOwner field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetLoggingOwner() ObjectStorageUserNestview {
	if o == nil || IsNil(o.LoggingOwner) {
		var ret ObjectStorageUserNestview
		return ret
	}
	return *o.LoggingOwner
}

// GetLoggingOwnerOk returns a tuple with the LoggingOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetLoggingOwnerOk() (*ObjectStorageUserNestview, bool) {
	if o == nil || IsNil(o.LoggingOwner) {
		return nil, false
	}
	return o.LoggingOwner, true
}

// HasLoggingOwner returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasLoggingOwner() bool {
	if o != nil && !IsNil(o.LoggingOwner) {
		return true
	}

	return false
}

// SetLoggingOwner gets a reference to the given ObjectStorageUserNestview and assigns it to the LoggingOwner field.
func (o *ObjectStorageBucket) SetLoggingOwner(v ObjectStorageUserNestview) {
	o.LoggingOwner = &v
}

// GetLoggingPrefix returns the LoggingPrefix field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetLoggingPrefix() string {
	if o == nil || IsNil(o.LoggingPrefix) {
		var ret string
		return ret
	}
	return *o.LoggingPrefix
}

// GetLoggingPrefixOk returns a tuple with the LoggingPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetLoggingPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.LoggingPrefix) {
		return nil, false
	}
	return o.LoggingPrefix, true
}

// HasLoggingPrefix returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasLoggingPrefix() bool {
	if o != nil && !IsNil(o.LoggingPrefix) {
		return true
	}

	return false
}

// SetLoggingPrefix gets a reference to the given string and assigns it to the LoggingPrefix field.
func (o *ObjectStorageBucket) SetLoggingPrefix(v string) {
	o.LoggingPrefix = &v
}

// GetLoggingSuspended returns the LoggingSuspended field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetLoggingSuspended() bool {
	if o == nil || IsNil(o.LoggingSuspended) {
		var ret bool
		return ret
	}
	return *o.LoggingSuspended
}

// GetLoggingSuspendedOk returns a tuple with the LoggingSuspended field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetLoggingSuspendedOk() (*bool, bool) {
	if o == nil || IsNil(o.LoggingSuspended) {
		return nil, false
	}
	return o.LoggingSuspended, true
}

// HasLoggingSuspended returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasLoggingSuspended() bool {
	if o != nil && !IsNil(o.LoggingSuspended) {
		return true
	}

	return false
}

// SetLoggingSuspended gets a reference to the given bool and assigns it to the LoggingSuspended field.
func (o *ObjectStorageBucket) SetLoggingSuspended(v bool) {
	o.LoggingSuspended = &v
}

// GetLoggingTargetBucket returns the LoggingTargetBucket field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetLoggingTargetBucket() ObjectStorageBucketNestview {
	if o == nil || IsNil(o.LoggingTargetBucket) {
		var ret ObjectStorageBucketNestview
		return ret
	}
	return *o.LoggingTargetBucket
}

// GetLoggingTargetBucketOk returns a tuple with the LoggingTargetBucket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetLoggingTargetBucketOk() (*ObjectStorageBucketNestview, bool) {
	if o == nil || IsNil(o.LoggingTargetBucket) {
		return nil, false
	}
	return o.LoggingTargetBucket, true
}

// HasLoggingTargetBucket returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasLoggingTargetBucket() bool {
	if o != nil && !IsNil(o.LoggingTargetBucket) {
		return true
	}

	return false
}

// SetLoggingTargetBucket gets a reference to the given ObjectStorageBucketNestview and assigns it to the LoggingTargetBucket field.
func (o *ObjectStorageBucket) SetLoggingTargetBucket(v ObjectStorageBucketNestview) {
	o.LoggingTargetBucket = &v
}

// GetMetadataSearchEnabled returns the MetadataSearchEnabled field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetMetadataSearchEnabled() bool {
	if o == nil || IsNil(o.MetadataSearchEnabled) {
		var ret bool
		return ret
	}
	return *o.MetadataSearchEnabled
}

// GetMetadataSearchEnabledOk returns a tuple with the MetadataSearchEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetMetadataSearchEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.MetadataSearchEnabled) {
		return nil, false
	}
	return o.MetadataSearchEnabled, true
}

// HasMetadataSearchEnabled returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasMetadataSearchEnabled() bool {
	if o != nil && !IsNil(o.MetadataSearchEnabled) {
		return true
	}

	return false
}

// SetMetadataSearchEnabled gets a reference to the given bool and assigns it to the MetadataSearchEnabled field.
func (o *ObjectStorageBucket) SetMetadataSearchEnabled(v bool) {
	o.MetadataSearchEnabled = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ObjectStorageBucket) SetName(v string) {
	o.Name = &v
}

// GetNfsClientNum returns the NfsClientNum field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetNfsClientNum() int64 {
	if o == nil || IsNil(o.NfsClientNum) {
		var ret int64
		return ret
	}
	return *o.NfsClientNum
}

// GetNfsClientNumOk returns a tuple with the NfsClientNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetNfsClientNumOk() (*int64, bool) {
	if o == nil || IsNil(o.NfsClientNum) {
		return nil, false
	}
	return o.NfsClientNum, true
}

// HasNfsClientNum returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasNfsClientNum() bool {
	if o != nil && !IsNil(o.NfsClientNum) {
		return true
	}

	return false
}

// SetNfsClientNum gets a reference to the given int64 and assigns it to the NfsClientNum field.
func (o *ObjectStorageBucket) SetNfsClientNum(v int64) {
	o.NfsClientNum = &v
}

// GetObjectCover returns the ObjectCover field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetObjectCover() OSBucketObjectCoverConf {
	if o == nil || IsNil(o.ObjectCover) {
		var ret OSBucketObjectCoverConf
		return ret
	}
	return *o.ObjectCover
}

// GetObjectCoverOk returns a tuple with the ObjectCover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetObjectCoverOk() (*OSBucketObjectCoverConf, bool) {
	if o == nil || IsNil(o.ObjectCover) {
		return nil, false
	}
	return o.ObjectCover, true
}

// HasObjectCover returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasObjectCover() bool {
	if o != nil && !IsNil(o.ObjectCover) {
		return true
	}

	return false
}

// SetObjectCover gets a reference to the given OSBucketObjectCoverConf and assigns it to the ObjectCover field.
func (o *ObjectStorageBucket) SetObjectCover(v OSBucketObjectCoverConf) {
	o.ObjectCover = &v
}

// GetObjectStorageClass returns the ObjectStorageClass field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetObjectStorageClass() OSBucketObjectStorageClass {
	if o == nil || IsNil(o.ObjectStorageClass) {
		var ret OSBucketObjectStorageClass
		return ret
	}
	return *o.ObjectStorageClass
}

// GetObjectStorageClassOk returns a tuple with the ObjectStorageClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetObjectStorageClassOk() (*OSBucketObjectStorageClass, bool) {
	if o == nil || IsNil(o.ObjectStorageClass) {
		return nil, false
	}
	return o.ObjectStorageClass, true
}

// HasObjectStorageClass returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasObjectStorageClass() bool {
	if o != nil && !IsNil(o.ObjectStorageClass) {
		return true
	}

	return false
}

// SetObjectStorageClass gets a reference to the given OSBucketObjectStorageClass and assigns it to the ObjectStorageClass field.
func (o *ObjectStorageBucket) SetObjectStorageClass(v OSBucketObjectStorageClass) {
	o.ObjectStorageClass = &v
}

// GetOsReplicationPathNum returns the OsReplicationPathNum field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetOsReplicationPathNum() int64 {
	if o == nil || IsNil(o.OsReplicationPathNum) {
		var ret int64
		return ret
	}
	return *o.OsReplicationPathNum
}

// GetOsReplicationPathNumOk returns a tuple with the OsReplicationPathNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetOsReplicationPathNumOk() (*int64, bool) {
	if o == nil || IsNil(o.OsReplicationPathNum) {
		return nil, false
	}
	return o.OsReplicationPathNum, true
}

// HasOsReplicationPathNum returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasOsReplicationPathNum() bool {
	if o != nil && !IsNil(o.OsReplicationPathNum) {
		return true
	}

	return false
}

// SetOsReplicationPathNum gets a reference to the given int64 and assigns it to the OsReplicationPathNum field.
func (o *ObjectStorageBucket) SetOsReplicationPathNum(v int64) {
	o.OsReplicationPathNum = &v
}

// GetOsReplicationZoneNum returns the OsReplicationZoneNum field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetOsReplicationZoneNum() int64 {
	if o == nil || IsNil(o.OsReplicationZoneNum) {
		var ret int64
		return ret
	}
	return *o.OsReplicationZoneNum
}

// GetOsReplicationZoneNumOk returns a tuple with the OsReplicationZoneNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetOsReplicationZoneNumOk() (*int64, bool) {
	if o == nil || IsNil(o.OsReplicationZoneNum) {
		return nil, false
	}
	return o.OsReplicationZoneNum, true
}

// HasOsReplicationZoneNum returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasOsReplicationZoneNum() bool {
	if o != nil && !IsNil(o.OsReplicationZoneNum) {
		return true
	}

	return false
}

// SetOsReplicationZoneNum gets a reference to the given int64 and assigns it to the OsReplicationZoneNum field.
func (o *ObjectStorageBucket) SetOsReplicationZoneNum(v int64) {
	o.OsReplicationZoneNum = &v
}

// GetOsZone returns the OsZone field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetOsZone() ObjectStorageZoneNestview {
	if o == nil || IsNil(o.OsZone) {
		var ret ObjectStorageZoneNestview
		return ret
	}
	return *o.OsZone
}

// GetOsZoneOk returns a tuple with the OsZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetOsZoneOk() (*ObjectStorageZoneNestview, bool) {
	if o == nil || IsNil(o.OsZone) {
		return nil, false
	}
	return o.OsZone, true
}

// HasOsZone returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasOsZone() bool {
	if o != nil && !IsNil(o.OsZone) {
		return true
	}

	return false
}

// SetOsZone gets a reference to the given ObjectStorageZoneNestview and assigns it to the OsZone field.
func (o *ObjectStorageBucket) SetOsZone(v ObjectStorageZoneNestview) {
	o.OsZone = &v
}

// GetOsZoneUuid returns the OsZoneUuid field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetOsZoneUuid() string {
	if o == nil || IsNil(o.OsZoneUuid) {
		var ret string
		return ret
	}
	return *o.OsZoneUuid
}

// GetOsZoneUuidOk returns a tuple with the OsZoneUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetOsZoneUuidOk() (*string, bool) {
	if o == nil || IsNil(o.OsZoneUuid) {
		return nil, false
	}
	return o.OsZoneUuid, true
}

// HasOsZoneUuid returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasOsZoneUuid() bool {
	if o != nil && !IsNil(o.OsZoneUuid) {
		return true
	}

	return false
}

// SetOsZoneUuid gets a reference to the given string and assigns it to the OsZoneUuid field.
func (o *ObjectStorageBucket) SetOsZoneUuid(v string) {
	o.OsZoneUuid = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetOwner() ObjectStorageUserNestview {
	if o == nil || IsNil(o.Owner) {
		var ret ObjectStorageUserNestview
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetOwnerOk() (*ObjectStorageUserNestview, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given ObjectStorageUserNestview and assigns it to the Owner field.
func (o *ObjectStorageBucket) SetOwner(v ObjectStorageUserNestview) {
	o.Owner = &v
}

// GetOwnerPermission returns the OwnerPermission field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetOwnerPermission() string {
	if o == nil || IsNil(o.OwnerPermission) {
		var ret string
		return ret
	}
	return *o.OwnerPermission
}

// GetOwnerPermissionOk returns a tuple with the OwnerPermission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetOwnerPermissionOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerPermission) {
		return nil, false
	}
	return o.OwnerPermission, true
}

// HasOwnerPermission returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasOwnerPermission() bool {
	if o != nil && !IsNil(o.OwnerPermission) {
		return true
	}

	return false
}

// SetOwnerPermission gets a reference to the given string and assigns it to the OwnerPermission field.
func (o *ObjectStorageBucket) SetOwnerPermission(v string) {
	o.OwnerPermission = &v
}

// GetPolicy returns the Policy field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetPolicy() ObjectStoragePolicyNestview {
	if o == nil || IsNil(o.Policy) {
		var ret ObjectStoragePolicyNestview
		return ret
	}
	return *o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetPolicyOk() (*ObjectStoragePolicyNestview, bool) {
	if o == nil || IsNil(o.Policy) {
		return nil, false
	}
	return o.Policy, true
}

// HasPolicy returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasPolicy() bool {
	if o != nil && !IsNil(o.Policy) {
		return true
	}

	return false
}

// SetPolicy gets a reference to the given ObjectStoragePolicyNestview and assigns it to the Policy field.
func (o *ObjectStorageBucket) SetPolicy(v ObjectStoragePolicyNestview) {
	o.Policy = &v
}

// GetPolicyEnabled returns the PolicyEnabled field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetPolicyEnabled() bool {
	if o == nil || IsNil(o.PolicyEnabled) {
		var ret bool
		return ret
	}
	return *o.PolicyEnabled
}

// GetPolicyEnabledOk returns a tuple with the PolicyEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetPolicyEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.PolicyEnabled) {
		return nil, false
	}
	return o.PolicyEnabled, true
}

// HasPolicyEnabled returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasPolicyEnabled() bool {
	if o != nil && !IsNil(o.PolicyEnabled) {
		return true
	}

	return false
}

// SetPolicyEnabled gets a reference to the given bool and assigns it to the PolicyEnabled field.
func (o *ObjectStorageBucket) SetPolicyEnabled(v bool) {
	o.PolicyEnabled = &v
}

// GetQos returns the Qos field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetQos() OSBucketQos {
	if o == nil || IsNil(o.Qos) {
		var ret OSBucketQos
		return ret
	}
	return *o.Qos
}

// GetQosOk returns a tuple with the Qos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetQosOk() (*OSBucketQos, bool) {
	if o == nil || IsNil(o.Qos) {
		return nil, false
	}
	return o.Qos, true
}

// HasQos returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasQos() bool {
	if o != nil && !IsNil(o.Qos) {
		return true
	}

	return false
}

// SetQos gets a reference to the given OSBucketQos and assigns it to the Qos field.
func (o *ObjectStorageBucket) SetQos(v OSBucketQos) {
	o.Qos = &v
}

// GetQuotaMaxObjects returns the QuotaMaxObjects field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetQuotaMaxObjects() int64 {
	if o == nil || IsNil(o.QuotaMaxObjects) {
		var ret int64
		return ret
	}
	return *o.QuotaMaxObjects
}

// GetQuotaMaxObjectsOk returns a tuple with the QuotaMaxObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetQuotaMaxObjectsOk() (*int64, bool) {
	if o == nil || IsNil(o.QuotaMaxObjects) {
		return nil, false
	}
	return o.QuotaMaxObjects, true
}

// HasQuotaMaxObjects returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasQuotaMaxObjects() bool {
	if o != nil && !IsNil(o.QuotaMaxObjects) {
		return true
	}

	return false
}

// SetQuotaMaxObjects gets a reference to the given int64 and assigns it to the QuotaMaxObjects field.
func (o *ObjectStorageBucket) SetQuotaMaxObjects(v int64) {
	o.QuotaMaxObjects = &v
}

// GetQuotaMaxSize returns the QuotaMaxSize field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetQuotaMaxSize() int64 {
	if o == nil || IsNil(o.QuotaMaxSize) {
		var ret int64
		return ret
	}
	return *o.QuotaMaxSize
}

// GetQuotaMaxSizeOk returns a tuple with the QuotaMaxSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetQuotaMaxSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.QuotaMaxSize) {
		return nil, false
	}
	return o.QuotaMaxSize, true
}

// HasQuotaMaxSize returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasQuotaMaxSize() bool {
	if o != nil && !IsNil(o.QuotaMaxSize) {
		return true
	}

	return false
}

// SetQuotaMaxSize gets a reference to the given int64 and assigns it to the QuotaMaxSize field.
func (o *ObjectStorageBucket) SetQuotaMaxSize(v int64) {
	o.QuotaMaxSize = &v
}

// GetRemoteCluster returns the RemoteCluster field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetRemoteCluster() RemoteClusterNestview {
	if o == nil || IsNil(o.RemoteCluster) {
		var ret RemoteClusterNestview
		return ret
	}
	return *o.RemoteCluster
}

// GetRemoteClusterOk returns a tuple with the RemoteCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetRemoteClusterOk() (*RemoteClusterNestview, bool) {
	if o == nil || IsNil(o.RemoteCluster) {
		return nil, false
	}
	return o.RemoteCluster, true
}

// HasRemoteCluster returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasRemoteCluster() bool {
	if o != nil && !IsNil(o.RemoteCluster) {
		return true
	}

	return false
}

// SetRemoteCluster gets a reference to the given RemoteClusterNestview and assigns it to the RemoteCluster field.
func (o *ObjectStorageBucket) SetRemoteCluster(v RemoteClusterNestview) {
	o.RemoteCluster = &v
}

// GetReplicationUuid returns the ReplicationUuid field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetReplicationUuid() string {
	if o == nil || IsNil(o.ReplicationUuid) {
		var ret string
		return ret
	}
	return *o.ReplicationUuid
}

// GetReplicationUuidOk returns a tuple with the ReplicationUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetReplicationUuidOk() (*string, bool) {
	if o == nil || IsNil(o.ReplicationUuid) {
		return nil, false
	}
	return o.ReplicationUuid, true
}

// HasReplicationUuid returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasReplicationUuid() bool {
	if o != nil && !IsNil(o.ReplicationUuid) {
		return true
	}

	return false
}

// SetReplicationUuid gets a reference to the given string and assigns it to the ReplicationUuid field.
func (o *ObjectStorageBucket) SetReplicationUuid(v string) {
	o.ReplicationUuid = &v
}

// GetRestoreDays returns the RestoreDays field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetRestoreDays() int64 {
	if o == nil || IsNil(o.RestoreDays) {
		var ret int64
		return ret
	}
	return *o.RestoreDays
}

// GetRestoreDaysOk returns a tuple with the RestoreDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetRestoreDaysOk() (*int64, bool) {
	if o == nil || IsNil(o.RestoreDays) {
		return nil, false
	}
	return o.RestoreDays, true
}

// HasRestoreDays returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasRestoreDays() bool {
	if o != nil && !IsNil(o.RestoreDays) {
		return true
	}

	return false
}

// SetRestoreDays gets a reference to the given int64 and assigns it to the RestoreDays field.
func (o *ObjectStorageBucket) SetRestoreDays(v int64) {
	o.RestoreDays = &v
}

// GetShards returns the Shards field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetShards() int64 {
	if o == nil || IsNil(o.Shards) {
		var ret int64
		return ret
	}
	return *o.Shards
}

// GetShardsOk returns a tuple with the Shards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetShardsOk() (*int64, bool) {
	if o == nil || IsNil(o.Shards) {
		return nil, false
	}
	return o.Shards, true
}

// HasShards returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasShards() bool {
	if o != nil && !IsNil(o.Shards) {
		return true
	}

	return false
}

// SetShards gets a reference to the given int64 and assigns it to the Shards field.
func (o *ObjectStorageBucket) SetShards(v int64) {
	o.Shards = &v
}

// GetSpecificationObjects returns the SpecificationObjects field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetSpecificationObjects() int64 {
	if o == nil || IsNil(o.SpecificationObjects) {
		var ret int64
		return ret
	}
	return *o.SpecificationObjects
}

// GetSpecificationObjectsOk returns a tuple with the SpecificationObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetSpecificationObjectsOk() (*int64, bool) {
	if o == nil || IsNil(o.SpecificationObjects) {
		return nil, false
	}
	return o.SpecificationObjects, true
}

// HasSpecificationObjects returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasSpecificationObjects() bool {
	if o != nil && !IsNil(o.SpecificationObjects) {
		return true
	}

	return false
}

// SetSpecificationObjects gets a reference to the given int64 and assigns it to the SpecificationObjects field.
func (o *ObjectStorageBucket) SetSpecificationObjects(v int64) {
	o.SpecificationObjects = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ObjectStorageBucket) SetStatus(v string) {
	o.Status = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *ObjectStorageBucket) SetUpdate(v time.Time) {
	o.Update = &v
}

// GetVirtual returns the Virtual field value if set, zero value otherwise.
func (o *ObjectStorageBucket) GetVirtual() bool {
	if o == nil || IsNil(o.Virtual) {
		var ret bool
		return ret
	}
	return *o.Virtual
}

// GetVirtualOk returns a tuple with the Virtual field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucket) GetVirtualOk() (*bool, bool) {
	if o == nil || IsNil(o.Virtual) {
		return nil, false
	}
	return o.Virtual, true
}

// HasVirtual returns a boolean if a field has been set.
func (o *ObjectStorageBucket) HasVirtual() bool {
	if o != nil && !IsNil(o.Virtual) {
		return true
	}

	return false
}

// SetVirtual gets a reference to the given bool and assigns it to the Virtual field.
func (o *ObjectStorageBucket) SetVirtual(v bool) {
	o.Virtual = &v
}

func (o ObjectStorageBucket) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ObjectStorageBucket) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActionStatus) {
		toSerialize["action_status"] = o.ActionStatus
	}
	if !IsNil(o.AllUserPermission) {
		toSerialize["all_user_permission"] = o.AllUserPermission
	}
	if !IsNil(o.AuthUserPermission) {
		toSerialize["auth_user_permission"] = o.AuthUserPermission
	}
	if !IsNil(o.BucketPolicy) {
		toSerialize["bucket_policy"] = o.BucketPolicy
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.DeleteArchiveStorageClass) {
		toSerialize["delete_archive_storage_class"] = o.DeleteArchiveStorageClass
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.ExternalQuotaMaxObjects) {
		toSerialize["external_quota_max_objects"] = o.ExternalQuotaMaxObjects
	}
	if !IsNil(o.ExternalQuotaMaxSize) {
		toSerialize["external_quota_max_size"] = o.ExternalQuotaMaxSize
	}
	if !IsNil(o.Flag) {
		toSerialize["flag"] = o.Flag
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Lifecycle) {
		toSerialize["lifecycle"] = o.Lifecycle
	}
	if !IsNil(o.LocalQuotaMaxObjects) {
		toSerialize["local_quota_max_objects"] = o.LocalQuotaMaxObjects
	}
	if !IsNil(o.LocalQuotaMaxSize) {
		toSerialize["local_quota_max_size"] = o.LocalQuotaMaxSize
	}
	if !IsNil(o.LogDeliveryPermission) {
		toSerialize["log_delivery_permission"] = o.LogDeliveryPermission
	}
	if !IsNil(o.LoggingEnabled) {
		toSerialize["logging_enabled"] = o.LoggingEnabled
	}
	if !IsNil(o.LoggingGrants) {
		toSerialize["logging_grants"] = o.LoggingGrants
	}
	if !IsNil(o.LoggingOwner) {
		toSerialize["logging_owner"] = o.LoggingOwner
	}
	if !IsNil(o.LoggingPrefix) {
		toSerialize["logging_prefix"] = o.LoggingPrefix
	}
	if !IsNil(o.LoggingSuspended) {
		toSerialize["logging_suspended"] = o.LoggingSuspended
	}
	if !IsNil(o.LoggingTargetBucket) {
		toSerialize["logging_target_bucket"] = o.LoggingTargetBucket
	}
	if !IsNil(o.MetadataSearchEnabled) {
		toSerialize["metadata_search_enabled"] = o.MetadataSearchEnabled
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NfsClientNum) {
		toSerialize["nfs_client_num"] = o.NfsClientNum
	}
	if !IsNil(o.ObjectCover) {
		toSerialize["object_cover"] = o.ObjectCover
	}
	if !IsNil(o.ObjectStorageClass) {
		toSerialize["object_storage_class"] = o.ObjectStorageClass
	}
	if !IsNil(o.OsReplicationPathNum) {
		toSerialize["os_replication_path_num"] = o.OsReplicationPathNum
	}
	if !IsNil(o.OsReplicationZoneNum) {
		toSerialize["os_replication_zone_num"] = o.OsReplicationZoneNum
	}
	if !IsNil(o.OsZone) {
		toSerialize["os_zone"] = o.OsZone
	}
	if !IsNil(o.OsZoneUuid) {
		toSerialize["os_zone_uuid"] = o.OsZoneUuid
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	if !IsNil(o.OwnerPermission) {
		toSerialize["owner_permission"] = o.OwnerPermission
	}
	if !IsNil(o.Policy) {
		toSerialize["policy"] = o.Policy
	}
	if !IsNil(o.PolicyEnabled) {
		toSerialize["policy_enabled"] = o.PolicyEnabled
	}
	if !IsNil(o.Qos) {
		toSerialize["qos"] = o.Qos
	}
	if !IsNil(o.QuotaMaxObjects) {
		toSerialize["quota_max_objects"] = o.QuotaMaxObjects
	}
	if !IsNil(o.QuotaMaxSize) {
		toSerialize["quota_max_size"] = o.QuotaMaxSize
	}
	if !IsNil(o.RemoteCluster) {
		toSerialize["remote_cluster"] = o.RemoteCluster
	}
	if !IsNil(o.ReplicationUuid) {
		toSerialize["replication_uuid"] = o.ReplicationUuid
	}
	if !IsNil(o.RestoreDays) {
		toSerialize["restore_days"] = o.RestoreDays
	}
	if !IsNil(o.Shards) {
		toSerialize["shards"] = o.Shards
	}
	if !IsNil(o.SpecificationObjects) {
		toSerialize["specification_objects"] = o.SpecificationObjects
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	if !IsNil(o.Virtual) {
		toSerialize["virtual"] = o.Virtual
	}
	return toSerialize, nil
}

type NullableObjectStorageBucket struct {
	value *ObjectStorageBucket
	isSet bool
}

func (v NullableObjectStorageBucket) Get() *ObjectStorageBucket {
	return v.value
}

func (v *NullableObjectStorageBucket) Set(val *ObjectStorageBucket) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectStorageBucket) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectStorageBucket) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectStorageBucket(val *ObjectStorageBucket) *NullableObjectStorageBucket {
	return &NullableObjectStorageBucket{value: val, isSet: true}
}

func (v NullableObjectStorageBucket) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectStorageBucket) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


