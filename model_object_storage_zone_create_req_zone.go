/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ObjectStorageZoneCreateReqZone type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ObjectStorageZoneCreateReqZone{}

// ObjectStorageZoneCreateReqZone struct for ObjectStorageZoneCreateReqZone
type ObjectStorageZoneCreateReqZone struct {
	// os zone alias
	Alias *string `json:"alias,omitempty"`
	// is a master zone
	Master bool `json:"master"`
	// remote cluster id
	RemoteClusterId int64 `json:"remote_cluster_id"`
}

type _ObjectStorageZoneCreateReqZone ObjectStorageZoneCreateReqZone

// NewObjectStorageZoneCreateReqZone instantiates a new ObjectStorageZoneCreateReqZone object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectStorageZoneCreateReqZone(master bool, remoteClusterId int64) *ObjectStorageZoneCreateReqZone {
	this := ObjectStorageZoneCreateReqZone{}
	this.Master = master
	this.RemoteClusterId = remoteClusterId
	return &this
}

// NewObjectStorageZoneCreateReqZoneWithDefaults instantiates a new ObjectStorageZoneCreateReqZone object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectStorageZoneCreateReqZoneWithDefaults() *ObjectStorageZoneCreateReqZone {
	this := ObjectStorageZoneCreateReqZone{}
	return &this
}

// GetAlias returns the Alias field value if set, zero value otherwise.
func (o *ObjectStorageZoneCreateReqZone) GetAlias() string {
	if o == nil || IsNil(o.Alias) {
		var ret string
		return ret
	}
	return *o.Alias
}

// GetAliasOk returns a tuple with the Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageZoneCreateReqZone) GetAliasOk() (*string, bool) {
	if o == nil || IsNil(o.Alias) {
		return nil, false
	}
	return o.Alias, true
}

// HasAlias returns a boolean if a field has been set.
func (o *ObjectStorageZoneCreateReqZone) HasAlias() bool {
	if o != nil && !IsNil(o.Alias) {
		return true
	}

	return false
}

// SetAlias gets a reference to the given string and assigns it to the Alias field.
func (o *ObjectStorageZoneCreateReqZone) SetAlias(v string) {
	o.Alias = &v
}

// GetMaster returns the Master field value
func (o *ObjectStorageZoneCreateReqZone) GetMaster() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Master
}

// GetMasterOk returns a tuple with the Master field value
// and a boolean to check if the value has been set.
func (o *ObjectStorageZoneCreateReqZone) GetMasterOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Master, true
}

// SetMaster sets field value
func (o *ObjectStorageZoneCreateReqZone) SetMaster(v bool) {
	o.Master = v
}

// GetRemoteClusterId returns the RemoteClusterId field value
func (o *ObjectStorageZoneCreateReqZone) GetRemoteClusterId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.RemoteClusterId
}

// GetRemoteClusterIdOk returns a tuple with the RemoteClusterId field value
// and a boolean to check if the value has been set.
func (o *ObjectStorageZoneCreateReqZone) GetRemoteClusterIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RemoteClusterId, true
}

// SetRemoteClusterId sets field value
func (o *ObjectStorageZoneCreateReqZone) SetRemoteClusterId(v int64) {
	o.RemoteClusterId = v
}

func (o ObjectStorageZoneCreateReqZone) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ObjectStorageZoneCreateReqZone) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Alias) {
		toSerialize["alias"] = o.Alias
	}
	toSerialize["master"] = o.Master
	toSerialize["remote_cluster_id"] = o.RemoteClusterId
	return toSerialize, nil
}

func (o *ObjectStorageZoneCreateReqZone) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"master",
		"remote_cluster_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varObjectStorageZoneCreateReqZone := _ObjectStorageZoneCreateReqZone{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varObjectStorageZoneCreateReqZone)

	if err != nil {
		return err
	}

	*o = ObjectStorageZoneCreateReqZone(varObjectStorageZoneCreateReqZone)

	return err
}

type NullableObjectStorageZoneCreateReqZone struct {
	value *ObjectStorageZoneCreateReqZone
	isSet bool
}

func (v NullableObjectStorageZoneCreateReqZone) Get() *ObjectStorageZoneCreateReqZone {
	return v.value
}

func (v *NullableObjectStorageZoneCreateReqZone) Set(val *ObjectStorageZoneCreateReqZone) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectStorageZoneCreateReqZone) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectStorageZoneCreateReqZone) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectStorageZoneCreateReqZone(val *ObjectStorageZoneCreateReqZone) *NullableObjectStorageZoneCreateReqZone {
	return &NullableObjectStorageZoneCreateReqZone{value: val, isSet: true}
}

func (v NullableObjectStorageZoneCreateReqZone) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectStorageZoneCreateReqZone) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


