/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the CloudInstanceStat type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloudInstanceStat{}

// CloudInstanceStat CloudInstanceStat represents the monitoring metrics of a cloud instance
type CloudInstanceStat struct {
	Create *time.Time `json:"create,omitempty"`
	ReadBandwidthKbyte *float64 `json:"read_bandwidth_kbyte,omitempty"`
	ReadIops *float64 `json:"read_iops,omitempty"`
	ReadLatencyUs *float64 `json:"read_latency_us,omitempty"`
	TotalBandwidthKbyte *float64 `json:"total_bandwidth_kbyte,omitempty"`
	TotalIops *float64 `json:"total_iops,omitempty"`
	WriteBandwidthKbyte *float64 `json:"write_bandwidth_kbyte,omitempty"`
	WriteIops *float64 `json:"write_iops,omitempty"`
	WriteLatencyUs *float64 `json:"write_latency_us,omitempty"`
}

// NewCloudInstanceStat instantiates a new CloudInstanceStat object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudInstanceStat() *CloudInstanceStat {
	this := CloudInstanceStat{}
	return &this
}

// NewCloudInstanceStatWithDefaults instantiates a new CloudInstanceStat object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudInstanceStatWithDefaults() *CloudInstanceStat {
	this := CloudInstanceStat{}
	return &this
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *CloudInstanceStat) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudInstanceStat) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *CloudInstanceStat) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *CloudInstanceStat) SetCreate(v time.Time) {
	o.Create = &v
}

// GetReadBandwidthKbyte returns the ReadBandwidthKbyte field value if set, zero value otherwise.
func (o *CloudInstanceStat) GetReadBandwidthKbyte() float64 {
	if o == nil || IsNil(o.ReadBandwidthKbyte) {
		var ret float64
		return ret
	}
	return *o.ReadBandwidthKbyte
}

// GetReadBandwidthKbyteOk returns a tuple with the ReadBandwidthKbyte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudInstanceStat) GetReadBandwidthKbyteOk() (*float64, bool) {
	if o == nil || IsNil(o.ReadBandwidthKbyte) {
		return nil, false
	}
	return o.ReadBandwidthKbyte, true
}

// HasReadBandwidthKbyte returns a boolean if a field has been set.
func (o *CloudInstanceStat) HasReadBandwidthKbyte() bool {
	if o != nil && !IsNil(o.ReadBandwidthKbyte) {
		return true
	}

	return false
}

// SetReadBandwidthKbyte gets a reference to the given float64 and assigns it to the ReadBandwidthKbyte field.
func (o *CloudInstanceStat) SetReadBandwidthKbyte(v float64) {
	o.ReadBandwidthKbyte = &v
}

// GetReadIops returns the ReadIops field value if set, zero value otherwise.
func (o *CloudInstanceStat) GetReadIops() float64 {
	if o == nil || IsNil(o.ReadIops) {
		var ret float64
		return ret
	}
	return *o.ReadIops
}

// GetReadIopsOk returns a tuple with the ReadIops field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudInstanceStat) GetReadIopsOk() (*float64, bool) {
	if o == nil || IsNil(o.ReadIops) {
		return nil, false
	}
	return o.ReadIops, true
}

// HasReadIops returns a boolean if a field has been set.
func (o *CloudInstanceStat) HasReadIops() bool {
	if o != nil && !IsNil(o.ReadIops) {
		return true
	}

	return false
}

// SetReadIops gets a reference to the given float64 and assigns it to the ReadIops field.
func (o *CloudInstanceStat) SetReadIops(v float64) {
	o.ReadIops = &v
}

// GetReadLatencyUs returns the ReadLatencyUs field value if set, zero value otherwise.
func (o *CloudInstanceStat) GetReadLatencyUs() float64 {
	if o == nil || IsNil(o.ReadLatencyUs) {
		var ret float64
		return ret
	}
	return *o.ReadLatencyUs
}

// GetReadLatencyUsOk returns a tuple with the ReadLatencyUs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudInstanceStat) GetReadLatencyUsOk() (*float64, bool) {
	if o == nil || IsNil(o.ReadLatencyUs) {
		return nil, false
	}
	return o.ReadLatencyUs, true
}

// HasReadLatencyUs returns a boolean if a field has been set.
func (o *CloudInstanceStat) HasReadLatencyUs() bool {
	if o != nil && !IsNil(o.ReadLatencyUs) {
		return true
	}

	return false
}

// SetReadLatencyUs gets a reference to the given float64 and assigns it to the ReadLatencyUs field.
func (o *CloudInstanceStat) SetReadLatencyUs(v float64) {
	o.ReadLatencyUs = &v
}

// GetTotalBandwidthKbyte returns the TotalBandwidthKbyte field value if set, zero value otherwise.
func (o *CloudInstanceStat) GetTotalBandwidthKbyte() float64 {
	if o == nil || IsNil(o.TotalBandwidthKbyte) {
		var ret float64
		return ret
	}
	return *o.TotalBandwidthKbyte
}

// GetTotalBandwidthKbyteOk returns a tuple with the TotalBandwidthKbyte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudInstanceStat) GetTotalBandwidthKbyteOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalBandwidthKbyte) {
		return nil, false
	}
	return o.TotalBandwidthKbyte, true
}

// HasTotalBandwidthKbyte returns a boolean if a field has been set.
func (o *CloudInstanceStat) HasTotalBandwidthKbyte() bool {
	if o != nil && !IsNil(o.TotalBandwidthKbyte) {
		return true
	}

	return false
}

// SetTotalBandwidthKbyte gets a reference to the given float64 and assigns it to the TotalBandwidthKbyte field.
func (o *CloudInstanceStat) SetTotalBandwidthKbyte(v float64) {
	o.TotalBandwidthKbyte = &v
}

// GetTotalIops returns the TotalIops field value if set, zero value otherwise.
func (o *CloudInstanceStat) GetTotalIops() float64 {
	if o == nil || IsNil(o.TotalIops) {
		var ret float64
		return ret
	}
	return *o.TotalIops
}

// GetTotalIopsOk returns a tuple with the TotalIops field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudInstanceStat) GetTotalIopsOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalIops) {
		return nil, false
	}
	return o.TotalIops, true
}

// HasTotalIops returns a boolean if a field has been set.
func (o *CloudInstanceStat) HasTotalIops() bool {
	if o != nil && !IsNil(o.TotalIops) {
		return true
	}

	return false
}

// SetTotalIops gets a reference to the given float64 and assigns it to the TotalIops field.
func (o *CloudInstanceStat) SetTotalIops(v float64) {
	o.TotalIops = &v
}

// GetWriteBandwidthKbyte returns the WriteBandwidthKbyte field value if set, zero value otherwise.
func (o *CloudInstanceStat) GetWriteBandwidthKbyte() float64 {
	if o == nil || IsNil(o.WriteBandwidthKbyte) {
		var ret float64
		return ret
	}
	return *o.WriteBandwidthKbyte
}

// GetWriteBandwidthKbyteOk returns a tuple with the WriteBandwidthKbyte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudInstanceStat) GetWriteBandwidthKbyteOk() (*float64, bool) {
	if o == nil || IsNil(o.WriteBandwidthKbyte) {
		return nil, false
	}
	return o.WriteBandwidthKbyte, true
}

// HasWriteBandwidthKbyte returns a boolean if a field has been set.
func (o *CloudInstanceStat) HasWriteBandwidthKbyte() bool {
	if o != nil && !IsNil(o.WriteBandwidthKbyte) {
		return true
	}

	return false
}

// SetWriteBandwidthKbyte gets a reference to the given float64 and assigns it to the WriteBandwidthKbyte field.
func (o *CloudInstanceStat) SetWriteBandwidthKbyte(v float64) {
	o.WriteBandwidthKbyte = &v
}

// GetWriteIops returns the WriteIops field value if set, zero value otherwise.
func (o *CloudInstanceStat) GetWriteIops() float64 {
	if o == nil || IsNil(o.WriteIops) {
		var ret float64
		return ret
	}
	return *o.WriteIops
}

// GetWriteIopsOk returns a tuple with the WriteIops field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudInstanceStat) GetWriteIopsOk() (*float64, bool) {
	if o == nil || IsNil(o.WriteIops) {
		return nil, false
	}
	return o.WriteIops, true
}

// HasWriteIops returns a boolean if a field has been set.
func (o *CloudInstanceStat) HasWriteIops() bool {
	if o != nil && !IsNil(o.WriteIops) {
		return true
	}

	return false
}

// SetWriteIops gets a reference to the given float64 and assigns it to the WriteIops field.
func (o *CloudInstanceStat) SetWriteIops(v float64) {
	o.WriteIops = &v
}

// GetWriteLatencyUs returns the WriteLatencyUs field value if set, zero value otherwise.
func (o *CloudInstanceStat) GetWriteLatencyUs() float64 {
	if o == nil || IsNil(o.WriteLatencyUs) {
		var ret float64
		return ret
	}
	return *o.WriteLatencyUs
}

// GetWriteLatencyUsOk returns a tuple with the WriteLatencyUs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudInstanceStat) GetWriteLatencyUsOk() (*float64, bool) {
	if o == nil || IsNil(o.WriteLatencyUs) {
		return nil, false
	}
	return o.WriteLatencyUs, true
}

// HasWriteLatencyUs returns a boolean if a field has been set.
func (o *CloudInstanceStat) HasWriteLatencyUs() bool {
	if o != nil && !IsNil(o.WriteLatencyUs) {
		return true
	}

	return false
}

// SetWriteLatencyUs gets a reference to the given float64 and assigns it to the WriteLatencyUs field.
func (o *CloudInstanceStat) SetWriteLatencyUs(v float64) {
	o.WriteLatencyUs = &v
}

func (o CloudInstanceStat) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudInstanceStat) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.ReadBandwidthKbyte) {
		toSerialize["read_bandwidth_kbyte"] = o.ReadBandwidthKbyte
	}
	if !IsNil(o.ReadIops) {
		toSerialize["read_iops"] = o.ReadIops
	}
	if !IsNil(o.ReadLatencyUs) {
		toSerialize["read_latency_us"] = o.ReadLatencyUs
	}
	if !IsNil(o.TotalBandwidthKbyte) {
		toSerialize["total_bandwidth_kbyte"] = o.TotalBandwidthKbyte
	}
	if !IsNil(o.TotalIops) {
		toSerialize["total_iops"] = o.TotalIops
	}
	if !IsNil(o.WriteBandwidthKbyte) {
		toSerialize["write_bandwidth_kbyte"] = o.WriteBandwidthKbyte
	}
	if !IsNil(o.WriteIops) {
		toSerialize["write_iops"] = o.WriteIops
	}
	if !IsNil(o.WriteLatencyUs) {
		toSerialize["write_latency_us"] = o.WriteLatencyUs
	}
	return toSerialize, nil
}

type NullableCloudInstanceStat struct {
	value *CloudInstanceStat
	isSet bool
}

func (v NullableCloudInstanceStat) Get() *CloudInstanceStat {
	return v.value
}

func (v *NullableCloudInstanceStat) Set(val *CloudInstanceStat) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudInstanceStat) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudInstanceStat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudInstanceStat(val *CloudInstanceStat) *NullableCloudInstanceStat {
	return &NullableCloudInstanceStat{value: val, isSet: true}
}

func (v NullableCloudInstanceStat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudInstanceStat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


