/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OspHostReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OspHostReq{}

// OspHostReq struct for OspHostReq
type OspHostReq struct {
	// host id
	HostId int64 `json:"host_id"`
	// osp cluster ip
	OspClusterIp string `json:"osp_cluster_ip"`
	// osp gateway ip
	OspGatewayIps []string `json:"osp_gateway_ips"`
	// host roles
	Roles []string `json:"roles,omitempty"`
}

type _OspHostReq OspHostReq

// NewOspHostReq instantiates a new OspHostReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOspHostReq(hostId int64, ospClusterIp string, ospGatewayIps []string) *OspHostReq {
	this := OspHostReq{}
	this.HostId = hostId
	this.OspClusterIp = ospClusterIp
	this.OspGatewayIps = ospGatewayIps
	return &this
}

// NewOspHostReqWithDefaults instantiates a new OspHostReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOspHostReqWithDefaults() *OspHostReq {
	this := OspHostReq{}
	return &this
}

// GetHostId returns the HostId field value
func (o *OspHostReq) GetHostId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.HostId
}

// GetHostIdOk returns a tuple with the HostId field value
// and a boolean to check if the value has been set.
func (o *OspHostReq) GetHostIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HostId, true
}

// SetHostId sets field value
func (o *OspHostReq) SetHostId(v int64) {
	o.HostId = v
}

// GetOspClusterIp returns the OspClusterIp field value
func (o *OspHostReq) GetOspClusterIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OspClusterIp
}

// GetOspClusterIpOk returns a tuple with the OspClusterIp field value
// and a boolean to check if the value has been set.
func (o *OspHostReq) GetOspClusterIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OspClusterIp, true
}

// SetOspClusterIp sets field value
func (o *OspHostReq) SetOspClusterIp(v string) {
	o.OspClusterIp = v
}

// GetOspGatewayIps returns the OspGatewayIps field value
func (o *OspHostReq) GetOspGatewayIps() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.OspGatewayIps
}

// GetOspGatewayIpsOk returns a tuple with the OspGatewayIps field value
// and a boolean to check if the value has been set.
func (o *OspHostReq) GetOspGatewayIpsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OspGatewayIps, true
}

// SetOspGatewayIps sets field value
func (o *OspHostReq) SetOspGatewayIps(v []string) {
	o.OspGatewayIps = v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *OspHostReq) GetRoles() []string {
	if o == nil || IsNil(o.Roles) {
		var ret []string
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspHostReq) GetRolesOk() ([]string, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *OspHostReq) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []string and assigns it to the Roles field.
func (o *OspHostReq) SetRoles(v []string) {
	o.Roles = v
}

func (o OspHostReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OspHostReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["host_id"] = o.HostId
	toSerialize["osp_cluster_ip"] = o.OspClusterIp
	toSerialize["osp_gateway_ips"] = o.OspGatewayIps
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	return toSerialize, nil
}

func (o *OspHostReq) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"host_id",
		"osp_cluster_ip",
		"osp_gateway_ips",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOspHostReq := _OspHostReq{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOspHostReq)

	if err != nil {
		return err
	}

	*o = OspHostReq(varOspHostReq)

	return err
}

type NullableOspHostReq struct {
	value *OspHostReq
	isSet bool
}

func (v NullableOspHostReq) Get() *OspHostReq {
	return v.value
}

func (v *NullableOspHostReq) Set(val *OspHostReq) {
	v.value = val
	v.isSet = true
}

func (v NullableOspHostReq) IsSet() bool {
	return v.isSet
}

func (v *NullableOspHostReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOspHostReq(val *OspHostReq) *NullableOspHostReq {
	return &NullableOspHostReq{value: val, isSet: true}
}

func (v NullableOspHostReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOspHostReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


