/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AlertRuleGroupsResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertRuleGroupsResp{}

// AlertRuleGroupsResp struct for AlertRuleGroupsResp
type AlertRuleGroupsResp struct {
	// alert rule groups
	AlertRuleGroups []AlertRuleGroup `json:"alert_rule_groups"`
}

type _AlertRuleGroupsResp AlertRuleGroupsResp

// NewAlertRuleGroupsResp instantiates a new AlertRuleGroupsResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertRuleGroupsResp(alertRuleGroups []AlertRuleGroup) *AlertRuleGroupsResp {
	this := AlertRuleGroupsResp{}
	this.AlertRuleGroups = alertRuleGroups
	return &this
}

// NewAlertRuleGroupsRespWithDefaults instantiates a new AlertRuleGroupsResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertRuleGroupsRespWithDefaults() *AlertRuleGroupsResp {
	this := AlertRuleGroupsResp{}
	return &this
}

// GetAlertRuleGroups returns the AlertRuleGroups field value
func (o *AlertRuleGroupsResp) GetAlertRuleGroups() []AlertRuleGroup {
	if o == nil {
		var ret []AlertRuleGroup
		return ret
	}

	return o.AlertRuleGroups
}

// GetAlertRuleGroupsOk returns a tuple with the AlertRuleGroups field value
// and a boolean to check if the value has been set.
func (o *AlertRuleGroupsResp) GetAlertRuleGroupsOk() ([]AlertRuleGroup, bool) {
	if o == nil {
		return nil, false
	}
	return o.AlertRuleGroups, true
}

// SetAlertRuleGroups sets field value
func (o *AlertRuleGroupsResp) SetAlertRuleGroups(v []AlertRuleGroup) {
	o.AlertRuleGroups = v
}

func (o AlertRuleGroupsResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertRuleGroupsResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["alert_rule_groups"] = o.AlertRuleGroups
	return toSerialize, nil
}

func (o *AlertRuleGroupsResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"alert_rule_groups",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAlertRuleGroupsResp := _AlertRuleGroupsResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAlertRuleGroupsResp)

	if err != nil {
		return err
	}

	*o = AlertRuleGroupsResp(varAlertRuleGroupsResp)

	return err
}

type NullableAlertRuleGroupsResp struct {
	value *AlertRuleGroupsResp
	isSet bool
}

func (v NullableAlertRuleGroupsResp) Get() *AlertRuleGroupsResp {
	return v.value
}

func (v *NullableAlertRuleGroupsResp) Set(val *AlertRuleGroupsResp) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertRuleGroupsResp) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertRuleGroupsResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertRuleGroupsResp(val *AlertRuleGroupsResp) *NullableAlertRuleGroupsResp {
	return &NullableAlertRuleGroupsResp{value: val, isSet: true}
}

func (v NullableAlertRuleGroupsResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertRuleGroupsResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


