/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RoleMappingResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoleMappingResp{}

// RoleMappingResp struct for RoleMappingResp
type RoleMappingResp struct {
	RoleMapping *RoleMapping `json:"role_mapping,omitempty"`
}

// NewRoleMappingResp instantiates a new RoleMappingResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleMappingResp() *RoleMappingResp {
	this := RoleMappingResp{}
	return &this
}

// NewRoleMappingRespWithDefaults instantiates a new RoleMappingResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleMappingRespWithDefaults() *RoleMappingResp {
	this := RoleMappingResp{}
	return &this
}

// GetRoleMapping returns the RoleMapping field value if set, zero value otherwise.
func (o *RoleMappingResp) GetRoleMapping() RoleMapping {
	if o == nil || IsNil(o.RoleMapping) {
		var ret RoleMapping
		return ret
	}
	return *o.RoleMapping
}

// GetRoleMappingOk returns a tuple with the RoleMapping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleMappingResp) GetRoleMappingOk() (*RoleMapping, bool) {
	if o == nil || IsNil(o.RoleMapping) {
		return nil, false
	}
	return o.RoleMapping, true
}

// HasRoleMapping returns a boolean if a field has been set.
func (o *RoleMappingResp) HasRoleMapping() bool {
	if o != nil && !IsNil(o.RoleMapping) {
		return true
	}

	return false
}

// SetRoleMapping gets a reference to the given RoleMapping and assigns it to the RoleMapping field.
func (o *RoleMappingResp) SetRoleMapping(v RoleMapping) {
	o.RoleMapping = &v
}

func (o RoleMappingResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoleMappingResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RoleMapping) {
		toSerialize["role_mapping"] = o.RoleMapping
	}
	return toSerialize, nil
}

type NullableRoleMappingResp struct {
	value *RoleMappingResp
	isSet bool
}

func (v NullableRoleMappingResp) Get() *RoleMappingResp {
	return v.value
}

func (v *NullableRoleMappingResp) Set(val *RoleMappingResp) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleMappingResp) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleMappingResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleMappingResp(val *RoleMappingResp) *NullableRoleMappingResp {
	return &NullableRoleMappingResp{value: val, isSet: true}
}

func (v NullableRoleMappingResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleMappingResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


