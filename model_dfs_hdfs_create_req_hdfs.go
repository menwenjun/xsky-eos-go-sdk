/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DfsHdfsCreateReqHdfs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsHdfsCreateReqHdfs{}

// DfsHdfsCreateReqHdfs struct for DfsHdfsCreateReqHdfs
type DfsHdfsCreateReqHdfs struct {
	// auth to local of hdfs
	AuthToLocals []string `json:"auth_to_locals,omitempty"`
	// auth type of hdfs
	AuthType string `json:"auth_type"`
	// block size
	BlockSize int64 `json:"block_size"`
	// checksum type
	ChecksumType string `json:"checksum_type"`
	// description of hdfs
	Description *string `json:"description,omitempty"`
	// id of dfs gateway group
	DfsGatewayGroupId *int64 `json:"dfs_gateway_group_id,omitempty"`
	// id of dfs gateway zone
	DfsGatewayZoneId int64 `json:"dfs_gateway_zone_id"`
	// dfs hdfs acl list
	DfsHdfsAcls []DfsHdfsACLReq `json:"dfs_hdfs_acls,omitempty"`
	// dfs hdfs access ip list
	DfsHdfsIpWhiteLists []DfsHdfsIPWhiteList `json:"dfs_hdfs_ip_white_lists,omitempty"`
	// dfs hdfs proxy user list
	DfsHdfsProxyUsers []DfsHdfsProxyUserReq `json:"dfs_hdfs_proxy_users,omitempty"`
	// fs kerberos id
	KerberosId *int64 `json:"kerberos_id,omitempty"`
	// dfs hdfs name
	Name string `json:"name"`
	// path
	Path string `json:"path"`
	// port of dfs hdfs
	Port *int64 `json:"port,omitempty"`
	// enabled of hdfs ranger
	Ranger *bool `json:"ranger,omitempty"`
	// ranger ip of hdfs
	RangerIp *string `json:"ranger_ip,omitempty"`
	// ranger service name of hdfs
	RangerServiceName *string `json:"ranger_service_name,omitempty"`
	// ranger url of hdfs
	RangerUrl *string `json:"ranger_url,omitempty"`
	// id of dfs rootfs
	RootfsId int64 `json:"rootfs_id"`
}

type _DfsHdfsCreateReqHdfs DfsHdfsCreateReqHdfs

// NewDfsHdfsCreateReqHdfs instantiates a new DfsHdfsCreateReqHdfs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsHdfsCreateReqHdfs(authType string, blockSize int64, checksumType string, dfsGatewayZoneId int64, name string, path string, rootfsId int64) *DfsHdfsCreateReqHdfs {
	this := DfsHdfsCreateReqHdfs{}
	this.AuthType = authType
	this.BlockSize = blockSize
	this.ChecksumType = checksumType
	this.DfsGatewayZoneId = dfsGatewayZoneId
	this.Name = name
	this.Path = path
	this.RootfsId = rootfsId
	return &this
}

// NewDfsHdfsCreateReqHdfsWithDefaults instantiates a new DfsHdfsCreateReqHdfs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsHdfsCreateReqHdfsWithDefaults() *DfsHdfsCreateReqHdfs {
	this := DfsHdfsCreateReqHdfs{}
	return &this
}

// GetAuthToLocals returns the AuthToLocals field value if set, zero value otherwise.
func (o *DfsHdfsCreateReqHdfs) GetAuthToLocals() []string {
	if o == nil || IsNil(o.AuthToLocals) {
		var ret []string
		return ret
	}
	return o.AuthToLocals
}

// GetAuthToLocalsOk returns a tuple with the AuthToLocals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfsCreateReqHdfs) GetAuthToLocalsOk() ([]string, bool) {
	if o == nil || IsNil(o.AuthToLocals) {
		return nil, false
	}
	return o.AuthToLocals, true
}

// HasAuthToLocals returns a boolean if a field has been set.
func (o *DfsHdfsCreateReqHdfs) HasAuthToLocals() bool {
	if o != nil && !IsNil(o.AuthToLocals) {
		return true
	}

	return false
}

// SetAuthToLocals gets a reference to the given []string and assigns it to the AuthToLocals field.
func (o *DfsHdfsCreateReqHdfs) SetAuthToLocals(v []string) {
	o.AuthToLocals = v
}

// GetAuthType returns the AuthType field value
func (o *DfsHdfsCreateReqHdfs) GetAuthType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthType
}

// GetAuthTypeOk returns a tuple with the AuthType field value
// and a boolean to check if the value has been set.
func (o *DfsHdfsCreateReqHdfs) GetAuthTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthType, true
}

// SetAuthType sets field value
func (o *DfsHdfsCreateReqHdfs) SetAuthType(v string) {
	o.AuthType = v
}

// GetBlockSize returns the BlockSize field value
func (o *DfsHdfsCreateReqHdfs) GetBlockSize() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.BlockSize
}

// GetBlockSizeOk returns a tuple with the BlockSize field value
// and a boolean to check if the value has been set.
func (o *DfsHdfsCreateReqHdfs) GetBlockSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BlockSize, true
}

// SetBlockSize sets field value
func (o *DfsHdfsCreateReqHdfs) SetBlockSize(v int64) {
	o.BlockSize = v
}

// GetChecksumType returns the ChecksumType field value
func (o *DfsHdfsCreateReqHdfs) GetChecksumType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChecksumType
}

// GetChecksumTypeOk returns a tuple with the ChecksumType field value
// and a boolean to check if the value has been set.
func (o *DfsHdfsCreateReqHdfs) GetChecksumTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChecksumType, true
}

// SetChecksumType sets field value
func (o *DfsHdfsCreateReqHdfs) SetChecksumType(v string) {
	o.ChecksumType = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *DfsHdfsCreateReqHdfs) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfsCreateReqHdfs) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *DfsHdfsCreateReqHdfs) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DfsHdfsCreateReqHdfs) SetDescription(v string) {
	o.Description = &v
}

// GetDfsGatewayGroupId returns the DfsGatewayGroupId field value if set, zero value otherwise.
func (o *DfsHdfsCreateReqHdfs) GetDfsGatewayGroupId() int64 {
	if o == nil || IsNil(o.DfsGatewayGroupId) {
		var ret int64
		return ret
	}
	return *o.DfsGatewayGroupId
}

// GetDfsGatewayGroupIdOk returns a tuple with the DfsGatewayGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfsCreateReqHdfs) GetDfsGatewayGroupIdOk() (*int64, bool) {
	if o == nil || IsNil(o.DfsGatewayGroupId) {
		return nil, false
	}
	return o.DfsGatewayGroupId, true
}

// HasDfsGatewayGroupId returns a boolean if a field has been set.
func (o *DfsHdfsCreateReqHdfs) HasDfsGatewayGroupId() bool {
	if o != nil && !IsNil(o.DfsGatewayGroupId) {
		return true
	}

	return false
}

// SetDfsGatewayGroupId gets a reference to the given int64 and assigns it to the DfsGatewayGroupId field.
func (o *DfsHdfsCreateReqHdfs) SetDfsGatewayGroupId(v int64) {
	o.DfsGatewayGroupId = &v
}

// GetDfsGatewayZoneId returns the DfsGatewayZoneId field value
func (o *DfsHdfsCreateReqHdfs) GetDfsGatewayZoneId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DfsGatewayZoneId
}

// GetDfsGatewayZoneIdOk returns a tuple with the DfsGatewayZoneId field value
// and a boolean to check if the value has been set.
func (o *DfsHdfsCreateReqHdfs) GetDfsGatewayZoneIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DfsGatewayZoneId, true
}

// SetDfsGatewayZoneId sets field value
func (o *DfsHdfsCreateReqHdfs) SetDfsGatewayZoneId(v int64) {
	o.DfsGatewayZoneId = v
}

// GetDfsHdfsAcls returns the DfsHdfsAcls field value if set, zero value otherwise.
func (o *DfsHdfsCreateReqHdfs) GetDfsHdfsAcls() []DfsHdfsACLReq {
	if o == nil || IsNil(o.DfsHdfsAcls) {
		var ret []DfsHdfsACLReq
		return ret
	}
	return o.DfsHdfsAcls
}

// GetDfsHdfsAclsOk returns a tuple with the DfsHdfsAcls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfsCreateReqHdfs) GetDfsHdfsAclsOk() ([]DfsHdfsACLReq, bool) {
	if o == nil || IsNil(o.DfsHdfsAcls) {
		return nil, false
	}
	return o.DfsHdfsAcls, true
}

// HasDfsHdfsAcls returns a boolean if a field has been set.
func (o *DfsHdfsCreateReqHdfs) HasDfsHdfsAcls() bool {
	if o != nil && !IsNil(o.DfsHdfsAcls) {
		return true
	}

	return false
}

// SetDfsHdfsAcls gets a reference to the given []DfsHdfsACLReq and assigns it to the DfsHdfsAcls field.
func (o *DfsHdfsCreateReqHdfs) SetDfsHdfsAcls(v []DfsHdfsACLReq) {
	o.DfsHdfsAcls = v
}

// GetDfsHdfsIpWhiteLists returns the DfsHdfsIpWhiteLists field value if set, zero value otherwise.
func (o *DfsHdfsCreateReqHdfs) GetDfsHdfsIpWhiteLists() []DfsHdfsIPWhiteList {
	if o == nil || IsNil(o.DfsHdfsIpWhiteLists) {
		var ret []DfsHdfsIPWhiteList
		return ret
	}
	return o.DfsHdfsIpWhiteLists
}

// GetDfsHdfsIpWhiteListsOk returns a tuple with the DfsHdfsIpWhiteLists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfsCreateReqHdfs) GetDfsHdfsIpWhiteListsOk() ([]DfsHdfsIPWhiteList, bool) {
	if o == nil || IsNil(o.DfsHdfsIpWhiteLists) {
		return nil, false
	}
	return o.DfsHdfsIpWhiteLists, true
}

// HasDfsHdfsIpWhiteLists returns a boolean if a field has been set.
func (o *DfsHdfsCreateReqHdfs) HasDfsHdfsIpWhiteLists() bool {
	if o != nil && !IsNil(o.DfsHdfsIpWhiteLists) {
		return true
	}

	return false
}

// SetDfsHdfsIpWhiteLists gets a reference to the given []DfsHdfsIPWhiteList and assigns it to the DfsHdfsIpWhiteLists field.
func (o *DfsHdfsCreateReqHdfs) SetDfsHdfsIpWhiteLists(v []DfsHdfsIPWhiteList) {
	o.DfsHdfsIpWhiteLists = v
}

// GetDfsHdfsProxyUsers returns the DfsHdfsProxyUsers field value if set, zero value otherwise.
func (o *DfsHdfsCreateReqHdfs) GetDfsHdfsProxyUsers() []DfsHdfsProxyUserReq {
	if o == nil || IsNil(o.DfsHdfsProxyUsers) {
		var ret []DfsHdfsProxyUserReq
		return ret
	}
	return o.DfsHdfsProxyUsers
}

// GetDfsHdfsProxyUsersOk returns a tuple with the DfsHdfsProxyUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfsCreateReqHdfs) GetDfsHdfsProxyUsersOk() ([]DfsHdfsProxyUserReq, bool) {
	if o == nil || IsNil(o.DfsHdfsProxyUsers) {
		return nil, false
	}
	return o.DfsHdfsProxyUsers, true
}

// HasDfsHdfsProxyUsers returns a boolean if a field has been set.
func (o *DfsHdfsCreateReqHdfs) HasDfsHdfsProxyUsers() bool {
	if o != nil && !IsNil(o.DfsHdfsProxyUsers) {
		return true
	}

	return false
}

// SetDfsHdfsProxyUsers gets a reference to the given []DfsHdfsProxyUserReq and assigns it to the DfsHdfsProxyUsers field.
func (o *DfsHdfsCreateReqHdfs) SetDfsHdfsProxyUsers(v []DfsHdfsProxyUserReq) {
	o.DfsHdfsProxyUsers = v
}

// GetKerberosId returns the KerberosId field value if set, zero value otherwise.
func (o *DfsHdfsCreateReqHdfs) GetKerberosId() int64 {
	if o == nil || IsNil(o.KerberosId) {
		var ret int64
		return ret
	}
	return *o.KerberosId
}

// GetKerberosIdOk returns a tuple with the KerberosId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfsCreateReqHdfs) GetKerberosIdOk() (*int64, bool) {
	if o == nil || IsNil(o.KerberosId) {
		return nil, false
	}
	return o.KerberosId, true
}

// HasKerberosId returns a boolean if a field has been set.
func (o *DfsHdfsCreateReqHdfs) HasKerberosId() bool {
	if o != nil && !IsNil(o.KerberosId) {
		return true
	}

	return false
}

// SetKerberosId gets a reference to the given int64 and assigns it to the KerberosId field.
func (o *DfsHdfsCreateReqHdfs) SetKerberosId(v int64) {
	o.KerberosId = &v
}

// GetName returns the Name field value
func (o *DfsHdfsCreateReqHdfs) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DfsHdfsCreateReqHdfs) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DfsHdfsCreateReqHdfs) SetName(v string) {
	o.Name = v
}

// GetPath returns the Path field value
func (o *DfsHdfsCreateReqHdfs) GetPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *DfsHdfsCreateReqHdfs) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Path, true
}

// SetPath sets field value
func (o *DfsHdfsCreateReqHdfs) SetPath(v string) {
	o.Path = v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *DfsHdfsCreateReqHdfs) GetPort() int64 {
	if o == nil || IsNil(o.Port) {
		var ret int64
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfsCreateReqHdfs) GetPortOk() (*int64, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *DfsHdfsCreateReqHdfs) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int64 and assigns it to the Port field.
func (o *DfsHdfsCreateReqHdfs) SetPort(v int64) {
	o.Port = &v
}

// GetRanger returns the Ranger field value if set, zero value otherwise.
func (o *DfsHdfsCreateReqHdfs) GetRanger() bool {
	if o == nil || IsNil(o.Ranger) {
		var ret bool
		return ret
	}
	return *o.Ranger
}

// GetRangerOk returns a tuple with the Ranger field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfsCreateReqHdfs) GetRangerOk() (*bool, bool) {
	if o == nil || IsNil(o.Ranger) {
		return nil, false
	}
	return o.Ranger, true
}

// HasRanger returns a boolean if a field has been set.
func (o *DfsHdfsCreateReqHdfs) HasRanger() bool {
	if o != nil && !IsNil(o.Ranger) {
		return true
	}

	return false
}

// SetRanger gets a reference to the given bool and assigns it to the Ranger field.
func (o *DfsHdfsCreateReqHdfs) SetRanger(v bool) {
	o.Ranger = &v
}

// GetRangerIp returns the RangerIp field value if set, zero value otherwise.
func (o *DfsHdfsCreateReqHdfs) GetRangerIp() string {
	if o == nil || IsNil(o.RangerIp) {
		var ret string
		return ret
	}
	return *o.RangerIp
}

// GetRangerIpOk returns a tuple with the RangerIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfsCreateReqHdfs) GetRangerIpOk() (*string, bool) {
	if o == nil || IsNil(o.RangerIp) {
		return nil, false
	}
	return o.RangerIp, true
}

// HasRangerIp returns a boolean if a field has been set.
func (o *DfsHdfsCreateReqHdfs) HasRangerIp() bool {
	if o != nil && !IsNil(o.RangerIp) {
		return true
	}

	return false
}

// SetRangerIp gets a reference to the given string and assigns it to the RangerIp field.
func (o *DfsHdfsCreateReqHdfs) SetRangerIp(v string) {
	o.RangerIp = &v
}

// GetRangerServiceName returns the RangerServiceName field value if set, zero value otherwise.
func (o *DfsHdfsCreateReqHdfs) GetRangerServiceName() string {
	if o == nil || IsNil(o.RangerServiceName) {
		var ret string
		return ret
	}
	return *o.RangerServiceName
}

// GetRangerServiceNameOk returns a tuple with the RangerServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfsCreateReqHdfs) GetRangerServiceNameOk() (*string, bool) {
	if o == nil || IsNil(o.RangerServiceName) {
		return nil, false
	}
	return o.RangerServiceName, true
}

// HasRangerServiceName returns a boolean if a field has been set.
func (o *DfsHdfsCreateReqHdfs) HasRangerServiceName() bool {
	if o != nil && !IsNil(o.RangerServiceName) {
		return true
	}

	return false
}

// SetRangerServiceName gets a reference to the given string and assigns it to the RangerServiceName field.
func (o *DfsHdfsCreateReqHdfs) SetRangerServiceName(v string) {
	o.RangerServiceName = &v
}

// GetRangerUrl returns the RangerUrl field value if set, zero value otherwise.
func (o *DfsHdfsCreateReqHdfs) GetRangerUrl() string {
	if o == nil || IsNil(o.RangerUrl) {
		var ret string
		return ret
	}
	return *o.RangerUrl
}

// GetRangerUrlOk returns a tuple with the RangerUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfsCreateReqHdfs) GetRangerUrlOk() (*string, bool) {
	if o == nil || IsNil(o.RangerUrl) {
		return nil, false
	}
	return o.RangerUrl, true
}

// HasRangerUrl returns a boolean if a field has been set.
func (o *DfsHdfsCreateReqHdfs) HasRangerUrl() bool {
	if o != nil && !IsNil(o.RangerUrl) {
		return true
	}

	return false
}

// SetRangerUrl gets a reference to the given string and assigns it to the RangerUrl field.
func (o *DfsHdfsCreateReqHdfs) SetRangerUrl(v string) {
	o.RangerUrl = &v
}

// GetRootfsId returns the RootfsId field value
func (o *DfsHdfsCreateReqHdfs) GetRootfsId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.RootfsId
}

// GetRootfsIdOk returns a tuple with the RootfsId field value
// and a boolean to check if the value has been set.
func (o *DfsHdfsCreateReqHdfs) GetRootfsIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RootfsId, true
}

// SetRootfsId sets field value
func (o *DfsHdfsCreateReqHdfs) SetRootfsId(v int64) {
	o.RootfsId = v
}

func (o DfsHdfsCreateReqHdfs) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsHdfsCreateReqHdfs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthToLocals) {
		toSerialize["auth_to_locals"] = o.AuthToLocals
	}
	toSerialize["auth_type"] = o.AuthType
	toSerialize["block_size"] = o.BlockSize
	toSerialize["checksum_type"] = o.ChecksumType
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DfsGatewayGroupId) {
		toSerialize["dfs_gateway_group_id"] = o.DfsGatewayGroupId
	}
	toSerialize["dfs_gateway_zone_id"] = o.DfsGatewayZoneId
	if !IsNil(o.DfsHdfsAcls) {
		toSerialize["dfs_hdfs_acls"] = o.DfsHdfsAcls
	}
	if !IsNil(o.DfsHdfsIpWhiteLists) {
		toSerialize["dfs_hdfs_ip_white_lists"] = o.DfsHdfsIpWhiteLists
	}
	if !IsNil(o.DfsHdfsProxyUsers) {
		toSerialize["dfs_hdfs_proxy_users"] = o.DfsHdfsProxyUsers
	}
	if !IsNil(o.KerberosId) {
		toSerialize["kerberos_id"] = o.KerberosId
	}
	toSerialize["name"] = o.Name
	toSerialize["path"] = o.Path
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.Ranger) {
		toSerialize["ranger"] = o.Ranger
	}
	if !IsNil(o.RangerIp) {
		toSerialize["ranger_ip"] = o.RangerIp
	}
	if !IsNil(o.RangerServiceName) {
		toSerialize["ranger_service_name"] = o.RangerServiceName
	}
	if !IsNil(o.RangerUrl) {
		toSerialize["ranger_url"] = o.RangerUrl
	}
	toSerialize["rootfs_id"] = o.RootfsId
	return toSerialize, nil
}

func (o *DfsHdfsCreateReqHdfs) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"auth_type",
		"block_size",
		"checksum_type",
		"dfs_gateway_zone_id",
		"name",
		"path",
		"rootfs_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDfsHdfsCreateReqHdfs := _DfsHdfsCreateReqHdfs{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDfsHdfsCreateReqHdfs)

	if err != nil {
		return err
	}

	*o = DfsHdfsCreateReqHdfs(varDfsHdfsCreateReqHdfs)

	return err
}

type NullableDfsHdfsCreateReqHdfs struct {
	value *DfsHdfsCreateReqHdfs
	isSet bool
}

func (v NullableDfsHdfsCreateReqHdfs) Get() *DfsHdfsCreateReqHdfs {
	return v.value
}

func (v *NullableDfsHdfsCreateReqHdfs) Set(val *DfsHdfsCreateReqHdfs) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsHdfsCreateReqHdfs) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsHdfsCreateReqHdfs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsHdfsCreateReqHdfs(val *DfsHdfsCreateReqHdfs) *NullableDfsHdfsCreateReqHdfs {
	return &NullableDfsHdfsCreateReqHdfs{value: val, isSet: true}
}

func (v NullableDfsHdfsCreateReqHdfs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsHdfsCreateReqHdfs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


