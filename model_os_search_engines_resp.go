/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OSSearchEnginesResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OSSearchEnginesResp{}

// OSSearchEnginesResp struct for OSSearchEnginesResp
type OSSearchEnginesResp struct {
	// object storage search engine
	OsSearchEngines []OSSearchEngineRecord `json:"os_search_engines"`
}

type _OSSearchEnginesResp OSSearchEnginesResp

// NewOSSearchEnginesResp instantiates a new OSSearchEnginesResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOSSearchEnginesResp(osSearchEngines []OSSearchEngineRecord) *OSSearchEnginesResp {
	this := OSSearchEnginesResp{}
	this.OsSearchEngines = osSearchEngines
	return &this
}

// NewOSSearchEnginesRespWithDefaults instantiates a new OSSearchEnginesResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOSSearchEnginesRespWithDefaults() *OSSearchEnginesResp {
	this := OSSearchEnginesResp{}
	return &this
}

// GetOsSearchEngines returns the OsSearchEngines field value
func (o *OSSearchEnginesResp) GetOsSearchEngines() []OSSearchEngineRecord {
	if o == nil {
		var ret []OSSearchEngineRecord
		return ret
	}

	return o.OsSearchEngines
}

// GetOsSearchEnginesOk returns a tuple with the OsSearchEngines field value
// and a boolean to check if the value has been set.
func (o *OSSearchEnginesResp) GetOsSearchEnginesOk() ([]OSSearchEngineRecord, bool) {
	if o == nil {
		return nil, false
	}
	return o.OsSearchEngines, true
}

// SetOsSearchEngines sets field value
func (o *OSSearchEnginesResp) SetOsSearchEngines(v []OSSearchEngineRecord) {
	o.OsSearchEngines = v
}

func (o OSSearchEnginesResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OSSearchEnginesResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["os_search_engines"] = o.OsSearchEngines
	return toSerialize, nil
}

func (o *OSSearchEnginesResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"os_search_engines",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOSSearchEnginesResp := _OSSearchEnginesResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOSSearchEnginesResp)

	if err != nil {
		return err
	}

	*o = OSSearchEnginesResp(varOSSearchEnginesResp)

	return err
}

type NullableOSSearchEnginesResp struct {
	value *OSSearchEnginesResp
	isSet bool
}

func (v NullableOSSearchEnginesResp) Get() *OSSearchEnginesResp {
	return v.value
}

func (v *NullableOSSearchEnginesResp) Set(val *OSSearchEnginesResp) {
	v.value = val
	v.isSet = true
}

func (v NullableOSSearchEnginesResp) IsSet() bool {
	return v.isSet
}

func (v *NullableOSSearchEnginesResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSSearchEnginesResp(val *OSSearchEnginesResp) *NullableOSSearchEnginesResp {
	return &NullableOSSearchEnginesResp{value: val, isSet: true}
}

func (v NullableOSSearchEnginesResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSSearchEnginesResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


