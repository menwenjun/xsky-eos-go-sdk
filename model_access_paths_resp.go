/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AccessPathsResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessPathsResp{}

// AccessPathsResp struct for AccessPathsResp
type AccessPathsResp struct {
	AccessPaths []AccessPath `json:"access_paths"`
}

type _AccessPathsResp AccessPathsResp

// NewAccessPathsResp instantiates a new AccessPathsResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessPathsResp(accessPaths []AccessPath) *AccessPathsResp {
	this := AccessPathsResp{}
	this.AccessPaths = accessPaths
	return &this
}

// NewAccessPathsRespWithDefaults instantiates a new AccessPathsResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessPathsRespWithDefaults() *AccessPathsResp {
	this := AccessPathsResp{}
	return &this
}

// GetAccessPaths returns the AccessPaths field value
func (o *AccessPathsResp) GetAccessPaths() []AccessPath {
	if o == nil {
		var ret []AccessPath
		return ret
	}

	return o.AccessPaths
}

// GetAccessPathsOk returns a tuple with the AccessPaths field value
// and a boolean to check if the value has been set.
func (o *AccessPathsResp) GetAccessPathsOk() ([]AccessPath, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccessPaths, true
}

// SetAccessPaths sets field value
func (o *AccessPathsResp) SetAccessPaths(v []AccessPath) {
	o.AccessPaths = v
}

func (o AccessPathsResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessPathsResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["access_paths"] = o.AccessPaths
	return toSerialize, nil
}

func (o *AccessPathsResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"access_paths",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccessPathsResp := _AccessPathsResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAccessPathsResp)

	if err != nil {
		return err
	}

	*o = AccessPathsResp(varAccessPathsResp)

	return err
}

type NullableAccessPathsResp struct {
	value *AccessPathsResp
	isSet bool
}

func (v NullableAccessPathsResp) Get() *AccessPathsResp {
	return v.value
}

func (v *NullableAccessPathsResp) Set(val *AccessPathsResp) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessPathsResp) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessPathsResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessPathsResp(val *AccessPathsResp) *NullableAccessPathsResp {
	return &NullableAccessPathsResp{value: val, isSet: true}
}

func (v NullableAccessPathsResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessPathsResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


