/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EventLogCreateReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EventLogCreateReq{}

// EventLogCreateReq struct for EventLogCreateReq
type EventLogCreateReq struct {
	EventLog *EventLogCreateReqEventLog `json:"event_log,omitempty"`
}

// NewEventLogCreateReq instantiates a new EventLogCreateReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventLogCreateReq() *EventLogCreateReq {
	this := EventLogCreateReq{}
	return &this
}

// NewEventLogCreateReqWithDefaults instantiates a new EventLogCreateReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventLogCreateReqWithDefaults() *EventLogCreateReq {
	this := EventLogCreateReq{}
	return &this
}

// GetEventLog returns the EventLog field value if set, zero value otherwise.
func (o *EventLogCreateReq) GetEventLog() EventLogCreateReqEventLog {
	if o == nil || IsNil(o.EventLog) {
		var ret EventLogCreateReqEventLog
		return ret
	}
	return *o.EventLog
}

// GetEventLogOk returns a tuple with the EventLog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventLogCreateReq) GetEventLogOk() (*EventLogCreateReqEventLog, bool) {
	if o == nil || IsNil(o.EventLog) {
		return nil, false
	}
	return o.EventLog, true
}

// HasEventLog returns a boolean if a field has been set.
func (o *EventLogCreateReq) HasEventLog() bool {
	if o != nil && !IsNil(o.EventLog) {
		return true
	}

	return false
}

// SetEventLog gets a reference to the given EventLogCreateReqEventLog and assigns it to the EventLog field.
func (o *EventLogCreateReq) SetEventLog(v EventLogCreateReqEventLog) {
	o.EventLog = &v
}

func (o EventLogCreateReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EventLogCreateReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EventLog) {
		toSerialize["event_log"] = o.EventLog
	}
	return toSerialize, nil
}

type NullableEventLogCreateReq struct {
	value *EventLogCreateReq
	isSet bool
}

func (v NullableEventLogCreateReq) Get() *EventLogCreateReq {
	return v.value
}

func (v *NullableEventLogCreateReq) Set(val *EventLogCreateReq) {
	v.value = val
	v.isSet = true
}

func (v NullableEventLogCreateReq) IsSet() bool {
	return v.isSet
}

func (v *NullableEventLogCreateReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventLogCreateReq(val *EventLogCreateReq) *NullableEventLogCreateReq {
	return &NullableEventLogCreateReq{value: val, isSet: true}
}

func (v NullableEventLogCreateReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventLogCreateReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


