/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the OSExternalStoragePlatform type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OSExternalStoragePlatform{}

// OSExternalStoragePlatform OSExternalStoragePlatform is the model of os_external_storage_platform
type OSExternalStoragePlatform struct {
	AccessKey *string `json:"access_key,omitempty"`
	Authentication *string `json:"authentication,omitempty"`
	BluRay *OSBuiltinBluRay `json:"blu_ray,omitempty"`
	Buckets []OSExternalStorageBucketInfo `json:"buckets,omitempty"`
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	Connected *bool `json:"connected,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	Endpoint *string `json:"endpoint,omitempty"`
	HostStyle *string `json:"host_style,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	OsExternalStorageClass *OSExternalStorageClass `json:"os_external_storage_class,omitempty"`
	Region *string `json:"region,omitempty"`
	SecretKey *string `json:"secret_key,omitempty"`
	Status *string `json:"status,omitempty"`
	Uuid *string `json:"uuid,omitempty"`
	Weight *int64 `json:"weight,omitempty"`
}

// NewOSExternalStoragePlatform instantiates a new OSExternalStoragePlatform object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOSExternalStoragePlatform() *OSExternalStoragePlatform {
	this := OSExternalStoragePlatform{}
	return &this
}

// NewOSExternalStoragePlatformWithDefaults instantiates a new OSExternalStoragePlatform object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOSExternalStoragePlatformWithDefaults() *OSExternalStoragePlatform {
	this := OSExternalStoragePlatform{}
	return &this
}

// GetAccessKey returns the AccessKey field value if set, zero value otherwise.
func (o *OSExternalStoragePlatform) GetAccessKey() string {
	if o == nil || IsNil(o.AccessKey) {
		var ret string
		return ret
	}
	return *o.AccessKey
}

// GetAccessKeyOk returns a tuple with the AccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStoragePlatform) GetAccessKeyOk() (*string, bool) {
	if o == nil || IsNil(o.AccessKey) {
		return nil, false
	}
	return o.AccessKey, true
}

// HasAccessKey returns a boolean if a field has been set.
func (o *OSExternalStoragePlatform) HasAccessKey() bool {
	if o != nil && !IsNil(o.AccessKey) {
		return true
	}

	return false
}

// SetAccessKey gets a reference to the given string and assigns it to the AccessKey field.
func (o *OSExternalStoragePlatform) SetAccessKey(v string) {
	o.AccessKey = &v
}

// GetAuthentication returns the Authentication field value if set, zero value otherwise.
func (o *OSExternalStoragePlatform) GetAuthentication() string {
	if o == nil || IsNil(o.Authentication) {
		var ret string
		return ret
	}
	return *o.Authentication
}

// GetAuthenticationOk returns a tuple with the Authentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStoragePlatform) GetAuthenticationOk() (*string, bool) {
	if o == nil || IsNil(o.Authentication) {
		return nil, false
	}
	return o.Authentication, true
}

// HasAuthentication returns a boolean if a field has been set.
func (o *OSExternalStoragePlatform) HasAuthentication() bool {
	if o != nil && !IsNil(o.Authentication) {
		return true
	}

	return false
}

// SetAuthentication gets a reference to the given string and assigns it to the Authentication field.
func (o *OSExternalStoragePlatform) SetAuthentication(v string) {
	o.Authentication = &v
}

// GetBluRay returns the BluRay field value if set, zero value otherwise.
func (o *OSExternalStoragePlatform) GetBluRay() OSBuiltinBluRay {
	if o == nil || IsNil(o.BluRay) {
		var ret OSBuiltinBluRay
		return ret
	}
	return *o.BluRay
}

// GetBluRayOk returns a tuple with the BluRay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStoragePlatform) GetBluRayOk() (*OSBuiltinBluRay, bool) {
	if o == nil || IsNil(o.BluRay) {
		return nil, false
	}
	return o.BluRay, true
}

// HasBluRay returns a boolean if a field has been set.
func (o *OSExternalStoragePlatform) HasBluRay() bool {
	if o != nil && !IsNil(o.BluRay) {
		return true
	}

	return false
}

// SetBluRay gets a reference to the given OSBuiltinBluRay and assigns it to the BluRay field.
func (o *OSExternalStoragePlatform) SetBluRay(v OSBuiltinBluRay) {
	o.BluRay = &v
}

// GetBuckets returns the Buckets field value if set, zero value otherwise.
func (o *OSExternalStoragePlatform) GetBuckets() []OSExternalStorageBucketInfo {
	if o == nil || IsNil(o.Buckets) {
		var ret []OSExternalStorageBucketInfo
		return ret
	}
	return o.Buckets
}

// GetBucketsOk returns a tuple with the Buckets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStoragePlatform) GetBucketsOk() ([]OSExternalStorageBucketInfo, bool) {
	if o == nil || IsNil(o.Buckets) {
		return nil, false
	}
	return o.Buckets, true
}

// HasBuckets returns a boolean if a field has been set.
func (o *OSExternalStoragePlatform) HasBuckets() bool {
	if o != nil && !IsNil(o.Buckets) {
		return true
	}

	return false
}

// SetBuckets gets a reference to the given []OSExternalStorageBucketInfo and assigns it to the Buckets field.
func (o *OSExternalStoragePlatform) SetBuckets(v []OSExternalStorageBucketInfo) {
	o.Buckets = v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *OSExternalStoragePlatform) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStoragePlatform) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *OSExternalStoragePlatform) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *OSExternalStoragePlatform) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetConnected returns the Connected field value if set, zero value otherwise.
func (o *OSExternalStoragePlatform) GetConnected() bool {
	if o == nil || IsNil(o.Connected) {
		var ret bool
		return ret
	}
	return *o.Connected
}

// GetConnectedOk returns a tuple with the Connected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStoragePlatform) GetConnectedOk() (*bool, bool) {
	if o == nil || IsNil(o.Connected) {
		return nil, false
	}
	return o.Connected, true
}

// HasConnected returns a boolean if a field has been set.
func (o *OSExternalStoragePlatform) HasConnected() bool {
	if o != nil && !IsNil(o.Connected) {
		return true
	}

	return false
}

// SetConnected gets a reference to the given bool and assigns it to the Connected field.
func (o *OSExternalStoragePlatform) SetConnected(v bool) {
	o.Connected = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *OSExternalStoragePlatform) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStoragePlatform) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *OSExternalStoragePlatform) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *OSExternalStoragePlatform) SetCreate(v time.Time) {
	o.Create = &v
}

// GetEndpoint returns the Endpoint field value if set, zero value otherwise.
func (o *OSExternalStoragePlatform) GetEndpoint() string {
	if o == nil || IsNil(o.Endpoint) {
		var ret string
		return ret
	}
	return *o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStoragePlatform) GetEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.Endpoint) {
		return nil, false
	}
	return o.Endpoint, true
}

// HasEndpoint returns a boolean if a field has been set.
func (o *OSExternalStoragePlatform) HasEndpoint() bool {
	if o != nil && !IsNil(o.Endpoint) {
		return true
	}

	return false
}

// SetEndpoint gets a reference to the given string and assigns it to the Endpoint field.
func (o *OSExternalStoragePlatform) SetEndpoint(v string) {
	o.Endpoint = &v
}

// GetHostStyle returns the HostStyle field value if set, zero value otherwise.
func (o *OSExternalStoragePlatform) GetHostStyle() string {
	if o == nil || IsNil(o.HostStyle) {
		var ret string
		return ret
	}
	return *o.HostStyle
}

// GetHostStyleOk returns a tuple with the HostStyle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStoragePlatform) GetHostStyleOk() (*string, bool) {
	if o == nil || IsNil(o.HostStyle) {
		return nil, false
	}
	return o.HostStyle, true
}

// HasHostStyle returns a boolean if a field has been set.
func (o *OSExternalStoragePlatform) HasHostStyle() bool {
	if o != nil && !IsNil(o.HostStyle) {
		return true
	}

	return false
}

// SetHostStyle gets a reference to the given string and assigns it to the HostStyle field.
func (o *OSExternalStoragePlatform) SetHostStyle(v string) {
	o.HostStyle = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OSExternalStoragePlatform) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStoragePlatform) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OSExternalStoragePlatform) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *OSExternalStoragePlatform) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OSExternalStoragePlatform) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStoragePlatform) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OSExternalStoragePlatform) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OSExternalStoragePlatform) SetName(v string) {
	o.Name = &v
}

// GetOsExternalStorageClass returns the OsExternalStorageClass field value if set, zero value otherwise.
func (o *OSExternalStoragePlatform) GetOsExternalStorageClass() OSExternalStorageClass {
	if o == nil || IsNil(o.OsExternalStorageClass) {
		var ret OSExternalStorageClass
		return ret
	}
	return *o.OsExternalStorageClass
}

// GetOsExternalStorageClassOk returns a tuple with the OsExternalStorageClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStoragePlatform) GetOsExternalStorageClassOk() (*OSExternalStorageClass, bool) {
	if o == nil || IsNil(o.OsExternalStorageClass) {
		return nil, false
	}
	return o.OsExternalStorageClass, true
}

// HasOsExternalStorageClass returns a boolean if a field has been set.
func (o *OSExternalStoragePlatform) HasOsExternalStorageClass() bool {
	if o != nil && !IsNil(o.OsExternalStorageClass) {
		return true
	}

	return false
}

// SetOsExternalStorageClass gets a reference to the given OSExternalStorageClass and assigns it to the OsExternalStorageClass field.
func (o *OSExternalStoragePlatform) SetOsExternalStorageClass(v OSExternalStorageClass) {
	o.OsExternalStorageClass = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *OSExternalStoragePlatform) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStoragePlatform) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *OSExternalStoragePlatform) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *OSExternalStoragePlatform) SetRegion(v string) {
	o.Region = &v
}

// GetSecretKey returns the SecretKey field value if set, zero value otherwise.
func (o *OSExternalStoragePlatform) GetSecretKey() string {
	if o == nil || IsNil(o.SecretKey) {
		var ret string
		return ret
	}
	return *o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStoragePlatform) GetSecretKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SecretKey) {
		return nil, false
	}
	return o.SecretKey, true
}

// HasSecretKey returns a boolean if a field has been set.
func (o *OSExternalStoragePlatform) HasSecretKey() bool {
	if o != nil && !IsNil(o.SecretKey) {
		return true
	}

	return false
}

// SetSecretKey gets a reference to the given string and assigns it to the SecretKey field.
func (o *OSExternalStoragePlatform) SetSecretKey(v string) {
	o.SecretKey = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *OSExternalStoragePlatform) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStoragePlatform) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *OSExternalStoragePlatform) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *OSExternalStoragePlatform) SetStatus(v string) {
	o.Status = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *OSExternalStoragePlatform) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStoragePlatform) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *OSExternalStoragePlatform) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *OSExternalStoragePlatform) SetUuid(v string) {
	o.Uuid = &v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *OSExternalStoragePlatform) GetWeight() int64 {
	if o == nil || IsNil(o.Weight) {
		var ret int64
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStoragePlatform) GetWeightOk() (*int64, bool) {
	if o == nil || IsNil(o.Weight) {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *OSExternalStoragePlatform) HasWeight() bool {
	if o != nil && !IsNil(o.Weight) {
		return true
	}

	return false
}

// SetWeight gets a reference to the given int64 and assigns it to the Weight field.
func (o *OSExternalStoragePlatform) SetWeight(v int64) {
	o.Weight = &v
}

func (o OSExternalStoragePlatform) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OSExternalStoragePlatform) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessKey) {
		toSerialize["access_key"] = o.AccessKey
	}
	if !IsNil(o.Authentication) {
		toSerialize["authentication"] = o.Authentication
	}
	if !IsNil(o.BluRay) {
		toSerialize["blu_ray"] = o.BluRay
	}
	if !IsNil(o.Buckets) {
		toSerialize["buckets"] = o.Buckets
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Connected) {
		toSerialize["connected"] = o.Connected
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.Endpoint) {
		toSerialize["endpoint"] = o.Endpoint
	}
	if !IsNil(o.HostStyle) {
		toSerialize["host_style"] = o.HostStyle
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OsExternalStorageClass) {
		toSerialize["os_external_storage_class"] = o.OsExternalStorageClass
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.SecretKey) {
		toSerialize["secret_key"] = o.SecretKey
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	if !IsNil(o.Weight) {
		toSerialize["weight"] = o.Weight
	}
	return toSerialize, nil
}

type NullableOSExternalStoragePlatform struct {
	value *OSExternalStoragePlatform
	isSet bool
}

func (v NullableOSExternalStoragePlatform) Get() *OSExternalStoragePlatform {
	return v.value
}

func (v *NullableOSExternalStoragePlatform) Set(val *OSExternalStoragePlatform) {
	v.value = val
	v.isSet = true
}

func (v NullableOSExternalStoragePlatform) IsSet() bool {
	return v.isSet
}

func (v *NullableOSExternalStoragePlatform) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSExternalStoragePlatform(val *OSExternalStoragePlatform) *NullableOSExternalStoragePlatform {
	return &NullableOSExternalStoragePlatform{value: val, isSet: true}
}

func (v NullableOSExternalStoragePlatform) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSExternalStoragePlatform) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


