/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the IdentityPlatformExtraUserKeys type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentityPlatformExtraUserKeys{}

// IdentityPlatformExtraUserKeys struct for IdentityPlatformExtraUserKeys
type IdentityPlatformExtraUserKeys struct {
	UserId *string `json:"user_id,omitempty"`
	UserName *string `json:"user_name,omitempty"`
	UserRoles *string `json:"user_roles,omitempty"`
}

// NewIdentityPlatformExtraUserKeys instantiates a new IdentityPlatformExtraUserKeys object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityPlatformExtraUserKeys() *IdentityPlatformExtraUserKeys {
	this := IdentityPlatformExtraUserKeys{}
	return &this
}

// NewIdentityPlatformExtraUserKeysWithDefaults instantiates a new IdentityPlatformExtraUserKeys object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityPlatformExtraUserKeysWithDefaults() *IdentityPlatformExtraUserKeys {
	this := IdentityPlatformExtraUserKeys{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *IdentityPlatformExtraUserKeys) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityPlatformExtraUserKeys) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *IdentityPlatformExtraUserKeys) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *IdentityPlatformExtraUserKeys) SetUserId(v string) {
	o.UserId = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *IdentityPlatformExtraUserKeys) GetUserName() string {
	if o == nil || IsNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityPlatformExtraUserKeys) GetUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *IdentityPlatformExtraUserKeys) HasUserName() bool {
	if o != nil && !IsNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *IdentityPlatformExtraUserKeys) SetUserName(v string) {
	o.UserName = &v
}

// GetUserRoles returns the UserRoles field value if set, zero value otherwise.
func (o *IdentityPlatformExtraUserKeys) GetUserRoles() string {
	if o == nil || IsNil(o.UserRoles) {
		var ret string
		return ret
	}
	return *o.UserRoles
}

// GetUserRolesOk returns a tuple with the UserRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityPlatformExtraUserKeys) GetUserRolesOk() (*string, bool) {
	if o == nil || IsNil(o.UserRoles) {
		return nil, false
	}
	return o.UserRoles, true
}

// HasUserRoles returns a boolean if a field has been set.
func (o *IdentityPlatformExtraUserKeys) HasUserRoles() bool {
	if o != nil && !IsNil(o.UserRoles) {
		return true
	}

	return false
}

// SetUserRoles gets a reference to the given string and assigns it to the UserRoles field.
func (o *IdentityPlatformExtraUserKeys) SetUserRoles(v string) {
	o.UserRoles = &v
}

func (o IdentityPlatformExtraUserKeys) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentityPlatformExtraUserKeys) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.UserName) {
		toSerialize["user_name"] = o.UserName
	}
	if !IsNil(o.UserRoles) {
		toSerialize["user_roles"] = o.UserRoles
	}
	return toSerialize, nil
}

type NullableIdentityPlatformExtraUserKeys struct {
	value *IdentityPlatformExtraUserKeys
	isSet bool
}

func (v NullableIdentityPlatformExtraUserKeys) Get() *IdentityPlatformExtraUserKeys {
	return v.value
}

func (v *NullableIdentityPlatformExtraUserKeys) Set(val *IdentityPlatformExtraUserKeys) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityPlatformExtraUserKeys) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityPlatformExtraUserKeys) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityPlatformExtraUserKeys(val *IdentityPlatformExtraUserKeys) *NullableIdentityPlatformExtraUserKeys {
	return &NullableIdentityPlatformExtraUserKeys{value: val, isSet: true}
}

func (v NullableIdentityPlatformExtraUserKeys) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityPlatformExtraUserKeys) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


