/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the AlertInfoGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertInfoGroup{}

// AlertInfoGroup AlertInfoGroup defines the alert info group +X:model:generate;order_by=-Update;
type AlertInfoGroup struct {
	AlertInfo *AlertInfo `json:"alert_info,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	Group *string `json:"group,omitempty"`
	Id *int64 `json:"id,omitempty"`
	ResourceId *int64 `json:"resource_id,omitempty"`
	ResourceType *string `json:"resource_type,omitempty"`
	Status *string `json:"status,omitempty"`
	Update *time.Time `json:"update,omitempty"`
}

// NewAlertInfoGroup instantiates a new AlertInfoGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertInfoGroup() *AlertInfoGroup {
	this := AlertInfoGroup{}
	return &this
}

// NewAlertInfoGroupWithDefaults instantiates a new AlertInfoGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertInfoGroupWithDefaults() *AlertInfoGroup {
	this := AlertInfoGroup{}
	return &this
}

// GetAlertInfo returns the AlertInfo field value if set, zero value otherwise.
func (o *AlertInfoGroup) GetAlertInfo() AlertInfo {
	if o == nil || IsNil(o.AlertInfo) {
		var ret AlertInfo
		return ret
	}
	return *o.AlertInfo
}

// GetAlertInfoOk returns a tuple with the AlertInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertInfoGroup) GetAlertInfoOk() (*AlertInfo, bool) {
	if o == nil || IsNil(o.AlertInfo) {
		return nil, false
	}
	return o.AlertInfo, true
}

// HasAlertInfo returns a boolean if a field has been set.
func (o *AlertInfoGroup) HasAlertInfo() bool {
	if o != nil && !IsNil(o.AlertInfo) {
		return true
	}

	return false
}

// SetAlertInfo gets a reference to the given AlertInfo and assigns it to the AlertInfo field.
func (o *AlertInfoGroup) SetAlertInfo(v AlertInfo) {
	o.AlertInfo = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *AlertInfoGroup) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertInfoGroup) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *AlertInfoGroup) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *AlertInfoGroup) SetCreate(v time.Time) {
	o.Create = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *AlertInfoGroup) GetGroup() string {
	if o == nil || IsNil(o.Group) {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertInfoGroup) GetGroupOk() (*string, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *AlertInfoGroup) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *AlertInfoGroup) SetGroup(v string) {
	o.Group = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AlertInfoGroup) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertInfoGroup) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AlertInfoGroup) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *AlertInfoGroup) SetId(v int64) {
	o.Id = &v
}

// GetResourceId returns the ResourceId field value if set, zero value otherwise.
func (o *AlertInfoGroup) GetResourceId() int64 {
	if o == nil || IsNil(o.ResourceId) {
		var ret int64
		return ret
	}
	return *o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertInfoGroup) GetResourceIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ResourceId) {
		return nil, false
	}
	return o.ResourceId, true
}

// HasResourceId returns a boolean if a field has been set.
func (o *AlertInfoGroup) HasResourceId() bool {
	if o != nil && !IsNil(o.ResourceId) {
		return true
	}

	return false
}

// SetResourceId gets a reference to the given int64 and assigns it to the ResourceId field.
func (o *AlertInfoGroup) SetResourceId(v int64) {
	o.ResourceId = &v
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *AlertInfoGroup) GetResourceType() string {
	if o == nil || IsNil(o.ResourceType) {
		var ret string
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertInfoGroup) GetResourceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceType) {
		return nil, false
	}
	return o.ResourceType, true
}

// HasResourceType returns a boolean if a field has been set.
func (o *AlertInfoGroup) HasResourceType() bool {
	if o != nil && !IsNil(o.ResourceType) {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given string and assigns it to the ResourceType field.
func (o *AlertInfoGroup) SetResourceType(v string) {
	o.ResourceType = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AlertInfoGroup) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertInfoGroup) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AlertInfoGroup) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *AlertInfoGroup) SetStatus(v string) {
	o.Status = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *AlertInfoGroup) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertInfoGroup) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *AlertInfoGroup) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *AlertInfoGroup) SetUpdate(v time.Time) {
	o.Update = &v
}

func (o AlertInfoGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertInfoGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlertInfo) {
		toSerialize["alert_info"] = o.AlertInfo
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ResourceId) {
		toSerialize["resource_id"] = o.ResourceId
	}
	if !IsNil(o.ResourceType) {
		toSerialize["resource_type"] = o.ResourceType
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	return toSerialize, nil
}

type NullableAlertInfoGroup struct {
	value *AlertInfoGroup
	isSet bool
}

func (v NullableAlertInfoGroup) Get() *AlertInfoGroup {
	return v.value
}

func (v *NullableAlertInfoGroup) Set(val *AlertInfoGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertInfoGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertInfoGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertInfoGroup(val *AlertInfoGroup) *NullableAlertInfoGroup {
	return &NullableAlertInfoGroup{value: val, isSet: true}
}

func (v NullableAlertInfoGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertInfoGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


