/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MetadataClusterAddServicesReqMetadataServicesElt type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetadataClusterAddServicesReqMetadataServicesElt{}

// MetadataClusterAddServicesReqMetadataServicesElt struct for MetadataClusterAddServicesReqMetadataServicesElt
type MetadataClusterAddServicesReqMetadataServicesElt struct {
	// DiskID is the disk id of metadata service
	DiskId *int64 `json:"disk_id,omitempty"`
}

// NewMetadataClusterAddServicesReqMetadataServicesElt instantiates a new MetadataClusterAddServicesReqMetadataServicesElt object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetadataClusterAddServicesReqMetadataServicesElt() *MetadataClusterAddServicesReqMetadataServicesElt {
	this := MetadataClusterAddServicesReqMetadataServicesElt{}
	return &this
}

// NewMetadataClusterAddServicesReqMetadataServicesEltWithDefaults instantiates a new MetadataClusterAddServicesReqMetadataServicesElt object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetadataClusterAddServicesReqMetadataServicesEltWithDefaults() *MetadataClusterAddServicesReqMetadataServicesElt {
	this := MetadataClusterAddServicesReqMetadataServicesElt{}
	return &this
}

// GetDiskId returns the DiskId field value if set, zero value otherwise.
func (o *MetadataClusterAddServicesReqMetadataServicesElt) GetDiskId() int64 {
	if o == nil || IsNil(o.DiskId) {
		var ret int64
		return ret
	}
	return *o.DiskId
}

// GetDiskIdOk returns a tuple with the DiskId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataClusterAddServicesReqMetadataServicesElt) GetDiskIdOk() (*int64, bool) {
	if o == nil || IsNil(o.DiskId) {
		return nil, false
	}
	return o.DiskId, true
}

// HasDiskId returns a boolean if a field has been set.
func (o *MetadataClusterAddServicesReqMetadataServicesElt) HasDiskId() bool {
	if o != nil && !IsNil(o.DiskId) {
		return true
	}

	return false
}

// SetDiskId gets a reference to the given int64 and assigns it to the DiskId field.
func (o *MetadataClusterAddServicesReqMetadataServicesElt) SetDiskId(v int64) {
	o.DiskId = &v
}

func (o MetadataClusterAddServicesReqMetadataServicesElt) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetadataClusterAddServicesReqMetadataServicesElt) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DiskId) {
		toSerialize["disk_id"] = o.DiskId
	}
	return toSerialize, nil
}

type NullableMetadataClusterAddServicesReqMetadataServicesElt struct {
	value *MetadataClusterAddServicesReqMetadataServicesElt
	isSet bool
}

func (v NullableMetadataClusterAddServicesReqMetadataServicesElt) Get() *MetadataClusterAddServicesReqMetadataServicesElt {
	return v.value
}

func (v *NullableMetadataClusterAddServicesReqMetadataServicesElt) Set(val *MetadataClusterAddServicesReqMetadataServicesElt) {
	v.value = val
	v.isSet = true
}

func (v NullableMetadataClusterAddServicesReqMetadataServicesElt) IsSet() bool {
	return v.isSet
}

func (v *NullableMetadataClusterAddServicesReqMetadataServicesElt) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetadataClusterAddServicesReqMetadataServicesElt(val *MetadataClusterAddServicesReqMetadataServicesElt) *NullableMetadataClusterAddServicesReqMetadataServicesElt {
	return &NullableMetadataClusterAddServicesReqMetadataServicesElt{value: val, isSet: true}
}

func (v NullableMetadataClusterAddServicesReqMetadataServicesElt) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetadataClusterAddServicesReqMetadataServicesElt) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


