/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DpBlockSnapshotPolicyCreateReqPolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DpBlockSnapshotPolicyCreateReqPolicy{}

// DpBlockSnapshotPolicyCreateReqPolicy struct for DpBlockSnapshotPolicyCreateReqPolicy
type DpBlockSnapshotPolicyCreateReqPolicy struct {
	// cron expression
	CronExpr string `json:"cron_expr"`
	// dp gateway
	DpGatewayId int64 `json:"dp_gateway_id"`
	// name
	Name string `json:"name"`
	// retained max number of snapshots
	RetainedMax int64 `json:"retained_max"`
}

type _DpBlockSnapshotPolicyCreateReqPolicy DpBlockSnapshotPolicyCreateReqPolicy

// NewDpBlockSnapshotPolicyCreateReqPolicy instantiates a new DpBlockSnapshotPolicyCreateReqPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDpBlockSnapshotPolicyCreateReqPolicy(cronExpr string, dpGatewayId int64, name string, retainedMax int64) *DpBlockSnapshotPolicyCreateReqPolicy {
	this := DpBlockSnapshotPolicyCreateReqPolicy{}
	this.CronExpr = cronExpr
	this.DpGatewayId = dpGatewayId
	this.Name = name
	this.RetainedMax = retainedMax
	return &this
}

// NewDpBlockSnapshotPolicyCreateReqPolicyWithDefaults instantiates a new DpBlockSnapshotPolicyCreateReqPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDpBlockSnapshotPolicyCreateReqPolicyWithDefaults() *DpBlockSnapshotPolicyCreateReqPolicy {
	this := DpBlockSnapshotPolicyCreateReqPolicy{}
	return &this
}

// GetCronExpr returns the CronExpr field value
func (o *DpBlockSnapshotPolicyCreateReqPolicy) GetCronExpr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CronExpr
}

// GetCronExprOk returns a tuple with the CronExpr field value
// and a boolean to check if the value has been set.
func (o *DpBlockSnapshotPolicyCreateReqPolicy) GetCronExprOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CronExpr, true
}

// SetCronExpr sets field value
func (o *DpBlockSnapshotPolicyCreateReqPolicy) SetCronExpr(v string) {
	o.CronExpr = v
}

// GetDpGatewayId returns the DpGatewayId field value
func (o *DpBlockSnapshotPolicyCreateReqPolicy) GetDpGatewayId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DpGatewayId
}

// GetDpGatewayIdOk returns a tuple with the DpGatewayId field value
// and a boolean to check if the value has been set.
func (o *DpBlockSnapshotPolicyCreateReqPolicy) GetDpGatewayIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DpGatewayId, true
}

// SetDpGatewayId sets field value
func (o *DpBlockSnapshotPolicyCreateReqPolicy) SetDpGatewayId(v int64) {
	o.DpGatewayId = v
}

// GetName returns the Name field value
func (o *DpBlockSnapshotPolicyCreateReqPolicy) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DpBlockSnapshotPolicyCreateReqPolicy) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DpBlockSnapshotPolicyCreateReqPolicy) SetName(v string) {
	o.Name = v
}

// GetRetainedMax returns the RetainedMax field value
func (o *DpBlockSnapshotPolicyCreateReqPolicy) GetRetainedMax() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.RetainedMax
}

// GetRetainedMaxOk returns a tuple with the RetainedMax field value
// and a boolean to check if the value has been set.
func (o *DpBlockSnapshotPolicyCreateReqPolicy) GetRetainedMaxOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RetainedMax, true
}

// SetRetainedMax sets field value
func (o *DpBlockSnapshotPolicyCreateReqPolicy) SetRetainedMax(v int64) {
	o.RetainedMax = v
}

func (o DpBlockSnapshotPolicyCreateReqPolicy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DpBlockSnapshotPolicyCreateReqPolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cron_expr"] = o.CronExpr
	toSerialize["dp_gateway_id"] = o.DpGatewayId
	toSerialize["name"] = o.Name
	toSerialize["retained_max"] = o.RetainedMax
	return toSerialize, nil
}

func (o *DpBlockSnapshotPolicyCreateReqPolicy) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cron_expr",
		"dp_gateway_id",
		"name",
		"retained_max",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDpBlockSnapshotPolicyCreateReqPolicy := _DpBlockSnapshotPolicyCreateReqPolicy{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDpBlockSnapshotPolicyCreateReqPolicy)

	if err != nil {
		return err
	}

	*o = DpBlockSnapshotPolicyCreateReqPolicy(varDpBlockSnapshotPolicyCreateReqPolicy)

	return err
}

type NullableDpBlockSnapshotPolicyCreateReqPolicy struct {
	value *DpBlockSnapshotPolicyCreateReqPolicy
	isSet bool
}

func (v NullableDpBlockSnapshotPolicyCreateReqPolicy) Get() *DpBlockSnapshotPolicyCreateReqPolicy {
	return v.value
}

func (v *NullableDpBlockSnapshotPolicyCreateReqPolicy) Set(val *DpBlockSnapshotPolicyCreateReqPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableDpBlockSnapshotPolicyCreateReqPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableDpBlockSnapshotPolicyCreateReqPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDpBlockSnapshotPolicyCreateReqPolicy(val *DpBlockSnapshotPolicyCreateReqPolicy) *NullableDpBlockSnapshotPolicyCreateReqPolicy {
	return &NullableDpBlockSnapshotPolicyCreateReqPolicy{value: val, isSet: true}
}

func (v NullableDpBlockSnapshotPolicyCreateReqPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDpBlockSnapshotPolicyCreateReqPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


