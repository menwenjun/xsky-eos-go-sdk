/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OSReplicationZoneReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OSReplicationZoneReq{}

// OSReplicationZoneReq struct for OSReplicationZoneReq
type OSReplicationZoneReq struct {
	OsRemotePolicyUuid string `json:"os_remote_policy_uuid"`
	Readonly *bool `json:"readonly,omitempty"`
}

type _OSReplicationZoneReq OSReplicationZoneReq

// NewOSReplicationZoneReq instantiates a new OSReplicationZoneReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOSReplicationZoneReq(osRemotePolicyUuid string) *OSReplicationZoneReq {
	this := OSReplicationZoneReq{}
	this.OsRemotePolicyUuid = osRemotePolicyUuid
	return &this
}

// NewOSReplicationZoneReqWithDefaults instantiates a new OSReplicationZoneReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOSReplicationZoneReqWithDefaults() *OSReplicationZoneReq {
	this := OSReplicationZoneReq{}
	return &this
}

// GetOsRemotePolicyUuid returns the OsRemotePolicyUuid field value
func (o *OSReplicationZoneReq) GetOsRemotePolicyUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OsRemotePolicyUuid
}

// GetOsRemotePolicyUuidOk returns a tuple with the OsRemotePolicyUuid field value
// and a boolean to check if the value has been set.
func (o *OSReplicationZoneReq) GetOsRemotePolicyUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OsRemotePolicyUuid, true
}

// SetOsRemotePolicyUuid sets field value
func (o *OSReplicationZoneReq) SetOsRemotePolicyUuid(v string) {
	o.OsRemotePolicyUuid = v
}

// GetReadonly returns the Readonly field value if set, zero value otherwise.
func (o *OSReplicationZoneReq) GetReadonly() bool {
	if o == nil || IsNil(o.Readonly) {
		var ret bool
		return ret
	}
	return *o.Readonly
}

// GetReadonlyOk returns a tuple with the Readonly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSReplicationZoneReq) GetReadonlyOk() (*bool, bool) {
	if o == nil || IsNil(o.Readonly) {
		return nil, false
	}
	return o.Readonly, true
}

// HasReadonly returns a boolean if a field has been set.
func (o *OSReplicationZoneReq) HasReadonly() bool {
	if o != nil && !IsNil(o.Readonly) {
		return true
	}

	return false
}

// SetReadonly gets a reference to the given bool and assigns it to the Readonly field.
func (o *OSReplicationZoneReq) SetReadonly(v bool) {
	o.Readonly = &v
}

func (o OSReplicationZoneReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OSReplicationZoneReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["os_remote_policy_uuid"] = o.OsRemotePolicyUuid
	if !IsNil(o.Readonly) {
		toSerialize["readonly"] = o.Readonly
	}
	return toSerialize, nil
}

func (o *OSReplicationZoneReq) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"os_remote_policy_uuid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOSReplicationZoneReq := _OSReplicationZoneReq{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOSReplicationZoneReq)

	if err != nil {
		return err
	}

	*o = OSReplicationZoneReq(varOSReplicationZoneReq)

	return err
}

type NullableOSReplicationZoneReq struct {
	value *OSReplicationZoneReq
	isSet bool
}

func (v NullableOSReplicationZoneReq) Get() *OSReplicationZoneReq {
	return v.value
}

func (v *NullableOSReplicationZoneReq) Set(val *OSReplicationZoneReq) {
	v.value = val
	v.isSet = true
}

func (v NullableOSReplicationZoneReq) IsSet() bool {
	return v.isSet
}

func (v *NullableOSReplicationZoneReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSReplicationZoneReq(val *OSReplicationZoneReq) *NullableOSReplicationZoneReq {
	return &NullableOSReplicationZoneReq{value: val, isSet: true}
}

func (v NullableOSReplicationZoneReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSReplicationZoneReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


