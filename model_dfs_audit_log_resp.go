/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DfsAuditLogResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsAuditLogResp{}

// DfsAuditLogResp struct for DfsAuditLogResp
type DfsAuditLogResp struct {
	DfsAuditLog DfsAuditLog `json:"dfs_audit_log"`
}

type _DfsAuditLogResp DfsAuditLogResp

// NewDfsAuditLogResp instantiates a new DfsAuditLogResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsAuditLogResp(dfsAuditLog DfsAuditLog) *DfsAuditLogResp {
	this := DfsAuditLogResp{}
	this.DfsAuditLog = dfsAuditLog
	return &this
}

// NewDfsAuditLogRespWithDefaults instantiates a new DfsAuditLogResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsAuditLogRespWithDefaults() *DfsAuditLogResp {
	this := DfsAuditLogResp{}
	return &this
}

// GetDfsAuditLog returns the DfsAuditLog field value
func (o *DfsAuditLogResp) GetDfsAuditLog() DfsAuditLog {
	if o == nil {
		var ret DfsAuditLog
		return ret
	}

	return o.DfsAuditLog
}

// GetDfsAuditLogOk returns a tuple with the DfsAuditLog field value
// and a boolean to check if the value has been set.
func (o *DfsAuditLogResp) GetDfsAuditLogOk() (*DfsAuditLog, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DfsAuditLog, true
}

// SetDfsAuditLog sets field value
func (o *DfsAuditLogResp) SetDfsAuditLog(v DfsAuditLog) {
	o.DfsAuditLog = v
}

func (o DfsAuditLogResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsAuditLogResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dfs_audit_log"] = o.DfsAuditLog
	return toSerialize, nil
}

func (o *DfsAuditLogResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dfs_audit_log",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDfsAuditLogResp := _DfsAuditLogResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDfsAuditLogResp)

	if err != nil {
		return err
	}

	*o = DfsAuditLogResp(varDfsAuditLogResp)

	return err
}

type NullableDfsAuditLogResp struct {
	value *DfsAuditLogResp
	isSet bool
}

func (v NullableDfsAuditLogResp) Get() *DfsAuditLogResp {
	return v.value
}

func (v *NullableDfsAuditLogResp) Set(val *DfsAuditLogResp) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsAuditLogResp) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsAuditLogResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsAuditLogResp(val *DfsAuditLogResp) *NullableDfsAuditLogResp {
	return &NullableDfsAuditLogResp{value: val, isSet: true}
}

func (v NullableDfsAuditLogResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsAuditLogResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


