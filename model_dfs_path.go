/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the DfsPath type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsPath{}

// DfsPath DfsPath defines the model of dfs path
type DfsPath struct {
	ActionStatus *string `json:"action_status,omitempty"`
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	DfsPathPerformance *DfsPathPerformance `json:"dfs_path_performance,omitempty"`
	DfsPathStat *DfsPathStat `json:"dfs_path_stat,omitempty"`
	DfsStoragePolicyNum *int64 `json:"dfs_storage_policy_num,omitempty"`
	DpDfsSnapshotPolicy *DpDfsSnapshotPolicy `json:"dp_dfs_snapshot_policy,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Rootfs *DfsRootfsNestview `json:"rootfs,omitempty"`
	Status *string `json:"status,omitempty"`
	StoragePolicyIds []int64 `json:"storage_policy_ids,omitempty"`
	Stretched *bool `json:"stretched,omitempty"`
	Update *time.Time `json:"update,omitempty"`
}

// NewDfsPath instantiates a new DfsPath object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsPath() *DfsPath {
	this := DfsPath{}
	return &this
}

// NewDfsPathWithDefaults instantiates a new DfsPath object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsPathWithDefaults() *DfsPath {
	this := DfsPath{}
	return &this
}

// GetActionStatus returns the ActionStatus field value if set, zero value otherwise.
func (o *DfsPath) GetActionStatus() string {
	if o == nil || IsNil(o.ActionStatus) {
		var ret string
		return ret
	}
	return *o.ActionStatus
}

// GetActionStatusOk returns a tuple with the ActionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsPath) GetActionStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ActionStatus) {
		return nil, false
	}
	return o.ActionStatus, true
}

// HasActionStatus returns a boolean if a field has been set.
func (o *DfsPath) HasActionStatus() bool {
	if o != nil && !IsNil(o.ActionStatus) {
		return true
	}

	return false
}

// SetActionStatus gets a reference to the given string and assigns it to the ActionStatus field.
func (o *DfsPath) SetActionStatus(v string) {
	o.ActionStatus = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *DfsPath) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsPath) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *DfsPath) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *DfsPath) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *DfsPath) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsPath) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *DfsPath) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *DfsPath) SetCreate(v time.Time) {
	o.Create = &v
}

// GetDfsPathPerformance returns the DfsPathPerformance field value if set, zero value otherwise.
func (o *DfsPath) GetDfsPathPerformance() DfsPathPerformance {
	if o == nil || IsNil(o.DfsPathPerformance) {
		var ret DfsPathPerformance
		return ret
	}
	return *o.DfsPathPerformance
}

// GetDfsPathPerformanceOk returns a tuple with the DfsPathPerformance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsPath) GetDfsPathPerformanceOk() (*DfsPathPerformance, bool) {
	if o == nil || IsNil(o.DfsPathPerformance) {
		return nil, false
	}
	return o.DfsPathPerformance, true
}

// HasDfsPathPerformance returns a boolean if a field has been set.
func (o *DfsPath) HasDfsPathPerformance() bool {
	if o != nil && !IsNil(o.DfsPathPerformance) {
		return true
	}

	return false
}

// SetDfsPathPerformance gets a reference to the given DfsPathPerformance and assigns it to the DfsPathPerformance field.
func (o *DfsPath) SetDfsPathPerformance(v DfsPathPerformance) {
	o.DfsPathPerformance = &v
}

// GetDfsPathStat returns the DfsPathStat field value if set, zero value otherwise.
func (o *DfsPath) GetDfsPathStat() DfsPathStat {
	if o == nil || IsNil(o.DfsPathStat) {
		var ret DfsPathStat
		return ret
	}
	return *o.DfsPathStat
}

// GetDfsPathStatOk returns a tuple with the DfsPathStat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsPath) GetDfsPathStatOk() (*DfsPathStat, bool) {
	if o == nil || IsNil(o.DfsPathStat) {
		return nil, false
	}
	return o.DfsPathStat, true
}

// HasDfsPathStat returns a boolean if a field has been set.
func (o *DfsPath) HasDfsPathStat() bool {
	if o != nil && !IsNil(o.DfsPathStat) {
		return true
	}

	return false
}

// SetDfsPathStat gets a reference to the given DfsPathStat and assigns it to the DfsPathStat field.
func (o *DfsPath) SetDfsPathStat(v DfsPathStat) {
	o.DfsPathStat = &v
}

// GetDfsStoragePolicyNum returns the DfsStoragePolicyNum field value if set, zero value otherwise.
func (o *DfsPath) GetDfsStoragePolicyNum() int64 {
	if o == nil || IsNil(o.DfsStoragePolicyNum) {
		var ret int64
		return ret
	}
	return *o.DfsStoragePolicyNum
}

// GetDfsStoragePolicyNumOk returns a tuple with the DfsStoragePolicyNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsPath) GetDfsStoragePolicyNumOk() (*int64, bool) {
	if o == nil || IsNil(o.DfsStoragePolicyNum) {
		return nil, false
	}
	return o.DfsStoragePolicyNum, true
}

// HasDfsStoragePolicyNum returns a boolean if a field has been set.
func (o *DfsPath) HasDfsStoragePolicyNum() bool {
	if o != nil && !IsNil(o.DfsStoragePolicyNum) {
		return true
	}

	return false
}

// SetDfsStoragePolicyNum gets a reference to the given int64 and assigns it to the DfsStoragePolicyNum field.
func (o *DfsPath) SetDfsStoragePolicyNum(v int64) {
	o.DfsStoragePolicyNum = &v
}

// GetDpDfsSnapshotPolicy returns the DpDfsSnapshotPolicy field value if set, zero value otherwise.
func (o *DfsPath) GetDpDfsSnapshotPolicy() DpDfsSnapshotPolicy {
	if o == nil || IsNil(o.DpDfsSnapshotPolicy) {
		var ret DpDfsSnapshotPolicy
		return ret
	}
	return *o.DpDfsSnapshotPolicy
}

// GetDpDfsSnapshotPolicyOk returns a tuple with the DpDfsSnapshotPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsPath) GetDpDfsSnapshotPolicyOk() (*DpDfsSnapshotPolicy, bool) {
	if o == nil || IsNil(o.DpDfsSnapshotPolicy) {
		return nil, false
	}
	return o.DpDfsSnapshotPolicy, true
}

// HasDpDfsSnapshotPolicy returns a boolean if a field has been set.
func (o *DfsPath) HasDpDfsSnapshotPolicy() bool {
	if o != nil && !IsNil(o.DpDfsSnapshotPolicy) {
		return true
	}

	return false
}

// SetDpDfsSnapshotPolicy gets a reference to the given DpDfsSnapshotPolicy and assigns it to the DpDfsSnapshotPolicy field.
func (o *DfsPath) SetDpDfsSnapshotPolicy(v DpDfsSnapshotPolicy) {
	o.DpDfsSnapshotPolicy = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DfsPath) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsPath) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DfsPath) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *DfsPath) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DfsPath) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsPath) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DfsPath) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DfsPath) SetName(v string) {
	o.Name = &v
}

// GetRootfs returns the Rootfs field value if set, zero value otherwise.
func (o *DfsPath) GetRootfs() DfsRootfsNestview {
	if o == nil || IsNil(o.Rootfs) {
		var ret DfsRootfsNestview
		return ret
	}
	return *o.Rootfs
}

// GetRootfsOk returns a tuple with the Rootfs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsPath) GetRootfsOk() (*DfsRootfsNestview, bool) {
	if o == nil || IsNil(o.Rootfs) {
		return nil, false
	}
	return o.Rootfs, true
}

// HasRootfs returns a boolean if a field has been set.
func (o *DfsPath) HasRootfs() bool {
	if o != nil && !IsNil(o.Rootfs) {
		return true
	}

	return false
}

// SetRootfs gets a reference to the given DfsRootfsNestview and assigns it to the Rootfs field.
func (o *DfsPath) SetRootfs(v DfsRootfsNestview) {
	o.Rootfs = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DfsPath) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsPath) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DfsPath) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DfsPath) SetStatus(v string) {
	o.Status = &v
}

// GetStoragePolicyIds returns the StoragePolicyIds field value if set, zero value otherwise.
func (o *DfsPath) GetStoragePolicyIds() []int64 {
	if o == nil || IsNil(o.StoragePolicyIds) {
		var ret []int64
		return ret
	}
	return o.StoragePolicyIds
}

// GetStoragePolicyIdsOk returns a tuple with the StoragePolicyIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsPath) GetStoragePolicyIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.StoragePolicyIds) {
		return nil, false
	}
	return o.StoragePolicyIds, true
}

// HasStoragePolicyIds returns a boolean if a field has been set.
func (o *DfsPath) HasStoragePolicyIds() bool {
	if o != nil && !IsNil(o.StoragePolicyIds) {
		return true
	}

	return false
}

// SetStoragePolicyIds gets a reference to the given []int64 and assigns it to the StoragePolicyIds field.
func (o *DfsPath) SetStoragePolicyIds(v []int64) {
	o.StoragePolicyIds = v
}

// GetStretched returns the Stretched field value if set, zero value otherwise.
func (o *DfsPath) GetStretched() bool {
	if o == nil || IsNil(o.Stretched) {
		var ret bool
		return ret
	}
	return *o.Stretched
}

// GetStretchedOk returns a tuple with the Stretched field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsPath) GetStretchedOk() (*bool, bool) {
	if o == nil || IsNil(o.Stretched) {
		return nil, false
	}
	return o.Stretched, true
}

// HasStretched returns a boolean if a field has been set.
func (o *DfsPath) HasStretched() bool {
	if o != nil && !IsNil(o.Stretched) {
		return true
	}

	return false
}

// SetStretched gets a reference to the given bool and assigns it to the Stretched field.
func (o *DfsPath) SetStretched(v bool) {
	o.Stretched = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *DfsPath) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsPath) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *DfsPath) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *DfsPath) SetUpdate(v time.Time) {
	o.Update = &v
}

func (o DfsPath) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsPath) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActionStatus) {
		toSerialize["action_status"] = o.ActionStatus
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.DfsPathPerformance) {
		toSerialize["dfs_path_performance"] = o.DfsPathPerformance
	}
	if !IsNil(o.DfsPathStat) {
		toSerialize["dfs_path_stat"] = o.DfsPathStat
	}
	if !IsNil(o.DfsStoragePolicyNum) {
		toSerialize["dfs_storage_policy_num"] = o.DfsStoragePolicyNum
	}
	if !IsNil(o.DpDfsSnapshotPolicy) {
		toSerialize["dp_dfs_snapshot_policy"] = o.DpDfsSnapshotPolicy
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Rootfs) {
		toSerialize["rootfs"] = o.Rootfs
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StoragePolicyIds) {
		toSerialize["storage_policy_ids"] = o.StoragePolicyIds
	}
	if !IsNil(o.Stretched) {
		toSerialize["stretched"] = o.Stretched
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	return toSerialize, nil
}

type NullableDfsPath struct {
	value *DfsPath
	isSet bool
}

func (v NullableDfsPath) Get() *DfsPath {
	return v.value
}

func (v *NullableDfsPath) Set(val *DfsPath) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsPath) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsPath) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsPath(val *DfsPath) *NullableDfsPath {
	return &NullableDfsPath{value: val, isSet: true}
}

func (v NullableDfsPath) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsPath) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


