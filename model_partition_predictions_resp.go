/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PartitionPredictionsResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PartitionPredictionsResp{}

// PartitionPredictionsResp struct for PartitionPredictionsResp
type PartitionPredictionsResp struct {
	// partition predictions
	PartitionPredictions []PartitionPrediction `json:"partition_predictions"`
}

type _PartitionPredictionsResp PartitionPredictionsResp

// NewPartitionPredictionsResp instantiates a new PartitionPredictionsResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPartitionPredictionsResp(partitionPredictions []PartitionPrediction) *PartitionPredictionsResp {
	this := PartitionPredictionsResp{}
	this.PartitionPredictions = partitionPredictions
	return &this
}

// NewPartitionPredictionsRespWithDefaults instantiates a new PartitionPredictionsResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPartitionPredictionsRespWithDefaults() *PartitionPredictionsResp {
	this := PartitionPredictionsResp{}
	return &this
}

// GetPartitionPredictions returns the PartitionPredictions field value
func (o *PartitionPredictionsResp) GetPartitionPredictions() []PartitionPrediction {
	if o == nil {
		var ret []PartitionPrediction
		return ret
	}

	return o.PartitionPredictions
}

// GetPartitionPredictionsOk returns a tuple with the PartitionPredictions field value
// and a boolean to check if the value has been set.
func (o *PartitionPredictionsResp) GetPartitionPredictionsOk() ([]PartitionPrediction, bool) {
	if o == nil {
		return nil, false
	}
	return o.PartitionPredictions, true
}

// SetPartitionPredictions sets field value
func (o *PartitionPredictionsResp) SetPartitionPredictions(v []PartitionPrediction) {
	o.PartitionPredictions = v
}

func (o PartitionPredictionsResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PartitionPredictionsResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["partition_predictions"] = o.PartitionPredictions
	return toSerialize, nil
}

func (o *PartitionPredictionsResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"partition_predictions",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPartitionPredictionsResp := _PartitionPredictionsResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPartitionPredictionsResp)

	if err != nil {
		return err
	}

	*o = PartitionPredictionsResp(varPartitionPredictionsResp)

	return err
}

type NullablePartitionPredictionsResp struct {
	value *PartitionPredictionsResp
	isSet bool
}

func (v NullablePartitionPredictionsResp) Get() *PartitionPredictionsResp {
	return v.value
}

func (v *NullablePartitionPredictionsResp) Set(val *PartitionPredictionsResp) {
	v.value = val
	v.isSet = true
}

func (v NullablePartitionPredictionsResp) IsSet() bool {
	return v.isSet
}

func (v *NullablePartitionPredictionsResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePartitionPredictionsResp(val *PartitionPredictionsResp) *NullablePartitionPredictionsResp {
	return &NullablePartitionPredictionsResp{value: val, isSet: true}
}

func (v NullablePartitionPredictionsResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePartitionPredictionsResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


