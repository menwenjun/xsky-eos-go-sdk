/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SnmpSetReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SnmpSetReq{}

// SnmpSetReq struct for SnmpSetReq
type SnmpSetReq struct {
	Snmp *SnmpSetReqSnmp `json:"snmp,omitempty"`
}

// NewSnmpSetReq instantiates a new SnmpSetReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnmpSetReq() *SnmpSetReq {
	this := SnmpSetReq{}
	return &this
}

// NewSnmpSetReqWithDefaults instantiates a new SnmpSetReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnmpSetReqWithDefaults() *SnmpSetReq {
	this := SnmpSetReq{}
	return &this
}

// GetSnmp returns the Snmp field value if set, zero value otherwise.
func (o *SnmpSetReq) GetSnmp() SnmpSetReqSnmp {
	if o == nil || IsNil(o.Snmp) {
		var ret SnmpSetReqSnmp
		return ret
	}
	return *o.Snmp
}

// GetSnmpOk returns a tuple with the Snmp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnmpSetReq) GetSnmpOk() (*SnmpSetReqSnmp, bool) {
	if o == nil || IsNil(o.Snmp) {
		return nil, false
	}
	return o.Snmp, true
}

// HasSnmp returns a boolean if a field has been set.
func (o *SnmpSetReq) HasSnmp() bool {
	if o != nil && !IsNil(o.Snmp) {
		return true
	}

	return false
}

// SetSnmp gets a reference to the given SnmpSetReqSnmp and assigns it to the Snmp field.
func (o *SnmpSetReq) SetSnmp(v SnmpSetReqSnmp) {
	o.Snmp = &v
}

func (o SnmpSetReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SnmpSetReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Snmp) {
		toSerialize["snmp"] = o.Snmp
	}
	return toSerialize, nil
}

type NullableSnmpSetReq struct {
	value *SnmpSetReq
	isSet bool
}

func (v NullableSnmpSetReq) Get() *SnmpSetReq {
	return v.value
}

func (v *NullableSnmpSetReq) Set(val *SnmpSetReq) {
	v.value = val
	v.isSet = true
}

func (v NullableSnmpSetReq) IsSet() bool {
	return v.isSet
}

func (v *NullableSnmpSetReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnmpSetReq(val *SnmpSetReq) *NullableSnmpSetReq {
	return &NullableSnmpSetReq{value: val, isSet: true}
}

func (v NullableSnmpSetReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnmpSetReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


