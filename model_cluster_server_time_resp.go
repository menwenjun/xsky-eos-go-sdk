/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the ClusterServerTimeResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterServerTimeResp{}

// ClusterServerTimeResp struct for ClusterServerTimeResp
type ClusterServerTimeResp struct {
	// current server time
	ServerTime *time.Time `json:"server_time,omitempty"`
}

// NewClusterServerTimeResp instantiates a new ClusterServerTimeResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterServerTimeResp() *ClusterServerTimeResp {
	this := ClusterServerTimeResp{}
	return &this
}

// NewClusterServerTimeRespWithDefaults instantiates a new ClusterServerTimeResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterServerTimeRespWithDefaults() *ClusterServerTimeResp {
	this := ClusterServerTimeResp{}
	return &this
}

// GetServerTime returns the ServerTime field value if set, zero value otherwise.
func (o *ClusterServerTimeResp) GetServerTime() time.Time {
	if o == nil || IsNil(o.ServerTime) {
		var ret time.Time
		return ret
	}
	return *o.ServerTime
}

// GetServerTimeOk returns a tuple with the ServerTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterServerTimeResp) GetServerTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ServerTime) {
		return nil, false
	}
	return o.ServerTime, true
}

// HasServerTime returns a boolean if a field has been set.
func (o *ClusterServerTimeResp) HasServerTime() bool {
	if o != nil && !IsNil(o.ServerTime) {
		return true
	}

	return false
}

// SetServerTime gets a reference to the given time.Time and assigns it to the ServerTime field.
func (o *ClusterServerTimeResp) SetServerTime(v time.Time) {
	o.ServerTime = &v
}

func (o ClusterServerTimeResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterServerTimeResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ServerTime) {
		toSerialize["server_time"] = o.ServerTime
	}
	return toSerialize, nil
}

type NullableClusterServerTimeResp struct {
	value *ClusterServerTimeResp
	isSet bool
}

func (v NullableClusterServerTimeResp) Get() *ClusterServerTimeResp {
	return v.value
}

func (v *NullableClusterServerTimeResp) Set(val *ClusterServerTimeResp) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterServerTimeResp) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterServerTimeResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterServerTimeResp(val *ClusterServerTimeResp) *NullableClusterServerTimeResp {
	return &NullableClusterServerTimeResp{value: val, isSet: true}
}

func (v NullableClusterServerTimeResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterServerTimeResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


