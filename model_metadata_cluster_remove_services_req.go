/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MetadataClusterRemoveServicesReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetadataClusterRemoveServicesReq{}

// MetadataClusterRemoveServicesReq struct for MetadataClusterRemoveServicesReq
type MetadataClusterRemoveServicesReq struct {
	MetadataServices []MetadataClusterRemoveServicesReqMetadataServicesElt `json:"metadata_services,omitempty"`
}

// NewMetadataClusterRemoveServicesReq instantiates a new MetadataClusterRemoveServicesReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetadataClusterRemoveServicesReq() *MetadataClusterRemoveServicesReq {
	this := MetadataClusterRemoveServicesReq{}
	return &this
}

// NewMetadataClusterRemoveServicesReqWithDefaults instantiates a new MetadataClusterRemoveServicesReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetadataClusterRemoveServicesReqWithDefaults() *MetadataClusterRemoveServicesReq {
	this := MetadataClusterRemoveServicesReq{}
	return &this
}

// GetMetadataServices returns the MetadataServices field value if set, zero value otherwise.
func (o *MetadataClusterRemoveServicesReq) GetMetadataServices() []MetadataClusterRemoveServicesReqMetadataServicesElt {
	if o == nil || IsNil(o.MetadataServices) {
		var ret []MetadataClusterRemoveServicesReqMetadataServicesElt
		return ret
	}
	return o.MetadataServices
}

// GetMetadataServicesOk returns a tuple with the MetadataServices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataClusterRemoveServicesReq) GetMetadataServicesOk() ([]MetadataClusterRemoveServicesReqMetadataServicesElt, bool) {
	if o == nil || IsNil(o.MetadataServices) {
		return nil, false
	}
	return o.MetadataServices, true
}

// HasMetadataServices returns a boolean if a field has been set.
func (o *MetadataClusterRemoveServicesReq) HasMetadataServices() bool {
	if o != nil && !IsNil(o.MetadataServices) {
		return true
	}

	return false
}

// SetMetadataServices gets a reference to the given []MetadataClusterRemoveServicesReqMetadataServicesElt and assigns it to the MetadataServices field.
func (o *MetadataClusterRemoveServicesReq) SetMetadataServices(v []MetadataClusterRemoveServicesReqMetadataServicesElt) {
	o.MetadataServices = v
}

func (o MetadataClusterRemoveServicesReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetadataClusterRemoveServicesReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MetadataServices) {
		toSerialize["metadata_services"] = o.MetadataServices
	}
	return toSerialize, nil
}

type NullableMetadataClusterRemoveServicesReq struct {
	value *MetadataClusterRemoveServicesReq
	isSet bool
}

func (v NullableMetadataClusterRemoveServicesReq) Get() *MetadataClusterRemoveServicesReq {
	return v.value
}

func (v *NullableMetadataClusterRemoveServicesReq) Set(val *MetadataClusterRemoveServicesReq) {
	v.value = val
	v.isSet = true
}

func (v NullableMetadataClusterRemoveServicesReq) IsSet() bool {
	return v.isSet
}

func (v *NullableMetadataClusterRemoveServicesReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetadataClusterRemoveServicesReq(val *MetadataClusterRemoveServicesReq) *NullableMetadataClusterRemoveServicesReq {
	return &NullableMetadataClusterRemoveServicesReq{value: val, isSet: true}
}

func (v NullableMetadataClusterRemoveServicesReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetadataClusterRemoveServicesReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


