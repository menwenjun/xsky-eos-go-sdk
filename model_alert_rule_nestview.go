/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AlertRuleNestview type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertRuleNestview{}

// AlertRuleNestview struct for AlertRuleNestview
type AlertRuleNestview struct {
	AlarmId *string `json:"alarm_id,omitempty"`
	BasicType *string `json:"basic_type,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Level *string `json:"level,omitempty"`
	ResourceTypeDesc *string `json:"resource_type_desc,omitempty"`
}

// NewAlertRuleNestview instantiates a new AlertRuleNestview object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertRuleNestview() *AlertRuleNestview {
	this := AlertRuleNestview{}
	return &this
}

// NewAlertRuleNestviewWithDefaults instantiates a new AlertRuleNestview object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertRuleNestviewWithDefaults() *AlertRuleNestview {
	this := AlertRuleNestview{}
	return &this
}

// GetAlarmId returns the AlarmId field value if set, zero value otherwise.
func (o *AlertRuleNestview) GetAlarmId() string {
	if o == nil || IsNil(o.AlarmId) {
		var ret string
		return ret
	}
	return *o.AlarmId
}

// GetAlarmIdOk returns a tuple with the AlarmId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertRuleNestview) GetAlarmIdOk() (*string, bool) {
	if o == nil || IsNil(o.AlarmId) {
		return nil, false
	}
	return o.AlarmId, true
}

// HasAlarmId returns a boolean if a field has been set.
func (o *AlertRuleNestview) HasAlarmId() bool {
	if o != nil && !IsNil(o.AlarmId) {
		return true
	}

	return false
}

// SetAlarmId gets a reference to the given string and assigns it to the AlarmId field.
func (o *AlertRuleNestview) SetAlarmId(v string) {
	o.AlarmId = &v
}

// GetBasicType returns the BasicType field value if set, zero value otherwise.
func (o *AlertRuleNestview) GetBasicType() string {
	if o == nil || IsNil(o.BasicType) {
		var ret string
		return ret
	}
	return *o.BasicType
}

// GetBasicTypeOk returns a tuple with the BasicType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertRuleNestview) GetBasicTypeOk() (*string, bool) {
	if o == nil || IsNil(o.BasicType) {
		return nil, false
	}
	return o.BasicType, true
}

// HasBasicType returns a boolean if a field has been set.
func (o *AlertRuleNestview) HasBasicType() bool {
	if o != nil && !IsNil(o.BasicType) {
		return true
	}

	return false
}

// SetBasicType gets a reference to the given string and assigns it to the BasicType field.
func (o *AlertRuleNestview) SetBasicType(v string) {
	o.BasicType = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AlertRuleNestview) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertRuleNestview) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AlertRuleNestview) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *AlertRuleNestview) SetId(v int64) {
	o.Id = &v
}

// GetLevel returns the Level field value if set, zero value otherwise.
func (o *AlertRuleNestview) GetLevel() string {
	if o == nil || IsNil(o.Level) {
		var ret string
		return ret
	}
	return *o.Level
}

// GetLevelOk returns a tuple with the Level field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertRuleNestview) GetLevelOk() (*string, bool) {
	if o == nil || IsNil(o.Level) {
		return nil, false
	}
	return o.Level, true
}

// HasLevel returns a boolean if a field has been set.
func (o *AlertRuleNestview) HasLevel() bool {
	if o != nil && !IsNil(o.Level) {
		return true
	}

	return false
}

// SetLevel gets a reference to the given string and assigns it to the Level field.
func (o *AlertRuleNestview) SetLevel(v string) {
	o.Level = &v
}

// GetResourceTypeDesc returns the ResourceTypeDesc field value if set, zero value otherwise.
func (o *AlertRuleNestview) GetResourceTypeDesc() string {
	if o == nil || IsNil(o.ResourceTypeDesc) {
		var ret string
		return ret
	}
	return *o.ResourceTypeDesc
}

// GetResourceTypeDescOk returns a tuple with the ResourceTypeDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertRuleNestview) GetResourceTypeDescOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceTypeDesc) {
		return nil, false
	}
	return o.ResourceTypeDesc, true
}

// HasResourceTypeDesc returns a boolean if a field has been set.
func (o *AlertRuleNestview) HasResourceTypeDesc() bool {
	if o != nil && !IsNil(o.ResourceTypeDesc) {
		return true
	}

	return false
}

// SetResourceTypeDesc gets a reference to the given string and assigns it to the ResourceTypeDesc field.
func (o *AlertRuleNestview) SetResourceTypeDesc(v string) {
	o.ResourceTypeDesc = &v
}

func (o AlertRuleNestview) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertRuleNestview) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlarmId) {
		toSerialize["alarm_id"] = o.AlarmId
	}
	if !IsNil(o.BasicType) {
		toSerialize["basic_type"] = o.BasicType
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Level) {
		toSerialize["level"] = o.Level
	}
	if !IsNil(o.ResourceTypeDesc) {
		toSerialize["resource_type_desc"] = o.ResourceTypeDesc
	}
	return toSerialize, nil
}

type NullableAlertRuleNestview struct {
	value *AlertRuleNestview
	isSet bool
}

func (v NullableAlertRuleNestview) Get() *AlertRuleNestview {
	return v.value
}

func (v *NullableAlertRuleNestview) Set(val *AlertRuleNestview) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertRuleNestview) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertRuleNestview) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertRuleNestview(val *AlertRuleNestview) *NullableAlertRuleNestview {
	return &NullableAlertRuleNestview{value: val, isSet: true}
}

func (v NullableAlertRuleNestview) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertRuleNestview) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


