/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the HostUpdateReqHost type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HostUpdateReqHost{}

// HostUpdateReqHost struct for HostUpdateReqHost
type HostUpdateReqHost struct {
	Description *string `json:"description,omitempty"`
	GatewayIps []string `json:"gateway_ips,omitempty"`
	Roles []string `json:"roles,omitempty"`
}

// NewHostUpdateReqHost instantiates a new HostUpdateReqHost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHostUpdateReqHost() *HostUpdateReqHost {
	this := HostUpdateReqHost{}
	return &this
}

// NewHostUpdateReqHostWithDefaults instantiates a new HostUpdateReqHost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHostUpdateReqHostWithDefaults() *HostUpdateReqHost {
	this := HostUpdateReqHost{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *HostUpdateReqHost) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostUpdateReqHost) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *HostUpdateReqHost) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *HostUpdateReqHost) SetDescription(v string) {
	o.Description = &v
}

// GetGatewayIps returns the GatewayIps field value if set, zero value otherwise.
func (o *HostUpdateReqHost) GetGatewayIps() []string {
	if o == nil || IsNil(o.GatewayIps) {
		var ret []string
		return ret
	}
	return o.GatewayIps
}

// GetGatewayIpsOk returns a tuple with the GatewayIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostUpdateReqHost) GetGatewayIpsOk() ([]string, bool) {
	if o == nil || IsNil(o.GatewayIps) {
		return nil, false
	}
	return o.GatewayIps, true
}

// HasGatewayIps returns a boolean if a field has been set.
func (o *HostUpdateReqHost) HasGatewayIps() bool {
	if o != nil && !IsNil(o.GatewayIps) {
		return true
	}

	return false
}

// SetGatewayIps gets a reference to the given []string and assigns it to the GatewayIps field.
func (o *HostUpdateReqHost) SetGatewayIps(v []string) {
	o.GatewayIps = v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *HostUpdateReqHost) GetRoles() []string {
	if o == nil || IsNil(o.Roles) {
		var ret []string
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostUpdateReqHost) GetRolesOk() ([]string, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *HostUpdateReqHost) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []string and assigns it to the Roles field.
func (o *HostUpdateReqHost) SetRoles(v []string) {
	o.Roles = v
}

func (o HostUpdateReqHost) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HostUpdateReqHost) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.GatewayIps) {
		toSerialize["gateway_ips"] = o.GatewayIps
	}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	return toSerialize, nil
}

type NullableHostUpdateReqHost struct {
	value *HostUpdateReqHost
	isSet bool
}

func (v NullableHostUpdateReqHost) Get() *HostUpdateReqHost {
	return v.value
}

func (v *NullableHostUpdateReqHost) Set(val *HostUpdateReqHost) {
	v.value = val
	v.isSet = true
}

func (v NullableHostUpdateReqHost) IsSet() bool {
	return v.isSet
}

func (v *NullableHostUpdateReqHost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHostUpdateReqHost(val *HostUpdateReqHost) *NullableHostUpdateReqHost {
	return &NullableHostUpdateReqHost{value: val, isSet: true}
}

func (v NullableHostUpdateReqHost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHostUpdateReqHost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


