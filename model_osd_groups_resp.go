/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OsdGroupsResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OsdGroupsResp{}

// OsdGroupsResp struct for OsdGroupsResp
type OsdGroupsResp struct {
	OsdGroups []OsdGroupRecord `json:"osd_groups,omitempty"`
}

// NewOsdGroupsResp instantiates a new OsdGroupsResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOsdGroupsResp() *OsdGroupsResp {
	this := OsdGroupsResp{}
	return &this
}

// NewOsdGroupsRespWithDefaults instantiates a new OsdGroupsResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOsdGroupsRespWithDefaults() *OsdGroupsResp {
	this := OsdGroupsResp{}
	return &this
}

// GetOsdGroups returns the OsdGroups field value if set, zero value otherwise.
func (o *OsdGroupsResp) GetOsdGroups() []OsdGroupRecord {
	if o == nil || IsNil(o.OsdGroups) {
		var ret []OsdGroupRecord
		return ret
	}
	return o.OsdGroups
}

// GetOsdGroupsOk returns a tuple with the OsdGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsdGroupsResp) GetOsdGroupsOk() ([]OsdGroupRecord, bool) {
	if o == nil || IsNil(o.OsdGroups) {
		return nil, false
	}
	return o.OsdGroups, true
}

// HasOsdGroups returns a boolean if a field has been set.
func (o *OsdGroupsResp) HasOsdGroups() bool {
	if o != nil && !IsNil(o.OsdGroups) {
		return true
	}

	return false
}

// SetOsdGroups gets a reference to the given []OsdGroupRecord and assigns it to the OsdGroups field.
func (o *OsdGroupsResp) SetOsdGroups(v []OsdGroupRecord) {
	o.OsdGroups = v
}

func (o OsdGroupsResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OsdGroupsResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OsdGroups) {
		toSerialize["osd_groups"] = o.OsdGroups
	}
	return toSerialize, nil
}

type NullableOsdGroupsResp struct {
	value *OsdGroupsResp
	isSet bool
}

func (v NullableOsdGroupsResp) Get() *OsdGroupsResp {
	return v.value
}

func (v *NullableOsdGroupsResp) Set(val *OsdGroupsResp) {
	v.value = val
	v.isSet = true
}

func (v NullableOsdGroupsResp) IsSet() bool {
	return v.isSet
}

func (v *NullableOsdGroupsResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOsdGroupsResp(val *OsdGroupsResp) *NullableOsdGroupsResp {
	return &NullableOsdGroupsResp{value: val, isSet: true}
}

func (v NullableOsdGroupsResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOsdGroupsResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


