/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the VolumeNonIOTask type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeNonIOTask{}

// VolumeNonIOTask VolumeNonIOTask defines volume non io task
type VolumeNonIOTask struct {
	Ats *float64 `json:"ats,omitempty"`
	AtsHb *float64 `json:"ats_hb,omitempty"`
	Other *float64 `json:"other,omitempty"`
	Unmap *float64 `json:"unmap,omitempty"`
	WriteSame *float64 `json:"write_same,omitempty"`
	Xcopy *float64 `json:"xcopy,omitempty"`
}

// NewVolumeNonIOTask instantiates a new VolumeNonIOTask object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeNonIOTask() *VolumeNonIOTask {
	this := VolumeNonIOTask{}
	return &this
}

// NewVolumeNonIOTaskWithDefaults instantiates a new VolumeNonIOTask object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeNonIOTaskWithDefaults() *VolumeNonIOTask {
	this := VolumeNonIOTask{}
	return &this
}

// GetAts returns the Ats field value if set, zero value otherwise.
func (o *VolumeNonIOTask) GetAts() float64 {
	if o == nil || IsNil(o.Ats) {
		var ret float64
		return ret
	}
	return *o.Ats
}

// GetAtsOk returns a tuple with the Ats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeNonIOTask) GetAtsOk() (*float64, bool) {
	if o == nil || IsNil(o.Ats) {
		return nil, false
	}
	return o.Ats, true
}

// HasAts returns a boolean if a field has been set.
func (o *VolumeNonIOTask) HasAts() bool {
	if o != nil && !IsNil(o.Ats) {
		return true
	}

	return false
}

// SetAts gets a reference to the given float64 and assigns it to the Ats field.
func (o *VolumeNonIOTask) SetAts(v float64) {
	o.Ats = &v
}

// GetAtsHb returns the AtsHb field value if set, zero value otherwise.
func (o *VolumeNonIOTask) GetAtsHb() float64 {
	if o == nil || IsNil(o.AtsHb) {
		var ret float64
		return ret
	}
	return *o.AtsHb
}

// GetAtsHbOk returns a tuple with the AtsHb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeNonIOTask) GetAtsHbOk() (*float64, bool) {
	if o == nil || IsNil(o.AtsHb) {
		return nil, false
	}
	return o.AtsHb, true
}

// HasAtsHb returns a boolean if a field has been set.
func (o *VolumeNonIOTask) HasAtsHb() bool {
	if o != nil && !IsNil(o.AtsHb) {
		return true
	}

	return false
}

// SetAtsHb gets a reference to the given float64 and assigns it to the AtsHb field.
func (o *VolumeNonIOTask) SetAtsHb(v float64) {
	o.AtsHb = &v
}

// GetOther returns the Other field value if set, zero value otherwise.
func (o *VolumeNonIOTask) GetOther() float64 {
	if o == nil || IsNil(o.Other) {
		var ret float64
		return ret
	}
	return *o.Other
}

// GetOtherOk returns a tuple with the Other field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeNonIOTask) GetOtherOk() (*float64, bool) {
	if o == nil || IsNil(o.Other) {
		return nil, false
	}
	return o.Other, true
}

// HasOther returns a boolean if a field has been set.
func (o *VolumeNonIOTask) HasOther() bool {
	if o != nil && !IsNil(o.Other) {
		return true
	}

	return false
}

// SetOther gets a reference to the given float64 and assigns it to the Other field.
func (o *VolumeNonIOTask) SetOther(v float64) {
	o.Other = &v
}

// GetUnmap returns the Unmap field value if set, zero value otherwise.
func (o *VolumeNonIOTask) GetUnmap() float64 {
	if o == nil || IsNil(o.Unmap) {
		var ret float64
		return ret
	}
	return *o.Unmap
}

// GetUnmapOk returns a tuple with the Unmap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeNonIOTask) GetUnmapOk() (*float64, bool) {
	if o == nil || IsNil(o.Unmap) {
		return nil, false
	}
	return o.Unmap, true
}

// HasUnmap returns a boolean if a field has been set.
func (o *VolumeNonIOTask) HasUnmap() bool {
	if o != nil && !IsNil(o.Unmap) {
		return true
	}

	return false
}

// SetUnmap gets a reference to the given float64 and assigns it to the Unmap field.
func (o *VolumeNonIOTask) SetUnmap(v float64) {
	o.Unmap = &v
}

// GetWriteSame returns the WriteSame field value if set, zero value otherwise.
func (o *VolumeNonIOTask) GetWriteSame() float64 {
	if o == nil || IsNil(o.WriteSame) {
		var ret float64
		return ret
	}
	return *o.WriteSame
}

// GetWriteSameOk returns a tuple with the WriteSame field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeNonIOTask) GetWriteSameOk() (*float64, bool) {
	if o == nil || IsNil(o.WriteSame) {
		return nil, false
	}
	return o.WriteSame, true
}

// HasWriteSame returns a boolean if a field has been set.
func (o *VolumeNonIOTask) HasWriteSame() bool {
	if o != nil && !IsNil(o.WriteSame) {
		return true
	}

	return false
}

// SetWriteSame gets a reference to the given float64 and assigns it to the WriteSame field.
func (o *VolumeNonIOTask) SetWriteSame(v float64) {
	o.WriteSame = &v
}

// GetXcopy returns the Xcopy field value if set, zero value otherwise.
func (o *VolumeNonIOTask) GetXcopy() float64 {
	if o == nil || IsNil(o.Xcopy) {
		var ret float64
		return ret
	}
	return *o.Xcopy
}

// GetXcopyOk returns a tuple with the Xcopy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeNonIOTask) GetXcopyOk() (*float64, bool) {
	if o == nil || IsNil(o.Xcopy) {
		return nil, false
	}
	return o.Xcopy, true
}

// HasXcopy returns a boolean if a field has been set.
func (o *VolumeNonIOTask) HasXcopy() bool {
	if o != nil && !IsNil(o.Xcopy) {
		return true
	}

	return false
}

// SetXcopy gets a reference to the given float64 and assigns it to the Xcopy field.
func (o *VolumeNonIOTask) SetXcopy(v float64) {
	o.Xcopy = &v
}

func (o VolumeNonIOTask) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeNonIOTask) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ats) {
		toSerialize["ats"] = o.Ats
	}
	if !IsNil(o.AtsHb) {
		toSerialize["ats_hb"] = o.AtsHb
	}
	if !IsNil(o.Other) {
		toSerialize["other"] = o.Other
	}
	if !IsNil(o.Unmap) {
		toSerialize["unmap"] = o.Unmap
	}
	if !IsNil(o.WriteSame) {
		toSerialize["write_same"] = o.WriteSame
	}
	if !IsNil(o.Xcopy) {
		toSerialize["xcopy"] = o.Xcopy
	}
	return toSerialize, nil
}

type NullableVolumeNonIOTask struct {
	value *VolumeNonIOTask
	isSet bool
}

func (v NullableVolumeNonIOTask) Get() *VolumeNonIOTask {
	return v.value
}

func (v *NullableVolumeNonIOTask) Set(val *VolumeNonIOTask) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeNonIOTask) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeNonIOTask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeNonIOTask(val *VolumeNonIOTask) *NullableVolumeNonIOTask {
	return &NullableVolumeNonIOTask{value: val, isSet: true}
}

func (v NullableVolumeNonIOTask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeNonIOTask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


