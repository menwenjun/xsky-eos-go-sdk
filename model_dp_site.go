/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the DpSite type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DpSite{}

// DpSite DpSite is a site to storage data protection data
type DpSite struct {
	Address *string `json:"address,omitempty"`
	Cluster *Cluster `json:"cluster,omitempty"`
	Config *DpSiteConfig `json:"config,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	CryptoKey *CryptoKeyNestview `json:"crypto_key,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Platform *string `json:"platform,omitempty"`
	ProtectionType *string `json:"protection_type,omitempty"`
	RemoteCluster *RemoteClusterNestview `json:"remote_cluster,omitempty"`
	Service *string `json:"service,omitempty"`
	Status *string `json:"status,omitempty"`
	Update *time.Time `json:"update,omitempty"`
}

// NewDpSite instantiates a new DpSite object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDpSite() *DpSite {
	this := DpSite{}
	return &this
}

// NewDpSiteWithDefaults instantiates a new DpSite object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDpSiteWithDefaults() *DpSite {
	this := DpSite{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *DpSite) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpSite) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *DpSite) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *DpSite) SetAddress(v string) {
	o.Address = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *DpSite) GetCluster() Cluster {
	if o == nil || IsNil(o.Cluster) {
		var ret Cluster
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpSite) GetClusterOk() (*Cluster, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *DpSite) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given Cluster and assigns it to the Cluster field.
func (o *DpSite) SetCluster(v Cluster) {
	o.Cluster = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *DpSite) GetConfig() DpSiteConfig {
	if o == nil || IsNil(o.Config) {
		var ret DpSiteConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpSite) GetConfigOk() (*DpSiteConfig, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *DpSite) HasConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given DpSiteConfig and assigns it to the Config field.
func (o *DpSite) SetConfig(v DpSiteConfig) {
	o.Config = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *DpSite) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpSite) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *DpSite) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *DpSite) SetCreate(v time.Time) {
	o.Create = &v
}

// GetCryptoKey returns the CryptoKey field value if set, zero value otherwise.
func (o *DpSite) GetCryptoKey() CryptoKeyNestview {
	if o == nil || IsNil(o.CryptoKey) {
		var ret CryptoKeyNestview
		return ret
	}
	return *o.CryptoKey
}

// GetCryptoKeyOk returns a tuple with the CryptoKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpSite) GetCryptoKeyOk() (*CryptoKeyNestview, bool) {
	if o == nil || IsNil(o.CryptoKey) {
		return nil, false
	}
	return o.CryptoKey, true
}

// HasCryptoKey returns a boolean if a field has been set.
func (o *DpSite) HasCryptoKey() bool {
	if o != nil && !IsNil(o.CryptoKey) {
		return true
	}

	return false
}

// SetCryptoKey gets a reference to the given CryptoKeyNestview and assigns it to the CryptoKey field.
func (o *DpSite) SetCryptoKey(v CryptoKeyNestview) {
	o.CryptoKey = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DpSite) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpSite) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DpSite) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *DpSite) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DpSite) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpSite) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DpSite) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DpSite) SetName(v string) {
	o.Name = &v
}

// GetPlatform returns the Platform field value if set, zero value otherwise.
func (o *DpSite) GetPlatform() string {
	if o == nil || IsNil(o.Platform) {
		var ret string
		return ret
	}
	return *o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpSite) GetPlatformOk() (*string, bool) {
	if o == nil || IsNil(o.Platform) {
		return nil, false
	}
	return o.Platform, true
}

// HasPlatform returns a boolean if a field has been set.
func (o *DpSite) HasPlatform() bool {
	if o != nil && !IsNil(o.Platform) {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given string and assigns it to the Platform field.
func (o *DpSite) SetPlatform(v string) {
	o.Platform = &v
}

// GetProtectionType returns the ProtectionType field value if set, zero value otherwise.
func (o *DpSite) GetProtectionType() string {
	if o == nil || IsNil(o.ProtectionType) {
		var ret string
		return ret
	}
	return *o.ProtectionType
}

// GetProtectionTypeOk returns a tuple with the ProtectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpSite) GetProtectionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ProtectionType) {
		return nil, false
	}
	return o.ProtectionType, true
}

// HasProtectionType returns a boolean if a field has been set.
func (o *DpSite) HasProtectionType() bool {
	if o != nil && !IsNil(o.ProtectionType) {
		return true
	}

	return false
}

// SetProtectionType gets a reference to the given string and assigns it to the ProtectionType field.
func (o *DpSite) SetProtectionType(v string) {
	o.ProtectionType = &v
}

// GetRemoteCluster returns the RemoteCluster field value if set, zero value otherwise.
func (o *DpSite) GetRemoteCluster() RemoteClusterNestview {
	if o == nil || IsNil(o.RemoteCluster) {
		var ret RemoteClusterNestview
		return ret
	}
	return *o.RemoteCluster
}

// GetRemoteClusterOk returns a tuple with the RemoteCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpSite) GetRemoteClusterOk() (*RemoteClusterNestview, bool) {
	if o == nil || IsNil(o.RemoteCluster) {
		return nil, false
	}
	return o.RemoteCluster, true
}

// HasRemoteCluster returns a boolean if a field has been set.
func (o *DpSite) HasRemoteCluster() bool {
	if o != nil && !IsNil(o.RemoteCluster) {
		return true
	}

	return false
}

// SetRemoteCluster gets a reference to the given RemoteClusterNestview and assigns it to the RemoteCluster field.
func (o *DpSite) SetRemoteCluster(v RemoteClusterNestview) {
	o.RemoteCluster = &v
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *DpSite) GetService() string {
	if o == nil || IsNil(o.Service) {
		var ret string
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpSite) GetServiceOk() (*string, bool) {
	if o == nil || IsNil(o.Service) {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *DpSite) HasService() bool {
	if o != nil && !IsNil(o.Service) {
		return true
	}

	return false
}

// SetService gets a reference to the given string and assigns it to the Service field.
func (o *DpSite) SetService(v string) {
	o.Service = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DpSite) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpSite) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DpSite) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DpSite) SetStatus(v string) {
	o.Status = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *DpSite) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpSite) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *DpSite) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *DpSite) SetUpdate(v time.Time) {
	o.Update = &v
}

func (o DpSite) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DpSite) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.CryptoKey) {
		toSerialize["crypto_key"] = o.CryptoKey
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Platform) {
		toSerialize["platform"] = o.Platform
	}
	if !IsNil(o.ProtectionType) {
		toSerialize["protection_type"] = o.ProtectionType
	}
	if !IsNil(o.RemoteCluster) {
		toSerialize["remote_cluster"] = o.RemoteCluster
	}
	if !IsNil(o.Service) {
		toSerialize["service"] = o.Service
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	return toSerialize, nil
}

type NullableDpSite struct {
	value *DpSite
	isSet bool
}

func (v NullableDpSite) Get() *DpSite {
	return v.value
}

func (v *NullableDpSite) Set(val *DpSite) {
	v.value = val
	v.isSet = true
}

func (v NullableDpSite) IsSet() bool {
	return v.isSet
}

func (v *NullableDpSite) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDpSite(val *DpSite) *NullableDpSite {
	return &NullableDpSite{value: val, isSet: true}
}

func (v NullableDpSite) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDpSite) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


