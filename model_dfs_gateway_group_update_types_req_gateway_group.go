/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DfsGatewayGroupUpdateTypesReqGatewayGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsGatewayGroupUpdateTypesReqGatewayGroup{}

// DfsGatewayGroupUpdateTypesReqGatewayGroup struct for DfsGatewayGroupUpdateTypesReqGatewayGroup
type DfsGatewayGroupUpdateTypesReqGatewayGroup struct {
	// active directory id
	AdId *int64 `json:"ad_id,omitempty"`
	// ftp encoding format, default is utf8
	Encoding *string `json:"encoding,omitempty"`
	// security type for hdfs (local, ldap)
	HdfsSecurities []string `json:"hdfs_securities,omitempty"`
	// ldap id
	LdapId *int64 `json:"ldap_id,omitempty"`
	// nfs versions supported
	NfsVersions []string `json:"nfs_versions,omitempty"`
	// security type for smb/quota (local, ad, ldap)
	Securities []string `json:"securities,omitempty"`
	// smb version 1.0 enabled
	Smb1Enabled *bool `json:"smb1_enabled,omitempty"`
	// smb browseable enable
	SmbBrowseable *bool `json:"smb_browseable,omitempty"`
	// smb Homes share enable
	SmbHomes *bool `json:"smb_homes,omitempty"`
	// smb ports
	SmbPorts []int64 `json:"smb_ports,omitempty"`
	// smb service type (smb, xsmb)
	SmbType *string `json:"smb_type,omitempty"`
	// types of supported
	Types []string `json:"types,omitempty"`
}

// NewDfsGatewayGroupUpdateTypesReqGatewayGroup instantiates a new DfsGatewayGroupUpdateTypesReqGatewayGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsGatewayGroupUpdateTypesReqGatewayGroup() *DfsGatewayGroupUpdateTypesReqGatewayGroup {
	this := DfsGatewayGroupUpdateTypesReqGatewayGroup{}
	return &this
}

// NewDfsGatewayGroupUpdateTypesReqGatewayGroupWithDefaults instantiates a new DfsGatewayGroupUpdateTypesReqGatewayGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsGatewayGroupUpdateTypesReqGatewayGroupWithDefaults() *DfsGatewayGroupUpdateTypesReqGatewayGroup {
	this := DfsGatewayGroupUpdateTypesReqGatewayGroup{}
	return &this
}

// GetAdId returns the AdId field value if set, zero value otherwise.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) GetAdId() int64 {
	if o == nil || IsNil(o.AdId) {
		var ret int64
		return ret
	}
	return *o.AdId
}

// GetAdIdOk returns a tuple with the AdId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) GetAdIdOk() (*int64, bool) {
	if o == nil || IsNil(o.AdId) {
		return nil, false
	}
	return o.AdId, true
}

// HasAdId returns a boolean if a field has been set.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) HasAdId() bool {
	if o != nil && !IsNil(o.AdId) {
		return true
	}

	return false
}

// SetAdId gets a reference to the given int64 and assigns it to the AdId field.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) SetAdId(v int64) {
	o.AdId = &v
}

// GetEncoding returns the Encoding field value if set, zero value otherwise.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) GetEncoding() string {
	if o == nil || IsNil(o.Encoding) {
		var ret string
		return ret
	}
	return *o.Encoding
}

// GetEncodingOk returns a tuple with the Encoding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) GetEncodingOk() (*string, bool) {
	if o == nil || IsNil(o.Encoding) {
		return nil, false
	}
	return o.Encoding, true
}

// HasEncoding returns a boolean if a field has been set.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) HasEncoding() bool {
	if o != nil && !IsNil(o.Encoding) {
		return true
	}

	return false
}

// SetEncoding gets a reference to the given string and assigns it to the Encoding field.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) SetEncoding(v string) {
	o.Encoding = &v
}

// GetHdfsSecurities returns the HdfsSecurities field value if set, zero value otherwise.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) GetHdfsSecurities() []string {
	if o == nil || IsNil(o.HdfsSecurities) {
		var ret []string
		return ret
	}
	return o.HdfsSecurities
}

// GetHdfsSecuritiesOk returns a tuple with the HdfsSecurities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) GetHdfsSecuritiesOk() ([]string, bool) {
	if o == nil || IsNil(o.HdfsSecurities) {
		return nil, false
	}
	return o.HdfsSecurities, true
}

// HasHdfsSecurities returns a boolean if a field has been set.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) HasHdfsSecurities() bool {
	if o != nil && !IsNil(o.HdfsSecurities) {
		return true
	}

	return false
}

// SetHdfsSecurities gets a reference to the given []string and assigns it to the HdfsSecurities field.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) SetHdfsSecurities(v []string) {
	o.HdfsSecurities = v
}

// GetLdapId returns the LdapId field value if set, zero value otherwise.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) GetLdapId() int64 {
	if o == nil || IsNil(o.LdapId) {
		var ret int64
		return ret
	}
	return *o.LdapId
}

// GetLdapIdOk returns a tuple with the LdapId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) GetLdapIdOk() (*int64, bool) {
	if o == nil || IsNil(o.LdapId) {
		return nil, false
	}
	return o.LdapId, true
}

// HasLdapId returns a boolean if a field has been set.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) HasLdapId() bool {
	if o != nil && !IsNil(o.LdapId) {
		return true
	}

	return false
}

// SetLdapId gets a reference to the given int64 and assigns it to the LdapId field.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) SetLdapId(v int64) {
	o.LdapId = &v
}

// GetNfsVersions returns the NfsVersions field value if set, zero value otherwise.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) GetNfsVersions() []string {
	if o == nil || IsNil(o.NfsVersions) {
		var ret []string
		return ret
	}
	return o.NfsVersions
}

// GetNfsVersionsOk returns a tuple with the NfsVersions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) GetNfsVersionsOk() ([]string, bool) {
	if o == nil || IsNil(o.NfsVersions) {
		return nil, false
	}
	return o.NfsVersions, true
}

// HasNfsVersions returns a boolean if a field has been set.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) HasNfsVersions() bool {
	if o != nil && !IsNil(o.NfsVersions) {
		return true
	}

	return false
}

// SetNfsVersions gets a reference to the given []string and assigns it to the NfsVersions field.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) SetNfsVersions(v []string) {
	o.NfsVersions = v
}

// GetSecurities returns the Securities field value if set, zero value otherwise.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) GetSecurities() []string {
	if o == nil || IsNil(o.Securities) {
		var ret []string
		return ret
	}
	return o.Securities
}

// GetSecuritiesOk returns a tuple with the Securities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) GetSecuritiesOk() ([]string, bool) {
	if o == nil || IsNil(o.Securities) {
		return nil, false
	}
	return o.Securities, true
}

// HasSecurities returns a boolean if a field has been set.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) HasSecurities() bool {
	if o != nil && !IsNil(o.Securities) {
		return true
	}

	return false
}

// SetSecurities gets a reference to the given []string and assigns it to the Securities field.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) SetSecurities(v []string) {
	o.Securities = v
}

// GetSmb1Enabled returns the Smb1Enabled field value if set, zero value otherwise.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) GetSmb1Enabled() bool {
	if o == nil || IsNil(o.Smb1Enabled) {
		var ret bool
		return ret
	}
	return *o.Smb1Enabled
}

// GetSmb1EnabledOk returns a tuple with the Smb1Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) GetSmb1EnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Smb1Enabled) {
		return nil, false
	}
	return o.Smb1Enabled, true
}

// HasSmb1Enabled returns a boolean if a field has been set.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) HasSmb1Enabled() bool {
	if o != nil && !IsNil(o.Smb1Enabled) {
		return true
	}

	return false
}

// SetSmb1Enabled gets a reference to the given bool and assigns it to the Smb1Enabled field.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) SetSmb1Enabled(v bool) {
	o.Smb1Enabled = &v
}

// GetSmbBrowseable returns the SmbBrowseable field value if set, zero value otherwise.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) GetSmbBrowseable() bool {
	if o == nil || IsNil(o.SmbBrowseable) {
		var ret bool
		return ret
	}
	return *o.SmbBrowseable
}

// GetSmbBrowseableOk returns a tuple with the SmbBrowseable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) GetSmbBrowseableOk() (*bool, bool) {
	if o == nil || IsNil(o.SmbBrowseable) {
		return nil, false
	}
	return o.SmbBrowseable, true
}

// HasSmbBrowseable returns a boolean if a field has been set.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) HasSmbBrowseable() bool {
	if o != nil && !IsNil(o.SmbBrowseable) {
		return true
	}

	return false
}

// SetSmbBrowseable gets a reference to the given bool and assigns it to the SmbBrowseable field.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) SetSmbBrowseable(v bool) {
	o.SmbBrowseable = &v
}

// GetSmbHomes returns the SmbHomes field value if set, zero value otherwise.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) GetSmbHomes() bool {
	if o == nil || IsNil(o.SmbHomes) {
		var ret bool
		return ret
	}
	return *o.SmbHomes
}

// GetSmbHomesOk returns a tuple with the SmbHomes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) GetSmbHomesOk() (*bool, bool) {
	if o == nil || IsNil(o.SmbHomes) {
		return nil, false
	}
	return o.SmbHomes, true
}

// HasSmbHomes returns a boolean if a field has been set.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) HasSmbHomes() bool {
	if o != nil && !IsNil(o.SmbHomes) {
		return true
	}

	return false
}

// SetSmbHomes gets a reference to the given bool and assigns it to the SmbHomes field.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) SetSmbHomes(v bool) {
	o.SmbHomes = &v
}

// GetSmbPorts returns the SmbPorts field value if set, zero value otherwise.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) GetSmbPorts() []int64 {
	if o == nil || IsNil(o.SmbPorts) {
		var ret []int64
		return ret
	}
	return o.SmbPorts
}

// GetSmbPortsOk returns a tuple with the SmbPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) GetSmbPortsOk() ([]int64, bool) {
	if o == nil || IsNil(o.SmbPorts) {
		return nil, false
	}
	return o.SmbPorts, true
}

// HasSmbPorts returns a boolean if a field has been set.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) HasSmbPorts() bool {
	if o != nil && !IsNil(o.SmbPorts) {
		return true
	}

	return false
}

// SetSmbPorts gets a reference to the given []int64 and assigns it to the SmbPorts field.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) SetSmbPorts(v []int64) {
	o.SmbPorts = v
}

// GetSmbType returns the SmbType field value if set, zero value otherwise.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) GetSmbType() string {
	if o == nil || IsNil(o.SmbType) {
		var ret string
		return ret
	}
	return *o.SmbType
}

// GetSmbTypeOk returns a tuple with the SmbType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) GetSmbTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SmbType) {
		return nil, false
	}
	return o.SmbType, true
}

// HasSmbType returns a boolean if a field has been set.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) HasSmbType() bool {
	if o != nil && !IsNil(o.SmbType) {
		return true
	}

	return false
}

// SetSmbType gets a reference to the given string and assigns it to the SmbType field.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) SetSmbType(v string) {
	o.SmbType = &v
}

// GetTypes returns the Types field value if set, zero value otherwise.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) GetTypes() []string {
	if o == nil || IsNil(o.Types) {
		var ret []string
		return ret
	}
	return o.Types
}

// GetTypesOk returns a tuple with the Types field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) GetTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.Types) {
		return nil, false
	}
	return o.Types, true
}

// HasTypes returns a boolean if a field has been set.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) HasTypes() bool {
	if o != nil && !IsNil(o.Types) {
		return true
	}

	return false
}

// SetTypes gets a reference to the given []string and assigns it to the Types field.
func (o *DfsGatewayGroupUpdateTypesReqGatewayGroup) SetTypes(v []string) {
	o.Types = v
}

func (o DfsGatewayGroupUpdateTypesReqGatewayGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsGatewayGroupUpdateTypesReqGatewayGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdId) {
		toSerialize["ad_id"] = o.AdId
	}
	if !IsNil(o.Encoding) {
		toSerialize["encoding"] = o.Encoding
	}
	if !IsNil(o.HdfsSecurities) {
		toSerialize["hdfs_securities"] = o.HdfsSecurities
	}
	if !IsNil(o.LdapId) {
		toSerialize["ldap_id"] = o.LdapId
	}
	if !IsNil(o.NfsVersions) {
		toSerialize["nfs_versions"] = o.NfsVersions
	}
	if !IsNil(o.Securities) {
		toSerialize["securities"] = o.Securities
	}
	if !IsNil(o.Smb1Enabled) {
		toSerialize["smb1_enabled"] = o.Smb1Enabled
	}
	if !IsNil(o.SmbBrowseable) {
		toSerialize["smb_browseable"] = o.SmbBrowseable
	}
	if !IsNil(o.SmbHomes) {
		toSerialize["smb_homes"] = o.SmbHomes
	}
	if !IsNil(o.SmbPorts) {
		toSerialize["smb_ports"] = o.SmbPorts
	}
	if !IsNil(o.SmbType) {
		toSerialize["smb_type"] = o.SmbType
	}
	if !IsNil(o.Types) {
		toSerialize["types"] = o.Types
	}
	return toSerialize, nil
}

type NullableDfsGatewayGroupUpdateTypesReqGatewayGroup struct {
	value *DfsGatewayGroupUpdateTypesReqGatewayGroup
	isSet bool
}

func (v NullableDfsGatewayGroupUpdateTypesReqGatewayGroup) Get() *DfsGatewayGroupUpdateTypesReqGatewayGroup {
	return v.value
}

func (v *NullableDfsGatewayGroupUpdateTypesReqGatewayGroup) Set(val *DfsGatewayGroupUpdateTypesReqGatewayGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsGatewayGroupUpdateTypesReqGatewayGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsGatewayGroupUpdateTypesReqGatewayGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsGatewayGroupUpdateTypesReqGatewayGroup(val *DfsGatewayGroupUpdateTypesReqGatewayGroup) *NullableDfsGatewayGroupUpdateTypesReqGatewayGroup {
	return &NullableDfsGatewayGroupUpdateTypesReqGatewayGroup{value: val, isSet: true}
}

func (v NullableDfsGatewayGroupUpdateTypesReqGatewayGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsGatewayGroupUpdateTypesReqGatewayGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


