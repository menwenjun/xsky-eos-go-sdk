/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the VolumeGroupCreateReqVolumeGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeGroupCreateReqVolumeGroup{}

// VolumeGroupCreateReqVolumeGroup struct for VolumeGroupCreateReqVolumeGroup
type VolumeGroupCreateReqVolumeGroup struct {
	BlockVolumeGroupSnapshotId *int64 `json:"block_volume_group_snapshot_id,omitempty"`
	BlockVolumeIds []int64 `json:"block_volume_ids,omitempty"`
	Description *string `json:"description,omitempty"`
	Flattened *bool `json:"flattened,omitempty"`
	Name string `json:"name"`
}

type _VolumeGroupCreateReqVolumeGroup VolumeGroupCreateReqVolumeGroup

// NewVolumeGroupCreateReqVolumeGroup instantiates a new VolumeGroupCreateReqVolumeGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeGroupCreateReqVolumeGroup(name string) *VolumeGroupCreateReqVolumeGroup {
	this := VolumeGroupCreateReqVolumeGroup{}
	this.Name = name
	return &this
}

// NewVolumeGroupCreateReqVolumeGroupWithDefaults instantiates a new VolumeGroupCreateReqVolumeGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeGroupCreateReqVolumeGroupWithDefaults() *VolumeGroupCreateReqVolumeGroup {
	this := VolumeGroupCreateReqVolumeGroup{}
	return &this
}

// GetBlockVolumeGroupSnapshotId returns the BlockVolumeGroupSnapshotId field value if set, zero value otherwise.
func (o *VolumeGroupCreateReqVolumeGroup) GetBlockVolumeGroupSnapshotId() int64 {
	if o == nil || IsNil(o.BlockVolumeGroupSnapshotId) {
		var ret int64
		return ret
	}
	return *o.BlockVolumeGroupSnapshotId
}

// GetBlockVolumeGroupSnapshotIdOk returns a tuple with the BlockVolumeGroupSnapshotId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupCreateReqVolumeGroup) GetBlockVolumeGroupSnapshotIdOk() (*int64, bool) {
	if o == nil || IsNil(o.BlockVolumeGroupSnapshotId) {
		return nil, false
	}
	return o.BlockVolumeGroupSnapshotId, true
}

// HasBlockVolumeGroupSnapshotId returns a boolean if a field has been set.
func (o *VolumeGroupCreateReqVolumeGroup) HasBlockVolumeGroupSnapshotId() bool {
	if o != nil && !IsNil(o.BlockVolumeGroupSnapshotId) {
		return true
	}

	return false
}

// SetBlockVolumeGroupSnapshotId gets a reference to the given int64 and assigns it to the BlockVolumeGroupSnapshotId field.
func (o *VolumeGroupCreateReqVolumeGroup) SetBlockVolumeGroupSnapshotId(v int64) {
	o.BlockVolumeGroupSnapshotId = &v
}

// GetBlockVolumeIds returns the BlockVolumeIds field value if set, zero value otherwise.
func (o *VolumeGroupCreateReqVolumeGroup) GetBlockVolumeIds() []int64 {
	if o == nil || IsNil(o.BlockVolumeIds) {
		var ret []int64
		return ret
	}
	return o.BlockVolumeIds
}

// GetBlockVolumeIdsOk returns a tuple with the BlockVolumeIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupCreateReqVolumeGroup) GetBlockVolumeIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.BlockVolumeIds) {
		return nil, false
	}
	return o.BlockVolumeIds, true
}

// HasBlockVolumeIds returns a boolean if a field has been set.
func (o *VolumeGroupCreateReqVolumeGroup) HasBlockVolumeIds() bool {
	if o != nil && !IsNil(o.BlockVolumeIds) {
		return true
	}

	return false
}

// SetBlockVolumeIds gets a reference to the given []int64 and assigns it to the BlockVolumeIds field.
func (o *VolumeGroupCreateReqVolumeGroup) SetBlockVolumeIds(v []int64) {
	o.BlockVolumeIds = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *VolumeGroupCreateReqVolumeGroup) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupCreateReqVolumeGroup) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *VolumeGroupCreateReqVolumeGroup) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *VolumeGroupCreateReqVolumeGroup) SetDescription(v string) {
	o.Description = &v
}

// GetFlattened returns the Flattened field value if set, zero value otherwise.
func (o *VolumeGroupCreateReqVolumeGroup) GetFlattened() bool {
	if o == nil || IsNil(o.Flattened) {
		var ret bool
		return ret
	}
	return *o.Flattened
}

// GetFlattenedOk returns a tuple with the Flattened field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeGroupCreateReqVolumeGroup) GetFlattenedOk() (*bool, bool) {
	if o == nil || IsNil(o.Flattened) {
		return nil, false
	}
	return o.Flattened, true
}

// HasFlattened returns a boolean if a field has been set.
func (o *VolumeGroupCreateReqVolumeGroup) HasFlattened() bool {
	if o != nil && !IsNil(o.Flattened) {
		return true
	}

	return false
}

// SetFlattened gets a reference to the given bool and assigns it to the Flattened field.
func (o *VolumeGroupCreateReqVolumeGroup) SetFlattened(v bool) {
	o.Flattened = &v
}

// GetName returns the Name field value
func (o *VolumeGroupCreateReqVolumeGroup) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *VolumeGroupCreateReqVolumeGroup) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *VolumeGroupCreateReqVolumeGroup) SetName(v string) {
	o.Name = v
}

func (o VolumeGroupCreateReqVolumeGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeGroupCreateReqVolumeGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BlockVolumeGroupSnapshotId) {
		toSerialize["block_volume_group_snapshot_id"] = o.BlockVolumeGroupSnapshotId
	}
	if !IsNil(o.BlockVolumeIds) {
		toSerialize["block_volume_ids"] = o.BlockVolumeIds
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Flattened) {
		toSerialize["flattened"] = o.Flattened
	}
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

func (o *VolumeGroupCreateReqVolumeGroup) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVolumeGroupCreateReqVolumeGroup := _VolumeGroupCreateReqVolumeGroup{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVolumeGroupCreateReqVolumeGroup)

	if err != nil {
		return err
	}

	*o = VolumeGroupCreateReqVolumeGroup(varVolumeGroupCreateReqVolumeGroup)

	return err
}

type NullableVolumeGroupCreateReqVolumeGroup struct {
	value *VolumeGroupCreateReqVolumeGroup
	isSet bool
}

func (v NullableVolumeGroupCreateReqVolumeGroup) Get() *VolumeGroupCreateReqVolumeGroup {
	return v.value
}

func (v *NullableVolumeGroupCreateReqVolumeGroup) Set(val *VolumeGroupCreateReqVolumeGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeGroupCreateReqVolumeGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeGroupCreateReqVolumeGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeGroupCreateReqVolumeGroup(val *VolumeGroupCreateReqVolumeGroup) *NullableVolumeGroupCreateReqVolumeGroup {
	return &NullableVolumeGroupCreateReqVolumeGroup{value: val, isSet: true}
}

func (v NullableVolumeGroupCreateReqVolumeGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeGroupCreateReqVolumeGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


