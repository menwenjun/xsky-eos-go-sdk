/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the NgObjectStorageResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NgObjectStorageResp{}

// NgObjectStorageResp struct for NgObjectStorageResp
type NgObjectStorageResp struct {
	NgObjectStorage *NgObjectStorage `json:"ng_object_storage,omitempty"`
}

// NewNgObjectStorageResp instantiates a new NgObjectStorageResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNgObjectStorageResp() *NgObjectStorageResp {
	this := NgObjectStorageResp{}
	return &this
}

// NewNgObjectStorageRespWithDefaults instantiates a new NgObjectStorageResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNgObjectStorageRespWithDefaults() *NgObjectStorageResp {
	this := NgObjectStorageResp{}
	return &this
}

// GetNgObjectStorage returns the NgObjectStorage field value if set, zero value otherwise.
func (o *NgObjectStorageResp) GetNgObjectStorage() NgObjectStorage {
	if o == nil || IsNil(o.NgObjectStorage) {
		var ret NgObjectStorage
		return ret
	}
	return *o.NgObjectStorage
}

// GetNgObjectStorageOk returns a tuple with the NgObjectStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NgObjectStorageResp) GetNgObjectStorageOk() (*NgObjectStorage, bool) {
	if o == nil || IsNil(o.NgObjectStorage) {
		return nil, false
	}
	return o.NgObjectStorage, true
}

// HasNgObjectStorage returns a boolean if a field has been set.
func (o *NgObjectStorageResp) HasNgObjectStorage() bool {
	if o != nil && !IsNil(o.NgObjectStorage) {
		return true
	}

	return false
}

// SetNgObjectStorage gets a reference to the given NgObjectStorage and assigns it to the NgObjectStorage field.
func (o *NgObjectStorageResp) SetNgObjectStorage(v NgObjectStorage) {
	o.NgObjectStorage = &v
}

func (o NgObjectStorageResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NgObjectStorageResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NgObjectStorage) {
		toSerialize["ng_object_storage"] = o.NgObjectStorage
	}
	return toSerialize, nil
}

type NullableNgObjectStorageResp struct {
	value *NgObjectStorageResp
	isSet bool
}

func (v NullableNgObjectStorageResp) Get() *NgObjectStorageResp {
	return v.value
}

func (v *NullableNgObjectStorageResp) Set(val *NgObjectStorageResp) {
	v.value = val
	v.isSet = true
}

func (v NullableNgObjectStorageResp) IsSet() bool {
	return v.isSet
}

func (v *NullableNgObjectStorageResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNgObjectStorageResp(val *NgObjectStorageResp) *NullableNgObjectStorageResp {
	return &NullableNgObjectStorageResp{value: val, isSet: true}
}

func (v NullableNgObjectStorageResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNgObjectStorageResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


