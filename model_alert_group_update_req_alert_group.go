/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AlertGroupUpdateReqAlertGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertGroupUpdateReqAlertGroup{}

// AlertGroupUpdateReqAlertGroup struct for AlertGroupUpdateReqAlertGroup
type AlertGroupUpdateReqAlertGroup struct {
	AlertRuleIds []int64 `json:"alert_rule_ids,omitempty"`
	EmailGroupIds []int64 `json:"email_group_ids,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewAlertGroupUpdateReqAlertGroup instantiates a new AlertGroupUpdateReqAlertGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertGroupUpdateReqAlertGroup() *AlertGroupUpdateReqAlertGroup {
	this := AlertGroupUpdateReqAlertGroup{}
	return &this
}

// NewAlertGroupUpdateReqAlertGroupWithDefaults instantiates a new AlertGroupUpdateReqAlertGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertGroupUpdateReqAlertGroupWithDefaults() *AlertGroupUpdateReqAlertGroup {
	this := AlertGroupUpdateReqAlertGroup{}
	return &this
}

// GetAlertRuleIds returns the AlertRuleIds field value if set, zero value otherwise.
func (o *AlertGroupUpdateReqAlertGroup) GetAlertRuleIds() []int64 {
	if o == nil || IsNil(o.AlertRuleIds) {
		var ret []int64
		return ret
	}
	return o.AlertRuleIds
}

// GetAlertRuleIdsOk returns a tuple with the AlertRuleIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertGroupUpdateReqAlertGroup) GetAlertRuleIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.AlertRuleIds) {
		return nil, false
	}
	return o.AlertRuleIds, true
}

// HasAlertRuleIds returns a boolean if a field has been set.
func (o *AlertGroupUpdateReqAlertGroup) HasAlertRuleIds() bool {
	if o != nil && !IsNil(o.AlertRuleIds) {
		return true
	}

	return false
}

// SetAlertRuleIds gets a reference to the given []int64 and assigns it to the AlertRuleIds field.
func (o *AlertGroupUpdateReqAlertGroup) SetAlertRuleIds(v []int64) {
	o.AlertRuleIds = v
}

// GetEmailGroupIds returns the EmailGroupIds field value if set, zero value otherwise.
func (o *AlertGroupUpdateReqAlertGroup) GetEmailGroupIds() []int64 {
	if o == nil || IsNil(o.EmailGroupIds) {
		var ret []int64
		return ret
	}
	return o.EmailGroupIds
}

// GetEmailGroupIdsOk returns a tuple with the EmailGroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertGroupUpdateReqAlertGroup) GetEmailGroupIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.EmailGroupIds) {
		return nil, false
	}
	return o.EmailGroupIds, true
}

// HasEmailGroupIds returns a boolean if a field has been set.
func (o *AlertGroupUpdateReqAlertGroup) HasEmailGroupIds() bool {
	if o != nil && !IsNil(o.EmailGroupIds) {
		return true
	}

	return false
}

// SetEmailGroupIds gets a reference to the given []int64 and assigns it to the EmailGroupIds field.
func (o *AlertGroupUpdateReqAlertGroup) SetEmailGroupIds(v []int64) {
	o.EmailGroupIds = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AlertGroupUpdateReqAlertGroup) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertGroupUpdateReqAlertGroup) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AlertGroupUpdateReqAlertGroup) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AlertGroupUpdateReqAlertGroup) SetName(v string) {
	o.Name = &v
}

func (o AlertGroupUpdateReqAlertGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertGroupUpdateReqAlertGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlertRuleIds) {
		toSerialize["alert_rule_ids"] = o.AlertRuleIds
	}
	if !IsNil(o.EmailGroupIds) {
		toSerialize["email_group_ids"] = o.EmailGroupIds
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableAlertGroupUpdateReqAlertGroup struct {
	value *AlertGroupUpdateReqAlertGroup
	isSet bool
}

func (v NullableAlertGroupUpdateReqAlertGroup) Get() *AlertGroupUpdateReqAlertGroup {
	return v.value
}

func (v *NullableAlertGroupUpdateReqAlertGroup) Set(val *AlertGroupUpdateReqAlertGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertGroupUpdateReqAlertGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertGroupUpdateReqAlertGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertGroupUpdateReqAlertGroup(val *AlertGroupUpdateReqAlertGroup) *NullableAlertGroupUpdateReqAlertGroup {
	return &NullableAlertGroupUpdateReqAlertGroup{value: val, isSet: true}
}

func (v NullableAlertGroupUpdateReqAlertGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertGroupUpdateReqAlertGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


