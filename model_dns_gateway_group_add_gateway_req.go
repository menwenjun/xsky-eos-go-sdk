/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DNSGatewayGroupAddGatewayReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DNSGatewayGroupAddGatewayReq{}

// DNSGatewayGroupAddGatewayReq struct for DNSGatewayGroupAddGatewayReq
type DNSGatewayGroupAddGatewayReq struct {
	DnsGateways []DNSGatewayGroupAddGatewayReqGatewaysElt `json:"dns_gateways,omitempty"`
}

// NewDNSGatewayGroupAddGatewayReq instantiates a new DNSGatewayGroupAddGatewayReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDNSGatewayGroupAddGatewayReq() *DNSGatewayGroupAddGatewayReq {
	this := DNSGatewayGroupAddGatewayReq{}
	return &this
}

// NewDNSGatewayGroupAddGatewayReqWithDefaults instantiates a new DNSGatewayGroupAddGatewayReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDNSGatewayGroupAddGatewayReqWithDefaults() *DNSGatewayGroupAddGatewayReq {
	this := DNSGatewayGroupAddGatewayReq{}
	return &this
}

// GetDnsGateways returns the DnsGateways field value if set, zero value otherwise.
func (o *DNSGatewayGroupAddGatewayReq) GetDnsGateways() []DNSGatewayGroupAddGatewayReqGatewaysElt {
	if o == nil || IsNil(o.DnsGateways) {
		var ret []DNSGatewayGroupAddGatewayReqGatewaysElt
		return ret
	}
	return o.DnsGateways
}

// GetDnsGatewaysOk returns a tuple with the DnsGateways field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DNSGatewayGroupAddGatewayReq) GetDnsGatewaysOk() ([]DNSGatewayGroupAddGatewayReqGatewaysElt, bool) {
	if o == nil || IsNil(o.DnsGateways) {
		return nil, false
	}
	return o.DnsGateways, true
}

// HasDnsGateways returns a boolean if a field has been set.
func (o *DNSGatewayGroupAddGatewayReq) HasDnsGateways() bool {
	if o != nil && !IsNil(o.DnsGateways) {
		return true
	}

	return false
}

// SetDnsGateways gets a reference to the given []DNSGatewayGroupAddGatewayReqGatewaysElt and assigns it to the DnsGateways field.
func (o *DNSGatewayGroupAddGatewayReq) SetDnsGateways(v []DNSGatewayGroupAddGatewayReqGatewaysElt) {
	o.DnsGateways = v
}

func (o DNSGatewayGroupAddGatewayReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DNSGatewayGroupAddGatewayReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DnsGateways) {
		toSerialize["dns_gateways"] = o.DnsGateways
	}
	return toSerialize, nil
}

type NullableDNSGatewayGroupAddGatewayReq struct {
	value *DNSGatewayGroupAddGatewayReq
	isSet bool
}

func (v NullableDNSGatewayGroupAddGatewayReq) Get() *DNSGatewayGroupAddGatewayReq {
	return v.value
}

func (v *NullableDNSGatewayGroupAddGatewayReq) Set(val *DNSGatewayGroupAddGatewayReq) {
	v.value = val
	v.isSet = true
}

func (v NullableDNSGatewayGroupAddGatewayReq) IsSet() bool {
	return v.isSet
}

func (v *NullableDNSGatewayGroupAddGatewayReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDNSGatewayGroupAddGatewayReq(val *DNSGatewayGroupAddGatewayReq) *NullableDNSGatewayGroupAddGatewayReq {
	return &NullableDNSGatewayGroupAddGatewayReq{value: val, isSet: true}
}

func (v NullableDNSGatewayGroupAddGatewayReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDNSGatewayGroupAddGatewayReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


