/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the LoginSSOExtra type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LoginSSOExtra{}

// LoginSSOExtra struct for LoginSSOExtra
type LoginSSOExtra struct {
	Code *string `json:"code,omitempty"`
	State *string `json:"state,omitempty"`
	Ticket *string `json:"ticket,omitempty"`
}

// NewLoginSSOExtra instantiates a new LoginSSOExtra object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoginSSOExtra() *LoginSSOExtra {
	this := LoginSSOExtra{}
	return &this
}

// NewLoginSSOExtraWithDefaults instantiates a new LoginSSOExtra object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoginSSOExtraWithDefaults() *LoginSSOExtra {
	this := LoginSSOExtra{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *LoginSSOExtra) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginSSOExtra) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *LoginSSOExtra) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *LoginSSOExtra) SetCode(v string) {
	o.Code = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *LoginSSOExtra) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginSSOExtra) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *LoginSSOExtra) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *LoginSSOExtra) SetState(v string) {
	o.State = &v
}

// GetTicket returns the Ticket field value if set, zero value otherwise.
func (o *LoginSSOExtra) GetTicket() string {
	if o == nil || IsNil(o.Ticket) {
		var ret string
		return ret
	}
	return *o.Ticket
}

// GetTicketOk returns a tuple with the Ticket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginSSOExtra) GetTicketOk() (*string, bool) {
	if o == nil || IsNil(o.Ticket) {
		return nil, false
	}
	return o.Ticket, true
}

// HasTicket returns a boolean if a field has been set.
func (o *LoginSSOExtra) HasTicket() bool {
	if o != nil && !IsNil(o.Ticket) {
		return true
	}

	return false
}

// SetTicket gets a reference to the given string and assigns it to the Ticket field.
func (o *LoginSSOExtra) SetTicket(v string) {
	o.Ticket = &v
}

func (o LoginSSOExtra) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LoginSSOExtra) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Ticket) {
		toSerialize["ticket"] = o.Ticket
	}
	return toSerialize, nil
}

type NullableLoginSSOExtra struct {
	value *LoginSSOExtra
	isSet bool
}

func (v NullableLoginSSOExtra) Get() *LoginSSOExtra {
	return v.value
}

func (v *NullableLoginSSOExtra) Set(val *LoginSSOExtra) {
	v.value = val
	v.isSet = true
}

func (v NullableLoginSSOExtra) IsSet() bool {
	return v.isSet
}

func (v *NullableLoginSSOExtra) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoginSSOExtra(val *LoginSSOExtra) *NullableLoginSSOExtra {
	return &NullableLoginSSOExtra{value: val, isSet: true}
}

func (v NullableLoginSSOExtra) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoginSSOExtra) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


