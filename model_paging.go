/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the Paging type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Paging{}

// Paging Paging defines paging object
type Paging struct {
	Count *int64 `json:"count,omitempty"`
	Duration *int64 `json:"duration,omitempty"`
	DurationBegin *time.Time `json:"duration_begin,omitempty"`
	DurationEnd *time.Time `json:"duration_end,omitempty"`
	Limit *int64 `json:"limit,omitempty"`
	Next *string `json:"next,omitempty"`
	Offset *int64 `json:"offset,omitempty"`
	Period *string `json:"period,omitempty"`
	TotalCount *int64 `json:"total_count,omitempty"`
	Truncated *bool `json:"truncated,omitempty"`
}

// NewPaging instantiates a new Paging object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaging() *Paging {
	this := Paging{}
	return &this
}

// NewPagingWithDefaults instantiates a new Paging object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPagingWithDefaults() *Paging {
	this := Paging{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *Paging) GetCount() int64 {
	if o == nil || IsNil(o.Count) {
		var ret int64
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Paging) GetCountOk() (*int64, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *Paging) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int64 and assigns it to the Count field.
func (o *Paging) SetCount(v int64) {
	o.Count = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *Paging) GetDuration() int64 {
	if o == nil || IsNil(o.Duration) {
		var ret int64
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Paging) GetDurationOk() (*int64, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *Paging) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int64 and assigns it to the Duration field.
func (o *Paging) SetDuration(v int64) {
	o.Duration = &v
}

// GetDurationBegin returns the DurationBegin field value if set, zero value otherwise.
func (o *Paging) GetDurationBegin() time.Time {
	if o == nil || IsNil(o.DurationBegin) {
		var ret time.Time
		return ret
	}
	return *o.DurationBegin
}

// GetDurationBeginOk returns a tuple with the DurationBegin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Paging) GetDurationBeginOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DurationBegin) {
		return nil, false
	}
	return o.DurationBegin, true
}

// HasDurationBegin returns a boolean if a field has been set.
func (o *Paging) HasDurationBegin() bool {
	if o != nil && !IsNil(o.DurationBegin) {
		return true
	}

	return false
}

// SetDurationBegin gets a reference to the given time.Time and assigns it to the DurationBegin field.
func (o *Paging) SetDurationBegin(v time.Time) {
	o.DurationBegin = &v
}

// GetDurationEnd returns the DurationEnd field value if set, zero value otherwise.
func (o *Paging) GetDurationEnd() time.Time {
	if o == nil || IsNil(o.DurationEnd) {
		var ret time.Time
		return ret
	}
	return *o.DurationEnd
}

// GetDurationEndOk returns a tuple with the DurationEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Paging) GetDurationEndOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DurationEnd) {
		return nil, false
	}
	return o.DurationEnd, true
}

// HasDurationEnd returns a boolean if a field has been set.
func (o *Paging) HasDurationEnd() bool {
	if o != nil && !IsNil(o.DurationEnd) {
		return true
	}

	return false
}

// SetDurationEnd gets a reference to the given time.Time and assigns it to the DurationEnd field.
func (o *Paging) SetDurationEnd(v time.Time) {
	o.DurationEnd = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *Paging) GetLimit() int64 {
	if o == nil || IsNil(o.Limit) {
		var ret int64
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Paging) GetLimitOk() (*int64, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *Paging) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int64 and assigns it to the Limit field.
func (o *Paging) SetLimit(v int64) {
	o.Limit = &v
}

// GetNext returns the Next field value if set, zero value otherwise.
func (o *Paging) GetNext() string {
	if o == nil || IsNil(o.Next) {
		var ret string
		return ret
	}
	return *o.Next
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Paging) GetNextOk() (*string, bool) {
	if o == nil || IsNil(o.Next) {
		return nil, false
	}
	return o.Next, true
}

// HasNext returns a boolean if a field has been set.
func (o *Paging) HasNext() bool {
	if o != nil && !IsNil(o.Next) {
		return true
	}

	return false
}

// SetNext gets a reference to the given string and assigns it to the Next field.
func (o *Paging) SetNext(v string) {
	o.Next = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *Paging) GetOffset() int64 {
	if o == nil || IsNil(o.Offset) {
		var ret int64
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Paging) GetOffsetOk() (*int64, bool) {
	if o == nil || IsNil(o.Offset) {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *Paging) HasOffset() bool {
	if o != nil && !IsNil(o.Offset) {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int64 and assigns it to the Offset field.
func (o *Paging) SetOffset(v int64) {
	o.Offset = &v
}

// GetPeriod returns the Period field value if set, zero value otherwise.
func (o *Paging) GetPeriod() string {
	if o == nil || IsNil(o.Period) {
		var ret string
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Paging) GetPeriodOk() (*string, bool) {
	if o == nil || IsNil(o.Period) {
		return nil, false
	}
	return o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *Paging) HasPeriod() bool {
	if o != nil && !IsNil(o.Period) {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given string and assigns it to the Period field.
func (o *Paging) SetPeriod(v string) {
	o.Period = &v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *Paging) GetTotalCount() int64 {
	if o == nil || IsNil(o.TotalCount) {
		var ret int64
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Paging) GetTotalCountOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *Paging) HasTotalCount() bool {
	if o != nil && !IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int64 and assigns it to the TotalCount field.
func (o *Paging) SetTotalCount(v int64) {
	o.TotalCount = &v
}

// GetTruncated returns the Truncated field value if set, zero value otherwise.
func (o *Paging) GetTruncated() bool {
	if o == nil || IsNil(o.Truncated) {
		var ret bool
		return ret
	}
	return *o.Truncated
}

// GetTruncatedOk returns a tuple with the Truncated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Paging) GetTruncatedOk() (*bool, bool) {
	if o == nil || IsNil(o.Truncated) {
		return nil, false
	}
	return o.Truncated, true
}

// HasTruncated returns a boolean if a field has been set.
func (o *Paging) HasTruncated() bool {
	if o != nil && !IsNil(o.Truncated) {
		return true
	}

	return false
}

// SetTruncated gets a reference to the given bool and assigns it to the Truncated field.
func (o *Paging) SetTruncated(v bool) {
	o.Truncated = &v
}

func (o Paging) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Paging) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.DurationBegin) {
		toSerialize["duration_begin"] = o.DurationBegin
	}
	if !IsNil(o.DurationEnd) {
		toSerialize["duration_end"] = o.DurationEnd
	}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.Next) {
		toSerialize["next"] = o.Next
	}
	if !IsNil(o.Offset) {
		toSerialize["offset"] = o.Offset
	}
	if !IsNil(o.Period) {
		toSerialize["period"] = o.Period
	}
	if !IsNil(o.TotalCount) {
		toSerialize["total_count"] = o.TotalCount
	}
	if !IsNil(o.Truncated) {
		toSerialize["truncated"] = o.Truncated
	}
	return toSerialize, nil
}

type NullablePaging struct {
	value *Paging
	isSet bool
}

func (v NullablePaging) Get() *Paging {
	return v.value
}

func (v *NullablePaging) Set(val *Paging) {
	v.value = val
	v.isSet = true
}

func (v NullablePaging) IsSet() bool {
	return v.isSet
}

func (v *NullablePaging) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaging(val *Paging) *NullablePaging {
	return &NullablePaging{value: val, isSet: true}
}

func (v NullablePaging) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaging) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


