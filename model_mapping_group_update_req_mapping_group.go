/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MappingGroupUpdateReqMappingGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MappingGroupUpdateReqMappingGroup{}

// MappingGroupUpdateReqMappingGroup struct for MappingGroupUpdateReqMappingGroup
type MappingGroupUpdateReqMappingGroup struct {
	BlockVolumeIds []int64 `json:"block_volume_ids,omitempty"`
}

// NewMappingGroupUpdateReqMappingGroup instantiates a new MappingGroupUpdateReqMappingGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMappingGroupUpdateReqMappingGroup() *MappingGroupUpdateReqMappingGroup {
	this := MappingGroupUpdateReqMappingGroup{}
	return &this
}

// NewMappingGroupUpdateReqMappingGroupWithDefaults instantiates a new MappingGroupUpdateReqMappingGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMappingGroupUpdateReqMappingGroupWithDefaults() *MappingGroupUpdateReqMappingGroup {
	this := MappingGroupUpdateReqMappingGroup{}
	return &this
}

// GetBlockVolumeIds returns the BlockVolumeIds field value if set, zero value otherwise.
func (o *MappingGroupUpdateReqMappingGroup) GetBlockVolumeIds() []int64 {
	if o == nil || IsNil(o.BlockVolumeIds) {
		var ret []int64
		return ret
	}
	return o.BlockVolumeIds
}

// GetBlockVolumeIdsOk returns a tuple with the BlockVolumeIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MappingGroupUpdateReqMappingGroup) GetBlockVolumeIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.BlockVolumeIds) {
		return nil, false
	}
	return o.BlockVolumeIds, true
}

// HasBlockVolumeIds returns a boolean if a field has been set.
func (o *MappingGroupUpdateReqMappingGroup) HasBlockVolumeIds() bool {
	if o != nil && !IsNil(o.BlockVolumeIds) {
		return true
	}

	return false
}

// SetBlockVolumeIds gets a reference to the given []int64 and assigns it to the BlockVolumeIds field.
func (o *MappingGroupUpdateReqMappingGroup) SetBlockVolumeIds(v []int64) {
	o.BlockVolumeIds = v
}

func (o MappingGroupUpdateReqMappingGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MappingGroupUpdateReqMappingGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BlockVolumeIds) {
		toSerialize["block_volume_ids"] = o.BlockVolumeIds
	}
	return toSerialize, nil
}

type NullableMappingGroupUpdateReqMappingGroup struct {
	value *MappingGroupUpdateReqMappingGroup
	isSet bool
}

func (v NullableMappingGroupUpdateReqMappingGroup) Get() *MappingGroupUpdateReqMappingGroup {
	return v.value
}

func (v *NullableMappingGroupUpdateReqMappingGroup) Set(val *MappingGroupUpdateReqMappingGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableMappingGroupUpdateReqMappingGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableMappingGroupUpdateReqMappingGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMappingGroupUpdateReqMappingGroup(val *MappingGroupUpdateReqMappingGroup) *NullableMappingGroupUpdateReqMappingGroup {
	return &NullableMappingGroupUpdateReqMappingGroup{value: val, isSet: true}
}

func (v NullableMappingGroupUpdateReqMappingGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMappingGroupUpdateReqMappingGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


