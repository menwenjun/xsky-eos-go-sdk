/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ObjectStorageGatewaysResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ObjectStorageGatewaysResp{}

// ObjectStorageGatewaysResp struct for ObjectStorageGatewaysResp
type ObjectStorageGatewaysResp struct {
	// object storage gateways
	OsGateways []ObjectStorageGatewayRecord `json:"os_gateways"`
}

type _ObjectStorageGatewaysResp ObjectStorageGatewaysResp

// NewObjectStorageGatewaysResp instantiates a new ObjectStorageGatewaysResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectStorageGatewaysResp(osGateways []ObjectStorageGatewayRecord) *ObjectStorageGatewaysResp {
	this := ObjectStorageGatewaysResp{}
	this.OsGateways = osGateways
	return &this
}

// NewObjectStorageGatewaysRespWithDefaults instantiates a new ObjectStorageGatewaysResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectStorageGatewaysRespWithDefaults() *ObjectStorageGatewaysResp {
	this := ObjectStorageGatewaysResp{}
	return &this
}

// GetOsGateways returns the OsGateways field value
func (o *ObjectStorageGatewaysResp) GetOsGateways() []ObjectStorageGatewayRecord {
	if o == nil {
		var ret []ObjectStorageGatewayRecord
		return ret
	}

	return o.OsGateways
}

// GetOsGatewaysOk returns a tuple with the OsGateways field value
// and a boolean to check if the value has been set.
func (o *ObjectStorageGatewaysResp) GetOsGatewaysOk() ([]ObjectStorageGatewayRecord, bool) {
	if o == nil {
		return nil, false
	}
	return o.OsGateways, true
}

// SetOsGateways sets field value
func (o *ObjectStorageGatewaysResp) SetOsGateways(v []ObjectStorageGatewayRecord) {
	o.OsGateways = v
}

func (o ObjectStorageGatewaysResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ObjectStorageGatewaysResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["os_gateways"] = o.OsGateways
	return toSerialize, nil
}

func (o *ObjectStorageGatewaysResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"os_gateways",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varObjectStorageGatewaysResp := _ObjectStorageGatewaysResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varObjectStorageGatewaysResp)

	if err != nil {
		return err
	}

	*o = ObjectStorageGatewaysResp(varObjectStorageGatewaysResp)

	return err
}

type NullableObjectStorageGatewaysResp struct {
	value *ObjectStorageGatewaysResp
	isSet bool
}

func (v NullableObjectStorageGatewaysResp) Get() *ObjectStorageGatewaysResp {
	return v.value
}

func (v *NullableObjectStorageGatewaysResp) Set(val *ObjectStorageGatewaysResp) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectStorageGatewaysResp) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectStorageGatewaysResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectStorageGatewaysResp(val *ObjectStorageGatewaysResp) *NullableObjectStorageGatewaysResp {
	return &NullableObjectStorageGatewaysResp{value: val, isSet: true}
}

func (v NullableObjectStorageGatewaysResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectStorageGatewaysResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


