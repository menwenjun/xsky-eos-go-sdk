/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RoleMappingCreateReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoleMappingCreateReq{}

// RoleMappingCreateReq struct for RoleMappingCreateReq
type RoleMappingCreateReq struct {
	RoleMapping *RoleMappingCreateReqMapping `json:"role_mapping,omitempty"`
}

// NewRoleMappingCreateReq instantiates a new RoleMappingCreateReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleMappingCreateReq() *RoleMappingCreateReq {
	this := RoleMappingCreateReq{}
	return &this
}

// NewRoleMappingCreateReqWithDefaults instantiates a new RoleMappingCreateReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleMappingCreateReqWithDefaults() *RoleMappingCreateReq {
	this := RoleMappingCreateReq{}
	return &this
}

// GetRoleMapping returns the RoleMapping field value if set, zero value otherwise.
func (o *RoleMappingCreateReq) GetRoleMapping() RoleMappingCreateReqMapping {
	if o == nil || IsNil(o.RoleMapping) {
		var ret RoleMappingCreateReqMapping
		return ret
	}
	return *o.RoleMapping
}

// GetRoleMappingOk returns a tuple with the RoleMapping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleMappingCreateReq) GetRoleMappingOk() (*RoleMappingCreateReqMapping, bool) {
	if o == nil || IsNil(o.RoleMapping) {
		return nil, false
	}
	return o.RoleMapping, true
}

// HasRoleMapping returns a boolean if a field has been set.
func (o *RoleMappingCreateReq) HasRoleMapping() bool {
	if o != nil && !IsNil(o.RoleMapping) {
		return true
	}

	return false
}

// SetRoleMapping gets a reference to the given RoleMappingCreateReqMapping and assigns it to the RoleMapping field.
func (o *RoleMappingCreateReq) SetRoleMapping(v RoleMappingCreateReqMapping) {
	o.RoleMapping = &v
}

func (o RoleMappingCreateReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoleMappingCreateReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RoleMapping) {
		toSerialize["role_mapping"] = o.RoleMapping
	}
	return toSerialize, nil
}

type NullableRoleMappingCreateReq struct {
	value *RoleMappingCreateReq
	isSet bool
}

func (v NullableRoleMappingCreateReq) Get() *RoleMappingCreateReq {
	return v.value
}

func (v *NullableRoleMappingCreateReq) Set(val *RoleMappingCreateReq) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleMappingCreateReq) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleMappingCreateReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleMappingCreateReq(val *RoleMappingCreateReq) *NullableRoleMappingCreateReq {
	return &NullableRoleMappingCreateReq{value: val, isSet: true}
}

func (v NullableRoleMappingCreateReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleMappingCreateReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


