/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the VolumeMigrationJob type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeMigrationJob{}

// VolumeMigrationJob VolumeMigrationJob defines the volume migration job record
type VolumeMigrationJob struct {
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	DestPool *PoolNestview `json:"dest_pool,omitempty"`
	FinishedAt *time.Time `json:"finished_at,omitempty"`
	Host *HostNestview `json:"host,omitempty"`
	Id *int64 `json:"id,omitempty"`
	RemainingTime *int64 `json:"remaining_time,omitempty"`
	SourcePool *PoolNestview `json:"source_pool,omitempty"`
	StartedAt *time.Time `json:"started_at,omitempty"`
	Status *string `json:"status,omitempty"`
	Stripes *int64 `json:"stripes,omitempty"`
	Task *Task `json:"task,omitempty"`
	Update *time.Time `json:"update,omitempty"`
	Volume *VolumeNestview `json:"volume,omitempty"`
}

// NewVolumeMigrationJob instantiates a new VolumeMigrationJob object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeMigrationJob() *VolumeMigrationJob {
	this := VolumeMigrationJob{}
	return &this
}

// NewVolumeMigrationJobWithDefaults instantiates a new VolumeMigrationJob object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeMigrationJobWithDefaults() *VolumeMigrationJob {
	this := VolumeMigrationJob{}
	return &this
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *VolumeMigrationJob) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeMigrationJob) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *VolumeMigrationJob) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *VolumeMigrationJob) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *VolumeMigrationJob) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeMigrationJob) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *VolumeMigrationJob) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *VolumeMigrationJob) SetCreate(v time.Time) {
	o.Create = &v
}

// GetDestPool returns the DestPool field value if set, zero value otherwise.
func (o *VolumeMigrationJob) GetDestPool() PoolNestview {
	if o == nil || IsNil(o.DestPool) {
		var ret PoolNestview
		return ret
	}
	return *o.DestPool
}

// GetDestPoolOk returns a tuple with the DestPool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeMigrationJob) GetDestPoolOk() (*PoolNestview, bool) {
	if o == nil || IsNil(o.DestPool) {
		return nil, false
	}
	return o.DestPool, true
}

// HasDestPool returns a boolean if a field has been set.
func (o *VolumeMigrationJob) HasDestPool() bool {
	if o != nil && !IsNil(o.DestPool) {
		return true
	}

	return false
}

// SetDestPool gets a reference to the given PoolNestview and assigns it to the DestPool field.
func (o *VolumeMigrationJob) SetDestPool(v PoolNestview) {
	o.DestPool = &v
}

// GetFinishedAt returns the FinishedAt field value if set, zero value otherwise.
func (o *VolumeMigrationJob) GetFinishedAt() time.Time {
	if o == nil || IsNil(o.FinishedAt) {
		var ret time.Time
		return ret
	}
	return *o.FinishedAt
}

// GetFinishedAtOk returns a tuple with the FinishedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeMigrationJob) GetFinishedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.FinishedAt) {
		return nil, false
	}
	return o.FinishedAt, true
}

// HasFinishedAt returns a boolean if a field has been set.
func (o *VolumeMigrationJob) HasFinishedAt() bool {
	if o != nil && !IsNil(o.FinishedAt) {
		return true
	}

	return false
}

// SetFinishedAt gets a reference to the given time.Time and assigns it to the FinishedAt field.
func (o *VolumeMigrationJob) SetFinishedAt(v time.Time) {
	o.FinishedAt = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *VolumeMigrationJob) GetHost() HostNestview {
	if o == nil || IsNil(o.Host) {
		var ret HostNestview
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeMigrationJob) GetHostOk() (*HostNestview, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *VolumeMigrationJob) HasHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given HostNestview and assigns it to the Host field.
func (o *VolumeMigrationJob) SetHost(v HostNestview) {
	o.Host = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VolumeMigrationJob) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeMigrationJob) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VolumeMigrationJob) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *VolumeMigrationJob) SetId(v int64) {
	o.Id = &v
}

// GetRemainingTime returns the RemainingTime field value if set, zero value otherwise.
func (o *VolumeMigrationJob) GetRemainingTime() int64 {
	if o == nil || IsNil(o.RemainingTime) {
		var ret int64
		return ret
	}
	return *o.RemainingTime
}

// GetRemainingTimeOk returns a tuple with the RemainingTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeMigrationJob) GetRemainingTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.RemainingTime) {
		return nil, false
	}
	return o.RemainingTime, true
}

// HasRemainingTime returns a boolean if a field has been set.
func (o *VolumeMigrationJob) HasRemainingTime() bool {
	if o != nil && !IsNil(o.RemainingTime) {
		return true
	}

	return false
}

// SetRemainingTime gets a reference to the given int64 and assigns it to the RemainingTime field.
func (o *VolumeMigrationJob) SetRemainingTime(v int64) {
	o.RemainingTime = &v
}

// GetSourcePool returns the SourcePool field value if set, zero value otherwise.
func (o *VolumeMigrationJob) GetSourcePool() PoolNestview {
	if o == nil || IsNil(o.SourcePool) {
		var ret PoolNestview
		return ret
	}
	return *o.SourcePool
}

// GetSourcePoolOk returns a tuple with the SourcePool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeMigrationJob) GetSourcePoolOk() (*PoolNestview, bool) {
	if o == nil || IsNil(o.SourcePool) {
		return nil, false
	}
	return o.SourcePool, true
}

// HasSourcePool returns a boolean if a field has been set.
func (o *VolumeMigrationJob) HasSourcePool() bool {
	if o != nil && !IsNil(o.SourcePool) {
		return true
	}

	return false
}

// SetSourcePool gets a reference to the given PoolNestview and assigns it to the SourcePool field.
func (o *VolumeMigrationJob) SetSourcePool(v PoolNestview) {
	o.SourcePool = &v
}

// GetStartedAt returns the StartedAt field value if set, zero value otherwise.
func (o *VolumeMigrationJob) GetStartedAt() time.Time {
	if o == nil || IsNil(o.StartedAt) {
		var ret time.Time
		return ret
	}
	return *o.StartedAt
}

// GetStartedAtOk returns a tuple with the StartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeMigrationJob) GetStartedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartedAt) {
		return nil, false
	}
	return o.StartedAt, true
}

// HasStartedAt returns a boolean if a field has been set.
func (o *VolumeMigrationJob) HasStartedAt() bool {
	if o != nil && !IsNil(o.StartedAt) {
		return true
	}

	return false
}

// SetStartedAt gets a reference to the given time.Time and assigns it to the StartedAt field.
func (o *VolumeMigrationJob) SetStartedAt(v time.Time) {
	o.StartedAt = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *VolumeMigrationJob) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeMigrationJob) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *VolumeMigrationJob) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *VolumeMigrationJob) SetStatus(v string) {
	o.Status = &v
}

// GetStripes returns the Stripes field value if set, zero value otherwise.
func (o *VolumeMigrationJob) GetStripes() int64 {
	if o == nil || IsNil(o.Stripes) {
		var ret int64
		return ret
	}
	return *o.Stripes
}

// GetStripesOk returns a tuple with the Stripes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeMigrationJob) GetStripesOk() (*int64, bool) {
	if o == nil || IsNil(o.Stripes) {
		return nil, false
	}
	return o.Stripes, true
}

// HasStripes returns a boolean if a field has been set.
func (o *VolumeMigrationJob) HasStripes() bool {
	if o != nil && !IsNil(o.Stripes) {
		return true
	}

	return false
}

// SetStripes gets a reference to the given int64 and assigns it to the Stripes field.
func (o *VolumeMigrationJob) SetStripes(v int64) {
	o.Stripes = &v
}

// GetTask returns the Task field value if set, zero value otherwise.
func (o *VolumeMigrationJob) GetTask() Task {
	if o == nil || IsNil(o.Task) {
		var ret Task
		return ret
	}
	return *o.Task
}

// GetTaskOk returns a tuple with the Task field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeMigrationJob) GetTaskOk() (*Task, bool) {
	if o == nil || IsNil(o.Task) {
		return nil, false
	}
	return o.Task, true
}

// HasTask returns a boolean if a field has been set.
func (o *VolumeMigrationJob) HasTask() bool {
	if o != nil && !IsNil(o.Task) {
		return true
	}

	return false
}

// SetTask gets a reference to the given Task and assigns it to the Task field.
func (o *VolumeMigrationJob) SetTask(v Task) {
	o.Task = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *VolumeMigrationJob) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeMigrationJob) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *VolumeMigrationJob) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *VolumeMigrationJob) SetUpdate(v time.Time) {
	o.Update = &v
}

// GetVolume returns the Volume field value if set, zero value otherwise.
func (o *VolumeMigrationJob) GetVolume() VolumeNestview {
	if o == nil || IsNil(o.Volume) {
		var ret VolumeNestview
		return ret
	}
	return *o.Volume
}

// GetVolumeOk returns a tuple with the Volume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeMigrationJob) GetVolumeOk() (*VolumeNestview, bool) {
	if o == nil || IsNil(o.Volume) {
		return nil, false
	}
	return o.Volume, true
}

// HasVolume returns a boolean if a field has been set.
func (o *VolumeMigrationJob) HasVolume() bool {
	if o != nil && !IsNil(o.Volume) {
		return true
	}

	return false
}

// SetVolume gets a reference to the given VolumeNestview and assigns it to the Volume field.
func (o *VolumeMigrationJob) SetVolume(v VolumeNestview) {
	o.Volume = &v
}

func (o VolumeMigrationJob) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeMigrationJob) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.DestPool) {
		toSerialize["dest_pool"] = o.DestPool
	}
	if !IsNil(o.FinishedAt) {
		toSerialize["finished_at"] = o.FinishedAt
	}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.RemainingTime) {
		toSerialize["remaining_time"] = o.RemainingTime
	}
	if !IsNil(o.SourcePool) {
		toSerialize["source_pool"] = o.SourcePool
	}
	if !IsNil(o.StartedAt) {
		toSerialize["started_at"] = o.StartedAt
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Stripes) {
		toSerialize["stripes"] = o.Stripes
	}
	if !IsNil(o.Task) {
		toSerialize["task"] = o.Task
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	if !IsNil(o.Volume) {
		toSerialize["volume"] = o.Volume
	}
	return toSerialize, nil
}

type NullableVolumeMigrationJob struct {
	value *VolumeMigrationJob
	isSet bool
}

func (v NullableVolumeMigrationJob) Get() *VolumeMigrationJob {
	return v.value
}

func (v *NullableVolumeMigrationJob) Set(val *VolumeMigrationJob) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeMigrationJob) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeMigrationJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeMigrationJob(val *VolumeMigrationJob) *NullableVolumeMigrationJob {
	return &NullableVolumeMigrationJob{value: val, isSet: true}
}

func (v NullableVolumeMigrationJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeMigrationJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


