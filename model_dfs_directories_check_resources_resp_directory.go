/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DfsDirectoriesCheckResourcesRespDirectory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsDirectoriesCheckResourcesRespDirectory{}

// DfsDirectoriesCheckResourcesRespDirectory struct for DfsDirectoriesCheckResourcesRespDirectory
type DfsDirectoriesCheckResourcesRespDirectory struct {
	DirResources []DirResource `json:"dir_resources,omitempty"`
}

// NewDfsDirectoriesCheckResourcesRespDirectory instantiates a new DfsDirectoriesCheckResourcesRespDirectory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsDirectoriesCheckResourcesRespDirectory() *DfsDirectoriesCheckResourcesRespDirectory {
	this := DfsDirectoriesCheckResourcesRespDirectory{}
	return &this
}

// NewDfsDirectoriesCheckResourcesRespDirectoryWithDefaults instantiates a new DfsDirectoriesCheckResourcesRespDirectory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsDirectoriesCheckResourcesRespDirectoryWithDefaults() *DfsDirectoriesCheckResourcesRespDirectory {
	this := DfsDirectoriesCheckResourcesRespDirectory{}
	return &this
}

// GetDirResources returns the DirResources field value if set, zero value otherwise.
func (o *DfsDirectoriesCheckResourcesRespDirectory) GetDirResources() []DirResource {
	if o == nil || IsNil(o.DirResources) {
		var ret []DirResource
		return ret
	}
	return o.DirResources
}

// GetDirResourcesOk returns a tuple with the DirResources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsDirectoriesCheckResourcesRespDirectory) GetDirResourcesOk() ([]DirResource, bool) {
	if o == nil || IsNil(o.DirResources) {
		return nil, false
	}
	return o.DirResources, true
}

// HasDirResources returns a boolean if a field has been set.
func (o *DfsDirectoriesCheckResourcesRespDirectory) HasDirResources() bool {
	if o != nil && !IsNil(o.DirResources) {
		return true
	}

	return false
}

// SetDirResources gets a reference to the given []DirResource and assigns it to the DirResources field.
func (o *DfsDirectoriesCheckResourcesRespDirectory) SetDirResources(v []DirResource) {
	o.DirResources = v
}

func (o DfsDirectoriesCheckResourcesRespDirectory) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsDirectoriesCheckResourcesRespDirectory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DirResources) {
		toSerialize["dir_resources"] = o.DirResources
	}
	return toSerialize, nil
}

type NullableDfsDirectoriesCheckResourcesRespDirectory struct {
	value *DfsDirectoriesCheckResourcesRespDirectory
	isSet bool
}

func (v NullableDfsDirectoriesCheckResourcesRespDirectory) Get() *DfsDirectoriesCheckResourcesRespDirectory {
	return v.value
}

func (v *NullableDfsDirectoriesCheckResourcesRespDirectory) Set(val *DfsDirectoriesCheckResourcesRespDirectory) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsDirectoriesCheckResourcesRespDirectory) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsDirectoriesCheckResourcesRespDirectory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsDirectoriesCheckResourcesRespDirectory(val *DfsDirectoriesCheckResourcesRespDirectory) *NullableDfsDirectoriesCheckResourcesRespDirectory {
	return &NullableDfsDirectoriesCheckResourcesRespDirectory{value: val, isSet: true}
}

func (v NullableDfsDirectoriesCheckResourcesRespDirectory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsDirectoriesCheckResourcesRespDirectory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


