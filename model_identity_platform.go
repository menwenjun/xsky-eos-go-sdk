/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the IdentityPlatform type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentityPlatform{}

// IdentityPlatform IdentityPlatform defines different platforms for auth
type IdentityPlatform struct {
	// time of creating identity platform
	Create *time.Time `json:"create,omitempty"`
	// enable the identity platform or not
	Enabled *bool `json:"enabled,omitempty"`
	Extra map[string]interface{} `json:"extra,omitempty"`
	// num of failed authorization
	FailureNum *int64 `json:"failure_num,omitempty"`
	// id of identity platform
	Id *int64 `json:"id,omitempty"`
	// secret key of identity platform
	Key *string `json:"key,omitempty"`
	LoginPageEnabled *bool `json:"login_page_enabled,omitempty"`
	LogoutUrl *string `json:"logout_url,omitempty"`
	// name of identity platform
	Name *string `json:"name,omitempty"`
	// num of successful authorization
	SuccessNum *int64 `json:"success_num,omitempty"`
	// type of identity platform
	Type *string `json:"type,omitempty"`
	// time of updating identity platform
	Update *time.Time `json:"update,omitempty"`
	// url of identity platform
	Url *string `json:"url,omitempty"`
	Uuid *string `json:"uuid,omitempty"`
	// vendor for type
	Vendor *string `json:"vendor,omitempty"`
}

// NewIdentityPlatform instantiates a new IdentityPlatform object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityPlatform() *IdentityPlatform {
	this := IdentityPlatform{}
	return &this
}

// NewIdentityPlatformWithDefaults instantiates a new IdentityPlatform object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityPlatformWithDefaults() *IdentityPlatform {
	this := IdentityPlatform{}
	return &this
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *IdentityPlatform) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityPlatform) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *IdentityPlatform) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *IdentityPlatform) SetCreate(v time.Time) {
	o.Create = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *IdentityPlatform) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityPlatform) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *IdentityPlatform) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *IdentityPlatform) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetExtra returns the Extra field value if set, zero value otherwise.
func (o *IdentityPlatform) GetExtra() map[string]interface{} {
	if o == nil || IsNil(o.Extra) {
		var ret map[string]interface{}
		return ret
	}
	return o.Extra
}

// GetExtraOk returns a tuple with the Extra field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityPlatform) GetExtraOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Extra) {
		return map[string]interface{}{}, false
	}
	return o.Extra, true
}

// HasExtra returns a boolean if a field has been set.
func (o *IdentityPlatform) HasExtra() bool {
	if o != nil && !IsNil(o.Extra) {
		return true
	}

	return false
}

// SetExtra gets a reference to the given map[string]interface{} and assigns it to the Extra field.
func (o *IdentityPlatform) SetExtra(v map[string]interface{}) {
	o.Extra = v
}

// GetFailureNum returns the FailureNum field value if set, zero value otherwise.
func (o *IdentityPlatform) GetFailureNum() int64 {
	if o == nil || IsNil(o.FailureNum) {
		var ret int64
		return ret
	}
	return *o.FailureNum
}

// GetFailureNumOk returns a tuple with the FailureNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityPlatform) GetFailureNumOk() (*int64, bool) {
	if o == nil || IsNil(o.FailureNum) {
		return nil, false
	}
	return o.FailureNum, true
}

// HasFailureNum returns a boolean if a field has been set.
func (o *IdentityPlatform) HasFailureNum() bool {
	if o != nil && !IsNil(o.FailureNum) {
		return true
	}

	return false
}

// SetFailureNum gets a reference to the given int64 and assigns it to the FailureNum field.
func (o *IdentityPlatform) SetFailureNum(v int64) {
	o.FailureNum = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IdentityPlatform) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityPlatform) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IdentityPlatform) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *IdentityPlatform) SetId(v int64) {
	o.Id = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *IdentityPlatform) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityPlatform) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *IdentityPlatform) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *IdentityPlatform) SetKey(v string) {
	o.Key = &v
}

// GetLoginPageEnabled returns the LoginPageEnabled field value if set, zero value otherwise.
func (o *IdentityPlatform) GetLoginPageEnabled() bool {
	if o == nil || IsNil(o.LoginPageEnabled) {
		var ret bool
		return ret
	}
	return *o.LoginPageEnabled
}

// GetLoginPageEnabledOk returns a tuple with the LoginPageEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityPlatform) GetLoginPageEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.LoginPageEnabled) {
		return nil, false
	}
	return o.LoginPageEnabled, true
}

// HasLoginPageEnabled returns a boolean if a field has been set.
func (o *IdentityPlatform) HasLoginPageEnabled() bool {
	if o != nil && !IsNil(o.LoginPageEnabled) {
		return true
	}

	return false
}

// SetLoginPageEnabled gets a reference to the given bool and assigns it to the LoginPageEnabled field.
func (o *IdentityPlatform) SetLoginPageEnabled(v bool) {
	o.LoginPageEnabled = &v
}

// GetLogoutUrl returns the LogoutUrl field value if set, zero value otherwise.
func (o *IdentityPlatform) GetLogoutUrl() string {
	if o == nil || IsNil(o.LogoutUrl) {
		var ret string
		return ret
	}
	return *o.LogoutUrl
}

// GetLogoutUrlOk returns a tuple with the LogoutUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityPlatform) GetLogoutUrlOk() (*string, bool) {
	if o == nil || IsNil(o.LogoutUrl) {
		return nil, false
	}
	return o.LogoutUrl, true
}

// HasLogoutUrl returns a boolean if a field has been set.
func (o *IdentityPlatform) HasLogoutUrl() bool {
	if o != nil && !IsNil(o.LogoutUrl) {
		return true
	}

	return false
}

// SetLogoutUrl gets a reference to the given string and assigns it to the LogoutUrl field.
func (o *IdentityPlatform) SetLogoutUrl(v string) {
	o.LogoutUrl = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IdentityPlatform) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityPlatform) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IdentityPlatform) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IdentityPlatform) SetName(v string) {
	o.Name = &v
}

// GetSuccessNum returns the SuccessNum field value if set, zero value otherwise.
func (o *IdentityPlatform) GetSuccessNum() int64 {
	if o == nil || IsNil(o.SuccessNum) {
		var ret int64
		return ret
	}
	return *o.SuccessNum
}

// GetSuccessNumOk returns a tuple with the SuccessNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityPlatform) GetSuccessNumOk() (*int64, bool) {
	if o == nil || IsNil(o.SuccessNum) {
		return nil, false
	}
	return o.SuccessNum, true
}

// HasSuccessNum returns a boolean if a field has been set.
func (o *IdentityPlatform) HasSuccessNum() bool {
	if o != nil && !IsNil(o.SuccessNum) {
		return true
	}

	return false
}

// SetSuccessNum gets a reference to the given int64 and assigns it to the SuccessNum field.
func (o *IdentityPlatform) SetSuccessNum(v int64) {
	o.SuccessNum = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *IdentityPlatform) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityPlatform) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *IdentityPlatform) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *IdentityPlatform) SetType(v string) {
	o.Type = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *IdentityPlatform) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityPlatform) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *IdentityPlatform) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *IdentityPlatform) SetUpdate(v time.Time) {
	o.Update = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *IdentityPlatform) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityPlatform) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *IdentityPlatform) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *IdentityPlatform) SetUrl(v string) {
	o.Url = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *IdentityPlatform) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityPlatform) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *IdentityPlatform) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *IdentityPlatform) SetUuid(v string) {
	o.Uuid = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *IdentityPlatform) GetVendor() string {
	if o == nil || IsNil(o.Vendor) {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityPlatform) GetVendorOk() (*string, bool) {
	if o == nil || IsNil(o.Vendor) {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *IdentityPlatform) HasVendor() bool {
	if o != nil && !IsNil(o.Vendor) {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *IdentityPlatform) SetVendor(v string) {
	o.Vendor = &v
}

func (o IdentityPlatform) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentityPlatform) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Extra) {
		toSerialize["extra"] = o.Extra
	}
	if !IsNil(o.FailureNum) {
		toSerialize["failure_num"] = o.FailureNum
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.LoginPageEnabled) {
		toSerialize["login_page_enabled"] = o.LoginPageEnabled
	}
	if !IsNil(o.LogoutUrl) {
		toSerialize["logout_url"] = o.LogoutUrl
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.SuccessNum) {
		toSerialize["success_num"] = o.SuccessNum
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	if !IsNil(o.Vendor) {
		toSerialize["vendor"] = o.Vendor
	}
	return toSerialize, nil
}

type NullableIdentityPlatform struct {
	value *IdentityPlatform
	isSet bool
}

func (v NullableIdentityPlatform) Get() *IdentityPlatform {
	return v.value
}

func (v *NullableIdentityPlatform) Set(val *IdentityPlatform) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityPlatform) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityPlatform) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityPlatform(val *IdentityPlatform) *NullableIdentityPlatform {
	return &NullableIdentityPlatform{value: val, isSet: true}
}

func (v NullableIdentityPlatform) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityPlatform) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


