/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FSUserGroupRemoveUsersReqUserGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FSUserGroupRemoveUsersReqUserGroup{}

// FSUserGroupRemoveUsersReqUserGroup struct for FSUserGroupRemoveUsersReqUserGroup
type FSUserGroupRemoveUsersReqUserGroup struct {
	// ids of users, which are required when type is smb or ftp
	FsUserIds []int64 `json:"fs_user_ids,omitempty"`
}

// NewFSUserGroupRemoveUsersReqUserGroup instantiates a new FSUserGroupRemoveUsersReqUserGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFSUserGroupRemoveUsersReqUserGroup() *FSUserGroupRemoveUsersReqUserGroup {
	this := FSUserGroupRemoveUsersReqUserGroup{}
	return &this
}

// NewFSUserGroupRemoveUsersReqUserGroupWithDefaults instantiates a new FSUserGroupRemoveUsersReqUserGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFSUserGroupRemoveUsersReqUserGroupWithDefaults() *FSUserGroupRemoveUsersReqUserGroup {
	this := FSUserGroupRemoveUsersReqUserGroup{}
	return &this
}

// GetFsUserIds returns the FsUserIds field value if set, zero value otherwise.
func (o *FSUserGroupRemoveUsersReqUserGroup) GetFsUserIds() []int64 {
	if o == nil || IsNil(o.FsUserIds) {
		var ret []int64
		return ret
	}
	return o.FsUserIds
}

// GetFsUserIdsOk returns a tuple with the FsUserIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FSUserGroupRemoveUsersReqUserGroup) GetFsUserIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.FsUserIds) {
		return nil, false
	}
	return o.FsUserIds, true
}

// HasFsUserIds returns a boolean if a field has been set.
func (o *FSUserGroupRemoveUsersReqUserGroup) HasFsUserIds() bool {
	if o != nil && !IsNil(o.FsUserIds) {
		return true
	}

	return false
}

// SetFsUserIds gets a reference to the given []int64 and assigns it to the FsUserIds field.
func (o *FSUserGroupRemoveUsersReqUserGroup) SetFsUserIds(v []int64) {
	o.FsUserIds = v
}

func (o FSUserGroupRemoveUsersReqUserGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FSUserGroupRemoveUsersReqUserGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FsUserIds) {
		toSerialize["fs_user_ids"] = o.FsUserIds
	}
	return toSerialize, nil
}

type NullableFSUserGroupRemoveUsersReqUserGroup struct {
	value *FSUserGroupRemoveUsersReqUserGroup
	isSet bool
}

func (v NullableFSUserGroupRemoveUsersReqUserGroup) Get() *FSUserGroupRemoveUsersReqUserGroup {
	return v.value
}

func (v *NullableFSUserGroupRemoveUsersReqUserGroup) Set(val *FSUserGroupRemoveUsersReqUserGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableFSUserGroupRemoveUsersReqUserGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableFSUserGroupRemoveUsersReqUserGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFSUserGroupRemoveUsersReqUserGroup(val *FSUserGroupRemoveUsersReqUserGroup) *NullableFSUserGroupRemoveUsersReqUserGroup {
	return &NullableFSUserGroupRemoveUsersReqUserGroup{value: val, isSet: true}
}

func (v NullableFSUserGroupRemoveUsersReqUserGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFSUserGroupRemoveUsersReqUserGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


