/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OSZoneTranslogResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OSZoneTranslogResp{}

// OSZoneTranslogResp struct for OSZoneTranslogResp
type OSZoneTranslogResp struct {
	OsZoneTranslog *OSZoneTranslog `json:"os_zone_translog,omitempty"`
}

// NewOSZoneTranslogResp instantiates a new OSZoneTranslogResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOSZoneTranslogResp() *OSZoneTranslogResp {
	this := OSZoneTranslogResp{}
	return &this
}

// NewOSZoneTranslogRespWithDefaults instantiates a new OSZoneTranslogResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOSZoneTranslogRespWithDefaults() *OSZoneTranslogResp {
	this := OSZoneTranslogResp{}
	return &this
}

// GetOsZoneTranslog returns the OsZoneTranslog field value if set, zero value otherwise.
func (o *OSZoneTranslogResp) GetOsZoneTranslog() OSZoneTranslog {
	if o == nil || IsNil(o.OsZoneTranslog) {
		var ret OSZoneTranslog
		return ret
	}
	return *o.OsZoneTranslog
}

// GetOsZoneTranslogOk returns a tuple with the OsZoneTranslog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSZoneTranslogResp) GetOsZoneTranslogOk() (*OSZoneTranslog, bool) {
	if o == nil || IsNil(o.OsZoneTranslog) {
		return nil, false
	}
	return o.OsZoneTranslog, true
}

// HasOsZoneTranslog returns a boolean if a field has been set.
func (o *OSZoneTranslogResp) HasOsZoneTranslog() bool {
	if o != nil && !IsNil(o.OsZoneTranslog) {
		return true
	}

	return false
}

// SetOsZoneTranslog gets a reference to the given OSZoneTranslog and assigns it to the OsZoneTranslog field.
func (o *OSZoneTranslogResp) SetOsZoneTranslog(v OSZoneTranslog) {
	o.OsZoneTranslog = &v
}

func (o OSZoneTranslogResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OSZoneTranslogResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OsZoneTranslog) {
		toSerialize["os_zone_translog"] = o.OsZoneTranslog
	}
	return toSerialize, nil
}

type NullableOSZoneTranslogResp struct {
	value *OSZoneTranslogResp
	isSet bool
}

func (v NullableOSZoneTranslogResp) Get() *OSZoneTranslogResp {
	return v.value
}

func (v *NullableOSZoneTranslogResp) Set(val *OSZoneTranslogResp) {
	v.value = val
	v.isSet = true
}

func (v NullableOSZoneTranslogResp) IsSet() bool {
	return v.isSet
}

func (v *NullableOSZoneTranslogResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSZoneTranslogResp(val *OSZoneTranslogResp) *NullableOSZoneTranslogResp {
	return &NullableOSZoneTranslogResp{value: val, isSet: true}
}

func (v NullableOSZoneTranslogResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSZoneTranslogResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


