/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the MetadataServiceRecord type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetadataServiceRecord{}

// MetadataServiceRecord MetadataServiceRecord contains information of a metadata service
type MetadataServiceRecord struct {
	ActionStatus *string `json:"action_status,omitempty"`
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	Complete *bool `json:"complete,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	Disk *DiskNestview `json:"disk,omitempty"`
	Host *HostNestview `json:"host,omitempty"`
	Id *int64 `json:"id,omitempty"`
	// journal partition size, 5G
	MetaBytes *int64 `json:"meta_bytes,omitempty"`
	MetadataCluster *MetadataClusterNestview `json:"metadata_cluster,omitempty"`
	// xmds.N
	Name *string `json:"name,omitempty"`
	PlacementNode *PlacementNodeNestview `json:"placement_node,omitempty"`
	Status *string `json:"status,omitempty"`
	Up *bool `json:"up,omitempty"`
	Update *time.Time `json:"update,omitempty"`
	XmdsId *int64 `json:"xmds_id,omitempty"`
	Samples []MetadataServiceStat `json:"samples,omitempty"`
}

// NewMetadataServiceRecord instantiates a new MetadataServiceRecord object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetadataServiceRecord() *MetadataServiceRecord {
	this := MetadataServiceRecord{}
	return &this
}

// NewMetadataServiceRecordWithDefaults instantiates a new MetadataServiceRecord object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetadataServiceRecordWithDefaults() *MetadataServiceRecord {
	this := MetadataServiceRecord{}
	return &this
}

// GetActionStatus returns the ActionStatus field value if set, zero value otherwise.
func (o *MetadataServiceRecord) GetActionStatus() string {
	if o == nil || IsNil(o.ActionStatus) {
		var ret string
		return ret
	}
	return *o.ActionStatus
}

// GetActionStatusOk returns a tuple with the ActionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataServiceRecord) GetActionStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ActionStatus) {
		return nil, false
	}
	return o.ActionStatus, true
}

// HasActionStatus returns a boolean if a field has been set.
func (o *MetadataServiceRecord) HasActionStatus() bool {
	if o != nil && !IsNil(o.ActionStatus) {
		return true
	}

	return false
}

// SetActionStatus gets a reference to the given string and assigns it to the ActionStatus field.
func (o *MetadataServiceRecord) SetActionStatus(v string) {
	o.ActionStatus = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *MetadataServiceRecord) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataServiceRecord) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *MetadataServiceRecord) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *MetadataServiceRecord) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetComplete returns the Complete field value if set, zero value otherwise.
func (o *MetadataServiceRecord) GetComplete() bool {
	if o == nil || IsNil(o.Complete) {
		var ret bool
		return ret
	}
	return *o.Complete
}

// GetCompleteOk returns a tuple with the Complete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataServiceRecord) GetCompleteOk() (*bool, bool) {
	if o == nil || IsNil(o.Complete) {
		return nil, false
	}
	return o.Complete, true
}

// HasComplete returns a boolean if a field has been set.
func (o *MetadataServiceRecord) HasComplete() bool {
	if o != nil && !IsNil(o.Complete) {
		return true
	}

	return false
}

// SetComplete gets a reference to the given bool and assigns it to the Complete field.
func (o *MetadataServiceRecord) SetComplete(v bool) {
	o.Complete = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *MetadataServiceRecord) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataServiceRecord) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *MetadataServiceRecord) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *MetadataServiceRecord) SetCreate(v time.Time) {
	o.Create = &v
}

// GetDisk returns the Disk field value if set, zero value otherwise.
func (o *MetadataServiceRecord) GetDisk() DiskNestview {
	if o == nil || IsNil(o.Disk) {
		var ret DiskNestview
		return ret
	}
	return *o.Disk
}

// GetDiskOk returns a tuple with the Disk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataServiceRecord) GetDiskOk() (*DiskNestview, bool) {
	if o == nil || IsNil(o.Disk) {
		return nil, false
	}
	return o.Disk, true
}

// HasDisk returns a boolean if a field has been set.
func (o *MetadataServiceRecord) HasDisk() bool {
	if o != nil && !IsNil(o.Disk) {
		return true
	}

	return false
}

// SetDisk gets a reference to the given DiskNestview and assigns it to the Disk field.
func (o *MetadataServiceRecord) SetDisk(v DiskNestview) {
	o.Disk = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *MetadataServiceRecord) GetHost() HostNestview {
	if o == nil || IsNil(o.Host) {
		var ret HostNestview
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataServiceRecord) GetHostOk() (*HostNestview, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *MetadataServiceRecord) HasHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given HostNestview and assigns it to the Host field.
func (o *MetadataServiceRecord) SetHost(v HostNestview) {
	o.Host = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MetadataServiceRecord) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataServiceRecord) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MetadataServiceRecord) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *MetadataServiceRecord) SetId(v int64) {
	o.Id = &v
}

// GetMetaBytes returns the MetaBytes field value if set, zero value otherwise.
func (o *MetadataServiceRecord) GetMetaBytes() int64 {
	if o == nil || IsNil(o.MetaBytes) {
		var ret int64
		return ret
	}
	return *o.MetaBytes
}

// GetMetaBytesOk returns a tuple with the MetaBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataServiceRecord) GetMetaBytesOk() (*int64, bool) {
	if o == nil || IsNil(o.MetaBytes) {
		return nil, false
	}
	return o.MetaBytes, true
}

// HasMetaBytes returns a boolean if a field has been set.
func (o *MetadataServiceRecord) HasMetaBytes() bool {
	if o != nil && !IsNil(o.MetaBytes) {
		return true
	}

	return false
}

// SetMetaBytes gets a reference to the given int64 and assigns it to the MetaBytes field.
func (o *MetadataServiceRecord) SetMetaBytes(v int64) {
	o.MetaBytes = &v
}

// GetMetadataCluster returns the MetadataCluster field value if set, zero value otherwise.
func (o *MetadataServiceRecord) GetMetadataCluster() MetadataClusterNestview {
	if o == nil || IsNil(o.MetadataCluster) {
		var ret MetadataClusterNestview
		return ret
	}
	return *o.MetadataCluster
}

// GetMetadataClusterOk returns a tuple with the MetadataCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataServiceRecord) GetMetadataClusterOk() (*MetadataClusterNestview, bool) {
	if o == nil || IsNil(o.MetadataCluster) {
		return nil, false
	}
	return o.MetadataCluster, true
}

// HasMetadataCluster returns a boolean if a field has been set.
func (o *MetadataServiceRecord) HasMetadataCluster() bool {
	if o != nil && !IsNil(o.MetadataCluster) {
		return true
	}

	return false
}

// SetMetadataCluster gets a reference to the given MetadataClusterNestview and assigns it to the MetadataCluster field.
func (o *MetadataServiceRecord) SetMetadataCluster(v MetadataClusterNestview) {
	o.MetadataCluster = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MetadataServiceRecord) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataServiceRecord) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MetadataServiceRecord) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MetadataServiceRecord) SetName(v string) {
	o.Name = &v
}

// GetPlacementNode returns the PlacementNode field value if set, zero value otherwise.
func (o *MetadataServiceRecord) GetPlacementNode() PlacementNodeNestview {
	if o == nil || IsNil(o.PlacementNode) {
		var ret PlacementNodeNestview
		return ret
	}
	return *o.PlacementNode
}

// GetPlacementNodeOk returns a tuple with the PlacementNode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataServiceRecord) GetPlacementNodeOk() (*PlacementNodeNestview, bool) {
	if o == nil || IsNil(o.PlacementNode) {
		return nil, false
	}
	return o.PlacementNode, true
}

// HasPlacementNode returns a boolean if a field has been set.
func (o *MetadataServiceRecord) HasPlacementNode() bool {
	if o != nil && !IsNil(o.PlacementNode) {
		return true
	}

	return false
}

// SetPlacementNode gets a reference to the given PlacementNodeNestview and assigns it to the PlacementNode field.
func (o *MetadataServiceRecord) SetPlacementNode(v PlacementNodeNestview) {
	o.PlacementNode = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *MetadataServiceRecord) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataServiceRecord) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MetadataServiceRecord) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *MetadataServiceRecord) SetStatus(v string) {
	o.Status = &v
}

// GetUp returns the Up field value if set, zero value otherwise.
func (o *MetadataServiceRecord) GetUp() bool {
	if o == nil || IsNil(o.Up) {
		var ret bool
		return ret
	}
	return *o.Up
}

// GetUpOk returns a tuple with the Up field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataServiceRecord) GetUpOk() (*bool, bool) {
	if o == nil || IsNil(o.Up) {
		return nil, false
	}
	return o.Up, true
}

// HasUp returns a boolean if a field has been set.
func (o *MetadataServiceRecord) HasUp() bool {
	if o != nil && !IsNil(o.Up) {
		return true
	}

	return false
}

// SetUp gets a reference to the given bool and assigns it to the Up field.
func (o *MetadataServiceRecord) SetUp(v bool) {
	o.Up = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *MetadataServiceRecord) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataServiceRecord) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *MetadataServiceRecord) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *MetadataServiceRecord) SetUpdate(v time.Time) {
	o.Update = &v
}

// GetXmdsId returns the XmdsId field value if set, zero value otherwise.
func (o *MetadataServiceRecord) GetXmdsId() int64 {
	if o == nil || IsNil(o.XmdsId) {
		var ret int64
		return ret
	}
	return *o.XmdsId
}

// GetXmdsIdOk returns a tuple with the XmdsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataServiceRecord) GetXmdsIdOk() (*int64, bool) {
	if o == nil || IsNil(o.XmdsId) {
		return nil, false
	}
	return o.XmdsId, true
}

// HasXmdsId returns a boolean if a field has been set.
func (o *MetadataServiceRecord) HasXmdsId() bool {
	if o != nil && !IsNil(o.XmdsId) {
		return true
	}

	return false
}

// SetXmdsId gets a reference to the given int64 and assigns it to the XmdsId field.
func (o *MetadataServiceRecord) SetXmdsId(v int64) {
	o.XmdsId = &v
}

// GetSamples returns the Samples field value if set, zero value otherwise.
func (o *MetadataServiceRecord) GetSamples() []MetadataServiceStat {
	if o == nil || IsNil(o.Samples) {
		var ret []MetadataServiceStat
		return ret
	}
	return o.Samples
}

// GetSamplesOk returns a tuple with the Samples field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataServiceRecord) GetSamplesOk() ([]MetadataServiceStat, bool) {
	if o == nil || IsNil(o.Samples) {
		return nil, false
	}
	return o.Samples, true
}

// HasSamples returns a boolean if a field has been set.
func (o *MetadataServiceRecord) HasSamples() bool {
	if o != nil && !IsNil(o.Samples) {
		return true
	}

	return false
}

// SetSamples gets a reference to the given []MetadataServiceStat and assigns it to the Samples field.
func (o *MetadataServiceRecord) SetSamples(v []MetadataServiceStat) {
	o.Samples = v
}

func (o MetadataServiceRecord) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetadataServiceRecord) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActionStatus) {
		toSerialize["action_status"] = o.ActionStatus
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Complete) {
		toSerialize["complete"] = o.Complete
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.Disk) {
		toSerialize["disk"] = o.Disk
	}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.MetaBytes) {
		toSerialize["meta_bytes"] = o.MetaBytes
	}
	if !IsNil(o.MetadataCluster) {
		toSerialize["metadata_cluster"] = o.MetadataCluster
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PlacementNode) {
		toSerialize["placement_node"] = o.PlacementNode
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Up) {
		toSerialize["up"] = o.Up
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	if !IsNil(o.XmdsId) {
		toSerialize["xmds_id"] = o.XmdsId
	}
	if !IsNil(o.Samples) {
		toSerialize["samples"] = o.Samples
	}
	return toSerialize, nil
}

type NullableMetadataServiceRecord struct {
	value *MetadataServiceRecord
	isSet bool
}

func (v NullableMetadataServiceRecord) Get() *MetadataServiceRecord {
	return v.value
}

func (v *NullableMetadataServiceRecord) Set(val *MetadataServiceRecord) {
	v.value = val
	v.isSet = true
}

func (v NullableMetadataServiceRecord) IsSet() bool {
	return v.isSet
}

func (v *NullableMetadataServiceRecord) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetadataServiceRecord(val *MetadataServiceRecord) *NullableMetadataServiceRecord {
	return &NullableMetadataServiceRecord{value: val, isSet: true}
}

func (v NullableMetadataServiceRecord) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetadataServiceRecord) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


