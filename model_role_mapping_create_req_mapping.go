/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RoleMappingCreateReqMapping type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoleMappingCreateReqMapping{}

// RoleMappingCreateReqMapping struct for RoleMappingCreateReqMapping
type RoleMappingCreateReqMapping struct {
	Default *bool `json:"default,omitempty"`
	// id of identity platform
	IdentityPlatformId *int64 `json:"identity_platform_id,omitempty"`
	// mapped role of sds platform
	Role *string `json:"role,omitempty"`
	// roles of identity platform
	Value *string `json:"value,omitempty"`
}

// NewRoleMappingCreateReqMapping instantiates a new RoleMappingCreateReqMapping object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleMappingCreateReqMapping() *RoleMappingCreateReqMapping {
	this := RoleMappingCreateReqMapping{}
	return &this
}

// NewRoleMappingCreateReqMappingWithDefaults instantiates a new RoleMappingCreateReqMapping object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleMappingCreateReqMappingWithDefaults() *RoleMappingCreateReqMapping {
	this := RoleMappingCreateReqMapping{}
	return &this
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *RoleMappingCreateReqMapping) GetDefault() bool {
	if o == nil || IsNil(o.Default) {
		var ret bool
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleMappingCreateReqMapping) GetDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.Default) {
		return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *RoleMappingCreateReqMapping) HasDefault() bool {
	if o != nil && !IsNil(o.Default) {
		return true
	}

	return false
}

// SetDefault gets a reference to the given bool and assigns it to the Default field.
func (o *RoleMappingCreateReqMapping) SetDefault(v bool) {
	o.Default = &v
}

// GetIdentityPlatformId returns the IdentityPlatformId field value if set, zero value otherwise.
func (o *RoleMappingCreateReqMapping) GetIdentityPlatformId() int64 {
	if o == nil || IsNil(o.IdentityPlatformId) {
		var ret int64
		return ret
	}
	return *o.IdentityPlatformId
}

// GetIdentityPlatformIdOk returns a tuple with the IdentityPlatformId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleMappingCreateReqMapping) GetIdentityPlatformIdOk() (*int64, bool) {
	if o == nil || IsNil(o.IdentityPlatformId) {
		return nil, false
	}
	return o.IdentityPlatformId, true
}

// HasIdentityPlatformId returns a boolean if a field has been set.
func (o *RoleMappingCreateReqMapping) HasIdentityPlatformId() bool {
	if o != nil && !IsNil(o.IdentityPlatformId) {
		return true
	}

	return false
}

// SetIdentityPlatformId gets a reference to the given int64 and assigns it to the IdentityPlatformId field.
func (o *RoleMappingCreateReqMapping) SetIdentityPlatformId(v int64) {
	o.IdentityPlatformId = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *RoleMappingCreateReqMapping) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleMappingCreateReqMapping) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *RoleMappingCreateReqMapping) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *RoleMappingCreateReqMapping) SetRole(v string) {
	o.Role = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *RoleMappingCreateReqMapping) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleMappingCreateReqMapping) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *RoleMappingCreateReqMapping) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *RoleMappingCreateReqMapping) SetValue(v string) {
	o.Value = &v
}

func (o RoleMappingCreateReqMapping) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoleMappingCreateReqMapping) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Default) {
		toSerialize["default"] = o.Default
	}
	if !IsNil(o.IdentityPlatformId) {
		toSerialize["identity_platform_id"] = o.IdentityPlatformId
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableRoleMappingCreateReqMapping struct {
	value *RoleMappingCreateReqMapping
	isSet bool
}

func (v NullableRoleMappingCreateReqMapping) Get() *RoleMappingCreateReqMapping {
	return v.value
}

func (v *NullableRoleMappingCreateReqMapping) Set(val *RoleMappingCreateReqMapping) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleMappingCreateReqMapping) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleMappingCreateReqMapping) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleMappingCreateReqMapping(val *RoleMappingCreateReqMapping) *NullableRoleMappingCreateReqMapping {
	return &NullableRoleMappingCreateReqMapping{value: val, isSet: true}
}

func (v NullableRoleMappingCreateReqMapping) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleMappingCreateReqMapping) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


