/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OspMetadataClusterService type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OspMetadataClusterService{}

// OspMetadataClusterService struct for OspMetadataClusterService
type OspMetadataClusterService struct {
	Id int64 `json:"id"`
	LogServiceNum *int64 `json:"log_service_num,omitempty"`
	MetadataServiceNum *int64 `json:"metadata_service_num,omitempty"`
}

type _OspMetadataClusterService OspMetadataClusterService

// NewOspMetadataClusterService instantiates a new OspMetadataClusterService object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOspMetadataClusterService(id int64) *OspMetadataClusterService {
	this := OspMetadataClusterService{}
	this.Id = id
	return &this
}

// NewOspMetadataClusterServiceWithDefaults instantiates a new OspMetadataClusterService object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOspMetadataClusterServiceWithDefaults() *OspMetadataClusterService {
	this := OspMetadataClusterService{}
	return &this
}

// GetId returns the Id field value
func (o *OspMetadataClusterService) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *OspMetadataClusterService) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *OspMetadataClusterService) SetId(v int64) {
	o.Id = v
}

// GetLogServiceNum returns the LogServiceNum field value if set, zero value otherwise.
func (o *OspMetadataClusterService) GetLogServiceNum() int64 {
	if o == nil || IsNil(o.LogServiceNum) {
		var ret int64
		return ret
	}
	return *o.LogServiceNum
}

// GetLogServiceNumOk returns a tuple with the LogServiceNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataClusterService) GetLogServiceNumOk() (*int64, bool) {
	if o == nil || IsNil(o.LogServiceNum) {
		return nil, false
	}
	return o.LogServiceNum, true
}

// HasLogServiceNum returns a boolean if a field has been set.
func (o *OspMetadataClusterService) HasLogServiceNum() bool {
	if o != nil && !IsNil(o.LogServiceNum) {
		return true
	}

	return false
}

// SetLogServiceNum gets a reference to the given int64 and assigns it to the LogServiceNum field.
func (o *OspMetadataClusterService) SetLogServiceNum(v int64) {
	o.LogServiceNum = &v
}

// GetMetadataServiceNum returns the MetadataServiceNum field value if set, zero value otherwise.
func (o *OspMetadataClusterService) GetMetadataServiceNum() int64 {
	if o == nil || IsNil(o.MetadataServiceNum) {
		var ret int64
		return ret
	}
	return *o.MetadataServiceNum
}

// GetMetadataServiceNumOk returns a tuple with the MetadataServiceNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataClusterService) GetMetadataServiceNumOk() (*int64, bool) {
	if o == nil || IsNil(o.MetadataServiceNum) {
		return nil, false
	}
	return o.MetadataServiceNum, true
}

// HasMetadataServiceNum returns a boolean if a field has been set.
func (o *OspMetadataClusterService) HasMetadataServiceNum() bool {
	if o != nil && !IsNil(o.MetadataServiceNum) {
		return true
	}

	return false
}

// SetMetadataServiceNum gets a reference to the given int64 and assigns it to the MetadataServiceNum field.
func (o *OspMetadataClusterService) SetMetadataServiceNum(v int64) {
	o.MetadataServiceNum = &v
}

func (o OspMetadataClusterService) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OspMetadataClusterService) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.LogServiceNum) {
		toSerialize["log_service_num"] = o.LogServiceNum
	}
	if !IsNil(o.MetadataServiceNum) {
		toSerialize["metadata_service_num"] = o.MetadataServiceNum
	}
	return toSerialize, nil
}

func (o *OspMetadataClusterService) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOspMetadataClusterService := _OspMetadataClusterService{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOspMetadataClusterService)

	if err != nil {
		return err
	}

	*o = OspMetadataClusterService(varOspMetadataClusterService)

	return err
}

type NullableOspMetadataClusterService struct {
	value *OspMetadataClusterService
	isSet bool
}

func (v NullableOspMetadataClusterService) Get() *OspMetadataClusterService {
	return v.value
}

func (v *NullableOspMetadataClusterService) Set(val *OspMetadataClusterService) {
	v.value = val
	v.isSet = true
}

func (v NullableOspMetadataClusterService) IsSet() bool {
	return v.isSet
}

func (v *NullableOspMetadataClusterService) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOspMetadataClusterService(val *OspMetadataClusterService) *NullableOspMetadataClusterService {
	return &NullableOspMetadataClusterService{value: val, isSet: true}
}

func (v NullableOspMetadataClusterService) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOspMetadataClusterService) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


