/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ClusterInstallationResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterInstallationResp{}

// ClusterInstallationResp struct for ClusterInstallationResp
type ClusterInstallationResp struct {
	Installation *ClusterInstallation `json:"installation,omitempty"`
}

// NewClusterInstallationResp instantiates a new ClusterInstallationResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterInstallationResp() *ClusterInstallationResp {
	this := ClusterInstallationResp{}
	return &this
}

// NewClusterInstallationRespWithDefaults instantiates a new ClusterInstallationResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterInstallationRespWithDefaults() *ClusterInstallationResp {
	this := ClusterInstallationResp{}
	return &this
}

// GetInstallation returns the Installation field value if set, zero value otherwise.
func (o *ClusterInstallationResp) GetInstallation() ClusterInstallation {
	if o == nil || IsNil(o.Installation) {
		var ret ClusterInstallation
		return ret
	}
	return *o.Installation
}

// GetInstallationOk returns a tuple with the Installation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterInstallationResp) GetInstallationOk() (*ClusterInstallation, bool) {
	if o == nil || IsNil(o.Installation) {
		return nil, false
	}
	return o.Installation, true
}

// HasInstallation returns a boolean if a field has been set.
func (o *ClusterInstallationResp) HasInstallation() bool {
	if o != nil && !IsNil(o.Installation) {
		return true
	}

	return false
}

// SetInstallation gets a reference to the given ClusterInstallation and assigns it to the Installation field.
func (o *ClusterInstallationResp) SetInstallation(v ClusterInstallation) {
	o.Installation = &v
}

func (o ClusterInstallationResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterInstallationResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Installation) {
		toSerialize["installation"] = o.Installation
	}
	return toSerialize, nil
}

type NullableClusterInstallationResp struct {
	value *ClusterInstallationResp
	isSet bool
}

func (v NullableClusterInstallationResp) Get() *ClusterInstallationResp {
	return v.value
}

func (v *NullableClusterInstallationResp) Set(val *ClusterInstallationResp) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterInstallationResp) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterInstallationResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterInstallationResp(val *ClusterInstallationResp) *NullableClusterInstallationResp {
	return &NullableClusterInstallationResp{value: val, isSet: true}
}

func (v NullableClusterInstallationResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterInstallationResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


