/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DpDfsSnapshotPolicyCreateReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DpDfsSnapshotPolicyCreateReq{}

// DpDfsSnapshotPolicyCreateReq struct for DpDfsSnapshotPolicyCreateReq
type DpDfsSnapshotPolicyCreateReq struct {
	DpDfsSnapshotPolicy DpDfsSnapshotPolicyCreateReqDpDfsSnapshotPolicy `json:"dp_dfs_snapshot_policy"`
}

type _DpDfsSnapshotPolicyCreateReq DpDfsSnapshotPolicyCreateReq

// NewDpDfsSnapshotPolicyCreateReq instantiates a new DpDfsSnapshotPolicyCreateReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDpDfsSnapshotPolicyCreateReq(dpDfsSnapshotPolicy DpDfsSnapshotPolicyCreateReqDpDfsSnapshotPolicy) *DpDfsSnapshotPolicyCreateReq {
	this := DpDfsSnapshotPolicyCreateReq{}
	this.DpDfsSnapshotPolicy = dpDfsSnapshotPolicy
	return &this
}

// NewDpDfsSnapshotPolicyCreateReqWithDefaults instantiates a new DpDfsSnapshotPolicyCreateReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDpDfsSnapshotPolicyCreateReqWithDefaults() *DpDfsSnapshotPolicyCreateReq {
	this := DpDfsSnapshotPolicyCreateReq{}
	return &this
}

// GetDpDfsSnapshotPolicy returns the DpDfsSnapshotPolicy field value
func (o *DpDfsSnapshotPolicyCreateReq) GetDpDfsSnapshotPolicy() DpDfsSnapshotPolicyCreateReqDpDfsSnapshotPolicy {
	if o == nil {
		var ret DpDfsSnapshotPolicyCreateReqDpDfsSnapshotPolicy
		return ret
	}

	return o.DpDfsSnapshotPolicy
}

// GetDpDfsSnapshotPolicyOk returns a tuple with the DpDfsSnapshotPolicy field value
// and a boolean to check if the value has been set.
func (o *DpDfsSnapshotPolicyCreateReq) GetDpDfsSnapshotPolicyOk() (*DpDfsSnapshotPolicyCreateReqDpDfsSnapshotPolicy, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DpDfsSnapshotPolicy, true
}

// SetDpDfsSnapshotPolicy sets field value
func (o *DpDfsSnapshotPolicyCreateReq) SetDpDfsSnapshotPolicy(v DpDfsSnapshotPolicyCreateReqDpDfsSnapshotPolicy) {
	o.DpDfsSnapshotPolicy = v
}

func (o DpDfsSnapshotPolicyCreateReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DpDfsSnapshotPolicyCreateReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dp_dfs_snapshot_policy"] = o.DpDfsSnapshotPolicy
	return toSerialize, nil
}

func (o *DpDfsSnapshotPolicyCreateReq) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dp_dfs_snapshot_policy",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDpDfsSnapshotPolicyCreateReq := _DpDfsSnapshotPolicyCreateReq{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDpDfsSnapshotPolicyCreateReq)

	if err != nil {
		return err
	}

	*o = DpDfsSnapshotPolicyCreateReq(varDpDfsSnapshotPolicyCreateReq)

	return err
}

type NullableDpDfsSnapshotPolicyCreateReq struct {
	value *DpDfsSnapshotPolicyCreateReq
	isSet bool
}

func (v NullableDpDfsSnapshotPolicyCreateReq) Get() *DpDfsSnapshotPolicyCreateReq {
	return v.value
}

func (v *NullableDpDfsSnapshotPolicyCreateReq) Set(val *DpDfsSnapshotPolicyCreateReq) {
	v.value = val
	v.isSet = true
}

func (v NullableDpDfsSnapshotPolicyCreateReq) IsSet() bool {
	return v.isSet
}

func (v *NullableDpDfsSnapshotPolicyCreateReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDpDfsSnapshotPolicyCreateReq(val *DpDfsSnapshotPolicyCreateReq) *NullableDpDfsSnapshotPolicyCreateReq {
	return &NullableDpDfsSnapshotPolicyCreateReq{value: val, isSet: true}
}

func (v NullableDpDfsSnapshotPolicyCreateReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDpDfsSnapshotPolicyCreateReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


