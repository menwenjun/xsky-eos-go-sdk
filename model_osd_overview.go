/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OsdOverview type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OsdOverview{}

// OsdOverview struct for OsdOverview
type OsdOverview struct {
	// status
	ActiveNum int64 `json:"active_num"`
	ArchiveNum int64 `json:"archive_num"`
	CompoundNum int64 `json:"compound_num"`
	CriticalUsageNum int64 `json:"critical_usage_num"`
	// role
	DataNum int64 `json:"data_num"`
	DoingNum int64 `json:"doing_num"`
	ErrorNum int64 `json:"error_num"`
	// disk type
	HddTypeNum int64 `json:"hdd_type_num"`
	HybridTypeNum int64 `json:"hybrid_type_num"`
	IndexNum int64 `json:"index_num"`
	OfflineNum int64 `json:"offline_num"`
	SsdTypeNum int64 `json:"ssd_type_num"`
	TierCacheNum int64 `json:"tier_cache_num"`
	TierDataNum int64 `json:"tier_data_num"`
	WarnNum int64 `json:"warn_num"`
	// usage
	WarnUsageNum int64 `json:"warn_usage_num"`
}

type _OsdOverview OsdOverview

// NewOsdOverview instantiates a new OsdOverview object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOsdOverview(activeNum int64, archiveNum int64, compoundNum int64, criticalUsageNum int64, dataNum int64, doingNum int64, errorNum int64, hddTypeNum int64, hybridTypeNum int64, indexNum int64, offlineNum int64, ssdTypeNum int64, tierCacheNum int64, tierDataNum int64, warnNum int64, warnUsageNum int64) *OsdOverview {
	this := OsdOverview{}
	this.ActiveNum = activeNum
	this.ArchiveNum = archiveNum
	this.CompoundNum = compoundNum
	this.CriticalUsageNum = criticalUsageNum
	this.DataNum = dataNum
	this.DoingNum = doingNum
	this.ErrorNum = errorNum
	this.HddTypeNum = hddTypeNum
	this.HybridTypeNum = hybridTypeNum
	this.IndexNum = indexNum
	this.OfflineNum = offlineNum
	this.SsdTypeNum = ssdTypeNum
	this.TierCacheNum = tierCacheNum
	this.TierDataNum = tierDataNum
	this.WarnNum = warnNum
	this.WarnUsageNum = warnUsageNum
	return &this
}

// NewOsdOverviewWithDefaults instantiates a new OsdOverview object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOsdOverviewWithDefaults() *OsdOverview {
	this := OsdOverview{}
	return &this
}

// GetActiveNum returns the ActiveNum field value
func (o *OsdOverview) GetActiveNum() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ActiveNum
}

// GetActiveNumOk returns a tuple with the ActiveNum field value
// and a boolean to check if the value has been set.
func (o *OsdOverview) GetActiveNumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActiveNum, true
}

// SetActiveNum sets field value
func (o *OsdOverview) SetActiveNum(v int64) {
	o.ActiveNum = v
}

// GetArchiveNum returns the ArchiveNum field value
func (o *OsdOverview) GetArchiveNum() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ArchiveNum
}

// GetArchiveNumOk returns a tuple with the ArchiveNum field value
// and a boolean to check if the value has been set.
func (o *OsdOverview) GetArchiveNumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ArchiveNum, true
}

// SetArchiveNum sets field value
func (o *OsdOverview) SetArchiveNum(v int64) {
	o.ArchiveNum = v
}

// GetCompoundNum returns the CompoundNum field value
func (o *OsdOverview) GetCompoundNum() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CompoundNum
}

// GetCompoundNumOk returns a tuple with the CompoundNum field value
// and a boolean to check if the value has been set.
func (o *OsdOverview) GetCompoundNumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CompoundNum, true
}

// SetCompoundNum sets field value
func (o *OsdOverview) SetCompoundNum(v int64) {
	o.CompoundNum = v
}

// GetCriticalUsageNum returns the CriticalUsageNum field value
func (o *OsdOverview) GetCriticalUsageNum() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CriticalUsageNum
}

// GetCriticalUsageNumOk returns a tuple with the CriticalUsageNum field value
// and a boolean to check if the value has been set.
func (o *OsdOverview) GetCriticalUsageNumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CriticalUsageNum, true
}

// SetCriticalUsageNum sets field value
func (o *OsdOverview) SetCriticalUsageNum(v int64) {
	o.CriticalUsageNum = v
}

// GetDataNum returns the DataNum field value
func (o *OsdOverview) GetDataNum() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DataNum
}

// GetDataNumOk returns a tuple with the DataNum field value
// and a boolean to check if the value has been set.
func (o *OsdOverview) GetDataNumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DataNum, true
}

// SetDataNum sets field value
func (o *OsdOverview) SetDataNum(v int64) {
	o.DataNum = v
}

// GetDoingNum returns the DoingNum field value
func (o *OsdOverview) GetDoingNum() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DoingNum
}

// GetDoingNumOk returns a tuple with the DoingNum field value
// and a boolean to check if the value has been set.
func (o *OsdOverview) GetDoingNumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DoingNum, true
}

// SetDoingNum sets field value
func (o *OsdOverview) SetDoingNum(v int64) {
	o.DoingNum = v
}

// GetErrorNum returns the ErrorNum field value
func (o *OsdOverview) GetErrorNum() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ErrorNum
}

// GetErrorNumOk returns a tuple with the ErrorNum field value
// and a boolean to check if the value has been set.
func (o *OsdOverview) GetErrorNumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ErrorNum, true
}

// SetErrorNum sets field value
func (o *OsdOverview) SetErrorNum(v int64) {
	o.ErrorNum = v
}

// GetHddTypeNum returns the HddTypeNum field value
func (o *OsdOverview) GetHddTypeNum() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.HddTypeNum
}

// GetHddTypeNumOk returns a tuple with the HddTypeNum field value
// and a boolean to check if the value has been set.
func (o *OsdOverview) GetHddTypeNumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HddTypeNum, true
}

// SetHddTypeNum sets field value
func (o *OsdOverview) SetHddTypeNum(v int64) {
	o.HddTypeNum = v
}

// GetHybridTypeNum returns the HybridTypeNum field value
func (o *OsdOverview) GetHybridTypeNum() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.HybridTypeNum
}

// GetHybridTypeNumOk returns a tuple with the HybridTypeNum field value
// and a boolean to check if the value has been set.
func (o *OsdOverview) GetHybridTypeNumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HybridTypeNum, true
}

// SetHybridTypeNum sets field value
func (o *OsdOverview) SetHybridTypeNum(v int64) {
	o.HybridTypeNum = v
}

// GetIndexNum returns the IndexNum field value
func (o *OsdOverview) GetIndexNum() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.IndexNum
}

// GetIndexNumOk returns a tuple with the IndexNum field value
// and a boolean to check if the value has been set.
func (o *OsdOverview) GetIndexNumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IndexNum, true
}

// SetIndexNum sets field value
func (o *OsdOverview) SetIndexNum(v int64) {
	o.IndexNum = v
}

// GetOfflineNum returns the OfflineNum field value
func (o *OsdOverview) GetOfflineNum() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.OfflineNum
}

// GetOfflineNumOk returns a tuple with the OfflineNum field value
// and a boolean to check if the value has been set.
func (o *OsdOverview) GetOfflineNumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OfflineNum, true
}

// SetOfflineNum sets field value
func (o *OsdOverview) SetOfflineNum(v int64) {
	o.OfflineNum = v
}

// GetSsdTypeNum returns the SsdTypeNum field value
func (o *OsdOverview) GetSsdTypeNum() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.SsdTypeNum
}

// GetSsdTypeNumOk returns a tuple with the SsdTypeNum field value
// and a boolean to check if the value has been set.
func (o *OsdOverview) GetSsdTypeNumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SsdTypeNum, true
}

// SetSsdTypeNum sets field value
func (o *OsdOverview) SetSsdTypeNum(v int64) {
	o.SsdTypeNum = v
}

// GetTierCacheNum returns the TierCacheNum field value
func (o *OsdOverview) GetTierCacheNum() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TierCacheNum
}

// GetTierCacheNumOk returns a tuple with the TierCacheNum field value
// and a boolean to check if the value has been set.
func (o *OsdOverview) GetTierCacheNumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TierCacheNum, true
}

// SetTierCacheNum sets field value
func (o *OsdOverview) SetTierCacheNum(v int64) {
	o.TierCacheNum = v
}

// GetTierDataNum returns the TierDataNum field value
func (o *OsdOverview) GetTierDataNum() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TierDataNum
}

// GetTierDataNumOk returns a tuple with the TierDataNum field value
// and a boolean to check if the value has been set.
func (o *OsdOverview) GetTierDataNumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TierDataNum, true
}

// SetTierDataNum sets field value
func (o *OsdOverview) SetTierDataNum(v int64) {
	o.TierDataNum = v
}

// GetWarnNum returns the WarnNum field value
func (o *OsdOverview) GetWarnNum() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.WarnNum
}

// GetWarnNumOk returns a tuple with the WarnNum field value
// and a boolean to check if the value has been set.
func (o *OsdOverview) GetWarnNumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WarnNum, true
}

// SetWarnNum sets field value
func (o *OsdOverview) SetWarnNum(v int64) {
	o.WarnNum = v
}

// GetWarnUsageNum returns the WarnUsageNum field value
func (o *OsdOverview) GetWarnUsageNum() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.WarnUsageNum
}

// GetWarnUsageNumOk returns a tuple with the WarnUsageNum field value
// and a boolean to check if the value has been set.
func (o *OsdOverview) GetWarnUsageNumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WarnUsageNum, true
}

// SetWarnUsageNum sets field value
func (o *OsdOverview) SetWarnUsageNum(v int64) {
	o.WarnUsageNum = v
}

func (o OsdOverview) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OsdOverview) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["active_num"] = o.ActiveNum
	toSerialize["archive_num"] = o.ArchiveNum
	toSerialize["compound_num"] = o.CompoundNum
	toSerialize["critical_usage_num"] = o.CriticalUsageNum
	toSerialize["data_num"] = o.DataNum
	toSerialize["doing_num"] = o.DoingNum
	toSerialize["error_num"] = o.ErrorNum
	toSerialize["hdd_type_num"] = o.HddTypeNum
	toSerialize["hybrid_type_num"] = o.HybridTypeNum
	toSerialize["index_num"] = o.IndexNum
	toSerialize["offline_num"] = o.OfflineNum
	toSerialize["ssd_type_num"] = o.SsdTypeNum
	toSerialize["tier_cache_num"] = o.TierCacheNum
	toSerialize["tier_data_num"] = o.TierDataNum
	toSerialize["warn_num"] = o.WarnNum
	toSerialize["warn_usage_num"] = o.WarnUsageNum
	return toSerialize, nil
}

func (o *OsdOverview) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"active_num",
		"archive_num",
		"compound_num",
		"critical_usage_num",
		"data_num",
		"doing_num",
		"error_num",
		"hdd_type_num",
		"hybrid_type_num",
		"index_num",
		"offline_num",
		"ssd_type_num",
		"tier_cache_num",
		"tier_data_num",
		"warn_num",
		"warn_usage_num",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOsdOverview := _OsdOverview{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOsdOverview)

	if err != nil {
		return err
	}

	*o = OsdOverview(varOsdOverview)

	return err
}

type NullableOsdOverview struct {
	value *OsdOverview
	isSet bool
}

func (v NullableOsdOverview) Get() *OsdOverview {
	return v.value
}

func (v *NullableOsdOverview) Set(val *OsdOverview) {
	v.value = val
	v.isSet = true
}

func (v NullableOsdOverview) IsSet() bool {
	return v.isSet
}

func (v *NullableOsdOverview) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOsdOverview(val *OsdOverview) *NullableOsdOverview {
	return &NullableOsdOverview{value: val, isSet: true}
}

func (v NullableOsdOverview) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOsdOverview) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


