/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the DfsGatewayServiceStat type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsGatewayServiceStat{}

// DfsGatewayServiceStat DfsGatewayServiceStat defines dfs gateway service stat
type DfsGatewayServiceStat struct {
	CpuUtil *float64 `json:"cpu_util,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	MemUsage *float64 `json:"mem_usage,omitempty"`
	MemUsedKbyte *int64 `json:"mem_used_kbyte,omitempty"`
}

// NewDfsGatewayServiceStat instantiates a new DfsGatewayServiceStat object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsGatewayServiceStat() *DfsGatewayServiceStat {
	this := DfsGatewayServiceStat{}
	return &this
}

// NewDfsGatewayServiceStatWithDefaults instantiates a new DfsGatewayServiceStat object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsGatewayServiceStatWithDefaults() *DfsGatewayServiceStat {
	this := DfsGatewayServiceStat{}
	return &this
}

// GetCpuUtil returns the CpuUtil field value if set, zero value otherwise.
func (o *DfsGatewayServiceStat) GetCpuUtil() float64 {
	if o == nil || IsNil(o.CpuUtil) {
		var ret float64
		return ret
	}
	return *o.CpuUtil
}

// GetCpuUtilOk returns a tuple with the CpuUtil field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayServiceStat) GetCpuUtilOk() (*float64, bool) {
	if o == nil || IsNil(o.CpuUtil) {
		return nil, false
	}
	return o.CpuUtil, true
}

// HasCpuUtil returns a boolean if a field has been set.
func (o *DfsGatewayServiceStat) HasCpuUtil() bool {
	if o != nil && !IsNil(o.CpuUtil) {
		return true
	}

	return false
}

// SetCpuUtil gets a reference to the given float64 and assigns it to the CpuUtil field.
func (o *DfsGatewayServiceStat) SetCpuUtil(v float64) {
	o.CpuUtil = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *DfsGatewayServiceStat) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayServiceStat) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *DfsGatewayServiceStat) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *DfsGatewayServiceStat) SetCreate(v time.Time) {
	o.Create = &v
}

// GetMemUsage returns the MemUsage field value if set, zero value otherwise.
func (o *DfsGatewayServiceStat) GetMemUsage() float64 {
	if o == nil || IsNil(o.MemUsage) {
		var ret float64
		return ret
	}
	return *o.MemUsage
}

// GetMemUsageOk returns a tuple with the MemUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayServiceStat) GetMemUsageOk() (*float64, bool) {
	if o == nil || IsNil(o.MemUsage) {
		return nil, false
	}
	return o.MemUsage, true
}

// HasMemUsage returns a boolean if a field has been set.
func (o *DfsGatewayServiceStat) HasMemUsage() bool {
	if o != nil && !IsNil(o.MemUsage) {
		return true
	}

	return false
}

// SetMemUsage gets a reference to the given float64 and assigns it to the MemUsage field.
func (o *DfsGatewayServiceStat) SetMemUsage(v float64) {
	o.MemUsage = &v
}

// GetMemUsedKbyte returns the MemUsedKbyte field value if set, zero value otherwise.
func (o *DfsGatewayServiceStat) GetMemUsedKbyte() int64 {
	if o == nil || IsNil(o.MemUsedKbyte) {
		var ret int64
		return ret
	}
	return *o.MemUsedKbyte
}

// GetMemUsedKbyteOk returns a tuple with the MemUsedKbyte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayServiceStat) GetMemUsedKbyteOk() (*int64, bool) {
	if o == nil || IsNil(o.MemUsedKbyte) {
		return nil, false
	}
	return o.MemUsedKbyte, true
}

// HasMemUsedKbyte returns a boolean if a field has been set.
func (o *DfsGatewayServiceStat) HasMemUsedKbyte() bool {
	if o != nil && !IsNil(o.MemUsedKbyte) {
		return true
	}

	return false
}

// SetMemUsedKbyte gets a reference to the given int64 and assigns it to the MemUsedKbyte field.
func (o *DfsGatewayServiceStat) SetMemUsedKbyte(v int64) {
	o.MemUsedKbyte = &v
}

func (o DfsGatewayServiceStat) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsGatewayServiceStat) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CpuUtil) {
		toSerialize["cpu_util"] = o.CpuUtil
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.MemUsage) {
		toSerialize["mem_usage"] = o.MemUsage
	}
	if !IsNil(o.MemUsedKbyte) {
		toSerialize["mem_used_kbyte"] = o.MemUsedKbyte
	}
	return toSerialize, nil
}

type NullableDfsGatewayServiceStat struct {
	value *DfsGatewayServiceStat
	isSet bool
}

func (v NullableDfsGatewayServiceStat) Get() *DfsGatewayServiceStat {
	return v.value
}

func (v *NullableDfsGatewayServiceStat) Set(val *DfsGatewayServiceStat) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsGatewayServiceStat) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsGatewayServiceStat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsGatewayServiceStat(val *DfsGatewayServiceStat) *NullableDfsGatewayServiceStat {
	return &NullableDfsGatewayServiceStat{value: val, isSet: true}
}

func (v NullableDfsGatewayServiceStat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsGatewayServiceStat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


