/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TokenCreateReqAuthIdentity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TokenCreateReqAuthIdentity{}

// TokenCreateReqAuthIdentity struct for TokenCreateReqAuthIdentity
type TokenCreateReqAuthIdentity struct {
	Password *AuthPasswordReq `json:"password,omitempty"`
	Token *AuthTokenReq `json:"token,omitempty"`
}

// NewTokenCreateReqAuthIdentity instantiates a new TokenCreateReqAuthIdentity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenCreateReqAuthIdentity() *TokenCreateReqAuthIdentity {
	this := TokenCreateReqAuthIdentity{}
	return &this
}

// NewTokenCreateReqAuthIdentityWithDefaults instantiates a new TokenCreateReqAuthIdentity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenCreateReqAuthIdentityWithDefaults() *TokenCreateReqAuthIdentity {
	this := TokenCreateReqAuthIdentity{}
	return &this
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *TokenCreateReqAuthIdentity) GetPassword() AuthPasswordReq {
	if o == nil || IsNil(o.Password) {
		var ret AuthPasswordReq
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenCreateReqAuthIdentity) GetPasswordOk() (*AuthPasswordReq, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *TokenCreateReqAuthIdentity) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given AuthPasswordReq and assigns it to the Password field.
func (o *TokenCreateReqAuthIdentity) SetPassword(v AuthPasswordReq) {
	o.Password = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *TokenCreateReqAuthIdentity) GetToken() AuthTokenReq {
	if o == nil || IsNil(o.Token) {
		var ret AuthTokenReq
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenCreateReqAuthIdentity) GetTokenOk() (*AuthTokenReq, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *TokenCreateReqAuthIdentity) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given AuthTokenReq and assigns it to the Token field.
func (o *TokenCreateReqAuthIdentity) SetToken(v AuthTokenReq) {
	o.Token = &v
}

func (o TokenCreateReqAuthIdentity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TokenCreateReqAuthIdentity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	return toSerialize, nil
}

type NullableTokenCreateReqAuthIdentity struct {
	value *TokenCreateReqAuthIdentity
	isSet bool
}

func (v NullableTokenCreateReqAuthIdentity) Get() *TokenCreateReqAuthIdentity {
	return v.value
}

func (v *NullableTokenCreateReqAuthIdentity) Set(val *TokenCreateReqAuthIdentity) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenCreateReqAuthIdentity) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenCreateReqAuthIdentity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenCreateReqAuthIdentity(val *TokenCreateReqAuthIdentity) *NullableTokenCreateReqAuthIdentity {
	return &NullableTokenCreateReqAuthIdentity{value: val, isSet: true}
}

func (v NullableTokenCreateReqAuthIdentity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenCreateReqAuthIdentity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


