/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SnmpSetReqSnmp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SnmpSetReqSnmp{}

// SnmpSetReqSnmp struct for SnmpSetReqSnmp
type SnmpSetReqSnmp struct {
	Enabled *bool `json:"enabled,omitempty"`
	Gateways []SnmpGatewayReq `json:"gateways,omitempty"`
	Receivers []SnmpTrapReceiverReq `json:"receivers,omitempty"`
}

// NewSnmpSetReqSnmp instantiates a new SnmpSetReqSnmp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnmpSetReqSnmp() *SnmpSetReqSnmp {
	this := SnmpSetReqSnmp{}
	return &this
}

// NewSnmpSetReqSnmpWithDefaults instantiates a new SnmpSetReqSnmp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnmpSetReqSnmpWithDefaults() *SnmpSetReqSnmp {
	this := SnmpSetReqSnmp{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *SnmpSetReqSnmp) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnmpSetReqSnmp) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *SnmpSetReqSnmp) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *SnmpSetReqSnmp) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetGateways returns the Gateways field value if set, zero value otherwise.
func (o *SnmpSetReqSnmp) GetGateways() []SnmpGatewayReq {
	if o == nil || IsNil(o.Gateways) {
		var ret []SnmpGatewayReq
		return ret
	}
	return o.Gateways
}

// GetGatewaysOk returns a tuple with the Gateways field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnmpSetReqSnmp) GetGatewaysOk() ([]SnmpGatewayReq, bool) {
	if o == nil || IsNil(o.Gateways) {
		return nil, false
	}
	return o.Gateways, true
}

// HasGateways returns a boolean if a field has been set.
func (o *SnmpSetReqSnmp) HasGateways() bool {
	if o != nil && !IsNil(o.Gateways) {
		return true
	}

	return false
}

// SetGateways gets a reference to the given []SnmpGatewayReq and assigns it to the Gateways field.
func (o *SnmpSetReqSnmp) SetGateways(v []SnmpGatewayReq) {
	o.Gateways = v
}

// GetReceivers returns the Receivers field value if set, zero value otherwise.
func (o *SnmpSetReqSnmp) GetReceivers() []SnmpTrapReceiverReq {
	if o == nil || IsNil(o.Receivers) {
		var ret []SnmpTrapReceiverReq
		return ret
	}
	return o.Receivers
}

// GetReceiversOk returns a tuple with the Receivers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnmpSetReqSnmp) GetReceiversOk() ([]SnmpTrapReceiverReq, bool) {
	if o == nil || IsNil(o.Receivers) {
		return nil, false
	}
	return o.Receivers, true
}

// HasReceivers returns a boolean if a field has been set.
func (o *SnmpSetReqSnmp) HasReceivers() bool {
	if o != nil && !IsNil(o.Receivers) {
		return true
	}

	return false
}

// SetReceivers gets a reference to the given []SnmpTrapReceiverReq and assigns it to the Receivers field.
func (o *SnmpSetReqSnmp) SetReceivers(v []SnmpTrapReceiverReq) {
	o.Receivers = v
}

func (o SnmpSetReqSnmp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SnmpSetReqSnmp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Gateways) {
		toSerialize["gateways"] = o.Gateways
	}
	if !IsNil(o.Receivers) {
		toSerialize["receivers"] = o.Receivers
	}
	return toSerialize, nil
}

type NullableSnmpSetReqSnmp struct {
	value *SnmpSetReqSnmp
	isSet bool
}

func (v NullableSnmpSetReqSnmp) Get() *SnmpSetReqSnmp {
	return v.value
}

func (v *NullableSnmpSetReqSnmp) Set(val *SnmpSetReqSnmp) {
	v.value = val
	v.isSet = true
}

func (v NullableSnmpSetReqSnmp) IsSet() bool {
	return v.isSet
}

func (v *NullableSnmpSetReqSnmp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnmpSetReqSnmp(val *SnmpSetReqSnmp) *NullableSnmpSetReqSnmp {
	return &NullableSnmpSetReqSnmp{value: val, isSet: true}
}

func (v NullableSnmpSetReqSnmp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnmpSetReqSnmp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


