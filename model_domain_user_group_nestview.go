/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DomainUserGroupNestview type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DomainUserGroupNestview{}

// DomainUserGroupNestview struct for DomainUserGroupNestview
type DomainUserGroupNestview struct {
	Ad *DomainUserGroupNestviewAd `json:"ad,omitempty"`
	Description *string `json:"description,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Ldap *DomainUserGroupNestviewLdap `json:"ldap,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewDomainUserGroupNestview instantiates a new DomainUserGroupNestview object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDomainUserGroupNestview() *DomainUserGroupNestview {
	this := DomainUserGroupNestview{}
	return &this
}

// NewDomainUserGroupNestviewWithDefaults instantiates a new DomainUserGroupNestview object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDomainUserGroupNestviewWithDefaults() *DomainUserGroupNestview {
	this := DomainUserGroupNestview{}
	return &this
}

// GetAd returns the Ad field value if set, zero value otherwise.
func (o *DomainUserGroupNestview) GetAd() DomainUserGroupNestviewAd {
	if o == nil || IsNil(o.Ad) {
		var ret DomainUserGroupNestviewAd
		return ret
	}
	return *o.Ad
}

// GetAdOk returns a tuple with the Ad field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainUserGroupNestview) GetAdOk() (*DomainUserGroupNestviewAd, bool) {
	if o == nil || IsNil(o.Ad) {
		return nil, false
	}
	return o.Ad, true
}

// HasAd returns a boolean if a field has been set.
func (o *DomainUserGroupNestview) HasAd() bool {
	if o != nil && !IsNil(o.Ad) {
		return true
	}

	return false
}

// SetAd gets a reference to the given DomainUserGroupNestviewAd and assigns it to the Ad field.
func (o *DomainUserGroupNestview) SetAd(v DomainUserGroupNestviewAd) {
	o.Ad = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *DomainUserGroupNestview) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainUserGroupNestview) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *DomainUserGroupNestview) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DomainUserGroupNestview) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DomainUserGroupNestview) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainUserGroupNestview) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DomainUserGroupNestview) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *DomainUserGroupNestview) SetId(v int64) {
	o.Id = &v
}

// GetLdap returns the Ldap field value if set, zero value otherwise.
func (o *DomainUserGroupNestview) GetLdap() DomainUserGroupNestviewLdap {
	if o == nil || IsNil(o.Ldap) {
		var ret DomainUserGroupNestviewLdap
		return ret
	}
	return *o.Ldap
}

// GetLdapOk returns a tuple with the Ldap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainUserGroupNestview) GetLdapOk() (*DomainUserGroupNestviewLdap, bool) {
	if o == nil || IsNil(o.Ldap) {
		return nil, false
	}
	return o.Ldap, true
}

// HasLdap returns a boolean if a field has been set.
func (o *DomainUserGroupNestview) HasLdap() bool {
	if o != nil && !IsNil(o.Ldap) {
		return true
	}

	return false
}

// SetLdap gets a reference to the given DomainUserGroupNestviewLdap and assigns it to the Ldap field.
func (o *DomainUserGroupNestview) SetLdap(v DomainUserGroupNestviewLdap) {
	o.Ldap = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DomainUserGroupNestview) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainUserGroupNestview) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DomainUserGroupNestview) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DomainUserGroupNestview) SetName(v string) {
	o.Name = &v
}

func (o DomainUserGroupNestview) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DomainUserGroupNestview) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ad) {
		toSerialize["ad"] = o.Ad
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Ldap) {
		toSerialize["ldap"] = o.Ldap
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableDomainUserGroupNestview struct {
	value *DomainUserGroupNestview
	isSet bool
}

func (v NullableDomainUserGroupNestview) Get() *DomainUserGroupNestview {
	return v.value
}

func (v *NullableDomainUserGroupNestview) Set(val *DomainUserGroupNestview) {
	v.value = val
	v.isSet = true
}

func (v NullableDomainUserGroupNestview) IsSet() bool {
	return v.isSet
}

func (v *NullableDomainUserGroupNestview) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDomainUserGroupNestview(val *DomainUserGroupNestview) *NullableDomainUserGroupNestview {
	return &NullableDomainUserGroupNestview{value: val, isSet: true}
}

func (v NullableDomainUserGroupNestview) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDomainUserGroupNestview) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


