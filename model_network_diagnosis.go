/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the NetworkDiagnosis type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkDiagnosis{}

// NetworkDiagnosis NetworkDiagnosis defines model of network diagnosis
type NetworkDiagnosis struct {
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	DiagnoseActiveNum *int64 `json:"diagnose_active_num,omitempty"`
	DiagnoseErrorNum *int64 `json:"diagnose_error_num,omitempty"`
	DiagnoseNum *int64 `json:"diagnose_num,omitempty"`
	DiagnoseWarningNum *int64 `json:"diagnose_warning_num,omitempty"`
	DiagnosingNum *int64 `json:"diagnosing_num,omitempty"`
	HostNum *int64 `json:"host_num,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Networks []string `json:"networks,omitempty"`
	NotDiagnoseNum *int64 `json:"not_diagnose_num,omitempty"`
	Progress *float64 `json:"progress,omitempty"`
	Status *string `json:"status,omitempty"`
	Update *time.Time `json:"update,omitempty"`
}

// NewNetworkDiagnosis instantiates a new NetworkDiagnosis object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkDiagnosis() *NetworkDiagnosis {
	this := NetworkDiagnosis{}
	return &this
}

// NewNetworkDiagnosisWithDefaults instantiates a new NetworkDiagnosis object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkDiagnosisWithDefaults() *NetworkDiagnosis {
	this := NetworkDiagnosis{}
	return &this
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *NetworkDiagnosis) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDiagnosis) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *NetworkDiagnosis) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *NetworkDiagnosis) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *NetworkDiagnosis) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDiagnosis) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *NetworkDiagnosis) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *NetworkDiagnosis) SetCreate(v time.Time) {
	o.Create = &v
}

// GetDiagnoseActiveNum returns the DiagnoseActiveNum field value if set, zero value otherwise.
func (o *NetworkDiagnosis) GetDiagnoseActiveNum() int64 {
	if o == nil || IsNil(o.DiagnoseActiveNum) {
		var ret int64
		return ret
	}
	return *o.DiagnoseActiveNum
}

// GetDiagnoseActiveNumOk returns a tuple with the DiagnoseActiveNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDiagnosis) GetDiagnoseActiveNumOk() (*int64, bool) {
	if o == nil || IsNil(o.DiagnoseActiveNum) {
		return nil, false
	}
	return o.DiagnoseActiveNum, true
}

// HasDiagnoseActiveNum returns a boolean if a field has been set.
func (o *NetworkDiagnosis) HasDiagnoseActiveNum() bool {
	if o != nil && !IsNil(o.DiagnoseActiveNum) {
		return true
	}

	return false
}

// SetDiagnoseActiveNum gets a reference to the given int64 and assigns it to the DiagnoseActiveNum field.
func (o *NetworkDiagnosis) SetDiagnoseActiveNum(v int64) {
	o.DiagnoseActiveNum = &v
}

// GetDiagnoseErrorNum returns the DiagnoseErrorNum field value if set, zero value otherwise.
func (o *NetworkDiagnosis) GetDiagnoseErrorNum() int64 {
	if o == nil || IsNil(o.DiagnoseErrorNum) {
		var ret int64
		return ret
	}
	return *o.DiagnoseErrorNum
}

// GetDiagnoseErrorNumOk returns a tuple with the DiagnoseErrorNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDiagnosis) GetDiagnoseErrorNumOk() (*int64, bool) {
	if o == nil || IsNil(o.DiagnoseErrorNum) {
		return nil, false
	}
	return o.DiagnoseErrorNum, true
}

// HasDiagnoseErrorNum returns a boolean if a field has been set.
func (o *NetworkDiagnosis) HasDiagnoseErrorNum() bool {
	if o != nil && !IsNil(o.DiagnoseErrorNum) {
		return true
	}

	return false
}

// SetDiagnoseErrorNum gets a reference to the given int64 and assigns it to the DiagnoseErrorNum field.
func (o *NetworkDiagnosis) SetDiagnoseErrorNum(v int64) {
	o.DiagnoseErrorNum = &v
}

// GetDiagnoseNum returns the DiagnoseNum field value if set, zero value otherwise.
func (o *NetworkDiagnosis) GetDiagnoseNum() int64 {
	if o == nil || IsNil(o.DiagnoseNum) {
		var ret int64
		return ret
	}
	return *o.DiagnoseNum
}

// GetDiagnoseNumOk returns a tuple with the DiagnoseNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDiagnosis) GetDiagnoseNumOk() (*int64, bool) {
	if o == nil || IsNil(o.DiagnoseNum) {
		return nil, false
	}
	return o.DiagnoseNum, true
}

// HasDiagnoseNum returns a boolean if a field has been set.
func (o *NetworkDiagnosis) HasDiagnoseNum() bool {
	if o != nil && !IsNil(o.DiagnoseNum) {
		return true
	}

	return false
}

// SetDiagnoseNum gets a reference to the given int64 and assigns it to the DiagnoseNum field.
func (o *NetworkDiagnosis) SetDiagnoseNum(v int64) {
	o.DiagnoseNum = &v
}

// GetDiagnoseWarningNum returns the DiagnoseWarningNum field value if set, zero value otherwise.
func (o *NetworkDiagnosis) GetDiagnoseWarningNum() int64 {
	if o == nil || IsNil(o.DiagnoseWarningNum) {
		var ret int64
		return ret
	}
	return *o.DiagnoseWarningNum
}

// GetDiagnoseWarningNumOk returns a tuple with the DiagnoseWarningNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDiagnosis) GetDiagnoseWarningNumOk() (*int64, bool) {
	if o == nil || IsNil(o.DiagnoseWarningNum) {
		return nil, false
	}
	return o.DiagnoseWarningNum, true
}

// HasDiagnoseWarningNum returns a boolean if a field has been set.
func (o *NetworkDiagnosis) HasDiagnoseWarningNum() bool {
	if o != nil && !IsNil(o.DiagnoseWarningNum) {
		return true
	}

	return false
}

// SetDiagnoseWarningNum gets a reference to the given int64 and assigns it to the DiagnoseWarningNum field.
func (o *NetworkDiagnosis) SetDiagnoseWarningNum(v int64) {
	o.DiagnoseWarningNum = &v
}

// GetDiagnosingNum returns the DiagnosingNum field value if set, zero value otherwise.
func (o *NetworkDiagnosis) GetDiagnosingNum() int64 {
	if o == nil || IsNil(o.DiagnosingNum) {
		var ret int64
		return ret
	}
	return *o.DiagnosingNum
}

// GetDiagnosingNumOk returns a tuple with the DiagnosingNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDiagnosis) GetDiagnosingNumOk() (*int64, bool) {
	if o == nil || IsNil(o.DiagnosingNum) {
		return nil, false
	}
	return o.DiagnosingNum, true
}

// HasDiagnosingNum returns a boolean if a field has been set.
func (o *NetworkDiagnosis) HasDiagnosingNum() bool {
	if o != nil && !IsNil(o.DiagnosingNum) {
		return true
	}

	return false
}

// SetDiagnosingNum gets a reference to the given int64 and assigns it to the DiagnosingNum field.
func (o *NetworkDiagnosis) SetDiagnosingNum(v int64) {
	o.DiagnosingNum = &v
}

// GetHostNum returns the HostNum field value if set, zero value otherwise.
func (o *NetworkDiagnosis) GetHostNum() int64 {
	if o == nil || IsNil(o.HostNum) {
		var ret int64
		return ret
	}
	return *o.HostNum
}

// GetHostNumOk returns a tuple with the HostNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDiagnosis) GetHostNumOk() (*int64, bool) {
	if o == nil || IsNil(o.HostNum) {
		return nil, false
	}
	return o.HostNum, true
}

// HasHostNum returns a boolean if a field has been set.
func (o *NetworkDiagnosis) HasHostNum() bool {
	if o != nil && !IsNil(o.HostNum) {
		return true
	}

	return false
}

// SetHostNum gets a reference to the given int64 and assigns it to the HostNum field.
func (o *NetworkDiagnosis) SetHostNum(v int64) {
	o.HostNum = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *NetworkDiagnosis) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDiagnosis) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *NetworkDiagnosis) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *NetworkDiagnosis) SetId(v int64) {
	o.Id = &v
}

// GetNetworks returns the Networks field value if set, zero value otherwise.
func (o *NetworkDiagnosis) GetNetworks() []string {
	if o == nil || IsNil(o.Networks) {
		var ret []string
		return ret
	}
	return o.Networks
}

// GetNetworksOk returns a tuple with the Networks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDiagnosis) GetNetworksOk() ([]string, bool) {
	if o == nil || IsNil(o.Networks) {
		return nil, false
	}
	return o.Networks, true
}

// HasNetworks returns a boolean if a field has been set.
func (o *NetworkDiagnosis) HasNetworks() bool {
	if o != nil && !IsNil(o.Networks) {
		return true
	}

	return false
}

// SetNetworks gets a reference to the given []string and assigns it to the Networks field.
func (o *NetworkDiagnosis) SetNetworks(v []string) {
	o.Networks = v
}

// GetNotDiagnoseNum returns the NotDiagnoseNum field value if set, zero value otherwise.
func (o *NetworkDiagnosis) GetNotDiagnoseNum() int64 {
	if o == nil || IsNil(o.NotDiagnoseNum) {
		var ret int64
		return ret
	}
	return *o.NotDiagnoseNum
}

// GetNotDiagnoseNumOk returns a tuple with the NotDiagnoseNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDiagnosis) GetNotDiagnoseNumOk() (*int64, bool) {
	if o == nil || IsNil(o.NotDiagnoseNum) {
		return nil, false
	}
	return o.NotDiagnoseNum, true
}

// HasNotDiagnoseNum returns a boolean if a field has been set.
func (o *NetworkDiagnosis) HasNotDiagnoseNum() bool {
	if o != nil && !IsNil(o.NotDiagnoseNum) {
		return true
	}

	return false
}

// SetNotDiagnoseNum gets a reference to the given int64 and assigns it to the NotDiagnoseNum field.
func (o *NetworkDiagnosis) SetNotDiagnoseNum(v int64) {
	o.NotDiagnoseNum = &v
}

// GetProgress returns the Progress field value if set, zero value otherwise.
func (o *NetworkDiagnosis) GetProgress() float64 {
	if o == nil || IsNil(o.Progress) {
		var ret float64
		return ret
	}
	return *o.Progress
}

// GetProgressOk returns a tuple with the Progress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDiagnosis) GetProgressOk() (*float64, bool) {
	if o == nil || IsNil(o.Progress) {
		return nil, false
	}
	return o.Progress, true
}

// HasProgress returns a boolean if a field has been set.
func (o *NetworkDiagnosis) HasProgress() bool {
	if o != nil && !IsNil(o.Progress) {
		return true
	}

	return false
}

// SetProgress gets a reference to the given float64 and assigns it to the Progress field.
func (o *NetworkDiagnosis) SetProgress(v float64) {
	o.Progress = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *NetworkDiagnosis) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDiagnosis) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *NetworkDiagnosis) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *NetworkDiagnosis) SetStatus(v string) {
	o.Status = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *NetworkDiagnosis) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDiagnosis) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *NetworkDiagnosis) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *NetworkDiagnosis) SetUpdate(v time.Time) {
	o.Update = &v
}

func (o NetworkDiagnosis) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkDiagnosis) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.DiagnoseActiveNum) {
		toSerialize["diagnose_active_num"] = o.DiagnoseActiveNum
	}
	if !IsNil(o.DiagnoseErrorNum) {
		toSerialize["diagnose_error_num"] = o.DiagnoseErrorNum
	}
	if !IsNil(o.DiagnoseNum) {
		toSerialize["diagnose_num"] = o.DiagnoseNum
	}
	if !IsNil(o.DiagnoseWarningNum) {
		toSerialize["diagnose_warning_num"] = o.DiagnoseWarningNum
	}
	if !IsNil(o.DiagnosingNum) {
		toSerialize["diagnosing_num"] = o.DiagnosingNum
	}
	if !IsNil(o.HostNum) {
		toSerialize["host_num"] = o.HostNum
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Networks) {
		toSerialize["networks"] = o.Networks
	}
	if !IsNil(o.NotDiagnoseNum) {
		toSerialize["not_diagnose_num"] = o.NotDiagnoseNum
	}
	if !IsNil(o.Progress) {
		toSerialize["progress"] = o.Progress
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	return toSerialize, nil
}

type NullableNetworkDiagnosis struct {
	value *NetworkDiagnosis
	isSet bool
}

func (v NullableNetworkDiagnosis) Get() *NetworkDiagnosis {
	return v.value
}

func (v *NullableNetworkDiagnosis) Set(val *NetworkDiagnosis) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkDiagnosis) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkDiagnosis) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkDiagnosis(val *NetworkDiagnosis) *NullableNetworkDiagnosis {
	return &NullableNetworkDiagnosis{value: val, isSet: true}
}

func (v NullableNetworkDiagnosis) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkDiagnosis) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


