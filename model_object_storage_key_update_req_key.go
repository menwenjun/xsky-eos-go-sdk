/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ObjectStorageKeyUpdateReqKey type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ObjectStorageKeyUpdateReqKey{}

// ObjectStorageKeyUpdateReqKey struct for ObjectStorageKeyUpdateReqKey
type ObjectStorageKeyUpdateReqKey struct {
	SecretKey *string `json:"secret_key,omitempty"`
}

// NewObjectStorageKeyUpdateReqKey instantiates a new ObjectStorageKeyUpdateReqKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectStorageKeyUpdateReqKey() *ObjectStorageKeyUpdateReqKey {
	this := ObjectStorageKeyUpdateReqKey{}
	return &this
}

// NewObjectStorageKeyUpdateReqKeyWithDefaults instantiates a new ObjectStorageKeyUpdateReqKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectStorageKeyUpdateReqKeyWithDefaults() *ObjectStorageKeyUpdateReqKey {
	this := ObjectStorageKeyUpdateReqKey{}
	return &this
}

// GetSecretKey returns the SecretKey field value if set, zero value otherwise.
func (o *ObjectStorageKeyUpdateReqKey) GetSecretKey() string {
	if o == nil || IsNil(o.SecretKey) {
		var ret string
		return ret
	}
	return *o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageKeyUpdateReqKey) GetSecretKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SecretKey) {
		return nil, false
	}
	return o.SecretKey, true
}

// HasSecretKey returns a boolean if a field has been set.
func (o *ObjectStorageKeyUpdateReqKey) HasSecretKey() bool {
	if o != nil && !IsNil(o.SecretKey) {
		return true
	}

	return false
}

// SetSecretKey gets a reference to the given string and assigns it to the SecretKey field.
func (o *ObjectStorageKeyUpdateReqKey) SetSecretKey(v string) {
	o.SecretKey = &v
}

func (o ObjectStorageKeyUpdateReqKey) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ObjectStorageKeyUpdateReqKey) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SecretKey) {
		toSerialize["secret_key"] = o.SecretKey
	}
	return toSerialize, nil
}

type NullableObjectStorageKeyUpdateReqKey struct {
	value *ObjectStorageKeyUpdateReqKey
	isSet bool
}

func (v NullableObjectStorageKeyUpdateReqKey) Get() *ObjectStorageKeyUpdateReqKey {
	return v.value
}

func (v *NullableObjectStorageKeyUpdateReqKey) Set(val *ObjectStorageKeyUpdateReqKey) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectStorageKeyUpdateReqKey) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectStorageKeyUpdateReqKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectStorageKeyUpdateReqKey(val *ObjectStorageKeyUpdateReqKey) *NullableObjectStorageKeyUpdateReqKey {
	return &NullableObjectStorageKeyUpdateReqKey{value: val, isSet: true}
}

func (v NullableObjectStorageKeyUpdateReqKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectStorageKeyUpdateReqKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


