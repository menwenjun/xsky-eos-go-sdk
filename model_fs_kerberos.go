/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the FSKerberos type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FSKerberos{}

// FSKerberos FSKerberos defines models of FSKerberos
type FSKerberos struct {
	ActionStatus *string `json:"action_status,omitempty"`
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	Description *string `json:"description,omitempty"`
	DfsHdfsNum *int64 `json:"dfs_hdfs_num,omitempty"`
	DfsHdfses []DfsHdfs `json:"dfs_hdfses,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Ip *string `json:"ip,omitempty"`
	Kdc *string `json:"kdc,omitempty"`
	Name *string `json:"name,omitempty"`
	Realm *string `json:"realm,omitempty"`
	Status *string `json:"status,omitempty"`
	Type *string `json:"type,omitempty"`
	Update *time.Time `json:"update,omitempty"`
	Username *string `json:"username,omitempty"`
	VerifyTime *time.Time `json:"verify_time,omitempty"`
}

// NewFSKerberos instantiates a new FSKerberos object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFSKerberos() *FSKerberos {
	this := FSKerberos{}
	return &this
}

// NewFSKerberosWithDefaults instantiates a new FSKerberos object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFSKerberosWithDefaults() *FSKerberos {
	this := FSKerberos{}
	return &this
}

// GetActionStatus returns the ActionStatus field value if set, zero value otherwise.
func (o *FSKerberos) GetActionStatus() string {
	if o == nil || IsNil(o.ActionStatus) {
		var ret string
		return ret
	}
	return *o.ActionStatus
}

// GetActionStatusOk returns a tuple with the ActionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FSKerberos) GetActionStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ActionStatus) {
		return nil, false
	}
	return o.ActionStatus, true
}

// HasActionStatus returns a boolean if a field has been set.
func (o *FSKerberos) HasActionStatus() bool {
	if o != nil && !IsNil(o.ActionStatus) {
		return true
	}

	return false
}

// SetActionStatus gets a reference to the given string and assigns it to the ActionStatus field.
func (o *FSKerberos) SetActionStatus(v string) {
	o.ActionStatus = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *FSKerberos) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FSKerberos) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *FSKerberos) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *FSKerberos) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *FSKerberos) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FSKerberos) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *FSKerberos) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *FSKerberos) SetCreate(v time.Time) {
	o.Create = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *FSKerberos) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FSKerberos) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *FSKerberos) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *FSKerberos) SetDescription(v string) {
	o.Description = &v
}

// GetDfsHdfsNum returns the DfsHdfsNum field value if set, zero value otherwise.
func (o *FSKerberos) GetDfsHdfsNum() int64 {
	if o == nil || IsNil(o.DfsHdfsNum) {
		var ret int64
		return ret
	}
	return *o.DfsHdfsNum
}

// GetDfsHdfsNumOk returns a tuple with the DfsHdfsNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FSKerberos) GetDfsHdfsNumOk() (*int64, bool) {
	if o == nil || IsNil(o.DfsHdfsNum) {
		return nil, false
	}
	return o.DfsHdfsNum, true
}

// HasDfsHdfsNum returns a boolean if a field has been set.
func (o *FSKerberos) HasDfsHdfsNum() bool {
	if o != nil && !IsNil(o.DfsHdfsNum) {
		return true
	}

	return false
}

// SetDfsHdfsNum gets a reference to the given int64 and assigns it to the DfsHdfsNum field.
func (o *FSKerberos) SetDfsHdfsNum(v int64) {
	o.DfsHdfsNum = &v
}

// GetDfsHdfses returns the DfsHdfses field value if set, zero value otherwise.
func (o *FSKerberos) GetDfsHdfses() []DfsHdfs {
	if o == nil || IsNil(o.DfsHdfses) {
		var ret []DfsHdfs
		return ret
	}
	return o.DfsHdfses
}

// GetDfsHdfsesOk returns a tuple with the DfsHdfses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FSKerberos) GetDfsHdfsesOk() ([]DfsHdfs, bool) {
	if o == nil || IsNil(o.DfsHdfses) {
		return nil, false
	}
	return o.DfsHdfses, true
}

// HasDfsHdfses returns a boolean if a field has been set.
func (o *FSKerberos) HasDfsHdfses() bool {
	if o != nil && !IsNil(o.DfsHdfses) {
		return true
	}

	return false
}

// SetDfsHdfses gets a reference to the given []DfsHdfs and assigns it to the DfsHdfses field.
func (o *FSKerberos) SetDfsHdfses(v []DfsHdfs) {
	o.DfsHdfses = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FSKerberos) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FSKerberos) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FSKerberos) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *FSKerberos) SetId(v int64) {
	o.Id = &v
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *FSKerberos) GetIp() string {
	if o == nil || IsNil(o.Ip) {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FSKerberos) GetIpOk() (*string, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *FSKerberos) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *FSKerberos) SetIp(v string) {
	o.Ip = &v
}

// GetKdc returns the Kdc field value if set, zero value otherwise.
func (o *FSKerberos) GetKdc() string {
	if o == nil || IsNil(o.Kdc) {
		var ret string
		return ret
	}
	return *o.Kdc
}

// GetKdcOk returns a tuple with the Kdc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FSKerberos) GetKdcOk() (*string, bool) {
	if o == nil || IsNil(o.Kdc) {
		return nil, false
	}
	return o.Kdc, true
}

// HasKdc returns a boolean if a field has been set.
func (o *FSKerberos) HasKdc() bool {
	if o != nil && !IsNil(o.Kdc) {
		return true
	}

	return false
}

// SetKdc gets a reference to the given string and assigns it to the Kdc field.
func (o *FSKerberos) SetKdc(v string) {
	o.Kdc = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *FSKerberos) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FSKerberos) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *FSKerberos) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *FSKerberos) SetName(v string) {
	o.Name = &v
}

// GetRealm returns the Realm field value if set, zero value otherwise.
func (o *FSKerberos) GetRealm() string {
	if o == nil || IsNil(o.Realm) {
		var ret string
		return ret
	}
	return *o.Realm
}

// GetRealmOk returns a tuple with the Realm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FSKerberos) GetRealmOk() (*string, bool) {
	if o == nil || IsNil(o.Realm) {
		return nil, false
	}
	return o.Realm, true
}

// HasRealm returns a boolean if a field has been set.
func (o *FSKerberos) HasRealm() bool {
	if o != nil && !IsNil(o.Realm) {
		return true
	}

	return false
}

// SetRealm gets a reference to the given string and assigns it to the Realm field.
func (o *FSKerberos) SetRealm(v string) {
	o.Realm = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *FSKerberos) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FSKerberos) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *FSKerberos) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *FSKerberos) SetStatus(v string) {
	o.Status = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *FSKerberos) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FSKerberos) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *FSKerberos) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *FSKerberos) SetType(v string) {
	o.Type = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *FSKerberos) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FSKerberos) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *FSKerberos) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *FSKerberos) SetUpdate(v time.Time) {
	o.Update = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *FSKerberos) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FSKerberos) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *FSKerberos) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *FSKerberos) SetUsername(v string) {
	o.Username = &v
}

// GetVerifyTime returns the VerifyTime field value if set, zero value otherwise.
func (o *FSKerberos) GetVerifyTime() time.Time {
	if o == nil || IsNil(o.VerifyTime) {
		var ret time.Time
		return ret
	}
	return *o.VerifyTime
}

// GetVerifyTimeOk returns a tuple with the VerifyTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FSKerberos) GetVerifyTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.VerifyTime) {
		return nil, false
	}
	return o.VerifyTime, true
}

// HasVerifyTime returns a boolean if a field has been set.
func (o *FSKerberos) HasVerifyTime() bool {
	if o != nil && !IsNil(o.VerifyTime) {
		return true
	}

	return false
}

// SetVerifyTime gets a reference to the given time.Time and assigns it to the VerifyTime field.
func (o *FSKerberos) SetVerifyTime(v time.Time) {
	o.VerifyTime = &v
}

func (o FSKerberos) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FSKerberos) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActionStatus) {
		toSerialize["action_status"] = o.ActionStatus
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DfsHdfsNum) {
		toSerialize["dfs_hdfs_num"] = o.DfsHdfsNum
	}
	if !IsNil(o.DfsHdfses) {
		toSerialize["dfs_hdfses"] = o.DfsHdfses
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	if !IsNil(o.Kdc) {
		toSerialize["kdc"] = o.Kdc
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Realm) {
		toSerialize["realm"] = o.Realm
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.VerifyTime) {
		toSerialize["verify_time"] = o.VerifyTime
	}
	return toSerialize, nil
}

type NullableFSKerberos struct {
	value *FSKerberos
	isSet bool
}

func (v NullableFSKerberos) Get() *FSKerberos {
	return v.value
}

func (v *NullableFSKerberos) Set(val *FSKerberos) {
	v.value = val
	v.isSet = true
}

func (v NullableFSKerberos) IsSet() bool {
	return v.isSet
}

func (v *NullableFSKerberos) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFSKerberos(val *FSKerberos) *NullableFSKerberos {
	return &NullableFSKerberos{value: val, isSet: true}
}

func (v NullableFSKerberos) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFSKerberos) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


