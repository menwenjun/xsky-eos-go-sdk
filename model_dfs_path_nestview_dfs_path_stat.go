/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the DfsPathNestviewDfsPathStat type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsPathNestviewDfsPathStat{}

// DfsPathNestviewDfsPathStat struct for DfsPathNestviewDfsPathStat
type DfsPathNestviewDfsPathStat struct {
	Access *time.Time `json:"access,omitempty"`
	Change *time.Time `json:"change,omitempty"`
	DpDfsSnapshotPolicies []string `json:"dp_dfs_snapshot_policies,omitempty"`
	DpSnapshotNum *int64 `json:"dp_snapshot_num,omitempty"`
	Files *int64 `json:"files,omitempty"`
	LastSnapshotTime *time.Time `json:"last_snapshot_time,omitempty"`
	Modify *time.Time `json:"modify,omitempty"`
	QuotaNum *int64 `json:"quota_num,omitempty"`
	Shared *bool `json:"shared,omitempty"`
	Size *int64 `json:"size,omitempty"`
	SnapshotNum *int64 `json:"snapshot_num,omitempty"`
	TotalSnapshotNum *int64 `json:"total_snapshot_num,omitempty"`
}

// NewDfsPathNestviewDfsPathStat instantiates a new DfsPathNestviewDfsPathStat object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsPathNestviewDfsPathStat() *DfsPathNestviewDfsPathStat {
	this := DfsPathNestviewDfsPathStat{}
	return &this
}

// NewDfsPathNestviewDfsPathStatWithDefaults instantiates a new DfsPathNestviewDfsPathStat object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsPathNestviewDfsPathStatWithDefaults() *DfsPathNestviewDfsPathStat {
	this := DfsPathNestviewDfsPathStat{}
	return &this
}

// GetAccess returns the Access field value if set, zero value otherwise.
func (o *DfsPathNestviewDfsPathStat) GetAccess() time.Time {
	if o == nil || IsNil(o.Access) {
		var ret time.Time
		return ret
	}
	return *o.Access
}

// GetAccessOk returns a tuple with the Access field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsPathNestviewDfsPathStat) GetAccessOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Access) {
		return nil, false
	}
	return o.Access, true
}

// HasAccess returns a boolean if a field has been set.
func (o *DfsPathNestviewDfsPathStat) HasAccess() bool {
	if o != nil && !IsNil(o.Access) {
		return true
	}

	return false
}

// SetAccess gets a reference to the given time.Time and assigns it to the Access field.
func (o *DfsPathNestviewDfsPathStat) SetAccess(v time.Time) {
	o.Access = &v
}

// GetChange returns the Change field value if set, zero value otherwise.
func (o *DfsPathNestviewDfsPathStat) GetChange() time.Time {
	if o == nil || IsNil(o.Change) {
		var ret time.Time
		return ret
	}
	return *o.Change
}

// GetChangeOk returns a tuple with the Change field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsPathNestviewDfsPathStat) GetChangeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Change) {
		return nil, false
	}
	return o.Change, true
}

// HasChange returns a boolean if a field has been set.
func (o *DfsPathNestviewDfsPathStat) HasChange() bool {
	if o != nil && !IsNil(o.Change) {
		return true
	}

	return false
}

// SetChange gets a reference to the given time.Time and assigns it to the Change field.
func (o *DfsPathNestviewDfsPathStat) SetChange(v time.Time) {
	o.Change = &v
}

// GetDpDfsSnapshotPolicies returns the DpDfsSnapshotPolicies field value if set, zero value otherwise.
func (o *DfsPathNestviewDfsPathStat) GetDpDfsSnapshotPolicies() []string {
	if o == nil || IsNil(o.DpDfsSnapshotPolicies) {
		var ret []string
		return ret
	}
	return o.DpDfsSnapshotPolicies
}

// GetDpDfsSnapshotPoliciesOk returns a tuple with the DpDfsSnapshotPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsPathNestviewDfsPathStat) GetDpDfsSnapshotPoliciesOk() ([]string, bool) {
	if o == nil || IsNil(o.DpDfsSnapshotPolicies) {
		return nil, false
	}
	return o.DpDfsSnapshotPolicies, true
}

// HasDpDfsSnapshotPolicies returns a boolean if a field has been set.
func (o *DfsPathNestviewDfsPathStat) HasDpDfsSnapshotPolicies() bool {
	if o != nil && !IsNil(o.DpDfsSnapshotPolicies) {
		return true
	}

	return false
}

// SetDpDfsSnapshotPolicies gets a reference to the given []string and assigns it to the DpDfsSnapshotPolicies field.
func (o *DfsPathNestviewDfsPathStat) SetDpDfsSnapshotPolicies(v []string) {
	o.DpDfsSnapshotPolicies = v
}

// GetDpSnapshotNum returns the DpSnapshotNum field value if set, zero value otherwise.
func (o *DfsPathNestviewDfsPathStat) GetDpSnapshotNum() int64 {
	if o == nil || IsNil(o.DpSnapshotNum) {
		var ret int64
		return ret
	}
	return *o.DpSnapshotNum
}

// GetDpSnapshotNumOk returns a tuple with the DpSnapshotNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsPathNestviewDfsPathStat) GetDpSnapshotNumOk() (*int64, bool) {
	if o == nil || IsNil(o.DpSnapshotNum) {
		return nil, false
	}
	return o.DpSnapshotNum, true
}

// HasDpSnapshotNum returns a boolean if a field has been set.
func (o *DfsPathNestviewDfsPathStat) HasDpSnapshotNum() bool {
	if o != nil && !IsNil(o.DpSnapshotNum) {
		return true
	}

	return false
}

// SetDpSnapshotNum gets a reference to the given int64 and assigns it to the DpSnapshotNum field.
func (o *DfsPathNestviewDfsPathStat) SetDpSnapshotNum(v int64) {
	o.DpSnapshotNum = &v
}

// GetFiles returns the Files field value if set, zero value otherwise.
func (o *DfsPathNestviewDfsPathStat) GetFiles() int64 {
	if o == nil || IsNil(o.Files) {
		var ret int64
		return ret
	}
	return *o.Files
}

// GetFilesOk returns a tuple with the Files field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsPathNestviewDfsPathStat) GetFilesOk() (*int64, bool) {
	if o == nil || IsNil(o.Files) {
		return nil, false
	}
	return o.Files, true
}

// HasFiles returns a boolean if a field has been set.
func (o *DfsPathNestviewDfsPathStat) HasFiles() bool {
	if o != nil && !IsNil(o.Files) {
		return true
	}

	return false
}

// SetFiles gets a reference to the given int64 and assigns it to the Files field.
func (o *DfsPathNestviewDfsPathStat) SetFiles(v int64) {
	o.Files = &v
}

// GetLastSnapshotTime returns the LastSnapshotTime field value if set, zero value otherwise.
func (o *DfsPathNestviewDfsPathStat) GetLastSnapshotTime() time.Time {
	if o == nil || IsNil(o.LastSnapshotTime) {
		var ret time.Time
		return ret
	}
	return *o.LastSnapshotTime
}

// GetLastSnapshotTimeOk returns a tuple with the LastSnapshotTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsPathNestviewDfsPathStat) GetLastSnapshotTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastSnapshotTime) {
		return nil, false
	}
	return o.LastSnapshotTime, true
}

// HasLastSnapshotTime returns a boolean if a field has been set.
func (o *DfsPathNestviewDfsPathStat) HasLastSnapshotTime() bool {
	if o != nil && !IsNil(o.LastSnapshotTime) {
		return true
	}

	return false
}

// SetLastSnapshotTime gets a reference to the given time.Time and assigns it to the LastSnapshotTime field.
func (o *DfsPathNestviewDfsPathStat) SetLastSnapshotTime(v time.Time) {
	o.LastSnapshotTime = &v
}

// GetModify returns the Modify field value if set, zero value otherwise.
func (o *DfsPathNestviewDfsPathStat) GetModify() time.Time {
	if o == nil || IsNil(o.Modify) {
		var ret time.Time
		return ret
	}
	return *o.Modify
}

// GetModifyOk returns a tuple with the Modify field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsPathNestviewDfsPathStat) GetModifyOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Modify) {
		return nil, false
	}
	return o.Modify, true
}

// HasModify returns a boolean if a field has been set.
func (o *DfsPathNestviewDfsPathStat) HasModify() bool {
	if o != nil && !IsNil(o.Modify) {
		return true
	}

	return false
}

// SetModify gets a reference to the given time.Time and assigns it to the Modify field.
func (o *DfsPathNestviewDfsPathStat) SetModify(v time.Time) {
	o.Modify = &v
}

// GetQuotaNum returns the QuotaNum field value if set, zero value otherwise.
func (o *DfsPathNestviewDfsPathStat) GetQuotaNum() int64 {
	if o == nil || IsNil(o.QuotaNum) {
		var ret int64
		return ret
	}
	return *o.QuotaNum
}

// GetQuotaNumOk returns a tuple with the QuotaNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsPathNestviewDfsPathStat) GetQuotaNumOk() (*int64, bool) {
	if o == nil || IsNil(o.QuotaNum) {
		return nil, false
	}
	return o.QuotaNum, true
}

// HasQuotaNum returns a boolean if a field has been set.
func (o *DfsPathNestviewDfsPathStat) HasQuotaNum() bool {
	if o != nil && !IsNil(o.QuotaNum) {
		return true
	}

	return false
}

// SetQuotaNum gets a reference to the given int64 and assigns it to the QuotaNum field.
func (o *DfsPathNestviewDfsPathStat) SetQuotaNum(v int64) {
	o.QuotaNum = &v
}

// GetShared returns the Shared field value if set, zero value otherwise.
func (o *DfsPathNestviewDfsPathStat) GetShared() bool {
	if o == nil || IsNil(o.Shared) {
		var ret bool
		return ret
	}
	return *o.Shared
}

// GetSharedOk returns a tuple with the Shared field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsPathNestviewDfsPathStat) GetSharedOk() (*bool, bool) {
	if o == nil || IsNil(o.Shared) {
		return nil, false
	}
	return o.Shared, true
}

// HasShared returns a boolean if a field has been set.
func (o *DfsPathNestviewDfsPathStat) HasShared() bool {
	if o != nil && !IsNil(o.Shared) {
		return true
	}

	return false
}

// SetShared gets a reference to the given bool and assigns it to the Shared field.
func (o *DfsPathNestviewDfsPathStat) SetShared(v bool) {
	o.Shared = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *DfsPathNestviewDfsPathStat) GetSize() int64 {
	if o == nil || IsNil(o.Size) {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsPathNestviewDfsPathStat) GetSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *DfsPathNestviewDfsPathStat) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *DfsPathNestviewDfsPathStat) SetSize(v int64) {
	o.Size = &v
}

// GetSnapshotNum returns the SnapshotNum field value if set, zero value otherwise.
func (o *DfsPathNestviewDfsPathStat) GetSnapshotNum() int64 {
	if o == nil || IsNil(o.SnapshotNum) {
		var ret int64
		return ret
	}
	return *o.SnapshotNum
}

// GetSnapshotNumOk returns a tuple with the SnapshotNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsPathNestviewDfsPathStat) GetSnapshotNumOk() (*int64, bool) {
	if o == nil || IsNil(o.SnapshotNum) {
		return nil, false
	}
	return o.SnapshotNum, true
}

// HasSnapshotNum returns a boolean if a field has been set.
func (o *DfsPathNestviewDfsPathStat) HasSnapshotNum() bool {
	if o != nil && !IsNil(o.SnapshotNum) {
		return true
	}

	return false
}

// SetSnapshotNum gets a reference to the given int64 and assigns it to the SnapshotNum field.
func (o *DfsPathNestviewDfsPathStat) SetSnapshotNum(v int64) {
	o.SnapshotNum = &v
}

// GetTotalSnapshotNum returns the TotalSnapshotNum field value if set, zero value otherwise.
func (o *DfsPathNestviewDfsPathStat) GetTotalSnapshotNum() int64 {
	if o == nil || IsNil(o.TotalSnapshotNum) {
		var ret int64
		return ret
	}
	return *o.TotalSnapshotNum
}

// GetTotalSnapshotNumOk returns a tuple with the TotalSnapshotNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsPathNestviewDfsPathStat) GetTotalSnapshotNumOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalSnapshotNum) {
		return nil, false
	}
	return o.TotalSnapshotNum, true
}

// HasTotalSnapshotNum returns a boolean if a field has been set.
func (o *DfsPathNestviewDfsPathStat) HasTotalSnapshotNum() bool {
	if o != nil && !IsNil(o.TotalSnapshotNum) {
		return true
	}

	return false
}

// SetTotalSnapshotNum gets a reference to the given int64 and assigns it to the TotalSnapshotNum field.
func (o *DfsPathNestviewDfsPathStat) SetTotalSnapshotNum(v int64) {
	o.TotalSnapshotNum = &v
}

func (o DfsPathNestviewDfsPathStat) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsPathNestviewDfsPathStat) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Access) {
		toSerialize["access"] = o.Access
	}
	if !IsNil(o.Change) {
		toSerialize["change"] = o.Change
	}
	if !IsNil(o.DpDfsSnapshotPolicies) {
		toSerialize["dp_dfs_snapshot_policies"] = o.DpDfsSnapshotPolicies
	}
	if !IsNil(o.DpSnapshotNum) {
		toSerialize["dp_snapshot_num"] = o.DpSnapshotNum
	}
	if !IsNil(o.Files) {
		toSerialize["files"] = o.Files
	}
	if !IsNil(o.LastSnapshotTime) {
		toSerialize["last_snapshot_time"] = o.LastSnapshotTime
	}
	if !IsNil(o.Modify) {
		toSerialize["modify"] = o.Modify
	}
	if !IsNil(o.QuotaNum) {
		toSerialize["quota_num"] = o.QuotaNum
	}
	if !IsNil(o.Shared) {
		toSerialize["shared"] = o.Shared
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.SnapshotNum) {
		toSerialize["snapshot_num"] = o.SnapshotNum
	}
	if !IsNil(o.TotalSnapshotNum) {
		toSerialize["total_snapshot_num"] = o.TotalSnapshotNum
	}
	return toSerialize, nil
}

type NullableDfsPathNestviewDfsPathStat struct {
	value *DfsPathNestviewDfsPathStat
	isSet bool
}

func (v NullableDfsPathNestviewDfsPathStat) Get() *DfsPathNestviewDfsPathStat {
	return v.value
}

func (v *NullableDfsPathNestviewDfsPathStat) Set(val *DfsPathNestviewDfsPathStat) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsPathNestviewDfsPathStat) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsPathNestviewDfsPathStat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsPathNestviewDfsPathStat(val *DfsPathNestviewDfsPathStat) *NullableDfsPathNestviewDfsPathStat {
	return &NullableDfsPathNestviewDfsPathStat{value: val, isSet: true}
}

func (v NullableDfsPathNestviewDfsPathStat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsPathNestviewDfsPathStat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


