/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the PlacementNodeTopology type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PlacementNodeTopology{}

// PlacementNodeTopology PlacementNodeTopology defines the response content of placement node topology
type PlacementNodeTopology struct {
	Cluster *Cluster `json:"cluster,omitempty"`
	// time of creating placement node
	Create *time.Time `json:"create,omitempty"`
	// id of placement node
	Id *int64 `json:"id,omitempty"`
	// name of placement node
	Name *string `json:"name,omitempty"`
	// old id of placement node
	OrigId *int64 `json:"orig_id,omitempty"`
	Parent *PlacementNode `json:"parent,omitempty"`
	Properties *PlacementNodeProperties `json:"properties,omitempty"`
	// type of placement node
	Type *string `json:"type,omitempty"`
	// time of updating placement node
	Update *time.Time `json:"update,omitempty"`
	AvailableOsdNum *int64 `json:"available_osd_num,omitempty"`
	Children []PlacementNodeTopology `json:"children,omitempty"`
	HostNum *int64 `json:"host_num,omitempty"`
	Payload map[string]interface{} `json:"payload,omitempty"`
}

// NewPlacementNodeTopology instantiates a new PlacementNodeTopology object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlacementNodeTopology() *PlacementNodeTopology {
	this := PlacementNodeTopology{}
	return &this
}

// NewPlacementNodeTopologyWithDefaults instantiates a new PlacementNodeTopology object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlacementNodeTopologyWithDefaults() *PlacementNodeTopology {
	this := PlacementNodeTopology{}
	return &this
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *PlacementNodeTopology) GetCluster() Cluster {
	if o == nil || IsNil(o.Cluster) {
		var ret Cluster
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlacementNodeTopology) GetClusterOk() (*Cluster, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *PlacementNodeTopology) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given Cluster and assigns it to the Cluster field.
func (o *PlacementNodeTopology) SetCluster(v Cluster) {
	o.Cluster = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *PlacementNodeTopology) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlacementNodeTopology) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *PlacementNodeTopology) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *PlacementNodeTopology) SetCreate(v time.Time) {
	o.Create = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PlacementNodeTopology) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlacementNodeTopology) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PlacementNodeTopology) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *PlacementNodeTopology) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PlacementNodeTopology) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlacementNodeTopology) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PlacementNodeTopology) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PlacementNodeTopology) SetName(v string) {
	o.Name = &v
}

// GetOrigId returns the OrigId field value if set, zero value otherwise.
func (o *PlacementNodeTopology) GetOrigId() int64 {
	if o == nil || IsNil(o.OrigId) {
		var ret int64
		return ret
	}
	return *o.OrigId
}

// GetOrigIdOk returns a tuple with the OrigId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlacementNodeTopology) GetOrigIdOk() (*int64, bool) {
	if o == nil || IsNil(o.OrigId) {
		return nil, false
	}
	return o.OrigId, true
}

// HasOrigId returns a boolean if a field has been set.
func (o *PlacementNodeTopology) HasOrigId() bool {
	if o != nil && !IsNil(o.OrigId) {
		return true
	}

	return false
}

// SetOrigId gets a reference to the given int64 and assigns it to the OrigId field.
func (o *PlacementNodeTopology) SetOrigId(v int64) {
	o.OrigId = &v
}

// GetParent returns the Parent field value if set, zero value otherwise.
func (o *PlacementNodeTopology) GetParent() PlacementNode {
	if o == nil || IsNil(o.Parent) {
		var ret PlacementNode
		return ret
	}
	return *o.Parent
}

// GetParentOk returns a tuple with the Parent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlacementNodeTopology) GetParentOk() (*PlacementNode, bool) {
	if o == nil || IsNil(o.Parent) {
		return nil, false
	}
	return o.Parent, true
}

// HasParent returns a boolean if a field has been set.
func (o *PlacementNodeTopology) HasParent() bool {
	if o != nil && !IsNil(o.Parent) {
		return true
	}

	return false
}

// SetParent gets a reference to the given PlacementNode and assigns it to the Parent field.
func (o *PlacementNodeTopology) SetParent(v PlacementNode) {
	o.Parent = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *PlacementNodeTopology) GetProperties() PlacementNodeProperties {
	if o == nil || IsNil(o.Properties) {
		var ret PlacementNodeProperties
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlacementNodeTopology) GetPropertiesOk() (*PlacementNodeProperties, bool) {
	if o == nil || IsNil(o.Properties) {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *PlacementNodeTopology) HasProperties() bool {
	if o != nil && !IsNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given PlacementNodeProperties and assigns it to the Properties field.
func (o *PlacementNodeTopology) SetProperties(v PlacementNodeProperties) {
	o.Properties = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *PlacementNodeTopology) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlacementNodeTopology) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *PlacementNodeTopology) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *PlacementNodeTopology) SetType(v string) {
	o.Type = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *PlacementNodeTopology) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlacementNodeTopology) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *PlacementNodeTopology) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *PlacementNodeTopology) SetUpdate(v time.Time) {
	o.Update = &v
}

// GetAvailableOsdNum returns the AvailableOsdNum field value if set, zero value otherwise.
func (o *PlacementNodeTopology) GetAvailableOsdNum() int64 {
	if o == nil || IsNil(o.AvailableOsdNum) {
		var ret int64
		return ret
	}
	return *o.AvailableOsdNum
}

// GetAvailableOsdNumOk returns a tuple with the AvailableOsdNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlacementNodeTopology) GetAvailableOsdNumOk() (*int64, bool) {
	if o == nil || IsNil(o.AvailableOsdNum) {
		return nil, false
	}
	return o.AvailableOsdNum, true
}

// HasAvailableOsdNum returns a boolean if a field has been set.
func (o *PlacementNodeTopology) HasAvailableOsdNum() bool {
	if o != nil && !IsNil(o.AvailableOsdNum) {
		return true
	}

	return false
}

// SetAvailableOsdNum gets a reference to the given int64 and assigns it to the AvailableOsdNum field.
func (o *PlacementNodeTopology) SetAvailableOsdNum(v int64) {
	o.AvailableOsdNum = &v
}

// GetChildren returns the Children field value if set, zero value otherwise.
func (o *PlacementNodeTopology) GetChildren() []PlacementNodeTopology {
	if o == nil || IsNil(o.Children) {
		var ret []PlacementNodeTopology
		return ret
	}
	return o.Children
}

// GetChildrenOk returns a tuple with the Children field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlacementNodeTopology) GetChildrenOk() ([]PlacementNodeTopology, bool) {
	if o == nil || IsNil(o.Children) {
		return nil, false
	}
	return o.Children, true
}

// HasChildren returns a boolean if a field has been set.
func (o *PlacementNodeTopology) HasChildren() bool {
	if o != nil && !IsNil(o.Children) {
		return true
	}

	return false
}

// SetChildren gets a reference to the given []PlacementNodeTopology and assigns it to the Children field.
func (o *PlacementNodeTopology) SetChildren(v []PlacementNodeTopology) {
	o.Children = v
}

// GetHostNum returns the HostNum field value if set, zero value otherwise.
func (o *PlacementNodeTopology) GetHostNum() int64 {
	if o == nil || IsNil(o.HostNum) {
		var ret int64
		return ret
	}
	return *o.HostNum
}

// GetHostNumOk returns a tuple with the HostNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlacementNodeTopology) GetHostNumOk() (*int64, bool) {
	if o == nil || IsNil(o.HostNum) {
		return nil, false
	}
	return o.HostNum, true
}

// HasHostNum returns a boolean if a field has been set.
func (o *PlacementNodeTopology) HasHostNum() bool {
	if o != nil && !IsNil(o.HostNum) {
		return true
	}

	return false
}

// SetHostNum gets a reference to the given int64 and assigns it to the HostNum field.
func (o *PlacementNodeTopology) SetHostNum(v int64) {
	o.HostNum = &v
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *PlacementNodeTopology) GetPayload() map[string]interface{} {
	if o == nil || IsNil(o.Payload) {
		var ret map[string]interface{}
		return ret
	}
	return o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlacementNodeTopology) GetPayloadOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Payload) {
		return map[string]interface{}{}, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *PlacementNodeTopology) HasPayload() bool {
	if o != nil && !IsNil(o.Payload) {
		return true
	}

	return false
}

// SetPayload gets a reference to the given map[string]interface{} and assigns it to the Payload field.
func (o *PlacementNodeTopology) SetPayload(v map[string]interface{}) {
	o.Payload = v
}

func (o PlacementNodeTopology) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PlacementNodeTopology) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OrigId) {
		toSerialize["orig_id"] = o.OrigId
	}
	if !IsNil(o.Parent) {
		toSerialize["parent"] = o.Parent
	}
	if !IsNil(o.Properties) {
		toSerialize["properties"] = o.Properties
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	if !IsNil(o.AvailableOsdNum) {
		toSerialize["available_osd_num"] = o.AvailableOsdNum
	}
	if !IsNil(o.Children) {
		toSerialize["children"] = o.Children
	}
	if !IsNil(o.HostNum) {
		toSerialize["host_num"] = o.HostNum
	}
	if !IsNil(o.Payload) {
		toSerialize["payload"] = o.Payload
	}
	return toSerialize, nil
}

type NullablePlacementNodeTopology struct {
	value *PlacementNodeTopology
	isSet bool
}

func (v NullablePlacementNodeTopology) Get() *PlacementNodeTopology {
	return v.value
}

func (v *NullablePlacementNodeTopology) Set(val *PlacementNodeTopology) {
	v.value = val
	v.isSet = true
}

func (v NullablePlacementNodeTopology) IsSet() bool {
	return v.isSet
}

func (v *NullablePlacementNodeTopology) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlacementNodeTopology(val *PlacementNodeTopology) *NullablePlacementNodeTopology {
	return &NullablePlacementNodeTopology{value: val, isSet: true}
}

func (v NullablePlacementNodeTopology) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlacementNodeTopology) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


