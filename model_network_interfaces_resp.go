/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the NetworkInterfacesResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkInterfacesResp{}

// NetworkInterfacesResp struct for NetworkInterfacesResp
type NetworkInterfacesResp struct {
	// network interface records
	NetworkInterfaces []NetworkInterfaceRecord `json:"network_interfaces,omitempty"`
}

// NewNetworkInterfacesResp instantiates a new NetworkInterfacesResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkInterfacesResp() *NetworkInterfacesResp {
	this := NetworkInterfacesResp{}
	return &this
}

// NewNetworkInterfacesRespWithDefaults instantiates a new NetworkInterfacesResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkInterfacesRespWithDefaults() *NetworkInterfacesResp {
	this := NetworkInterfacesResp{}
	return &this
}

// GetNetworkInterfaces returns the NetworkInterfaces field value if set, zero value otherwise.
func (o *NetworkInterfacesResp) GetNetworkInterfaces() []NetworkInterfaceRecord {
	if o == nil || IsNil(o.NetworkInterfaces) {
		var ret []NetworkInterfaceRecord
		return ret
	}
	return o.NetworkInterfaces
}

// GetNetworkInterfacesOk returns a tuple with the NetworkInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterfacesResp) GetNetworkInterfacesOk() ([]NetworkInterfaceRecord, bool) {
	if o == nil || IsNil(o.NetworkInterfaces) {
		return nil, false
	}
	return o.NetworkInterfaces, true
}

// HasNetworkInterfaces returns a boolean if a field has been set.
func (o *NetworkInterfacesResp) HasNetworkInterfaces() bool {
	if o != nil && !IsNil(o.NetworkInterfaces) {
		return true
	}

	return false
}

// SetNetworkInterfaces gets a reference to the given []NetworkInterfaceRecord and assigns it to the NetworkInterfaces field.
func (o *NetworkInterfacesResp) SetNetworkInterfaces(v []NetworkInterfaceRecord) {
	o.NetworkInterfaces = v
}

func (o NetworkInterfacesResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkInterfacesResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NetworkInterfaces) {
		toSerialize["network_interfaces"] = o.NetworkInterfaces
	}
	return toSerialize, nil
}

type NullableNetworkInterfacesResp struct {
	value *NetworkInterfacesResp
	isSet bool
}

func (v NullableNetworkInterfacesResp) Get() *NetworkInterfacesResp {
	return v.value
}

func (v *NullableNetworkInterfacesResp) Set(val *NetworkInterfacesResp) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkInterfacesResp) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkInterfacesResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkInterfacesResp(val *NetworkInterfacesResp) *NullableNetworkInterfacesResp {
	return &NullableNetworkInterfacesResp{value: val, isSet: true}
}

func (v NullableNetworkInterfacesResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkInterfacesResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


