/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OSBuiltinBluRaysResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OSBuiltinBluRaysResp{}

// OSBuiltinBluRaysResp struct for OSBuiltinBluRaysResp
type OSBuiltinBluRaysResp struct {
	OsBuiltinBluRays []OSBuiltinBluRay `json:"os_builtin_blu_rays,omitempty"`
}

// NewOSBuiltinBluRaysResp instantiates a new OSBuiltinBluRaysResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOSBuiltinBluRaysResp() *OSBuiltinBluRaysResp {
	this := OSBuiltinBluRaysResp{}
	return &this
}

// NewOSBuiltinBluRaysRespWithDefaults instantiates a new OSBuiltinBluRaysResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOSBuiltinBluRaysRespWithDefaults() *OSBuiltinBluRaysResp {
	this := OSBuiltinBluRaysResp{}
	return &this
}

// GetOsBuiltinBluRays returns the OsBuiltinBluRays field value if set, zero value otherwise.
func (o *OSBuiltinBluRaysResp) GetOsBuiltinBluRays() []OSBuiltinBluRay {
	if o == nil || IsNil(o.OsBuiltinBluRays) {
		var ret []OSBuiltinBluRay
		return ret
	}
	return o.OsBuiltinBluRays
}

// GetOsBuiltinBluRaysOk returns a tuple with the OsBuiltinBluRays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBuiltinBluRaysResp) GetOsBuiltinBluRaysOk() ([]OSBuiltinBluRay, bool) {
	if o == nil || IsNil(o.OsBuiltinBluRays) {
		return nil, false
	}
	return o.OsBuiltinBluRays, true
}

// HasOsBuiltinBluRays returns a boolean if a field has been set.
func (o *OSBuiltinBluRaysResp) HasOsBuiltinBluRays() bool {
	if o != nil && !IsNil(o.OsBuiltinBluRays) {
		return true
	}

	return false
}

// SetOsBuiltinBluRays gets a reference to the given []OSBuiltinBluRay and assigns it to the OsBuiltinBluRays field.
func (o *OSBuiltinBluRaysResp) SetOsBuiltinBluRays(v []OSBuiltinBluRay) {
	o.OsBuiltinBluRays = v
}

func (o OSBuiltinBluRaysResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OSBuiltinBluRaysResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OsBuiltinBluRays) {
		toSerialize["os_builtin_blu_rays"] = o.OsBuiltinBluRays
	}
	return toSerialize, nil
}

type NullableOSBuiltinBluRaysResp struct {
	value *OSBuiltinBluRaysResp
	isSet bool
}

func (v NullableOSBuiltinBluRaysResp) Get() *OSBuiltinBluRaysResp {
	return v.value
}

func (v *NullableOSBuiltinBluRaysResp) Set(val *OSBuiltinBluRaysResp) {
	v.value = val
	v.isSet = true
}

func (v NullableOSBuiltinBluRaysResp) IsSet() bool {
	return v.isSet
}

func (v *NullableOSBuiltinBluRaysResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSBuiltinBluRaysResp(val *OSBuiltinBluRaysResp) *NullableOSBuiltinBluRaysResp {
	return &NullableOSBuiltinBluRaysResp{value: val, isSet: true}
}

func (v NullableOSBuiltinBluRaysResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSBuiltinBluRaysResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


