/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the OspGatewayStat type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OspGatewayStat{}

// OspGatewayStat OspGatewayStat is the model of osp_gateway_stat
type OspGatewayStat struct {
	AllRequests *int64 `json:"all_requests,omitempty"`
	CompactBandwidthKbyte *float64 `json:"compact_bandwidth_kbyte,omitempty"`
	CompactOps *float64 `json:"compact_ops,omitempty"`
	CpuUtil *float64 `json:"cpu_util,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	DeleteLatency *float64 `json:"delete_latency,omitempty"`
	DeleteOps *float64 `json:"delete_ops,omitempty"`
	DownBandwidthKbyte *float64 `json:"down_bandwidth_kbyte,omitempty"`
	DownFirstByteLatency *float64 `json:"down_first_byte_latency,omitempty"`
	DownLatency *float64 `json:"down_latency,omitempty"`
	DownOps *float64 `json:"down_ops,omitempty"`
	ListLatency *float64 `json:"list_latency,omitempty"`
	ListOps *float64 `json:"list_ops,omitempty"`
	MemUsagePercent *float64 `json:"mem_usage_percent,omitempty"`
	MergeSpeed *int64 `json:"merge_speed,omitempty"`
	ReplicationBandwidthKbyte *float64 `json:"replication_bandwidth_kbyte,omitempty"`
	ReplicationOps *float64 `json:"replication_ops,omitempty"`
	Requests *int64 `json:"requests,omitempty"`
	SyncDownBandwidthKbyte *float64 `json:"sync_down_bandwidth_kbyte,omitempty"`
	SyncDownLastByteLatency *float64 `json:"sync_down_last_byte_latency,omitempty"`
	SyncDownLatency *float64 `json:"sync_down_latency,omitempty"`
	SyncDownOps *float64 `json:"sync_down_ops,omitempty"`
	SyncUpBandwidthKbyte *float64 `json:"sync_up_bandwidth_kbyte,omitempty"`
	SyncUpLatency *float64 `json:"sync_up_latency,omitempty"`
	SyncUpOps *float64 `json:"sync_up_ops,omitempty"`
	UpBandwidthKbyte *float64 `json:"up_bandwidth_kbyte,omitempty"`
	UpLastByteLatency *float64 `json:"up_last_byte_latency,omitempty"`
	UpLatency *float64 `json:"up_latency,omitempty"`
	UpOps *float64 `json:"up_ops,omitempty"`
}

// NewOspGatewayStat instantiates a new OspGatewayStat object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOspGatewayStat() *OspGatewayStat {
	this := OspGatewayStat{}
	return &this
}

// NewOspGatewayStatWithDefaults instantiates a new OspGatewayStat object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOspGatewayStatWithDefaults() *OspGatewayStat {
	this := OspGatewayStat{}
	return &this
}

// GetAllRequests returns the AllRequests field value if set, zero value otherwise.
func (o *OspGatewayStat) GetAllRequests() int64 {
	if o == nil || IsNil(o.AllRequests) {
		var ret int64
		return ret
	}
	return *o.AllRequests
}

// GetAllRequestsOk returns a tuple with the AllRequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspGatewayStat) GetAllRequestsOk() (*int64, bool) {
	if o == nil || IsNil(o.AllRequests) {
		return nil, false
	}
	return o.AllRequests, true
}

// HasAllRequests returns a boolean if a field has been set.
func (o *OspGatewayStat) HasAllRequests() bool {
	if o != nil && !IsNil(o.AllRequests) {
		return true
	}

	return false
}

// SetAllRequests gets a reference to the given int64 and assigns it to the AllRequests field.
func (o *OspGatewayStat) SetAllRequests(v int64) {
	o.AllRequests = &v
}

// GetCompactBandwidthKbyte returns the CompactBandwidthKbyte field value if set, zero value otherwise.
func (o *OspGatewayStat) GetCompactBandwidthKbyte() float64 {
	if o == nil || IsNil(o.CompactBandwidthKbyte) {
		var ret float64
		return ret
	}
	return *o.CompactBandwidthKbyte
}

// GetCompactBandwidthKbyteOk returns a tuple with the CompactBandwidthKbyte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspGatewayStat) GetCompactBandwidthKbyteOk() (*float64, bool) {
	if o == nil || IsNil(o.CompactBandwidthKbyte) {
		return nil, false
	}
	return o.CompactBandwidthKbyte, true
}

// HasCompactBandwidthKbyte returns a boolean if a field has been set.
func (o *OspGatewayStat) HasCompactBandwidthKbyte() bool {
	if o != nil && !IsNil(o.CompactBandwidthKbyte) {
		return true
	}

	return false
}

// SetCompactBandwidthKbyte gets a reference to the given float64 and assigns it to the CompactBandwidthKbyte field.
func (o *OspGatewayStat) SetCompactBandwidthKbyte(v float64) {
	o.CompactBandwidthKbyte = &v
}

// GetCompactOps returns the CompactOps field value if set, zero value otherwise.
func (o *OspGatewayStat) GetCompactOps() float64 {
	if o == nil || IsNil(o.CompactOps) {
		var ret float64
		return ret
	}
	return *o.CompactOps
}

// GetCompactOpsOk returns a tuple with the CompactOps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspGatewayStat) GetCompactOpsOk() (*float64, bool) {
	if o == nil || IsNil(o.CompactOps) {
		return nil, false
	}
	return o.CompactOps, true
}

// HasCompactOps returns a boolean if a field has been set.
func (o *OspGatewayStat) HasCompactOps() bool {
	if o != nil && !IsNil(o.CompactOps) {
		return true
	}

	return false
}

// SetCompactOps gets a reference to the given float64 and assigns it to the CompactOps field.
func (o *OspGatewayStat) SetCompactOps(v float64) {
	o.CompactOps = &v
}

// GetCpuUtil returns the CpuUtil field value if set, zero value otherwise.
func (o *OspGatewayStat) GetCpuUtil() float64 {
	if o == nil || IsNil(o.CpuUtil) {
		var ret float64
		return ret
	}
	return *o.CpuUtil
}

// GetCpuUtilOk returns a tuple with the CpuUtil field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspGatewayStat) GetCpuUtilOk() (*float64, bool) {
	if o == nil || IsNil(o.CpuUtil) {
		return nil, false
	}
	return o.CpuUtil, true
}

// HasCpuUtil returns a boolean if a field has been set.
func (o *OspGatewayStat) HasCpuUtil() bool {
	if o != nil && !IsNil(o.CpuUtil) {
		return true
	}

	return false
}

// SetCpuUtil gets a reference to the given float64 and assigns it to the CpuUtil field.
func (o *OspGatewayStat) SetCpuUtil(v float64) {
	o.CpuUtil = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *OspGatewayStat) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspGatewayStat) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *OspGatewayStat) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *OspGatewayStat) SetCreate(v time.Time) {
	o.Create = &v
}

// GetDeleteLatency returns the DeleteLatency field value if set, zero value otherwise.
func (o *OspGatewayStat) GetDeleteLatency() float64 {
	if o == nil || IsNil(o.DeleteLatency) {
		var ret float64
		return ret
	}
	return *o.DeleteLatency
}

// GetDeleteLatencyOk returns a tuple with the DeleteLatency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspGatewayStat) GetDeleteLatencyOk() (*float64, bool) {
	if o == nil || IsNil(o.DeleteLatency) {
		return nil, false
	}
	return o.DeleteLatency, true
}

// HasDeleteLatency returns a boolean if a field has been set.
func (o *OspGatewayStat) HasDeleteLatency() bool {
	if o != nil && !IsNil(o.DeleteLatency) {
		return true
	}

	return false
}

// SetDeleteLatency gets a reference to the given float64 and assigns it to the DeleteLatency field.
func (o *OspGatewayStat) SetDeleteLatency(v float64) {
	o.DeleteLatency = &v
}

// GetDeleteOps returns the DeleteOps field value if set, zero value otherwise.
func (o *OspGatewayStat) GetDeleteOps() float64 {
	if o == nil || IsNil(o.DeleteOps) {
		var ret float64
		return ret
	}
	return *o.DeleteOps
}

// GetDeleteOpsOk returns a tuple with the DeleteOps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspGatewayStat) GetDeleteOpsOk() (*float64, bool) {
	if o == nil || IsNil(o.DeleteOps) {
		return nil, false
	}
	return o.DeleteOps, true
}

// HasDeleteOps returns a boolean if a field has been set.
func (o *OspGatewayStat) HasDeleteOps() bool {
	if o != nil && !IsNil(o.DeleteOps) {
		return true
	}

	return false
}

// SetDeleteOps gets a reference to the given float64 and assigns it to the DeleteOps field.
func (o *OspGatewayStat) SetDeleteOps(v float64) {
	o.DeleteOps = &v
}

// GetDownBandwidthKbyte returns the DownBandwidthKbyte field value if set, zero value otherwise.
func (o *OspGatewayStat) GetDownBandwidthKbyte() float64 {
	if o == nil || IsNil(o.DownBandwidthKbyte) {
		var ret float64
		return ret
	}
	return *o.DownBandwidthKbyte
}

// GetDownBandwidthKbyteOk returns a tuple with the DownBandwidthKbyte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspGatewayStat) GetDownBandwidthKbyteOk() (*float64, bool) {
	if o == nil || IsNil(o.DownBandwidthKbyte) {
		return nil, false
	}
	return o.DownBandwidthKbyte, true
}

// HasDownBandwidthKbyte returns a boolean if a field has been set.
func (o *OspGatewayStat) HasDownBandwidthKbyte() bool {
	if o != nil && !IsNil(o.DownBandwidthKbyte) {
		return true
	}

	return false
}

// SetDownBandwidthKbyte gets a reference to the given float64 and assigns it to the DownBandwidthKbyte field.
func (o *OspGatewayStat) SetDownBandwidthKbyte(v float64) {
	o.DownBandwidthKbyte = &v
}

// GetDownFirstByteLatency returns the DownFirstByteLatency field value if set, zero value otherwise.
func (o *OspGatewayStat) GetDownFirstByteLatency() float64 {
	if o == nil || IsNil(o.DownFirstByteLatency) {
		var ret float64
		return ret
	}
	return *o.DownFirstByteLatency
}

// GetDownFirstByteLatencyOk returns a tuple with the DownFirstByteLatency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspGatewayStat) GetDownFirstByteLatencyOk() (*float64, bool) {
	if o == nil || IsNil(o.DownFirstByteLatency) {
		return nil, false
	}
	return o.DownFirstByteLatency, true
}

// HasDownFirstByteLatency returns a boolean if a field has been set.
func (o *OspGatewayStat) HasDownFirstByteLatency() bool {
	if o != nil && !IsNil(o.DownFirstByteLatency) {
		return true
	}

	return false
}

// SetDownFirstByteLatency gets a reference to the given float64 and assigns it to the DownFirstByteLatency field.
func (o *OspGatewayStat) SetDownFirstByteLatency(v float64) {
	o.DownFirstByteLatency = &v
}

// GetDownLatency returns the DownLatency field value if set, zero value otherwise.
func (o *OspGatewayStat) GetDownLatency() float64 {
	if o == nil || IsNil(o.DownLatency) {
		var ret float64
		return ret
	}
	return *o.DownLatency
}

// GetDownLatencyOk returns a tuple with the DownLatency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspGatewayStat) GetDownLatencyOk() (*float64, bool) {
	if o == nil || IsNil(o.DownLatency) {
		return nil, false
	}
	return o.DownLatency, true
}

// HasDownLatency returns a boolean if a field has been set.
func (o *OspGatewayStat) HasDownLatency() bool {
	if o != nil && !IsNil(o.DownLatency) {
		return true
	}

	return false
}

// SetDownLatency gets a reference to the given float64 and assigns it to the DownLatency field.
func (o *OspGatewayStat) SetDownLatency(v float64) {
	o.DownLatency = &v
}

// GetDownOps returns the DownOps field value if set, zero value otherwise.
func (o *OspGatewayStat) GetDownOps() float64 {
	if o == nil || IsNil(o.DownOps) {
		var ret float64
		return ret
	}
	return *o.DownOps
}

// GetDownOpsOk returns a tuple with the DownOps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspGatewayStat) GetDownOpsOk() (*float64, bool) {
	if o == nil || IsNil(o.DownOps) {
		return nil, false
	}
	return o.DownOps, true
}

// HasDownOps returns a boolean if a field has been set.
func (o *OspGatewayStat) HasDownOps() bool {
	if o != nil && !IsNil(o.DownOps) {
		return true
	}

	return false
}

// SetDownOps gets a reference to the given float64 and assigns it to the DownOps field.
func (o *OspGatewayStat) SetDownOps(v float64) {
	o.DownOps = &v
}

// GetListLatency returns the ListLatency field value if set, zero value otherwise.
func (o *OspGatewayStat) GetListLatency() float64 {
	if o == nil || IsNil(o.ListLatency) {
		var ret float64
		return ret
	}
	return *o.ListLatency
}

// GetListLatencyOk returns a tuple with the ListLatency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspGatewayStat) GetListLatencyOk() (*float64, bool) {
	if o == nil || IsNil(o.ListLatency) {
		return nil, false
	}
	return o.ListLatency, true
}

// HasListLatency returns a boolean if a field has been set.
func (o *OspGatewayStat) HasListLatency() bool {
	if o != nil && !IsNil(o.ListLatency) {
		return true
	}

	return false
}

// SetListLatency gets a reference to the given float64 and assigns it to the ListLatency field.
func (o *OspGatewayStat) SetListLatency(v float64) {
	o.ListLatency = &v
}

// GetListOps returns the ListOps field value if set, zero value otherwise.
func (o *OspGatewayStat) GetListOps() float64 {
	if o == nil || IsNil(o.ListOps) {
		var ret float64
		return ret
	}
	return *o.ListOps
}

// GetListOpsOk returns a tuple with the ListOps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspGatewayStat) GetListOpsOk() (*float64, bool) {
	if o == nil || IsNil(o.ListOps) {
		return nil, false
	}
	return o.ListOps, true
}

// HasListOps returns a boolean if a field has been set.
func (o *OspGatewayStat) HasListOps() bool {
	if o != nil && !IsNil(o.ListOps) {
		return true
	}

	return false
}

// SetListOps gets a reference to the given float64 and assigns it to the ListOps field.
func (o *OspGatewayStat) SetListOps(v float64) {
	o.ListOps = &v
}

// GetMemUsagePercent returns the MemUsagePercent field value if set, zero value otherwise.
func (o *OspGatewayStat) GetMemUsagePercent() float64 {
	if o == nil || IsNil(o.MemUsagePercent) {
		var ret float64
		return ret
	}
	return *o.MemUsagePercent
}

// GetMemUsagePercentOk returns a tuple with the MemUsagePercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspGatewayStat) GetMemUsagePercentOk() (*float64, bool) {
	if o == nil || IsNil(o.MemUsagePercent) {
		return nil, false
	}
	return o.MemUsagePercent, true
}

// HasMemUsagePercent returns a boolean if a field has been set.
func (o *OspGatewayStat) HasMemUsagePercent() bool {
	if o != nil && !IsNil(o.MemUsagePercent) {
		return true
	}

	return false
}

// SetMemUsagePercent gets a reference to the given float64 and assigns it to the MemUsagePercent field.
func (o *OspGatewayStat) SetMemUsagePercent(v float64) {
	o.MemUsagePercent = &v
}

// GetMergeSpeed returns the MergeSpeed field value if set, zero value otherwise.
func (o *OspGatewayStat) GetMergeSpeed() int64 {
	if o == nil || IsNil(o.MergeSpeed) {
		var ret int64
		return ret
	}
	return *o.MergeSpeed
}

// GetMergeSpeedOk returns a tuple with the MergeSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspGatewayStat) GetMergeSpeedOk() (*int64, bool) {
	if o == nil || IsNil(o.MergeSpeed) {
		return nil, false
	}
	return o.MergeSpeed, true
}

// HasMergeSpeed returns a boolean if a field has been set.
func (o *OspGatewayStat) HasMergeSpeed() bool {
	if o != nil && !IsNil(o.MergeSpeed) {
		return true
	}

	return false
}

// SetMergeSpeed gets a reference to the given int64 and assigns it to the MergeSpeed field.
func (o *OspGatewayStat) SetMergeSpeed(v int64) {
	o.MergeSpeed = &v
}

// GetReplicationBandwidthKbyte returns the ReplicationBandwidthKbyte field value if set, zero value otherwise.
func (o *OspGatewayStat) GetReplicationBandwidthKbyte() float64 {
	if o == nil || IsNil(o.ReplicationBandwidthKbyte) {
		var ret float64
		return ret
	}
	return *o.ReplicationBandwidthKbyte
}

// GetReplicationBandwidthKbyteOk returns a tuple with the ReplicationBandwidthKbyte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspGatewayStat) GetReplicationBandwidthKbyteOk() (*float64, bool) {
	if o == nil || IsNil(o.ReplicationBandwidthKbyte) {
		return nil, false
	}
	return o.ReplicationBandwidthKbyte, true
}

// HasReplicationBandwidthKbyte returns a boolean if a field has been set.
func (o *OspGatewayStat) HasReplicationBandwidthKbyte() bool {
	if o != nil && !IsNil(o.ReplicationBandwidthKbyte) {
		return true
	}

	return false
}

// SetReplicationBandwidthKbyte gets a reference to the given float64 and assigns it to the ReplicationBandwidthKbyte field.
func (o *OspGatewayStat) SetReplicationBandwidthKbyte(v float64) {
	o.ReplicationBandwidthKbyte = &v
}

// GetReplicationOps returns the ReplicationOps field value if set, zero value otherwise.
func (o *OspGatewayStat) GetReplicationOps() float64 {
	if o == nil || IsNil(o.ReplicationOps) {
		var ret float64
		return ret
	}
	return *o.ReplicationOps
}

// GetReplicationOpsOk returns a tuple with the ReplicationOps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspGatewayStat) GetReplicationOpsOk() (*float64, bool) {
	if o == nil || IsNil(o.ReplicationOps) {
		return nil, false
	}
	return o.ReplicationOps, true
}

// HasReplicationOps returns a boolean if a field has been set.
func (o *OspGatewayStat) HasReplicationOps() bool {
	if o != nil && !IsNil(o.ReplicationOps) {
		return true
	}

	return false
}

// SetReplicationOps gets a reference to the given float64 and assigns it to the ReplicationOps field.
func (o *OspGatewayStat) SetReplicationOps(v float64) {
	o.ReplicationOps = &v
}

// GetRequests returns the Requests field value if set, zero value otherwise.
func (o *OspGatewayStat) GetRequests() int64 {
	if o == nil || IsNil(o.Requests) {
		var ret int64
		return ret
	}
	return *o.Requests
}

// GetRequestsOk returns a tuple with the Requests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspGatewayStat) GetRequestsOk() (*int64, bool) {
	if o == nil || IsNil(o.Requests) {
		return nil, false
	}
	return o.Requests, true
}

// HasRequests returns a boolean if a field has been set.
func (o *OspGatewayStat) HasRequests() bool {
	if o != nil && !IsNil(o.Requests) {
		return true
	}

	return false
}

// SetRequests gets a reference to the given int64 and assigns it to the Requests field.
func (o *OspGatewayStat) SetRequests(v int64) {
	o.Requests = &v
}

// GetSyncDownBandwidthKbyte returns the SyncDownBandwidthKbyte field value if set, zero value otherwise.
func (o *OspGatewayStat) GetSyncDownBandwidthKbyte() float64 {
	if o == nil || IsNil(o.SyncDownBandwidthKbyte) {
		var ret float64
		return ret
	}
	return *o.SyncDownBandwidthKbyte
}

// GetSyncDownBandwidthKbyteOk returns a tuple with the SyncDownBandwidthKbyte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspGatewayStat) GetSyncDownBandwidthKbyteOk() (*float64, bool) {
	if o == nil || IsNil(o.SyncDownBandwidthKbyte) {
		return nil, false
	}
	return o.SyncDownBandwidthKbyte, true
}

// HasSyncDownBandwidthKbyte returns a boolean if a field has been set.
func (o *OspGatewayStat) HasSyncDownBandwidthKbyte() bool {
	if o != nil && !IsNil(o.SyncDownBandwidthKbyte) {
		return true
	}

	return false
}

// SetSyncDownBandwidthKbyte gets a reference to the given float64 and assigns it to the SyncDownBandwidthKbyte field.
func (o *OspGatewayStat) SetSyncDownBandwidthKbyte(v float64) {
	o.SyncDownBandwidthKbyte = &v
}

// GetSyncDownLastByteLatency returns the SyncDownLastByteLatency field value if set, zero value otherwise.
func (o *OspGatewayStat) GetSyncDownLastByteLatency() float64 {
	if o == nil || IsNil(o.SyncDownLastByteLatency) {
		var ret float64
		return ret
	}
	return *o.SyncDownLastByteLatency
}

// GetSyncDownLastByteLatencyOk returns a tuple with the SyncDownLastByteLatency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspGatewayStat) GetSyncDownLastByteLatencyOk() (*float64, bool) {
	if o == nil || IsNil(o.SyncDownLastByteLatency) {
		return nil, false
	}
	return o.SyncDownLastByteLatency, true
}

// HasSyncDownLastByteLatency returns a boolean if a field has been set.
func (o *OspGatewayStat) HasSyncDownLastByteLatency() bool {
	if o != nil && !IsNil(o.SyncDownLastByteLatency) {
		return true
	}

	return false
}

// SetSyncDownLastByteLatency gets a reference to the given float64 and assigns it to the SyncDownLastByteLatency field.
func (o *OspGatewayStat) SetSyncDownLastByteLatency(v float64) {
	o.SyncDownLastByteLatency = &v
}

// GetSyncDownLatency returns the SyncDownLatency field value if set, zero value otherwise.
func (o *OspGatewayStat) GetSyncDownLatency() float64 {
	if o == nil || IsNil(o.SyncDownLatency) {
		var ret float64
		return ret
	}
	return *o.SyncDownLatency
}

// GetSyncDownLatencyOk returns a tuple with the SyncDownLatency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspGatewayStat) GetSyncDownLatencyOk() (*float64, bool) {
	if o == nil || IsNil(o.SyncDownLatency) {
		return nil, false
	}
	return o.SyncDownLatency, true
}

// HasSyncDownLatency returns a boolean if a field has been set.
func (o *OspGatewayStat) HasSyncDownLatency() bool {
	if o != nil && !IsNil(o.SyncDownLatency) {
		return true
	}

	return false
}

// SetSyncDownLatency gets a reference to the given float64 and assigns it to the SyncDownLatency field.
func (o *OspGatewayStat) SetSyncDownLatency(v float64) {
	o.SyncDownLatency = &v
}

// GetSyncDownOps returns the SyncDownOps field value if set, zero value otherwise.
func (o *OspGatewayStat) GetSyncDownOps() float64 {
	if o == nil || IsNil(o.SyncDownOps) {
		var ret float64
		return ret
	}
	return *o.SyncDownOps
}

// GetSyncDownOpsOk returns a tuple with the SyncDownOps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspGatewayStat) GetSyncDownOpsOk() (*float64, bool) {
	if o == nil || IsNil(o.SyncDownOps) {
		return nil, false
	}
	return o.SyncDownOps, true
}

// HasSyncDownOps returns a boolean if a field has been set.
func (o *OspGatewayStat) HasSyncDownOps() bool {
	if o != nil && !IsNil(o.SyncDownOps) {
		return true
	}

	return false
}

// SetSyncDownOps gets a reference to the given float64 and assigns it to the SyncDownOps field.
func (o *OspGatewayStat) SetSyncDownOps(v float64) {
	o.SyncDownOps = &v
}

// GetSyncUpBandwidthKbyte returns the SyncUpBandwidthKbyte field value if set, zero value otherwise.
func (o *OspGatewayStat) GetSyncUpBandwidthKbyte() float64 {
	if o == nil || IsNil(o.SyncUpBandwidthKbyte) {
		var ret float64
		return ret
	}
	return *o.SyncUpBandwidthKbyte
}

// GetSyncUpBandwidthKbyteOk returns a tuple with the SyncUpBandwidthKbyte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspGatewayStat) GetSyncUpBandwidthKbyteOk() (*float64, bool) {
	if o == nil || IsNil(o.SyncUpBandwidthKbyte) {
		return nil, false
	}
	return o.SyncUpBandwidthKbyte, true
}

// HasSyncUpBandwidthKbyte returns a boolean if a field has been set.
func (o *OspGatewayStat) HasSyncUpBandwidthKbyte() bool {
	if o != nil && !IsNil(o.SyncUpBandwidthKbyte) {
		return true
	}

	return false
}

// SetSyncUpBandwidthKbyte gets a reference to the given float64 and assigns it to the SyncUpBandwidthKbyte field.
func (o *OspGatewayStat) SetSyncUpBandwidthKbyte(v float64) {
	o.SyncUpBandwidthKbyte = &v
}

// GetSyncUpLatency returns the SyncUpLatency field value if set, zero value otherwise.
func (o *OspGatewayStat) GetSyncUpLatency() float64 {
	if o == nil || IsNil(o.SyncUpLatency) {
		var ret float64
		return ret
	}
	return *o.SyncUpLatency
}

// GetSyncUpLatencyOk returns a tuple with the SyncUpLatency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspGatewayStat) GetSyncUpLatencyOk() (*float64, bool) {
	if o == nil || IsNil(o.SyncUpLatency) {
		return nil, false
	}
	return o.SyncUpLatency, true
}

// HasSyncUpLatency returns a boolean if a field has been set.
func (o *OspGatewayStat) HasSyncUpLatency() bool {
	if o != nil && !IsNil(o.SyncUpLatency) {
		return true
	}

	return false
}

// SetSyncUpLatency gets a reference to the given float64 and assigns it to the SyncUpLatency field.
func (o *OspGatewayStat) SetSyncUpLatency(v float64) {
	o.SyncUpLatency = &v
}

// GetSyncUpOps returns the SyncUpOps field value if set, zero value otherwise.
func (o *OspGatewayStat) GetSyncUpOps() float64 {
	if o == nil || IsNil(o.SyncUpOps) {
		var ret float64
		return ret
	}
	return *o.SyncUpOps
}

// GetSyncUpOpsOk returns a tuple with the SyncUpOps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspGatewayStat) GetSyncUpOpsOk() (*float64, bool) {
	if o == nil || IsNil(o.SyncUpOps) {
		return nil, false
	}
	return o.SyncUpOps, true
}

// HasSyncUpOps returns a boolean if a field has been set.
func (o *OspGatewayStat) HasSyncUpOps() bool {
	if o != nil && !IsNil(o.SyncUpOps) {
		return true
	}

	return false
}

// SetSyncUpOps gets a reference to the given float64 and assigns it to the SyncUpOps field.
func (o *OspGatewayStat) SetSyncUpOps(v float64) {
	o.SyncUpOps = &v
}

// GetUpBandwidthKbyte returns the UpBandwidthKbyte field value if set, zero value otherwise.
func (o *OspGatewayStat) GetUpBandwidthKbyte() float64 {
	if o == nil || IsNil(o.UpBandwidthKbyte) {
		var ret float64
		return ret
	}
	return *o.UpBandwidthKbyte
}

// GetUpBandwidthKbyteOk returns a tuple with the UpBandwidthKbyte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspGatewayStat) GetUpBandwidthKbyteOk() (*float64, bool) {
	if o == nil || IsNil(o.UpBandwidthKbyte) {
		return nil, false
	}
	return o.UpBandwidthKbyte, true
}

// HasUpBandwidthKbyte returns a boolean if a field has been set.
func (o *OspGatewayStat) HasUpBandwidthKbyte() bool {
	if o != nil && !IsNil(o.UpBandwidthKbyte) {
		return true
	}

	return false
}

// SetUpBandwidthKbyte gets a reference to the given float64 and assigns it to the UpBandwidthKbyte field.
func (o *OspGatewayStat) SetUpBandwidthKbyte(v float64) {
	o.UpBandwidthKbyte = &v
}

// GetUpLastByteLatency returns the UpLastByteLatency field value if set, zero value otherwise.
func (o *OspGatewayStat) GetUpLastByteLatency() float64 {
	if o == nil || IsNil(o.UpLastByteLatency) {
		var ret float64
		return ret
	}
	return *o.UpLastByteLatency
}

// GetUpLastByteLatencyOk returns a tuple with the UpLastByteLatency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspGatewayStat) GetUpLastByteLatencyOk() (*float64, bool) {
	if o == nil || IsNil(o.UpLastByteLatency) {
		return nil, false
	}
	return o.UpLastByteLatency, true
}

// HasUpLastByteLatency returns a boolean if a field has been set.
func (o *OspGatewayStat) HasUpLastByteLatency() bool {
	if o != nil && !IsNil(o.UpLastByteLatency) {
		return true
	}

	return false
}

// SetUpLastByteLatency gets a reference to the given float64 and assigns it to the UpLastByteLatency field.
func (o *OspGatewayStat) SetUpLastByteLatency(v float64) {
	o.UpLastByteLatency = &v
}

// GetUpLatency returns the UpLatency field value if set, zero value otherwise.
func (o *OspGatewayStat) GetUpLatency() float64 {
	if o == nil || IsNil(o.UpLatency) {
		var ret float64
		return ret
	}
	return *o.UpLatency
}

// GetUpLatencyOk returns a tuple with the UpLatency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspGatewayStat) GetUpLatencyOk() (*float64, bool) {
	if o == nil || IsNil(o.UpLatency) {
		return nil, false
	}
	return o.UpLatency, true
}

// HasUpLatency returns a boolean if a field has been set.
func (o *OspGatewayStat) HasUpLatency() bool {
	if o != nil && !IsNil(o.UpLatency) {
		return true
	}

	return false
}

// SetUpLatency gets a reference to the given float64 and assigns it to the UpLatency field.
func (o *OspGatewayStat) SetUpLatency(v float64) {
	o.UpLatency = &v
}

// GetUpOps returns the UpOps field value if set, zero value otherwise.
func (o *OspGatewayStat) GetUpOps() float64 {
	if o == nil || IsNil(o.UpOps) {
		var ret float64
		return ret
	}
	return *o.UpOps
}

// GetUpOpsOk returns a tuple with the UpOps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspGatewayStat) GetUpOpsOk() (*float64, bool) {
	if o == nil || IsNil(o.UpOps) {
		return nil, false
	}
	return o.UpOps, true
}

// HasUpOps returns a boolean if a field has been set.
func (o *OspGatewayStat) HasUpOps() bool {
	if o != nil && !IsNil(o.UpOps) {
		return true
	}

	return false
}

// SetUpOps gets a reference to the given float64 and assigns it to the UpOps field.
func (o *OspGatewayStat) SetUpOps(v float64) {
	o.UpOps = &v
}

func (o OspGatewayStat) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OspGatewayStat) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllRequests) {
		toSerialize["all_requests"] = o.AllRequests
	}
	if !IsNil(o.CompactBandwidthKbyte) {
		toSerialize["compact_bandwidth_kbyte"] = o.CompactBandwidthKbyte
	}
	if !IsNil(o.CompactOps) {
		toSerialize["compact_ops"] = o.CompactOps
	}
	if !IsNil(o.CpuUtil) {
		toSerialize["cpu_util"] = o.CpuUtil
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.DeleteLatency) {
		toSerialize["delete_latency"] = o.DeleteLatency
	}
	if !IsNil(o.DeleteOps) {
		toSerialize["delete_ops"] = o.DeleteOps
	}
	if !IsNil(o.DownBandwidthKbyte) {
		toSerialize["down_bandwidth_kbyte"] = o.DownBandwidthKbyte
	}
	if !IsNil(o.DownFirstByteLatency) {
		toSerialize["down_first_byte_latency"] = o.DownFirstByteLatency
	}
	if !IsNil(o.DownLatency) {
		toSerialize["down_latency"] = o.DownLatency
	}
	if !IsNil(o.DownOps) {
		toSerialize["down_ops"] = o.DownOps
	}
	if !IsNil(o.ListLatency) {
		toSerialize["list_latency"] = o.ListLatency
	}
	if !IsNil(o.ListOps) {
		toSerialize["list_ops"] = o.ListOps
	}
	if !IsNil(o.MemUsagePercent) {
		toSerialize["mem_usage_percent"] = o.MemUsagePercent
	}
	if !IsNil(o.MergeSpeed) {
		toSerialize["merge_speed"] = o.MergeSpeed
	}
	if !IsNil(o.ReplicationBandwidthKbyte) {
		toSerialize["replication_bandwidth_kbyte"] = o.ReplicationBandwidthKbyte
	}
	if !IsNil(o.ReplicationOps) {
		toSerialize["replication_ops"] = o.ReplicationOps
	}
	if !IsNil(o.Requests) {
		toSerialize["requests"] = o.Requests
	}
	if !IsNil(o.SyncDownBandwidthKbyte) {
		toSerialize["sync_down_bandwidth_kbyte"] = o.SyncDownBandwidthKbyte
	}
	if !IsNil(o.SyncDownLastByteLatency) {
		toSerialize["sync_down_last_byte_latency"] = o.SyncDownLastByteLatency
	}
	if !IsNil(o.SyncDownLatency) {
		toSerialize["sync_down_latency"] = o.SyncDownLatency
	}
	if !IsNil(o.SyncDownOps) {
		toSerialize["sync_down_ops"] = o.SyncDownOps
	}
	if !IsNil(o.SyncUpBandwidthKbyte) {
		toSerialize["sync_up_bandwidth_kbyte"] = o.SyncUpBandwidthKbyte
	}
	if !IsNil(o.SyncUpLatency) {
		toSerialize["sync_up_latency"] = o.SyncUpLatency
	}
	if !IsNil(o.SyncUpOps) {
		toSerialize["sync_up_ops"] = o.SyncUpOps
	}
	if !IsNil(o.UpBandwidthKbyte) {
		toSerialize["up_bandwidth_kbyte"] = o.UpBandwidthKbyte
	}
	if !IsNil(o.UpLastByteLatency) {
		toSerialize["up_last_byte_latency"] = o.UpLastByteLatency
	}
	if !IsNil(o.UpLatency) {
		toSerialize["up_latency"] = o.UpLatency
	}
	if !IsNil(o.UpOps) {
		toSerialize["up_ops"] = o.UpOps
	}
	return toSerialize, nil
}

type NullableOspGatewayStat struct {
	value *OspGatewayStat
	isSet bool
}

func (v NullableOspGatewayStat) Get() *OspGatewayStat {
	return v.value
}

func (v *NullableOspGatewayStat) Set(val *OspGatewayStat) {
	v.value = val
	v.isSet = true
}

func (v NullableOspGatewayStat) IsSet() bool {
	return v.isSet
}

func (v *NullableOspGatewayStat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOspGatewayStat(val *OspGatewayStat) *NullableOspGatewayStat {
	return &NullableOspGatewayStat{value: val, isSet: true}
}

func (v NullableOspGatewayStat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOspGatewayStat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


