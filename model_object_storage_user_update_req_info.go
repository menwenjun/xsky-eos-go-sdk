/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ObjectStorageUserUpdateReqInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ObjectStorageUserUpdateReqInfo{}

// ObjectStorageUserUpdateReqInfo struct for ObjectStorageUserUpdateReqInfo
type ObjectStorageUserUpdateReqInfo struct {
	BucketQuotaMaxObjects *int64 `json:"bucket_quota_max_objects,omitempty"`
	BucketQuotaMaxSize *int64 `json:"bucket_quota_max_size,omitempty"`
	Description *string `json:"description,omitempty"`
	DisplayName *string `json:"display_name,omitempty"`
	Email *string `json:"email,omitempty"`
	ExternalBucketQuotaMaxObjects *int64 `json:"external_bucket_quota_max_objects,omitempty"`
	ExternalBucketQuotaMaxSize *int64 `json:"external_bucket_quota_max_size,omitempty"`
	ExternalUserQuotaMaxObjects *int64 `json:"external_user_quota_max_objects,omitempty"`
	ExternalUserQuotaMaxSize *int64 `json:"external_user_quota_max_size,omitempty"`
	LocalBucketQuotaMaxObjects *int64 `json:"local_bucket_quota_max_objects,omitempty"`
	LocalBucketQuotaMaxSize *int64 `json:"local_bucket_quota_max_size,omitempty"`
	LocalUserQuotaMaxObjects *int64 `json:"local_user_quota_max_objects,omitempty"`
	LocalUserQuotaMaxSize *int64 `json:"local_user_quota_max_size,omitempty"`
	LocationConstraintEnabled *bool `json:"location_constraint_enabled,omitempty"`
	MaxBuckets *int64 `json:"max_buckets,omitempty"`
	OpMask *string `json:"op_mask,omitempty"`
	PolicyId *int64 `json:"policy_id,omitempty"`
	PolicyPollingEnabled *bool `json:"policy_polling_enabled,omitempty"`
	Properties *OSUserPropertiesReq `json:"properties,omitempty"`
	Suspended *bool `json:"suspended,omitempty"`
	UserQuotaMaxObjects *int64 `json:"user_quota_max_objects,omitempty"`
	UserQuotaMaxSize *int64 `json:"user_quota_max_size,omitempty"`
}

// NewObjectStorageUserUpdateReqInfo instantiates a new ObjectStorageUserUpdateReqInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectStorageUserUpdateReqInfo() *ObjectStorageUserUpdateReqInfo {
	this := ObjectStorageUserUpdateReqInfo{}
	return &this
}

// NewObjectStorageUserUpdateReqInfoWithDefaults instantiates a new ObjectStorageUserUpdateReqInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectStorageUserUpdateReqInfoWithDefaults() *ObjectStorageUserUpdateReqInfo {
	this := ObjectStorageUserUpdateReqInfo{}
	return &this
}

// GetBucketQuotaMaxObjects returns the BucketQuotaMaxObjects field value if set, zero value otherwise.
func (o *ObjectStorageUserUpdateReqInfo) GetBucketQuotaMaxObjects() int64 {
	if o == nil || IsNil(o.BucketQuotaMaxObjects) {
		var ret int64
		return ret
	}
	return *o.BucketQuotaMaxObjects
}

// GetBucketQuotaMaxObjectsOk returns a tuple with the BucketQuotaMaxObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserUpdateReqInfo) GetBucketQuotaMaxObjectsOk() (*int64, bool) {
	if o == nil || IsNil(o.BucketQuotaMaxObjects) {
		return nil, false
	}
	return o.BucketQuotaMaxObjects, true
}

// HasBucketQuotaMaxObjects returns a boolean if a field has been set.
func (o *ObjectStorageUserUpdateReqInfo) HasBucketQuotaMaxObjects() bool {
	if o != nil && !IsNil(o.BucketQuotaMaxObjects) {
		return true
	}

	return false
}

// SetBucketQuotaMaxObjects gets a reference to the given int64 and assigns it to the BucketQuotaMaxObjects field.
func (o *ObjectStorageUserUpdateReqInfo) SetBucketQuotaMaxObjects(v int64) {
	o.BucketQuotaMaxObjects = &v
}

// GetBucketQuotaMaxSize returns the BucketQuotaMaxSize field value if set, zero value otherwise.
func (o *ObjectStorageUserUpdateReqInfo) GetBucketQuotaMaxSize() int64 {
	if o == nil || IsNil(o.BucketQuotaMaxSize) {
		var ret int64
		return ret
	}
	return *o.BucketQuotaMaxSize
}

// GetBucketQuotaMaxSizeOk returns a tuple with the BucketQuotaMaxSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserUpdateReqInfo) GetBucketQuotaMaxSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.BucketQuotaMaxSize) {
		return nil, false
	}
	return o.BucketQuotaMaxSize, true
}

// HasBucketQuotaMaxSize returns a boolean if a field has been set.
func (o *ObjectStorageUserUpdateReqInfo) HasBucketQuotaMaxSize() bool {
	if o != nil && !IsNil(o.BucketQuotaMaxSize) {
		return true
	}

	return false
}

// SetBucketQuotaMaxSize gets a reference to the given int64 and assigns it to the BucketQuotaMaxSize field.
func (o *ObjectStorageUserUpdateReqInfo) SetBucketQuotaMaxSize(v int64) {
	o.BucketQuotaMaxSize = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ObjectStorageUserUpdateReqInfo) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserUpdateReqInfo) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ObjectStorageUserUpdateReqInfo) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ObjectStorageUserUpdateReqInfo) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ObjectStorageUserUpdateReqInfo) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserUpdateReqInfo) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ObjectStorageUserUpdateReqInfo) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ObjectStorageUserUpdateReqInfo) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *ObjectStorageUserUpdateReqInfo) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserUpdateReqInfo) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *ObjectStorageUserUpdateReqInfo) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *ObjectStorageUserUpdateReqInfo) SetEmail(v string) {
	o.Email = &v
}

// GetExternalBucketQuotaMaxObjects returns the ExternalBucketQuotaMaxObjects field value if set, zero value otherwise.
func (o *ObjectStorageUserUpdateReqInfo) GetExternalBucketQuotaMaxObjects() int64 {
	if o == nil || IsNil(o.ExternalBucketQuotaMaxObjects) {
		var ret int64
		return ret
	}
	return *o.ExternalBucketQuotaMaxObjects
}

// GetExternalBucketQuotaMaxObjectsOk returns a tuple with the ExternalBucketQuotaMaxObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserUpdateReqInfo) GetExternalBucketQuotaMaxObjectsOk() (*int64, bool) {
	if o == nil || IsNil(o.ExternalBucketQuotaMaxObjects) {
		return nil, false
	}
	return o.ExternalBucketQuotaMaxObjects, true
}

// HasExternalBucketQuotaMaxObjects returns a boolean if a field has been set.
func (o *ObjectStorageUserUpdateReqInfo) HasExternalBucketQuotaMaxObjects() bool {
	if o != nil && !IsNil(o.ExternalBucketQuotaMaxObjects) {
		return true
	}

	return false
}

// SetExternalBucketQuotaMaxObjects gets a reference to the given int64 and assigns it to the ExternalBucketQuotaMaxObjects field.
func (o *ObjectStorageUserUpdateReqInfo) SetExternalBucketQuotaMaxObjects(v int64) {
	o.ExternalBucketQuotaMaxObjects = &v
}

// GetExternalBucketQuotaMaxSize returns the ExternalBucketQuotaMaxSize field value if set, zero value otherwise.
func (o *ObjectStorageUserUpdateReqInfo) GetExternalBucketQuotaMaxSize() int64 {
	if o == nil || IsNil(o.ExternalBucketQuotaMaxSize) {
		var ret int64
		return ret
	}
	return *o.ExternalBucketQuotaMaxSize
}

// GetExternalBucketQuotaMaxSizeOk returns a tuple with the ExternalBucketQuotaMaxSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserUpdateReqInfo) GetExternalBucketQuotaMaxSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.ExternalBucketQuotaMaxSize) {
		return nil, false
	}
	return o.ExternalBucketQuotaMaxSize, true
}

// HasExternalBucketQuotaMaxSize returns a boolean if a field has been set.
func (o *ObjectStorageUserUpdateReqInfo) HasExternalBucketQuotaMaxSize() bool {
	if o != nil && !IsNil(o.ExternalBucketQuotaMaxSize) {
		return true
	}

	return false
}

// SetExternalBucketQuotaMaxSize gets a reference to the given int64 and assigns it to the ExternalBucketQuotaMaxSize field.
func (o *ObjectStorageUserUpdateReqInfo) SetExternalBucketQuotaMaxSize(v int64) {
	o.ExternalBucketQuotaMaxSize = &v
}

// GetExternalUserQuotaMaxObjects returns the ExternalUserQuotaMaxObjects field value if set, zero value otherwise.
func (o *ObjectStorageUserUpdateReqInfo) GetExternalUserQuotaMaxObjects() int64 {
	if o == nil || IsNil(o.ExternalUserQuotaMaxObjects) {
		var ret int64
		return ret
	}
	return *o.ExternalUserQuotaMaxObjects
}

// GetExternalUserQuotaMaxObjectsOk returns a tuple with the ExternalUserQuotaMaxObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserUpdateReqInfo) GetExternalUserQuotaMaxObjectsOk() (*int64, bool) {
	if o == nil || IsNil(o.ExternalUserQuotaMaxObjects) {
		return nil, false
	}
	return o.ExternalUserQuotaMaxObjects, true
}

// HasExternalUserQuotaMaxObjects returns a boolean if a field has been set.
func (o *ObjectStorageUserUpdateReqInfo) HasExternalUserQuotaMaxObjects() bool {
	if o != nil && !IsNil(o.ExternalUserQuotaMaxObjects) {
		return true
	}

	return false
}

// SetExternalUserQuotaMaxObjects gets a reference to the given int64 and assigns it to the ExternalUserQuotaMaxObjects field.
func (o *ObjectStorageUserUpdateReqInfo) SetExternalUserQuotaMaxObjects(v int64) {
	o.ExternalUserQuotaMaxObjects = &v
}

// GetExternalUserQuotaMaxSize returns the ExternalUserQuotaMaxSize field value if set, zero value otherwise.
func (o *ObjectStorageUserUpdateReqInfo) GetExternalUserQuotaMaxSize() int64 {
	if o == nil || IsNil(o.ExternalUserQuotaMaxSize) {
		var ret int64
		return ret
	}
	return *o.ExternalUserQuotaMaxSize
}

// GetExternalUserQuotaMaxSizeOk returns a tuple with the ExternalUserQuotaMaxSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserUpdateReqInfo) GetExternalUserQuotaMaxSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.ExternalUserQuotaMaxSize) {
		return nil, false
	}
	return o.ExternalUserQuotaMaxSize, true
}

// HasExternalUserQuotaMaxSize returns a boolean if a field has been set.
func (o *ObjectStorageUserUpdateReqInfo) HasExternalUserQuotaMaxSize() bool {
	if o != nil && !IsNil(o.ExternalUserQuotaMaxSize) {
		return true
	}

	return false
}

// SetExternalUserQuotaMaxSize gets a reference to the given int64 and assigns it to the ExternalUserQuotaMaxSize field.
func (o *ObjectStorageUserUpdateReqInfo) SetExternalUserQuotaMaxSize(v int64) {
	o.ExternalUserQuotaMaxSize = &v
}

// GetLocalBucketQuotaMaxObjects returns the LocalBucketQuotaMaxObjects field value if set, zero value otherwise.
func (o *ObjectStorageUserUpdateReqInfo) GetLocalBucketQuotaMaxObjects() int64 {
	if o == nil || IsNil(o.LocalBucketQuotaMaxObjects) {
		var ret int64
		return ret
	}
	return *o.LocalBucketQuotaMaxObjects
}

// GetLocalBucketQuotaMaxObjectsOk returns a tuple with the LocalBucketQuotaMaxObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserUpdateReqInfo) GetLocalBucketQuotaMaxObjectsOk() (*int64, bool) {
	if o == nil || IsNil(o.LocalBucketQuotaMaxObjects) {
		return nil, false
	}
	return o.LocalBucketQuotaMaxObjects, true
}

// HasLocalBucketQuotaMaxObjects returns a boolean if a field has been set.
func (o *ObjectStorageUserUpdateReqInfo) HasLocalBucketQuotaMaxObjects() bool {
	if o != nil && !IsNil(o.LocalBucketQuotaMaxObjects) {
		return true
	}

	return false
}

// SetLocalBucketQuotaMaxObjects gets a reference to the given int64 and assigns it to the LocalBucketQuotaMaxObjects field.
func (o *ObjectStorageUserUpdateReqInfo) SetLocalBucketQuotaMaxObjects(v int64) {
	o.LocalBucketQuotaMaxObjects = &v
}

// GetLocalBucketQuotaMaxSize returns the LocalBucketQuotaMaxSize field value if set, zero value otherwise.
func (o *ObjectStorageUserUpdateReqInfo) GetLocalBucketQuotaMaxSize() int64 {
	if o == nil || IsNil(o.LocalBucketQuotaMaxSize) {
		var ret int64
		return ret
	}
	return *o.LocalBucketQuotaMaxSize
}

// GetLocalBucketQuotaMaxSizeOk returns a tuple with the LocalBucketQuotaMaxSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserUpdateReqInfo) GetLocalBucketQuotaMaxSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.LocalBucketQuotaMaxSize) {
		return nil, false
	}
	return o.LocalBucketQuotaMaxSize, true
}

// HasLocalBucketQuotaMaxSize returns a boolean if a field has been set.
func (o *ObjectStorageUserUpdateReqInfo) HasLocalBucketQuotaMaxSize() bool {
	if o != nil && !IsNil(o.LocalBucketQuotaMaxSize) {
		return true
	}

	return false
}

// SetLocalBucketQuotaMaxSize gets a reference to the given int64 and assigns it to the LocalBucketQuotaMaxSize field.
func (o *ObjectStorageUserUpdateReqInfo) SetLocalBucketQuotaMaxSize(v int64) {
	o.LocalBucketQuotaMaxSize = &v
}

// GetLocalUserQuotaMaxObjects returns the LocalUserQuotaMaxObjects field value if set, zero value otherwise.
func (o *ObjectStorageUserUpdateReqInfo) GetLocalUserQuotaMaxObjects() int64 {
	if o == nil || IsNil(o.LocalUserQuotaMaxObjects) {
		var ret int64
		return ret
	}
	return *o.LocalUserQuotaMaxObjects
}

// GetLocalUserQuotaMaxObjectsOk returns a tuple with the LocalUserQuotaMaxObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserUpdateReqInfo) GetLocalUserQuotaMaxObjectsOk() (*int64, bool) {
	if o == nil || IsNil(o.LocalUserQuotaMaxObjects) {
		return nil, false
	}
	return o.LocalUserQuotaMaxObjects, true
}

// HasLocalUserQuotaMaxObjects returns a boolean if a field has been set.
func (o *ObjectStorageUserUpdateReqInfo) HasLocalUserQuotaMaxObjects() bool {
	if o != nil && !IsNil(o.LocalUserQuotaMaxObjects) {
		return true
	}

	return false
}

// SetLocalUserQuotaMaxObjects gets a reference to the given int64 and assigns it to the LocalUserQuotaMaxObjects field.
func (o *ObjectStorageUserUpdateReqInfo) SetLocalUserQuotaMaxObjects(v int64) {
	o.LocalUserQuotaMaxObjects = &v
}

// GetLocalUserQuotaMaxSize returns the LocalUserQuotaMaxSize field value if set, zero value otherwise.
func (o *ObjectStorageUserUpdateReqInfo) GetLocalUserQuotaMaxSize() int64 {
	if o == nil || IsNil(o.LocalUserQuotaMaxSize) {
		var ret int64
		return ret
	}
	return *o.LocalUserQuotaMaxSize
}

// GetLocalUserQuotaMaxSizeOk returns a tuple with the LocalUserQuotaMaxSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserUpdateReqInfo) GetLocalUserQuotaMaxSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.LocalUserQuotaMaxSize) {
		return nil, false
	}
	return o.LocalUserQuotaMaxSize, true
}

// HasLocalUserQuotaMaxSize returns a boolean if a field has been set.
func (o *ObjectStorageUserUpdateReqInfo) HasLocalUserQuotaMaxSize() bool {
	if o != nil && !IsNil(o.LocalUserQuotaMaxSize) {
		return true
	}

	return false
}

// SetLocalUserQuotaMaxSize gets a reference to the given int64 and assigns it to the LocalUserQuotaMaxSize field.
func (o *ObjectStorageUserUpdateReqInfo) SetLocalUserQuotaMaxSize(v int64) {
	o.LocalUserQuotaMaxSize = &v
}

// GetLocationConstraintEnabled returns the LocationConstraintEnabled field value if set, zero value otherwise.
func (o *ObjectStorageUserUpdateReqInfo) GetLocationConstraintEnabled() bool {
	if o == nil || IsNil(o.LocationConstraintEnabled) {
		var ret bool
		return ret
	}
	return *o.LocationConstraintEnabled
}

// GetLocationConstraintEnabledOk returns a tuple with the LocationConstraintEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserUpdateReqInfo) GetLocationConstraintEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.LocationConstraintEnabled) {
		return nil, false
	}
	return o.LocationConstraintEnabled, true
}

// HasLocationConstraintEnabled returns a boolean if a field has been set.
func (o *ObjectStorageUserUpdateReqInfo) HasLocationConstraintEnabled() bool {
	if o != nil && !IsNil(o.LocationConstraintEnabled) {
		return true
	}

	return false
}

// SetLocationConstraintEnabled gets a reference to the given bool and assigns it to the LocationConstraintEnabled field.
func (o *ObjectStorageUserUpdateReqInfo) SetLocationConstraintEnabled(v bool) {
	o.LocationConstraintEnabled = &v
}

// GetMaxBuckets returns the MaxBuckets field value if set, zero value otherwise.
func (o *ObjectStorageUserUpdateReqInfo) GetMaxBuckets() int64 {
	if o == nil || IsNil(o.MaxBuckets) {
		var ret int64
		return ret
	}
	return *o.MaxBuckets
}

// GetMaxBucketsOk returns a tuple with the MaxBuckets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserUpdateReqInfo) GetMaxBucketsOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxBuckets) {
		return nil, false
	}
	return o.MaxBuckets, true
}

// HasMaxBuckets returns a boolean if a field has been set.
func (o *ObjectStorageUserUpdateReqInfo) HasMaxBuckets() bool {
	if o != nil && !IsNil(o.MaxBuckets) {
		return true
	}

	return false
}

// SetMaxBuckets gets a reference to the given int64 and assigns it to the MaxBuckets field.
func (o *ObjectStorageUserUpdateReqInfo) SetMaxBuckets(v int64) {
	o.MaxBuckets = &v
}

// GetOpMask returns the OpMask field value if set, zero value otherwise.
func (o *ObjectStorageUserUpdateReqInfo) GetOpMask() string {
	if o == nil || IsNil(o.OpMask) {
		var ret string
		return ret
	}
	return *o.OpMask
}

// GetOpMaskOk returns a tuple with the OpMask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserUpdateReqInfo) GetOpMaskOk() (*string, bool) {
	if o == nil || IsNil(o.OpMask) {
		return nil, false
	}
	return o.OpMask, true
}

// HasOpMask returns a boolean if a field has been set.
func (o *ObjectStorageUserUpdateReqInfo) HasOpMask() bool {
	if o != nil && !IsNil(o.OpMask) {
		return true
	}

	return false
}

// SetOpMask gets a reference to the given string and assigns it to the OpMask field.
func (o *ObjectStorageUserUpdateReqInfo) SetOpMask(v string) {
	o.OpMask = &v
}

// GetPolicyId returns the PolicyId field value if set, zero value otherwise.
func (o *ObjectStorageUserUpdateReqInfo) GetPolicyId() int64 {
	if o == nil || IsNil(o.PolicyId) {
		var ret int64
		return ret
	}
	return *o.PolicyId
}

// GetPolicyIdOk returns a tuple with the PolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserUpdateReqInfo) GetPolicyIdOk() (*int64, bool) {
	if o == nil || IsNil(o.PolicyId) {
		return nil, false
	}
	return o.PolicyId, true
}

// HasPolicyId returns a boolean if a field has been set.
func (o *ObjectStorageUserUpdateReqInfo) HasPolicyId() bool {
	if o != nil && !IsNil(o.PolicyId) {
		return true
	}

	return false
}

// SetPolicyId gets a reference to the given int64 and assigns it to the PolicyId field.
func (o *ObjectStorageUserUpdateReqInfo) SetPolicyId(v int64) {
	o.PolicyId = &v
}

// GetPolicyPollingEnabled returns the PolicyPollingEnabled field value if set, zero value otherwise.
func (o *ObjectStorageUserUpdateReqInfo) GetPolicyPollingEnabled() bool {
	if o == nil || IsNil(o.PolicyPollingEnabled) {
		var ret bool
		return ret
	}
	return *o.PolicyPollingEnabled
}

// GetPolicyPollingEnabledOk returns a tuple with the PolicyPollingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserUpdateReqInfo) GetPolicyPollingEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.PolicyPollingEnabled) {
		return nil, false
	}
	return o.PolicyPollingEnabled, true
}

// HasPolicyPollingEnabled returns a boolean if a field has been set.
func (o *ObjectStorageUserUpdateReqInfo) HasPolicyPollingEnabled() bool {
	if o != nil && !IsNil(o.PolicyPollingEnabled) {
		return true
	}

	return false
}

// SetPolicyPollingEnabled gets a reference to the given bool and assigns it to the PolicyPollingEnabled field.
func (o *ObjectStorageUserUpdateReqInfo) SetPolicyPollingEnabled(v bool) {
	o.PolicyPollingEnabled = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *ObjectStorageUserUpdateReqInfo) GetProperties() OSUserPropertiesReq {
	if o == nil || IsNil(o.Properties) {
		var ret OSUserPropertiesReq
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserUpdateReqInfo) GetPropertiesOk() (*OSUserPropertiesReq, bool) {
	if o == nil || IsNil(o.Properties) {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *ObjectStorageUserUpdateReqInfo) HasProperties() bool {
	if o != nil && !IsNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given OSUserPropertiesReq and assigns it to the Properties field.
func (o *ObjectStorageUserUpdateReqInfo) SetProperties(v OSUserPropertiesReq) {
	o.Properties = &v
}

// GetSuspended returns the Suspended field value if set, zero value otherwise.
func (o *ObjectStorageUserUpdateReqInfo) GetSuspended() bool {
	if o == nil || IsNil(o.Suspended) {
		var ret bool
		return ret
	}
	return *o.Suspended
}

// GetSuspendedOk returns a tuple with the Suspended field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserUpdateReqInfo) GetSuspendedOk() (*bool, bool) {
	if o == nil || IsNil(o.Suspended) {
		return nil, false
	}
	return o.Suspended, true
}

// HasSuspended returns a boolean if a field has been set.
func (o *ObjectStorageUserUpdateReqInfo) HasSuspended() bool {
	if o != nil && !IsNil(o.Suspended) {
		return true
	}

	return false
}

// SetSuspended gets a reference to the given bool and assigns it to the Suspended field.
func (o *ObjectStorageUserUpdateReqInfo) SetSuspended(v bool) {
	o.Suspended = &v
}

// GetUserQuotaMaxObjects returns the UserQuotaMaxObjects field value if set, zero value otherwise.
func (o *ObjectStorageUserUpdateReqInfo) GetUserQuotaMaxObjects() int64 {
	if o == nil || IsNil(o.UserQuotaMaxObjects) {
		var ret int64
		return ret
	}
	return *o.UserQuotaMaxObjects
}

// GetUserQuotaMaxObjectsOk returns a tuple with the UserQuotaMaxObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserUpdateReqInfo) GetUserQuotaMaxObjectsOk() (*int64, bool) {
	if o == nil || IsNil(o.UserQuotaMaxObjects) {
		return nil, false
	}
	return o.UserQuotaMaxObjects, true
}

// HasUserQuotaMaxObjects returns a boolean if a field has been set.
func (o *ObjectStorageUserUpdateReqInfo) HasUserQuotaMaxObjects() bool {
	if o != nil && !IsNil(o.UserQuotaMaxObjects) {
		return true
	}

	return false
}

// SetUserQuotaMaxObjects gets a reference to the given int64 and assigns it to the UserQuotaMaxObjects field.
func (o *ObjectStorageUserUpdateReqInfo) SetUserQuotaMaxObjects(v int64) {
	o.UserQuotaMaxObjects = &v
}

// GetUserQuotaMaxSize returns the UserQuotaMaxSize field value if set, zero value otherwise.
func (o *ObjectStorageUserUpdateReqInfo) GetUserQuotaMaxSize() int64 {
	if o == nil || IsNil(o.UserQuotaMaxSize) {
		var ret int64
		return ret
	}
	return *o.UserQuotaMaxSize
}

// GetUserQuotaMaxSizeOk returns a tuple with the UserQuotaMaxSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUserUpdateReqInfo) GetUserQuotaMaxSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.UserQuotaMaxSize) {
		return nil, false
	}
	return o.UserQuotaMaxSize, true
}

// HasUserQuotaMaxSize returns a boolean if a field has been set.
func (o *ObjectStorageUserUpdateReqInfo) HasUserQuotaMaxSize() bool {
	if o != nil && !IsNil(o.UserQuotaMaxSize) {
		return true
	}

	return false
}

// SetUserQuotaMaxSize gets a reference to the given int64 and assigns it to the UserQuotaMaxSize field.
func (o *ObjectStorageUserUpdateReqInfo) SetUserQuotaMaxSize(v int64) {
	o.UserQuotaMaxSize = &v
}

func (o ObjectStorageUserUpdateReqInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ObjectStorageUserUpdateReqInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BucketQuotaMaxObjects) {
		toSerialize["bucket_quota_max_objects"] = o.BucketQuotaMaxObjects
	}
	if !IsNil(o.BucketQuotaMaxSize) {
		toSerialize["bucket_quota_max_size"] = o.BucketQuotaMaxSize
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DisplayName) {
		toSerialize["display_name"] = o.DisplayName
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.ExternalBucketQuotaMaxObjects) {
		toSerialize["external_bucket_quota_max_objects"] = o.ExternalBucketQuotaMaxObjects
	}
	if !IsNil(o.ExternalBucketQuotaMaxSize) {
		toSerialize["external_bucket_quota_max_size"] = o.ExternalBucketQuotaMaxSize
	}
	if !IsNil(o.ExternalUserQuotaMaxObjects) {
		toSerialize["external_user_quota_max_objects"] = o.ExternalUserQuotaMaxObjects
	}
	if !IsNil(o.ExternalUserQuotaMaxSize) {
		toSerialize["external_user_quota_max_size"] = o.ExternalUserQuotaMaxSize
	}
	if !IsNil(o.LocalBucketQuotaMaxObjects) {
		toSerialize["local_bucket_quota_max_objects"] = o.LocalBucketQuotaMaxObjects
	}
	if !IsNil(o.LocalBucketQuotaMaxSize) {
		toSerialize["local_bucket_quota_max_size"] = o.LocalBucketQuotaMaxSize
	}
	if !IsNil(o.LocalUserQuotaMaxObjects) {
		toSerialize["local_user_quota_max_objects"] = o.LocalUserQuotaMaxObjects
	}
	if !IsNil(o.LocalUserQuotaMaxSize) {
		toSerialize["local_user_quota_max_size"] = o.LocalUserQuotaMaxSize
	}
	if !IsNil(o.LocationConstraintEnabled) {
		toSerialize["location_constraint_enabled"] = o.LocationConstraintEnabled
	}
	if !IsNil(o.MaxBuckets) {
		toSerialize["max_buckets"] = o.MaxBuckets
	}
	if !IsNil(o.OpMask) {
		toSerialize["op_mask"] = o.OpMask
	}
	if !IsNil(o.PolicyId) {
		toSerialize["policy_id"] = o.PolicyId
	}
	if !IsNil(o.PolicyPollingEnabled) {
		toSerialize["policy_polling_enabled"] = o.PolicyPollingEnabled
	}
	if !IsNil(o.Properties) {
		toSerialize["properties"] = o.Properties
	}
	if !IsNil(o.Suspended) {
		toSerialize["suspended"] = o.Suspended
	}
	if !IsNil(o.UserQuotaMaxObjects) {
		toSerialize["user_quota_max_objects"] = o.UserQuotaMaxObjects
	}
	if !IsNil(o.UserQuotaMaxSize) {
		toSerialize["user_quota_max_size"] = o.UserQuotaMaxSize
	}
	return toSerialize, nil
}

type NullableObjectStorageUserUpdateReqInfo struct {
	value *ObjectStorageUserUpdateReqInfo
	isSet bool
}

func (v NullableObjectStorageUserUpdateReqInfo) Get() *ObjectStorageUserUpdateReqInfo {
	return v.value
}

func (v *NullableObjectStorageUserUpdateReqInfo) Set(val *ObjectStorageUserUpdateReqInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectStorageUserUpdateReqInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectStorageUserUpdateReqInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectStorageUserUpdateReqInfo(val *ObjectStorageUserUpdateReqInfo) *NullableObjectStorageUserUpdateReqInfo {
	return &NullableObjectStorageUserUpdateReqInfo{value: val, isSet: true}
}

func (v NullableObjectStorageUserUpdateReqInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectStorageUserUpdateReqInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


