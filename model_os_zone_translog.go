/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the OSZoneTranslog type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OSZoneTranslog{}

// OSZoneTranslog OSZoneTranslog defines model of os zone translog.
type OSZoneTranslog struct {
	Action *string `json:"action,omitempty"`
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	ResourceType *string `json:"resource_type,omitempty"`
	ResourceUuid *string `json:"resource_uuid,omitempty"`
	Update *time.Time `json:"update,omitempty"`
	Uuid *string `json:"uuid,omitempty"`
}

// NewOSZoneTranslog instantiates a new OSZoneTranslog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOSZoneTranslog() *OSZoneTranslog {
	this := OSZoneTranslog{}
	return &this
}

// NewOSZoneTranslogWithDefaults instantiates a new OSZoneTranslog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOSZoneTranslogWithDefaults() *OSZoneTranslog {
	this := OSZoneTranslog{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *OSZoneTranslog) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSZoneTranslog) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *OSZoneTranslog) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *OSZoneTranslog) SetAction(v string) {
	o.Action = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *OSZoneTranslog) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSZoneTranslog) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *OSZoneTranslog) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *OSZoneTranslog) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *OSZoneTranslog) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSZoneTranslog) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *OSZoneTranslog) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *OSZoneTranslog) SetCreate(v time.Time) {
	o.Create = &v
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *OSZoneTranslog) GetResourceType() string {
	if o == nil || IsNil(o.ResourceType) {
		var ret string
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSZoneTranslog) GetResourceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceType) {
		return nil, false
	}
	return o.ResourceType, true
}

// HasResourceType returns a boolean if a field has been set.
func (o *OSZoneTranslog) HasResourceType() bool {
	if o != nil && !IsNil(o.ResourceType) {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given string and assigns it to the ResourceType field.
func (o *OSZoneTranslog) SetResourceType(v string) {
	o.ResourceType = &v
}

// GetResourceUuid returns the ResourceUuid field value if set, zero value otherwise.
func (o *OSZoneTranslog) GetResourceUuid() string {
	if o == nil || IsNil(o.ResourceUuid) {
		var ret string
		return ret
	}
	return *o.ResourceUuid
}

// GetResourceUuidOk returns a tuple with the ResourceUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSZoneTranslog) GetResourceUuidOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceUuid) {
		return nil, false
	}
	return o.ResourceUuid, true
}

// HasResourceUuid returns a boolean if a field has been set.
func (o *OSZoneTranslog) HasResourceUuid() bool {
	if o != nil && !IsNil(o.ResourceUuid) {
		return true
	}

	return false
}

// SetResourceUuid gets a reference to the given string and assigns it to the ResourceUuid field.
func (o *OSZoneTranslog) SetResourceUuid(v string) {
	o.ResourceUuid = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *OSZoneTranslog) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSZoneTranslog) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *OSZoneTranslog) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *OSZoneTranslog) SetUpdate(v time.Time) {
	o.Update = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *OSZoneTranslog) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSZoneTranslog) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *OSZoneTranslog) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *OSZoneTranslog) SetUuid(v string) {
	o.Uuid = &v
}

func (o OSZoneTranslog) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OSZoneTranslog) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.ResourceType) {
		toSerialize["resource_type"] = o.ResourceType
	}
	if !IsNil(o.ResourceUuid) {
		toSerialize["resource_uuid"] = o.ResourceUuid
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	return toSerialize, nil
}

type NullableOSZoneTranslog struct {
	value *OSZoneTranslog
	isSet bool
}

func (v NullableOSZoneTranslog) Get() *OSZoneTranslog {
	return v.value
}

func (v *NullableOSZoneTranslog) Set(val *OSZoneTranslog) {
	v.value = val
	v.isSet = true
}

func (v NullableOSZoneTranslog) IsSet() bool {
	return v.isSet
}

func (v *NullableOSZoneTranslog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSZoneTranslog(val *OSZoneTranslog) *NullableOSZoneTranslog {
	return &NullableOSZoneTranslog{value: val, isSet: true}
}

func (v NullableOSZoneTranslog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSZoneTranslog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


