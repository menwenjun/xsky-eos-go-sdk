/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DfsGatewayGroupCreateReqGatewayGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsGatewayGroupCreateReqGatewayGroup{}

// DfsGatewayGroupCreateReqGatewayGroup struct for DfsGatewayGroupCreateReqGatewayGroup
type DfsGatewayGroupCreateReqGatewayGroup struct {
	// active directory id
	AdId *int64 `json:"ad_id,omitempty"`
	// cpus of gateway container
	Cpus *int64 `json:"cpus,omitempty"`
	// description of gateway group
	Description *string `json:"description,omitempty"`
	// dfs gateways list
	DfsGateways []DfsGatewayReq `json:"dfs_gateways"`
	// VIPGateways contains all the gateways of VIP network
	DfsVipGateways []string `json:"dfs_vip_gateways,omitempty"`
	// VIPs of gateway group
	DfsVips []string `json:"dfs_vips"`
	// ftp encoding format, default is utf8
	Encoding *string `json:"encoding,omitempty"`
	// security type for hdfs (local, ldap)
	HdfsSecurities []string `json:"hdfs_securities,omitempty"`
	// ldap id
	LdapId *int64 `json:"ldap_id,omitempty"`
	// memory limit of gateway container, unit KB
	MemoryKbyte *int64 `json:"memory_kbyte,omitempty"`
	// name of gateway group
	Name string `json:"name"`
	// nfs versions of nfs supported
	NfsVersions []string `json:"nfs_versions,omitempty"`
	// security type for smb/quota (local, ad, ldap)
	Securities []string `json:"securities,omitempty"`
	// smb version 1.0 enabled
	Smb1Enabled *bool `json:"smb1_enabled,omitempty"`
	// smb browseable enable
	SmbBrowseable *bool `json:"smb_browseable,omitempty"`
	// smb Homes share enable
	SmbHomes *bool `json:"smb_homes,omitempty"`
	// smb ports
	SmbPorts []int64 `json:"smb_ports,omitempty"`
	// smb service type (smb, xsmb)
	SmbType *string `json:"smb_type,omitempty"`
	// types of supported (smb, nfs, ftp)
	Types []string `json:"types"`
	// name of gateway zone
	ZoneName *string `json:"zone_name,omitempty"`
}

type _DfsGatewayGroupCreateReqGatewayGroup DfsGatewayGroupCreateReqGatewayGroup

// NewDfsGatewayGroupCreateReqGatewayGroup instantiates a new DfsGatewayGroupCreateReqGatewayGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsGatewayGroupCreateReqGatewayGroup(dfsGateways []DfsGatewayReq, dfsVips []string, name string, types []string) *DfsGatewayGroupCreateReqGatewayGroup {
	this := DfsGatewayGroupCreateReqGatewayGroup{}
	this.DfsGateways = dfsGateways
	this.DfsVips = dfsVips
	this.Name = name
	this.Types = types
	return &this
}

// NewDfsGatewayGroupCreateReqGatewayGroupWithDefaults instantiates a new DfsGatewayGroupCreateReqGatewayGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsGatewayGroupCreateReqGatewayGroupWithDefaults() *DfsGatewayGroupCreateReqGatewayGroup {
	this := DfsGatewayGroupCreateReqGatewayGroup{}
	return &this
}

// GetAdId returns the AdId field value if set, zero value otherwise.
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetAdId() int64 {
	if o == nil || IsNil(o.AdId) {
		var ret int64
		return ret
	}
	return *o.AdId
}

// GetAdIdOk returns a tuple with the AdId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetAdIdOk() (*int64, bool) {
	if o == nil || IsNil(o.AdId) {
		return nil, false
	}
	return o.AdId, true
}

// HasAdId returns a boolean if a field has been set.
func (o *DfsGatewayGroupCreateReqGatewayGroup) HasAdId() bool {
	if o != nil && !IsNil(o.AdId) {
		return true
	}

	return false
}

// SetAdId gets a reference to the given int64 and assigns it to the AdId field.
func (o *DfsGatewayGroupCreateReqGatewayGroup) SetAdId(v int64) {
	o.AdId = &v
}

// GetCpus returns the Cpus field value if set, zero value otherwise.
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetCpus() int64 {
	if o == nil || IsNil(o.Cpus) {
		var ret int64
		return ret
	}
	return *o.Cpus
}

// GetCpusOk returns a tuple with the Cpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetCpusOk() (*int64, bool) {
	if o == nil || IsNil(o.Cpus) {
		return nil, false
	}
	return o.Cpus, true
}

// HasCpus returns a boolean if a field has been set.
func (o *DfsGatewayGroupCreateReqGatewayGroup) HasCpus() bool {
	if o != nil && !IsNil(o.Cpus) {
		return true
	}

	return false
}

// SetCpus gets a reference to the given int64 and assigns it to the Cpus field.
func (o *DfsGatewayGroupCreateReqGatewayGroup) SetCpus(v int64) {
	o.Cpus = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *DfsGatewayGroupCreateReqGatewayGroup) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DfsGatewayGroupCreateReqGatewayGroup) SetDescription(v string) {
	o.Description = &v
}

// GetDfsGateways returns the DfsGateways field value
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetDfsGateways() []DfsGatewayReq {
	if o == nil {
		var ret []DfsGatewayReq
		return ret
	}

	return o.DfsGateways
}

// GetDfsGatewaysOk returns a tuple with the DfsGateways field value
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetDfsGatewaysOk() ([]DfsGatewayReq, bool) {
	if o == nil {
		return nil, false
	}
	return o.DfsGateways, true
}

// SetDfsGateways sets field value
func (o *DfsGatewayGroupCreateReqGatewayGroup) SetDfsGateways(v []DfsGatewayReq) {
	o.DfsGateways = v
}

// GetDfsVipGateways returns the DfsVipGateways field value if set, zero value otherwise.
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetDfsVipGateways() []string {
	if o == nil || IsNil(o.DfsVipGateways) {
		var ret []string
		return ret
	}
	return o.DfsVipGateways
}

// GetDfsVipGatewaysOk returns a tuple with the DfsVipGateways field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetDfsVipGatewaysOk() ([]string, bool) {
	if o == nil || IsNil(o.DfsVipGateways) {
		return nil, false
	}
	return o.DfsVipGateways, true
}

// HasDfsVipGateways returns a boolean if a field has been set.
func (o *DfsGatewayGroupCreateReqGatewayGroup) HasDfsVipGateways() bool {
	if o != nil && !IsNil(o.DfsVipGateways) {
		return true
	}

	return false
}

// SetDfsVipGateways gets a reference to the given []string and assigns it to the DfsVipGateways field.
func (o *DfsGatewayGroupCreateReqGatewayGroup) SetDfsVipGateways(v []string) {
	o.DfsVipGateways = v
}

// GetDfsVips returns the DfsVips field value
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetDfsVips() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.DfsVips
}

// GetDfsVipsOk returns a tuple with the DfsVips field value
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetDfsVipsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DfsVips, true
}

// SetDfsVips sets field value
func (o *DfsGatewayGroupCreateReqGatewayGroup) SetDfsVips(v []string) {
	o.DfsVips = v
}

// GetEncoding returns the Encoding field value if set, zero value otherwise.
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetEncoding() string {
	if o == nil || IsNil(o.Encoding) {
		var ret string
		return ret
	}
	return *o.Encoding
}

// GetEncodingOk returns a tuple with the Encoding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetEncodingOk() (*string, bool) {
	if o == nil || IsNil(o.Encoding) {
		return nil, false
	}
	return o.Encoding, true
}

// HasEncoding returns a boolean if a field has been set.
func (o *DfsGatewayGroupCreateReqGatewayGroup) HasEncoding() bool {
	if o != nil && !IsNil(o.Encoding) {
		return true
	}

	return false
}

// SetEncoding gets a reference to the given string and assigns it to the Encoding field.
func (o *DfsGatewayGroupCreateReqGatewayGroup) SetEncoding(v string) {
	o.Encoding = &v
}

// GetHdfsSecurities returns the HdfsSecurities field value if set, zero value otherwise.
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetHdfsSecurities() []string {
	if o == nil || IsNil(o.HdfsSecurities) {
		var ret []string
		return ret
	}
	return o.HdfsSecurities
}

// GetHdfsSecuritiesOk returns a tuple with the HdfsSecurities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetHdfsSecuritiesOk() ([]string, bool) {
	if o == nil || IsNil(o.HdfsSecurities) {
		return nil, false
	}
	return o.HdfsSecurities, true
}

// HasHdfsSecurities returns a boolean if a field has been set.
func (o *DfsGatewayGroupCreateReqGatewayGroup) HasHdfsSecurities() bool {
	if o != nil && !IsNil(o.HdfsSecurities) {
		return true
	}

	return false
}

// SetHdfsSecurities gets a reference to the given []string and assigns it to the HdfsSecurities field.
func (o *DfsGatewayGroupCreateReqGatewayGroup) SetHdfsSecurities(v []string) {
	o.HdfsSecurities = v
}

// GetLdapId returns the LdapId field value if set, zero value otherwise.
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetLdapId() int64 {
	if o == nil || IsNil(o.LdapId) {
		var ret int64
		return ret
	}
	return *o.LdapId
}

// GetLdapIdOk returns a tuple with the LdapId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetLdapIdOk() (*int64, bool) {
	if o == nil || IsNil(o.LdapId) {
		return nil, false
	}
	return o.LdapId, true
}

// HasLdapId returns a boolean if a field has been set.
func (o *DfsGatewayGroupCreateReqGatewayGroup) HasLdapId() bool {
	if o != nil && !IsNil(o.LdapId) {
		return true
	}

	return false
}

// SetLdapId gets a reference to the given int64 and assigns it to the LdapId field.
func (o *DfsGatewayGroupCreateReqGatewayGroup) SetLdapId(v int64) {
	o.LdapId = &v
}

// GetMemoryKbyte returns the MemoryKbyte field value if set, zero value otherwise.
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetMemoryKbyte() int64 {
	if o == nil || IsNil(o.MemoryKbyte) {
		var ret int64
		return ret
	}
	return *o.MemoryKbyte
}

// GetMemoryKbyteOk returns a tuple with the MemoryKbyte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetMemoryKbyteOk() (*int64, bool) {
	if o == nil || IsNil(o.MemoryKbyte) {
		return nil, false
	}
	return o.MemoryKbyte, true
}

// HasMemoryKbyte returns a boolean if a field has been set.
func (o *DfsGatewayGroupCreateReqGatewayGroup) HasMemoryKbyte() bool {
	if o != nil && !IsNil(o.MemoryKbyte) {
		return true
	}

	return false
}

// SetMemoryKbyte gets a reference to the given int64 and assigns it to the MemoryKbyte field.
func (o *DfsGatewayGroupCreateReqGatewayGroup) SetMemoryKbyte(v int64) {
	o.MemoryKbyte = &v
}

// GetName returns the Name field value
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DfsGatewayGroupCreateReqGatewayGroup) SetName(v string) {
	o.Name = v
}

// GetNfsVersions returns the NfsVersions field value if set, zero value otherwise.
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetNfsVersions() []string {
	if o == nil || IsNil(o.NfsVersions) {
		var ret []string
		return ret
	}
	return o.NfsVersions
}

// GetNfsVersionsOk returns a tuple with the NfsVersions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetNfsVersionsOk() ([]string, bool) {
	if o == nil || IsNil(o.NfsVersions) {
		return nil, false
	}
	return o.NfsVersions, true
}

// HasNfsVersions returns a boolean if a field has been set.
func (o *DfsGatewayGroupCreateReqGatewayGroup) HasNfsVersions() bool {
	if o != nil && !IsNil(o.NfsVersions) {
		return true
	}

	return false
}

// SetNfsVersions gets a reference to the given []string and assigns it to the NfsVersions field.
func (o *DfsGatewayGroupCreateReqGatewayGroup) SetNfsVersions(v []string) {
	o.NfsVersions = v
}

// GetSecurities returns the Securities field value if set, zero value otherwise.
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetSecurities() []string {
	if o == nil || IsNil(o.Securities) {
		var ret []string
		return ret
	}
	return o.Securities
}

// GetSecuritiesOk returns a tuple with the Securities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetSecuritiesOk() ([]string, bool) {
	if o == nil || IsNil(o.Securities) {
		return nil, false
	}
	return o.Securities, true
}

// HasSecurities returns a boolean if a field has been set.
func (o *DfsGatewayGroupCreateReqGatewayGroup) HasSecurities() bool {
	if o != nil && !IsNil(o.Securities) {
		return true
	}

	return false
}

// SetSecurities gets a reference to the given []string and assigns it to the Securities field.
func (o *DfsGatewayGroupCreateReqGatewayGroup) SetSecurities(v []string) {
	o.Securities = v
}

// GetSmb1Enabled returns the Smb1Enabled field value if set, zero value otherwise.
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetSmb1Enabled() bool {
	if o == nil || IsNil(o.Smb1Enabled) {
		var ret bool
		return ret
	}
	return *o.Smb1Enabled
}

// GetSmb1EnabledOk returns a tuple with the Smb1Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetSmb1EnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Smb1Enabled) {
		return nil, false
	}
	return o.Smb1Enabled, true
}

// HasSmb1Enabled returns a boolean if a field has been set.
func (o *DfsGatewayGroupCreateReqGatewayGroup) HasSmb1Enabled() bool {
	if o != nil && !IsNil(o.Smb1Enabled) {
		return true
	}

	return false
}

// SetSmb1Enabled gets a reference to the given bool and assigns it to the Smb1Enabled field.
func (o *DfsGatewayGroupCreateReqGatewayGroup) SetSmb1Enabled(v bool) {
	o.Smb1Enabled = &v
}

// GetSmbBrowseable returns the SmbBrowseable field value if set, zero value otherwise.
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetSmbBrowseable() bool {
	if o == nil || IsNil(o.SmbBrowseable) {
		var ret bool
		return ret
	}
	return *o.SmbBrowseable
}

// GetSmbBrowseableOk returns a tuple with the SmbBrowseable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetSmbBrowseableOk() (*bool, bool) {
	if o == nil || IsNil(o.SmbBrowseable) {
		return nil, false
	}
	return o.SmbBrowseable, true
}

// HasSmbBrowseable returns a boolean if a field has been set.
func (o *DfsGatewayGroupCreateReqGatewayGroup) HasSmbBrowseable() bool {
	if o != nil && !IsNil(o.SmbBrowseable) {
		return true
	}

	return false
}

// SetSmbBrowseable gets a reference to the given bool and assigns it to the SmbBrowseable field.
func (o *DfsGatewayGroupCreateReqGatewayGroup) SetSmbBrowseable(v bool) {
	o.SmbBrowseable = &v
}

// GetSmbHomes returns the SmbHomes field value if set, zero value otherwise.
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetSmbHomes() bool {
	if o == nil || IsNil(o.SmbHomes) {
		var ret bool
		return ret
	}
	return *o.SmbHomes
}

// GetSmbHomesOk returns a tuple with the SmbHomes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetSmbHomesOk() (*bool, bool) {
	if o == nil || IsNil(o.SmbHomes) {
		return nil, false
	}
	return o.SmbHomes, true
}

// HasSmbHomes returns a boolean if a field has been set.
func (o *DfsGatewayGroupCreateReqGatewayGroup) HasSmbHomes() bool {
	if o != nil && !IsNil(o.SmbHomes) {
		return true
	}

	return false
}

// SetSmbHomes gets a reference to the given bool and assigns it to the SmbHomes field.
func (o *DfsGatewayGroupCreateReqGatewayGroup) SetSmbHomes(v bool) {
	o.SmbHomes = &v
}

// GetSmbPorts returns the SmbPorts field value if set, zero value otherwise.
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetSmbPorts() []int64 {
	if o == nil || IsNil(o.SmbPorts) {
		var ret []int64
		return ret
	}
	return o.SmbPorts
}

// GetSmbPortsOk returns a tuple with the SmbPorts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetSmbPortsOk() ([]int64, bool) {
	if o == nil || IsNil(o.SmbPorts) {
		return nil, false
	}
	return o.SmbPorts, true
}

// HasSmbPorts returns a boolean if a field has been set.
func (o *DfsGatewayGroupCreateReqGatewayGroup) HasSmbPorts() bool {
	if o != nil && !IsNil(o.SmbPorts) {
		return true
	}

	return false
}

// SetSmbPorts gets a reference to the given []int64 and assigns it to the SmbPorts field.
func (o *DfsGatewayGroupCreateReqGatewayGroup) SetSmbPorts(v []int64) {
	o.SmbPorts = v
}

// GetSmbType returns the SmbType field value if set, zero value otherwise.
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetSmbType() string {
	if o == nil || IsNil(o.SmbType) {
		var ret string
		return ret
	}
	return *o.SmbType
}

// GetSmbTypeOk returns a tuple with the SmbType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetSmbTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SmbType) {
		return nil, false
	}
	return o.SmbType, true
}

// HasSmbType returns a boolean if a field has been set.
func (o *DfsGatewayGroupCreateReqGatewayGroup) HasSmbType() bool {
	if o != nil && !IsNil(o.SmbType) {
		return true
	}

	return false
}

// SetSmbType gets a reference to the given string and assigns it to the SmbType field.
func (o *DfsGatewayGroupCreateReqGatewayGroup) SetSmbType(v string) {
	o.SmbType = &v
}

// GetTypes returns the Types field value
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetTypes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Types
}

// GetTypesOk returns a tuple with the Types field value
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetTypesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Types, true
}

// SetTypes sets field value
func (o *DfsGatewayGroupCreateReqGatewayGroup) SetTypes(v []string) {
	o.Types = v
}

// GetZoneName returns the ZoneName field value if set, zero value otherwise.
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetZoneName() string {
	if o == nil || IsNil(o.ZoneName) {
		var ret string
		return ret
	}
	return *o.ZoneName
}

// GetZoneNameOk returns a tuple with the ZoneName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayGroupCreateReqGatewayGroup) GetZoneNameOk() (*string, bool) {
	if o == nil || IsNil(o.ZoneName) {
		return nil, false
	}
	return o.ZoneName, true
}

// HasZoneName returns a boolean if a field has been set.
func (o *DfsGatewayGroupCreateReqGatewayGroup) HasZoneName() bool {
	if o != nil && !IsNil(o.ZoneName) {
		return true
	}

	return false
}

// SetZoneName gets a reference to the given string and assigns it to the ZoneName field.
func (o *DfsGatewayGroupCreateReqGatewayGroup) SetZoneName(v string) {
	o.ZoneName = &v
}

func (o DfsGatewayGroupCreateReqGatewayGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsGatewayGroupCreateReqGatewayGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdId) {
		toSerialize["ad_id"] = o.AdId
	}
	if !IsNil(o.Cpus) {
		toSerialize["cpus"] = o.Cpus
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["dfs_gateways"] = o.DfsGateways
	if !IsNil(o.DfsVipGateways) {
		toSerialize["dfs_vip_gateways"] = o.DfsVipGateways
	}
	toSerialize["dfs_vips"] = o.DfsVips
	if !IsNil(o.Encoding) {
		toSerialize["encoding"] = o.Encoding
	}
	if !IsNil(o.HdfsSecurities) {
		toSerialize["hdfs_securities"] = o.HdfsSecurities
	}
	if !IsNil(o.LdapId) {
		toSerialize["ldap_id"] = o.LdapId
	}
	if !IsNil(o.MemoryKbyte) {
		toSerialize["memory_kbyte"] = o.MemoryKbyte
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.NfsVersions) {
		toSerialize["nfs_versions"] = o.NfsVersions
	}
	if !IsNil(o.Securities) {
		toSerialize["securities"] = o.Securities
	}
	if !IsNil(o.Smb1Enabled) {
		toSerialize["smb1_enabled"] = o.Smb1Enabled
	}
	if !IsNil(o.SmbBrowseable) {
		toSerialize["smb_browseable"] = o.SmbBrowseable
	}
	if !IsNil(o.SmbHomes) {
		toSerialize["smb_homes"] = o.SmbHomes
	}
	if !IsNil(o.SmbPorts) {
		toSerialize["smb_ports"] = o.SmbPorts
	}
	if !IsNil(o.SmbType) {
		toSerialize["smb_type"] = o.SmbType
	}
	toSerialize["types"] = o.Types
	if !IsNil(o.ZoneName) {
		toSerialize["zone_name"] = o.ZoneName
	}
	return toSerialize, nil
}

func (o *DfsGatewayGroupCreateReqGatewayGroup) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dfs_gateways",
		"dfs_vips",
		"name",
		"types",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDfsGatewayGroupCreateReqGatewayGroup := _DfsGatewayGroupCreateReqGatewayGroup{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDfsGatewayGroupCreateReqGatewayGroup)

	if err != nil {
		return err
	}

	*o = DfsGatewayGroupCreateReqGatewayGroup(varDfsGatewayGroupCreateReqGatewayGroup)

	return err
}

type NullableDfsGatewayGroupCreateReqGatewayGroup struct {
	value *DfsGatewayGroupCreateReqGatewayGroup
	isSet bool
}

func (v NullableDfsGatewayGroupCreateReqGatewayGroup) Get() *DfsGatewayGroupCreateReqGatewayGroup {
	return v.value
}

func (v *NullableDfsGatewayGroupCreateReqGatewayGroup) Set(val *DfsGatewayGroupCreateReqGatewayGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsGatewayGroupCreateReqGatewayGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsGatewayGroupCreateReqGatewayGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsGatewayGroupCreateReqGatewayGroup(val *DfsGatewayGroupCreateReqGatewayGroup) *NullableDfsGatewayGroupCreateReqGatewayGroup {
	return &NullableDfsGatewayGroupCreateReqGatewayGroup{value: val, isSet: true}
}

func (v NullableDfsGatewayGroupCreateReqGatewayGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsGatewayGroupCreateReqGatewayGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


