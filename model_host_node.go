/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the HostNode type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HostNode{}

// HostNode HostNode defines host info
type HostNode struct {
	ActionStatus *string `json:"action_status,omitempty"`
	AdminIp *string `json:"admin_ip,omitempty"`
	AdminVip *string `json:"admin_vip,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	OspClusterId *int64 `json:"osp_cluster_id,omitempty"`
	OspZoneId *int64 `json:"osp_zone_id,omitempty"`
	Roles *string `json:"roles,omitempty"`
	Status *string `json:"status,omitempty"`
	Up *bool `json:"up,omitempty"`
}

// NewHostNode instantiates a new HostNode object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHostNode() *HostNode {
	this := HostNode{}
	return &this
}

// NewHostNodeWithDefaults instantiates a new HostNode object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHostNodeWithDefaults() *HostNode {
	this := HostNode{}
	return &this
}

// GetActionStatus returns the ActionStatus field value if set, zero value otherwise.
func (o *HostNode) GetActionStatus() string {
	if o == nil || IsNil(o.ActionStatus) {
		var ret string
		return ret
	}
	return *o.ActionStatus
}

// GetActionStatusOk returns a tuple with the ActionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostNode) GetActionStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ActionStatus) {
		return nil, false
	}
	return o.ActionStatus, true
}

// HasActionStatus returns a boolean if a field has been set.
func (o *HostNode) HasActionStatus() bool {
	if o != nil && !IsNil(o.ActionStatus) {
		return true
	}

	return false
}

// SetActionStatus gets a reference to the given string and assigns it to the ActionStatus field.
func (o *HostNode) SetActionStatus(v string) {
	o.ActionStatus = &v
}

// GetAdminIp returns the AdminIp field value if set, zero value otherwise.
func (o *HostNode) GetAdminIp() string {
	if o == nil || IsNil(o.AdminIp) {
		var ret string
		return ret
	}
	return *o.AdminIp
}

// GetAdminIpOk returns a tuple with the AdminIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostNode) GetAdminIpOk() (*string, bool) {
	if o == nil || IsNil(o.AdminIp) {
		return nil, false
	}
	return o.AdminIp, true
}

// HasAdminIp returns a boolean if a field has been set.
func (o *HostNode) HasAdminIp() bool {
	if o != nil && !IsNil(o.AdminIp) {
		return true
	}

	return false
}

// SetAdminIp gets a reference to the given string and assigns it to the AdminIp field.
func (o *HostNode) SetAdminIp(v string) {
	o.AdminIp = &v
}

// GetAdminVip returns the AdminVip field value if set, zero value otherwise.
func (o *HostNode) GetAdminVip() string {
	if o == nil || IsNil(o.AdminVip) {
		var ret string
		return ret
	}
	return *o.AdminVip
}

// GetAdminVipOk returns a tuple with the AdminVip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostNode) GetAdminVipOk() (*string, bool) {
	if o == nil || IsNil(o.AdminVip) {
		return nil, false
	}
	return o.AdminVip, true
}

// HasAdminVip returns a boolean if a field has been set.
func (o *HostNode) HasAdminVip() bool {
	if o != nil && !IsNil(o.AdminVip) {
		return true
	}

	return false
}

// SetAdminVip gets a reference to the given string and assigns it to the AdminVip field.
func (o *HostNode) SetAdminVip(v string) {
	o.AdminVip = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *HostNode) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostNode) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *HostNode) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *HostNode) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *HostNode) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostNode) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *HostNode) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *HostNode) SetName(v string) {
	o.Name = &v
}

// GetOspClusterId returns the OspClusterId field value if set, zero value otherwise.
func (o *HostNode) GetOspClusterId() int64 {
	if o == nil || IsNil(o.OspClusterId) {
		var ret int64
		return ret
	}
	return *o.OspClusterId
}

// GetOspClusterIdOk returns a tuple with the OspClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostNode) GetOspClusterIdOk() (*int64, bool) {
	if o == nil || IsNil(o.OspClusterId) {
		return nil, false
	}
	return o.OspClusterId, true
}

// HasOspClusterId returns a boolean if a field has been set.
func (o *HostNode) HasOspClusterId() bool {
	if o != nil && !IsNil(o.OspClusterId) {
		return true
	}

	return false
}

// SetOspClusterId gets a reference to the given int64 and assigns it to the OspClusterId field.
func (o *HostNode) SetOspClusterId(v int64) {
	o.OspClusterId = &v
}

// GetOspZoneId returns the OspZoneId field value if set, zero value otherwise.
func (o *HostNode) GetOspZoneId() int64 {
	if o == nil || IsNil(o.OspZoneId) {
		var ret int64
		return ret
	}
	return *o.OspZoneId
}

// GetOspZoneIdOk returns a tuple with the OspZoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostNode) GetOspZoneIdOk() (*int64, bool) {
	if o == nil || IsNil(o.OspZoneId) {
		return nil, false
	}
	return o.OspZoneId, true
}

// HasOspZoneId returns a boolean if a field has been set.
func (o *HostNode) HasOspZoneId() bool {
	if o != nil && !IsNil(o.OspZoneId) {
		return true
	}

	return false
}

// SetOspZoneId gets a reference to the given int64 and assigns it to the OspZoneId field.
func (o *HostNode) SetOspZoneId(v int64) {
	o.OspZoneId = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *HostNode) GetRoles() string {
	if o == nil || IsNil(o.Roles) {
		var ret string
		return ret
	}
	return *o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostNode) GetRolesOk() (*string, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *HostNode) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given string and assigns it to the Roles field.
func (o *HostNode) SetRoles(v string) {
	o.Roles = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *HostNode) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostNode) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *HostNode) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *HostNode) SetStatus(v string) {
	o.Status = &v
}

// GetUp returns the Up field value if set, zero value otherwise.
func (o *HostNode) GetUp() bool {
	if o == nil || IsNil(o.Up) {
		var ret bool
		return ret
	}
	return *o.Up
}

// GetUpOk returns a tuple with the Up field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostNode) GetUpOk() (*bool, bool) {
	if o == nil || IsNil(o.Up) {
		return nil, false
	}
	return o.Up, true
}

// HasUp returns a boolean if a field has been set.
func (o *HostNode) HasUp() bool {
	if o != nil && !IsNil(o.Up) {
		return true
	}

	return false
}

// SetUp gets a reference to the given bool and assigns it to the Up field.
func (o *HostNode) SetUp(v bool) {
	o.Up = &v
}

func (o HostNode) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HostNode) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActionStatus) {
		toSerialize["action_status"] = o.ActionStatus
	}
	if !IsNil(o.AdminIp) {
		toSerialize["admin_ip"] = o.AdminIp
	}
	if !IsNil(o.AdminVip) {
		toSerialize["admin_vip"] = o.AdminVip
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OspClusterId) {
		toSerialize["osp_cluster_id"] = o.OspClusterId
	}
	if !IsNil(o.OspZoneId) {
		toSerialize["osp_zone_id"] = o.OspZoneId
	}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Up) {
		toSerialize["up"] = o.Up
	}
	return toSerialize, nil
}

type NullableHostNode struct {
	value *HostNode
	isSet bool
}

func (v NullableHostNode) Get() *HostNode {
	return v.value
}

func (v *NullableHostNode) Set(val *HostNode) {
	v.value = val
	v.isSet = true
}

func (v NullableHostNode) IsSet() bool {
	return v.isSet
}

func (v *NullableHostNode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHostNode(val *HostNode) *NullableHostNode {
	return &NullableHostNode{value: val, isSet: true}
}

func (v NullableHostNode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHostNode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


