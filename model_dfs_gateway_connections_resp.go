/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DfsGatewayConnectionsResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsGatewayConnectionsResp{}

// DfsGatewayConnectionsResp struct for DfsGatewayConnectionsResp
type DfsGatewayConnectionsResp struct {
	// dfs ftp sessions
	FtpSessions []DfsFTPSession `json:"ftp_sessions,omitempty"`
	// dfs hdfs connections
	HdfsConnections []DfsHdfsConnection `json:"hdfs_connections,omitempty"`
	// dfs nfs connections
	NfsConnections []DfsNFSConnection `json:"nfs_connections,omitempty"`
	// dfs s3 bucket connections
	S3Connections []DfsS3BucketConnection `json:"s3_connections,omitempty"`
	// dfs smb sessions
	SmbSessions []DfsSMBSession `json:"smb_sessions,omitempty"`
}

// NewDfsGatewayConnectionsResp instantiates a new DfsGatewayConnectionsResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsGatewayConnectionsResp() *DfsGatewayConnectionsResp {
	this := DfsGatewayConnectionsResp{}
	return &this
}

// NewDfsGatewayConnectionsRespWithDefaults instantiates a new DfsGatewayConnectionsResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsGatewayConnectionsRespWithDefaults() *DfsGatewayConnectionsResp {
	this := DfsGatewayConnectionsResp{}
	return &this
}

// GetFtpSessions returns the FtpSessions field value if set, zero value otherwise.
func (o *DfsGatewayConnectionsResp) GetFtpSessions() []DfsFTPSession {
	if o == nil || IsNil(o.FtpSessions) {
		var ret []DfsFTPSession
		return ret
	}
	return o.FtpSessions
}

// GetFtpSessionsOk returns a tuple with the FtpSessions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayConnectionsResp) GetFtpSessionsOk() ([]DfsFTPSession, bool) {
	if o == nil || IsNil(o.FtpSessions) {
		return nil, false
	}
	return o.FtpSessions, true
}

// HasFtpSessions returns a boolean if a field has been set.
func (o *DfsGatewayConnectionsResp) HasFtpSessions() bool {
	if o != nil && !IsNil(o.FtpSessions) {
		return true
	}

	return false
}

// SetFtpSessions gets a reference to the given []DfsFTPSession and assigns it to the FtpSessions field.
func (o *DfsGatewayConnectionsResp) SetFtpSessions(v []DfsFTPSession) {
	o.FtpSessions = v
}

// GetHdfsConnections returns the HdfsConnections field value if set, zero value otherwise.
func (o *DfsGatewayConnectionsResp) GetHdfsConnections() []DfsHdfsConnection {
	if o == nil || IsNil(o.HdfsConnections) {
		var ret []DfsHdfsConnection
		return ret
	}
	return o.HdfsConnections
}

// GetHdfsConnectionsOk returns a tuple with the HdfsConnections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayConnectionsResp) GetHdfsConnectionsOk() ([]DfsHdfsConnection, bool) {
	if o == nil || IsNil(o.HdfsConnections) {
		return nil, false
	}
	return o.HdfsConnections, true
}

// HasHdfsConnections returns a boolean if a field has been set.
func (o *DfsGatewayConnectionsResp) HasHdfsConnections() bool {
	if o != nil && !IsNil(o.HdfsConnections) {
		return true
	}

	return false
}

// SetHdfsConnections gets a reference to the given []DfsHdfsConnection and assigns it to the HdfsConnections field.
func (o *DfsGatewayConnectionsResp) SetHdfsConnections(v []DfsHdfsConnection) {
	o.HdfsConnections = v
}

// GetNfsConnections returns the NfsConnections field value if set, zero value otherwise.
func (o *DfsGatewayConnectionsResp) GetNfsConnections() []DfsNFSConnection {
	if o == nil || IsNil(o.NfsConnections) {
		var ret []DfsNFSConnection
		return ret
	}
	return o.NfsConnections
}

// GetNfsConnectionsOk returns a tuple with the NfsConnections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayConnectionsResp) GetNfsConnectionsOk() ([]DfsNFSConnection, bool) {
	if o == nil || IsNil(o.NfsConnections) {
		return nil, false
	}
	return o.NfsConnections, true
}

// HasNfsConnections returns a boolean if a field has been set.
func (o *DfsGatewayConnectionsResp) HasNfsConnections() bool {
	if o != nil && !IsNil(o.NfsConnections) {
		return true
	}

	return false
}

// SetNfsConnections gets a reference to the given []DfsNFSConnection and assigns it to the NfsConnections field.
func (o *DfsGatewayConnectionsResp) SetNfsConnections(v []DfsNFSConnection) {
	o.NfsConnections = v
}

// GetS3Connections returns the S3Connections field value if set, zero value otherwise.
func (o *DfsGatewayConnectionsResp) GetS3Connections() []DfsS3BucketConnection {
	if o == nil || IsNil(o.S3Connections) {
		var ret []DfsS3BucketConnection
		return ret
	}
	return o.S3Connections
}

// GetS3ConnectionsOk returns a tuple with the S3Connections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayConnectionsResp) GetS3ConnectionsOk() ([]DfsS3BucketConnection, bool) {
	if o == nil || IsNil(o.S3Connections) {
		return nil, false
	}
	return o.S3Connections, true
}

// HasS3Connections returns a boolean if a field has been set.
func (o *DfsGatewayConnectionsResp) HasS3Connections() bool {
	if o != nil && !IsNil(o.S3Connections) {
		return true
	}

	return false
}

// SetS3Connections gets a reference to the given []DfsS3BucketConnection and assigns it to the S3Connections field.
func (o *DfsGatewayConnectionsResp) SetS3Connections(v []DfsS3BucketConnection) {
	o.S3Connections = v
}

// GetSmbSessions returns the SmbSessions field value if set, zero value otherwise.
func (o *DfsGatewayConnectionsResp) GetSmbSessions() []DfsSMBSession {
	if o == nil || IsNil(o.SmbSessions) {
		var ret []DfsSMBSession
		return ret
	}
	return o.SmbSessions
}

// GetSmbSessionsOk returns a tuple with the SmbSessions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayConnectionsResp) GetSmbSessionsOk() ([]DfsSMBSession, bool) {
	if o == nil || IsNil(o.SmbSessions) {
		return nil, false
	}
	return o.SmbSessions, true
}

// HasSmbSessions returns a boolean if a field has been set.
func (o *DfsGatewayConnectionsResp) HasSmbSessions() bool {
	if o != nil && !IsNil(o.SmbSessions) {
		return true
	}

	return false
}

// SetSmbSessions gets a reference to the given []DfsSMBSession and assigns it to the SmbSessions field.
func (o *DfsGatewayConnectionsResp) SetSmbSessions(v []DfsSMBSession) {
	o.SmbSessions = v
}

func (o DfsGatewayConnectionsResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsGatewayConnectionsResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FtpSessions) {
		toSerialize["ftp_sessions"] = o.FtpSessions
	}
	if !IsNil(o.HdfsConnections) {
		toSerialize["hdfs_connections"] = o.HdfsConnections
	}
	if !IsNil(o.NfsConnections) {
		toSerialize["nfs_connections"] = o.NfsConnections
	}
	if !IsNil(o.S3Connections) {
		toSerialize["s3_connections"] = o.S3Connections
	}
	if !IsNil(o.SmbSessions) {
		toSerialize["smb_sessions"] = o.SmbSessions
	}
	return toSerialize, nil
}

type NullableDfsGatewayConnectionsResp struct {
	value *DfsGatewayConnectionsResp
	isSet bool
}

func (v NullableDfsGatewayConnectionsResp) Get() *DfsGatewayConnectionsResp {
	return v.value
}

func (v *NullableDfsGatewayConnectionsResp) Set(val *DfsGatewayConnectionsResp) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsGatewayConnectionsResp) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsGatewayConnectionsResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsGatewayConnectionsResp(val *DfsGatewayConnectionsResp) *NullableDfsGatewayConnectionsResp {
	return &NullableDfsGatewayConnectionsResp{value: val, isSet: true}
}

func (v NullableDfsGatewayConnectionsResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsGatewayConnectionsResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


