/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RoleMappingUpdateReqMapping type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoleMappingUpdateReqMapping{}

// RoleMappingUpdateReqMapping struct for RoleMappingUpdateReqMapping
type RoleMappingUpdateReqMapping struct {
	Default *bool `json:"default,omitempty"`
	// roles of identity platform
	Value *string `json:"value,omitempty"`
}

// NewRoleMappingUpdateReqMapping instantiates a new RoleMappingUpdateReqMapping object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleMappingUpdateReqMapping() *RoleMappingUpdateReqMapping {
	this := RoleMappingUpdateReqMapping{}
	return &this
}

// NewRoleMappingUpdateReqMappingWithDefaults instantiates a new RoleMappingUpdateReqMapping object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleMappingUpdateReqMappingWithDefaults() *RoleMappingUpdateReqMapping {
	this := RoleMappingUpdateReqMapping{}
	return &this
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *RoleMappingUpdateReqMapping) GetDefault() bool {
	if o == nil || IsNil(o.Default) {
		var ret bool
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleMappingUpdateReqMapping) GetDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.Default) {
		return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *RoleMappingUpdateReqMapping) HasDefault() bool {
	if o != nil && !IsNil(o.Default) {
		return true
	}

	return false
}

// SetDefault gets a reference to the given bool and assigns it to the Default field.
func (o *RoleMappingUpdateReqMapping) SetDefault(v bool) {
	o.Default = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *RoleMappingUpdateReqMapping) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleMappingUpdateReqMapping) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *RoleMappingUpdateReqMapping) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *RoleMappingUpdateReqMapping) SetValue(v string) {
	o.Value = &v
}

func (o RoleMappingUpdateReqMapping) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoleMappingUpdateReqMapping) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Default) {
		toSerialize["default"] = o.Default
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableRoleMappingUpdateReqMapping struct {
	value *RoleMappingUpdateReqMapping
	isSet bool
}

func (v NullableRoleMappingUpdateReqMapping) Get() *RoleMappingUpdateReqMapping {
	return v.value
}

func (v *NullableRoleMappingUpdateReqMapping) Set(val *RoleMappingUpdateReqMapping) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleMappingUpdateReqMapping) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleMappingUpdateReqMapping) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleMappingUpdateReqMapping(val *RoleMappingUpdateReqMapping) *NullableRoleMappingUpdateReqMapping {
	return &NullableRoleMappingUpdateReqMapping{value: val, isSet: true}
}

func (v NullableRoleMappingUpdateReqMapping) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleMappingUpdateReqMapping) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


