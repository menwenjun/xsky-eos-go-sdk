/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OSZoneLocksResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OSZoneLocksResp{}

// OSZoneLocksResp struct for OSZoneLocksResp
type OSZoneLocksResp struct {
	OsZoneLocks []OSZoneLock `json:"os_zone_locks"`
}

type _OSZoneLocksResp OSZoneLocksResp

// NewOSZoneLocksResp instantiates a new OSZoneLocksResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOSZoneLocksResp(osZoneLocks []OSZoneLock) *OSZoneLocksResp {
	this := OSZoneLocksResp{}
	this.OsZoneLocks = osZoneLocks
	return &this
}

// NewOSZoneLocksRespWithDefaults instantiates a new OSZoneLocksResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOSZoneLocksRespWithDefaults() *OSZoneLocksResp {
	this := OSZoneLocksResp{}
	return &this
}

// GetOsZoneLocks returns the OsZoneLocks field value
func (o *OSZoneLocksResp) GetOsZoneLocks() []OSZoneLock {
	if o == nil {
		var ret []OSZoneLock
		return ret
	}

	return o.OsZoneLocks
}

// GetOsZoneLocksOk returns a tuple with the OsZoneLocks field value
// and a boolean to check if the value has been set.
func (o *OSZoneLocksResp) GetOsZoneLocksOk() ([]OSZoneLock, bool) {
	if o == nil {
		return nil, false
	}
	return o.OsZoneLocks, true
}

// SetOsZoneLocks sets field value
func (o *OSZoneLocksResp) SetOsZoneLocks(v []OSZoneLock) {
	o.OsZoneLocks = v
}

func (o OSZoneLocksResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OSZoneLocksResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["os_zone_locks"] = o.OsZoneLocks
	return toSerialize, nil
}

func (o *OSZoneLocksResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"os_zone_locks",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOSZoneLocksResp := _OSZoneLocksResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOSZoneLocksResp)

	if err != nil {
		return err
	}

	*o = OSZoneLocksResp(varOSZoneLocksResp)

	return err
}

type NullableOSZoneLocksResp struct {
	value *OSZoneLocksResp
	isSet bool
}

func (v NullableOSZoneLocksResp) Get() *OSZoneLocksResp {
	return v.value
}

func (v *NullableOSZoneLocksResp) Set(val *OSZoneLocksResp) {
	v.value = val
	v.isSet = true
}

func (v NullableOSZoneLocksResp) IsSet() bool {
	return v.isSet
}

func (v *NullableOSZoneLocksResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSZoneLocksResp(val *OSZoneLocksResp) *NullableOSZoneLocksResp {
	return &NullableOSZoneLocksResp{value: val, isSet: true}
}

func (v NullableOSZoneLocksResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSZoneLocksResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


