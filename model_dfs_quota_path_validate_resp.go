/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DfsQuotaPathValidateResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsQuotaPathValidateResp{}

// DfsQuotaPathValidateResp struct for DfsQuotaPathValidateResp
type DfsQuotaPathValidateResp struct {
	PathValidator DfsQuotaPathValidateRespPathValidation `json:"path_validator"`
}

type _DfsQuotaPathValidateResp DfsQuotaPathValidateResp

// NewDfsQuotaPathValidateResp instantiates a new DfsQuotaPathValidateResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsQuotaPathValidateResp(pathValidator DfsQuotaPathValidateRespPathValidation) *DfsQuotaPathValidateResp {
	this := DfsQuotaPathValidateResp{}
	this.PathValidator = pathValidator
	return &this
}

// NewDfsQuotaPathValidateRespWithDefaults instantiates a new DfsQuotaPathValidateResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsQuotaPathValidateRespWithDefaults() *DfsQuotaPathValidateResp {
	this := DfsQuotaPathValidateResp{}
	return &this
}

// GetPathValidator returns the PathValidator field value
func (o *DfsQuotaPathValidateResp) GetPathValidator() DfsQuotaPathValidateRespPathValidation {
	if o == nil {
		var ret DfsQuotaPathValidateRespPathValidation
		return ret
	}

	return o.PathValidator
}

// GetPathValidatorOk returns a tuple with the PathValidator field value
// and a boolean to check if the value has been set.
func (o *DfsQuotaPathValidateResp) GetPathValidatorOk() (*DfsQuotaPathValidateRespPathValidation, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PathValidator, true
}

// SetPathValidator sets field value
func (o *DfsQuotaPathValidateResp) SetPathValidator(v DfsQuotaPathValidateRespPathValidation) {
	o.PathValidator = v
}

func (o DfsQuotaPathValidateResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsQuotaPathValidateResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["path_validator"] = o.PathValidator
	return toSerialize, nil
}

func (o *DfsQuotaPathValidateResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"path_validator",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDfsQuotaPathValidateResp := _DfsQuotaPathValidateResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDfsQuotaPathValidateResp)

	if err != nil {
		return err
	}

	*o = DfsQuotaPathValidateResp(varDfsQuotaPathValidateResp)

	return err
}

type NullableDfsQuotaPathValidateResp struct {
	value *DfsQuotaPathValidateResp
	isSet bool
}

func (v NullableDfsQuotaPathValidateResp) Get() *DfsQuotaPathValidateResp {
	return v.value
}

func (v *NullableDfsQuotaPathValidateResp) Set(val *DfsQuotaPathValidateResp) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsQuotaPathValidateResp) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsQuotaPathValidateResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsQuotaPathValidateResp(val *DfsQuotaPathValidateResp) *NullableDfsQuotaPathValidateResp {
	return &NullableDfsQuotaPathValidateResp{value: val, isSet: true}
}

func (v NullableDfsQuotaPathValidateResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsQuotaPathValidateResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


