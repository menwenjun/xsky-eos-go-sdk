/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DfsQosResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsQosResp{}

// DfsQosResp struct for DfsQosResp
type DfsQosResp struct {
	DfsQos *DfsQos `json:"dfs_qos,omitempty"`
}

// NewDfsQosResp instantiates a new DfsQosResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsQosResp() *DfsQosResp {
	this := DfsQosResp{}
	return &this
}

// NewDfsQosRespWithDefaults instantiates a new DfsQosResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsQosRespWithDefaults() *DfsQosResp {
	this := DfsQosResp{}
	return &this
}

// GetDfsQos returns the DfsQos field value if set, zero value otherwise.
func (o *DfsQosResp) GetDfsQos() DfsQos {
	if o == nil || IsNil(o.DfsQos) {
		var ret DfsQos
		return ret
	}
	return *o.DfsQos
}

// GetDfsQosOk returns a tuple with the DfsQos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQosResp) GetDfsQosOk() (*DfsQos, bool) {
	if o == nil || IsNil(o.DfsQos) {
		return nil, false
	}
	return o.DfsQos, true
}

// HasDfsQos returns a boolean if a field has been set.
func (o *DfsQosResp) HasDfsQos() bool {
	if o != nil && !IsNil(o.DfsQos) {
		return true
	}

	return false
}

// SetDfsQos gets a reference to the given DfsQos and assigns it to the DfsQos field.
func (o *DfsQosResp) SetDfsQos(v DfsQos) {
	o.DfsQos = &v
}

func (o DfsQosResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsQosResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DfsQos) {
		toSerialize["dfs_qos"] = o.DfsQos
	}
	return toSerialize, nil
}

type NullableDfsQosResp struct {
	value *DfsQosResp
	isSet bool
}

func (v NullableDfsQosResp) Get() *DfsQosResp {
	return v.value
}

func (v *NullableDfsQosResp) Set(val *DfsQosResp) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsQosResp) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsQosResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsQosResp(val *DfsQosResp) *NullableDfsQosResp {
	return &NullableDfsQosResp{value: val, isSet: true}
}

func (v NullableDfsQosResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsQosResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


