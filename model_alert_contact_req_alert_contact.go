/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AlertContactReqAlertContact type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertContactReqAlertContact{}

// AlertContactReqAlertContact struct for AlertContactReqAlertContact
type AlertContactReqAlertContact struct {
	EmailAddr *string `json:"email_addr,omitempty"`
	Name *string `json:"name,omitempty"`
	WechatContactType *string `json:"wechat_contact_type,omitempty"`
	WechatId *string `json:"wechat_id,omitempty"`
}

// NewAlertContactReqAlertContact instantiates a new AlertContactReqAlertContact object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertContactReqAlertContact() *AlertContactReqAlertContact {
	this := AlertContactReqAlertContact{}
	return &this
}

// NewAlertContactReqAlertContactWithDefaults instantiates a new AlertContactReqAlertContact object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertContactReqAlertContactWithDefaults() *AlertContactReqAlertContact {
	this := AlertContactReqAlertContact{}
	return &this
}

// GetEmailAddr returns the EmailAddr field value if set, zero value otherwise.
func (o *AlertContactReqAlertContact) GetEmailAddr() string {
	if o == nil || IsNil(o.EmailAddr) {
		var ret string
		return ret
	}
	return *o.EmailAddr
}

// GetEmailAddrOk returns a tuple with the EmailAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertContactReqAlertContact) GetEmailAddrOk() (*string, bool) {
	if o == nil || IsNil(o.EmailAddr) {
		return nil, false
	}
	return o.EmailAddr, true
}

// HasEmailAddr returns a boolean if a field has been set.
func (o *AlertContactReqAlertContact) HasEmailAddr() bool {
	if o != nil && !IsNil(o.EmailAddr) {
		return true
	}

	return false
}

// SetEmailAddr gets a reference to the given string and assigns it to the EmailAddr field.
func (o *AlertContactReqAlertContact) SetEmailAddr(v string) {
	o.EmailAddr = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AlertContactReqAlertContact) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertContactReqAlertContact) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AlertContactReqAlertContact) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AlertContactReqAlertContact) SetName(v string) {
	o.Name = &v
}

// GetWechatContactType returns the WechatContactType field value if set, zero value otherwise.
func (o *AlertContactReqAlertContact) GetWechatContactType() string {
	if o == nil || IsNil(o.WechatContactType) {
		var ret string
		return ret
	}
	return *o.WechatContactType
}

// GetWechatContactTypeOk returns a tuple with the WechatContactType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertContactReqAlertContact) GetWechatContactTypeOk() (*string, bool) {
	if o == nil || IsNil(o.WechatContactType) {
		return nil, false
	}
	return o.WechatContactType, true
}

// HasWechatContactType returns a boolean if a field has been set.
func (o *AlertContactReqAlertContact) HasWechatContactType() bool {
	if o != nil && !IsNil(o.WechatContactType) {
		return true
	}

	return false
}

// SetWechatContactType gets a reference to the given string and assigns it to the WechatContactType field.
func (o *AlertContactReqAlertContact) SetWechatContactType(v string) {
	o.WechatContactType = &v
}

// GetWechatId returns the WechatId field value if set, zero value otherwise.
func (o *AlertContactReqAlertContact) GetWechatId() string {
	if o == nil || IsNil(o.WechatId) {
		var ret string
		return ret
	}
	return *o.WechatId
}

// GetWechatIdOk returns a tuple with the WechatId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertContactReqAlertContact) GetWechatIdOk() (*string, bool) {
	if o == nil || IsNil(o.WechatId) {
		return nil, false
	}
	return o.WechatId, true
}

// HasWechatId returns a boolean if a field has been set.
func (o *AlertContactReqAlertContact) HasWechatId() bool {
	if o != nil && !IsNil(o.WechatId) {
		return true
	}

	return false
}

// SetWechatId gets a reference to the given string and assigns it to the WechatId field.
func (o *AlertContactReqAlertContact) SetWechatId(v string) {
	o.WechatId = &v
}

func (o AlertContactReqAlertContact) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertContactReqAlertContact) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EmailAddr) {
		toSerialize["email_addr"] = o.EmailAddr
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.WechatContactType) {
		toSerialize["wechat_contact_type"] = o.WechatContactType
	}
	if !IsNil(o.WechatId) {
		toSerialize["wechat_id"] = o.WechatId
	}
	return toSerialize, nil
}

type NullableAlertContactReqAlertContact struct {
	value *AlertContactReqAlertContact
	isSet bool
}

func (v NullableAlertContactReqAlertContact) Get() *AlertContactReqAlertContact {
	return v.value
}

func (v *NullableAlertContactReqAlertContact) Set(val *AlertContactReqAlertContact) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertContactReqAlertContact) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertContactReqAlertContact) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertContactReqAlertContact(val *AlertContactReqAlertContact) *NullableAlertContactReqAlertContact {
	return &NullableAlertContactReqAlertContact{value: val, isSet: true}
}

func (v NullableAlertContactReqAlertContact) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertContactReqAlertContact) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


