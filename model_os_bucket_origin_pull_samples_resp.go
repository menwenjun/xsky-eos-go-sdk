/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OSBucketOriginPullSamplesResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OSBucketOriginPullSamplesResp{}

// OSBucketOriginPullSamplesResp struct for OSBucketOriginPullSamplesResp
type OSBucketOriginPullSamplesResp struct {
	// os bucket origin pull samples
	OsBucketOriginPullSamples []OSBucketOriginPullStat `json:"os_bucket_origin_pull_samples,omitempty"`
}

// NewOSBucketOriginPullSamplesResp instantiates a new OSBucketOriginPullSamplesResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOSBucketOriginPullSamplesResp() *OSBucketOriginPullSamplesResp {
	this := OSBucketOriginPullSamplesResp{}
	return &this
}

// NewOSBucketOriginPullSamplesRespWithDefaults instantiates a new OSBucketOriginPullSamplesResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOSBucketOriginPullSamplesRespWithDefaults() *OSBucketOriginPullSamplesResp {
	this := OSBucketOriginPullSamplesResp{}
	return &this
}

// GetOsBucketOriginPullSamples returns the OsBucketOriginPullSamples field value if set, zero value otherwise.
func (o *OSBucketOriginPullSamplesResp) GetOsBucketOriginPullSamples() []OSBucketOriginPullStat {
	if o == nil || IsNil(o.OsBucketOriginPullSamples) {
		var ret []OSBucketOriginPullStat
		return ret
	}
	return o.OsBucketOriginPullSamples
}

// GetOsBucketOriginPullSamplesOk returns a tuple with the OsBucketOriginPullSamples field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBucketOriginPullSamplesResp) GetOsBucketOriginPullSamplesOk() ([]OSBucketOriginPullStat, bool) {
	if o == nil || IsNil(o.OsBucketOriginPullSamples) {
		return nil, false
	}
	return o.OsBucketOriginPullSamples, true
}

// HasOsBucketOriginPullSamples returns a boolean if a field has been set.
func (o *OSBucketOriginPullSamplesResp) HasOsBucketOriginPullSamples() bool {
	if o != nil && !IsNil(o.OsBucketOriginPullSamples) {
		return true
	}

	return false
}

// SetOsBucketOriginPullSamples gets a reference to the given []OSBucketOriginPullStat and assigns it to the OsBucketOriginPullSamples field.
func (o *OSBucketOriginPullSamplesResp) SetOsBucketOriginPullSamples(v []OSBucketOriginPullStat) {
	o.OsBucketOriginPullSamples = v
}

func (o OSBucketOriginPullSamplesResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OSBucketOriginPullSamplesResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OsBucketOriginPullSamples) {
		toSerialize["os_bucket_origin_pull_samples"] = o.OsBucketOriginPullSamples
	}
	return toSerialize, nil
}

type NullableOSBucketOriginPullSamplesResp struct {
	value *OSBucketOriginPullSamplesResp
	isSet bool
}

func (v NullableOSBucketOriginPullSamplesResp) Get() *OSBucketOriginPullSamplesResp {
	return v.value
}

func (v *NullableOSBucketOriginPullSamplesResp) Set(val *OSBucketOriginPullSamplesResp) {
	v.value = val
	v.isSet = true
}

func (v NullableOSBucketOriginPullSamplesResp) IsSet() bool {
	return v.isSet
}

func (v *NullableOSBucketOriginPullSamplesResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSBucketOriginPullSamplesResp(val *OSBucketOriginPullSamplesResp) *NullableOSBucketOriginPullSamplesResp {
	return &NullableOSBucketOriginPullSamplesResp{value: val, isSet: true}
}

func (v NullableOSBucketOriginPullSamplesResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSBucketOriginPullSamplesResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


