/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ErrorRecordCreateReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ErrorRecordCreateReq{}

// ErrorRecordCreateReq struct for ErrorRecordCreateReq
type ErrorRecordCreateReq struct {
	ErrorRecord *ErrorRecordCreateReqErrorRecord `json:"error_record,omitempty"`
}

// NewErrorRecordCreateReq instantiates a new ErrorRecordCreateReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrorRecordCreateReq() *ErrorRecordCreateReq {
	this := ErrorRecordCreateReq{}
	return &this
}

// NewErrorRecordCreateReqWithDefaults instantiates a new ErrorRecordCreateReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrorRecordCreateReqWithDefaults() *ErrorRecordCreateReq {
	this := ErrorRecordCreateReq{}
	return &this
}

// GetErrorRecord returns the ErrorRecord field value if set, zero value otherwise.
func (o *ErrorRecordCreateReq) GetErrorRecord() ErrorRecordCreateReqErrorRecord {
	if o == nil || IsNil(o.ErrorRecord) {
		var ret ErrorRecordCreateReqErrorRecord
		return ret
	}
	return *o.ErrorRecord
}

// GetErrorRecordOk returns a tuple with the ErrorRecord field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorRecordCreateReq) GetErrorRecordOk() (*ErrorRecordCreateReqErrorRecord, bool) {
	if o == nil || IsNil(o.ErrorRecord) {
		return nil, false
	}
	return o.ErrorRecord, true
}

// HasErrorRecord returns a boolean if a field has been set.
func (o *ErrorRecordCreateReq) HasErrorRecord() bool {
	if o != nil && !IsNil(o.ErrorRecord) {
		return true
	}

	return false
}

// SetErrorRecord gets a reference to the given ErrorRecordCreateReqErrorRecord and assigns it to the ErrorRecord field.
func (o *ErrorRecordCreateReq) SetErrorRecord(v ErrorRecordCreateReqErrorRecord) {
	o.ErrorRecord = &v
}

func (o ErrorRecordCreateReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ErrorRecordCreateReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ErrorRecord) {
		toSerialize["error_record"] = o.ErrorRecord
	}
	return toSerialize, nil
}

type NullableErrorRecordCreateReq struct {
	value *ErrorRecordCreateReq
	isSet bool
}

func (v NullableErrorRecordCreateReq) Get() *ErrorRecordCreateReq {
	return v.value
}

func (v *NullableErrorRecordCreateReq) Set(val *ErrorRecordCreateReq) {
	v.value = val
	v.isSet = true
}

func (v NullableErrorRecordCreateReq) IsSet() bool {
	return v.isSet
}

func (v *NullableErrorRecordCreateReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrorRecordCreateReq(val *ErrorRecordCreateReq) *NullableErrorRecordCreateReq {
	return &NullableErrorRecordCreateReq{value: val, isSet: true}
}

func (v NullableErrorRecordCreateReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrorRecordCreateReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


