/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OSBucketAddReplicationPathsReqBucket type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OSBucketAddReplicationPathsReqBucket{}

// OSBucketAddReplicationPathsReqBucket struct for OSBucketAddReplicationPathsReqBucket
type OSBucketAddReplicationPathsReqBucket struct {
	OsReplicationPathUuids []string `json:"os_replication_path_uuids,omitempty"`
	OsReplicationPaths []OSReplicationPathReq `json:"os_replication_paths,omitempty"`
}

// NewOSBucketAddReplicationPathsReqBucket instantiates a new OSBucketAddReplicationPathsReqBucket object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOSBucketAddReplicationPathsReqBucket() *OSBucketAddReplicationPathsReqBucket {
	this := OSBucketAddReplicationPathsReqBucket{}
	return &this
}

// NewOSBucketAddReplicationPathsReqBucketWithDefaults instantiates a new OSBucketAddReplicationPathsReqBucket object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOSBucketAddReplicationPathsReqBucketWithDefaults() *OSBucketAddReplicationPathsReqBucket {
	this := OSBucketAddReplicationPathsReqBucket{}
	return &this
}

// GetOsReplicationPathUuids returns the OsReplicationPathUuids field value if set, zero value otherwise.
func (o *OSBucketAddReplicationPathsReqBucket) GetOsReplicationPathUuids() []string {
	if o == nil || IsNil(o.OsReplicationPathUuids) {
		var ret []string
		return ret
	}
	return o.OsReplicationPathUuids
}

// GetOsReplicationPathUuidsOk returns a tuple with the OsReplicationPathUuids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBucketAddReplicationPathsReqBucket) GetOsReplicationPathUuidsOk() ([]string, bool) {
	if o == nil || IsNil(o.OsReplicationPathUuids) {
		return nil, false
	}
	return o.OsReplicationPathUuids, true
}

// HasOsReplicationPathUuids returns a boolean if a field has been set.
func (o *OSBucketAddReplicationPathsReqBucket) HasOsReplicationPathUuids() bool {
	if o != nil && !IsNil(o.OsReplicationPathUuids) {
		return true
	}

	return false
}

// SetOsReplicationPathUuids gets a reference to the given []string and assigns it to the OsReplicationPathUuids field.
func (o *OSBucketAddReplicationPathsReqBucket) SetOsReplicationPathUuids(v []string) {
	o.OsReplicationPathUuids = v
}

// GetOsReplicationPaths returns the OsReplicationPaths field value if set, zero value otherwise.
func (o *OSBucketAddReplicationPathsReqBucket) GetOsReplicationPaths() []OSReplicationPathReq {
	if o == nil || IsNil(o.OsReplicationPaths) {
		var ret []OSReplicationPathReq
		return ret
	}
	return o.OsReplicationPaths
}

// GetOsReplicationPathsOk returns a tuple with the OsReplicationPaths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBucketAddReplicationPathsReqBucket) GetOsReplicationPathsOk() ([]OSReplicationPathReq, bool) {
	if o == nil || IsNil(o.OsReplicationPaths) {
		return nil, false
	}
	return o.OsReplicationPaths, true
}

// HasOsReplicationPaths returns a boolean if a field has been set.
func (o *OSBucketAddReplicationPathsReqBucket) HasOsReplicationPaths() bool {
	if o != nil && !IsNil(o.OsReplicationPaths) {
		return true
	}

	return false
}

// SetOsReplicationPaths gets a reference to the given []OSReplicationPathReq and assigns it to the OsReplicationPaths field.
func (o *OSBucketAddReplicationPathsReqBucket) SetOsReplicationPaths(v []OSReplicationPathReq) {
	o.OsReplicationPaths = v
}

func (o OSBucketAddReplicationPathsReqBucket) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OSBucketAddReplicationPathsReqBucket) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OsReplicationPathUuids) {
		toSerialize["os_replication_path_uuids"] = o.OsReplicationPathUuids
	}
	if !IsNil(o.OsReplicationPaths) {
		toSerialize["os_replication_paths"] = o.OsReplicationPaths
	}
	return toSerialize, nil
}

type NullableOSBucketAddReplicationPathsReqBucket struct {
	value *OSBucketAddReplicationPathsReqBucket
	isSet bool
}

func (v NullableOSBucketAddReplicationPathsReqBucket) Get() *OSBucketAddReplicationPathsReqBucket {
	return v.value
}

func (v *NullableOSBucketAddReplicationPathsReqBucket) Set(val *OSBucketAddReplicationPathsReqBucket) {
	v.value = val
	v.isSet = true
}

func (v NullableOSBucketAddReplicationPathsReqBucket) IsSet() bool {
	return v.isSet
}

func (v *NullableOSBucketAddReplicationPathsReqBucket) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSBucketAddReplicationPathsReqBucket(val *OSBucketAddReplicationPathsReqBucket) *NullableOSBucketAddReplicationPathsReqBucket {
	return &NullableOSBucketAddReplicationPathsReqBucket{value: val, isSet: true}
}

func (v NullableOSBucketAddReplicationPathsReqBucket) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSBucketAddReplicationPathsReqBucket) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


