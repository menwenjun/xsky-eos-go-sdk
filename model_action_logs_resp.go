/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ActionLogsResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActionLogsResp{}

// ActionLogsResp struct for ActionLogsResp
type ActionLogsResp struct {
	ActionLogs []ActionLogRecord `json:"action_logs"`
}

type _ActionLogsResp ActionLogsResp

// NewActionLogsResp instantiates a new ActionLogsResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionLogsResp(actionLogs []ActionLogRecord) *ActionLogsResp {
	this := ActionLogsResp{}
	this.ActionLogs = actionLogs
	return &this
}

// NewActionLogsRespWithDefaults instantiates a new ActionLogsResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionLogsRespWithDefaults() *ActionLogsResp {
	this := ActionLogsResp{}
	return &this
}

// GetActionLogs returns the ActionLogs field value
func (o *ActionLogsResp) GetActionLogs() []ActionLogRecord {
	if o == nil {
		var ret []ActionLogRecord
		return ret
	}

	return o.ActionLogs
}

// GetActionLogsOk returns a tuple with the ActionLogs field value
// and a boolean to check if the value has been set.
func (o *ActionLogsResp) GetActionLogsOk() ([]ActionLogRecord, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActionLogs, true
}

// SetActionLogs sets field value
func (o *ActionLogsResp) SetActionLogs(v []ActionLogRecord) {
	o.ActionLogs = v
}

func (o ActionLogsResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActionLogsResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["action_logs"] = o.ActionLogs
	return toSerialize, nil
}

func (o *ActionLogsResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"action_logs",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varActionLogsResp := _ActionLogsResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varActionLogsResp)

	if err != nil {
		return err
	}

	*o = ActionLogsResp(varActionLogsResp)

	return err
}

type NullableActionLogsResp struct {
	value *ActionLogsResp
	isSet bool
}

func (v NullableActionLogsResp) Get() *ActionLogsResp {
	return v.value
}

func (v *NullableActionLogsResp) Set(val *ActionLogsResp) {
	v.value = val
	v.isSet = true
}

func (v NullableActionLogsResp) IsSet() bool {
	return v.isSet
}

func (v *NullableActionLogsResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionLogsResp(val *ActionLogsResp) *NullableActionLogsResp {
	return &NullableActionLogsResp{value: val, isSet: true}
}

func (v NullableActionLogsResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionLogsResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


