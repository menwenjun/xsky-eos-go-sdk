/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the LunInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LunInfo{}

// LunInfo LunInfo records lun info
type LunInfo struct {
	AluaValue *int32 `json:"alua_value,omitempty"`
	DcName *string `json:"dc_name,omitempty"`
	LunCfg *string `json:"lun_cfg,omitempty"`
	LunId *int32 `json:"lun_id,omitempty"`
	LunName *string `json:"lun_name,omitempty"`
	LunSize *int64 `json:"lun_size,omitempty"`
	LunSn *string `json:"lun_sn,omitempty"`
}

// NewLunInfo instantiates a new LunInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLunInfo() *LunInfo {
	this := LunInfo{}
	return &this
}

// NewLunInfoWithDefaults instantiates a new LunInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLunInfoWithDefaults() *LunInfo {
	this := LunInfo{}
	return &this
}

// GetAluaValue returns the AluaValue field value if set, zero value otherwise.
func (o *LunInfo) GetAluaValue() int32 {
	if o == nil || IsNil(o.AluaValue) {
		var ret int32
		return ret
	}
	return *o.AluaValue
}

// GetAluaValueOk returns a tuple with the AluaValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LunInfo) GetAluaValueOk() (*int32, bool) {
	if o == nil || IsNil(o.AluaValue) {
		return nil, false
	}
	return o.AluaValue, true
}

// HasAluaValue returns a boolean if a field has been set.
func (o *LunInfo) HasAluaValue() bool {
	if o != nil && !IsNil(o.AluaValue) {
		return true
	}

	return false
}

// SetAluaValue gets a reference to the given int32 and assigns it to the AluaValue field.
func (o *LunInfo) SetAluaValue(v int32) {
	o.AluaValue = &v
}

// GetDcName returns the DcName field value if set, zero value otherwise.
func (o *LunInfo) GetDcName() string {
	if o == nil || IsNil(o.DcName) {
		var ret string
		return ret
	}
	return *o.DcName
}

// GetDcNameOk returns a tuple with the DcName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LunInfo) GetDcNameOk() (*string, bool) {
	if o == nil || IsNil(o.DcName) {
		return nil, false
	}
	return o.DcName, true
}

// HasDcName returns a boolean if a field has been set.
func (o *LunInfo) HasDcName() bool {
	if o != nil && !IsNil(o.DcName) {
		return true
	}

	return false
}

// SetDcName gets a reference to the given string and assigns it to the DcName field.
func (o *LunInfo) SetDcName(v string) {
	o.DcName = &v
}

// GetLunCfg returns the LunCfg field value if set, zero value otherwise.
func (o *LunInfo) GetLunCfg() string {
	if o == nil || IsNil(o.LunCfg) {
		var ret string
		return ret
	}
	return *o.LunCfg
}

// GetLunCfgOk returns a tuple with the LunCfg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LunInfo) GetLunCfgOk() (*string, bool) {
	if o == nil || IsNil(o.LunCfg) {
		return nil, false
	}
	return o.LunCfg, true
}

// HasLunCfg returns a boolean if a field has been set.
func (o *LunInfo) HasLunCfg() bool {
	if o != nil && !IsNil(o.LunCfg) {
		return true
	}

	return false
}

// SetLunCfg gets a reference to the given string and assigns it to the LunCfg field.
func (o *LunInfo) SetLunCfg(v string) {
	o.LunCfg = &v
}

// GetLunId returns the LunId field value if set, zero value otherwise.
func (o *LunInfo) GetLunId() int32 {
	if o == nil || IsNil(o.LunId) {
		var ret int32
		return ret
	}
	return *o.LunId
}

// GetLunIdOk returns a tuple with the LunId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LunInfo) GetLunIdOk() (*int32, bool) {
	if o == nil || IsNil(o.LunId) {
		return nil, false
	}
	return o.LunId, true
}

// HasLunId returns a boolean if a field has been set.
func (o *LunInfo) HasLunId() bool {
	if o != nil && !IsNil(o.LunId) {
		return true
	}

	return false
}

// SetLunId gets a reference to the given int32 and assigns it to the LunId field.
func (o *LunInfo) SetLunId(v int32) {
	o.LunId = &v
}

// GetLunName returns the LunName field value if set, zero value otherwise.
func (o *LunInfo) GetLunName() string {
	if o == nil || IsNil(o.LunName) {
		var ret string
		return ret
	}
	return *o.LunName
}

// GetLunNameOk returns a tuple with the LunName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LunInfo) GetLunNameOk() (*string, bool) {
	if o == nil || IsNil(o.LunName) {
		return nil, false
	}
	return o.LunName, true
}

// HasLunName returns a boolean if a field has been set.
func (o *LunInfo) HasLunName() bool {
	if o != nil && !IsNil(o.LunName) {
		return true
	}

	return false
}

// SetLunName gets a reference to the given string and assigns it to the LunName field.
func (o *LunInfo) SetLunName(v string) {
	o.LunName = &v
}

// GetLunSize returns the LunSize field value if set, zero value otherwise.
func (o *LunInfo) GetLunSize() int64 {
	if o == nil || IsNil(o.LunSize) {
		var ret int64
		return ret
	}
	return *o.LunSize
}

// GetLunSizeOk returns a tuple with the LunSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LunInfo) GetLunSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.LunSize) {
		return nil, false
	}
	return o.LunSize, true
}

// HasLunSize returns a boolean if a field has been set.
func (o *LunInfo) HasLunSize() bool {
	if o != nil && !IsNil(o.LunSize) {
		return true
	}

	return false
}

// SetLunSize gets a reference to the given int64 and assigns it to the LunSize field.
func (o *LunInfo) SetLunSize(v int64) {
	o.LunSize = &v
}

// GetLunSn returns the LunSn field value if set, zero value otherwise.
func (o *LunInfo) GetLunSn() string {
	if o == nil || IsNil(o.LunSn) {
		var ret string
		return ret
	}
	return *o.LunSn
}

// GetLunSnOk returns a tuple with the LunSn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LunInfo) GetLunSnOk() (*string, bool) {
	if o == nil || IsNil(o.LunSn) {
		return nil, false
	}
	return o.LunSn, true
}

// HasLunSn returns a boolean if a field has been set.
func (o *LunInfo) HasLunSn() bool {
	if o != nil && !IsNil(o.LunSn) {
		return true
	}

	return false
}

// SetLunSn gets a reference to the given string and assigns it to the LunSn field.
func (o *LunInfo) SetLunSn(v string) {
	o.LunSn = &v
}

func (o LunInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LunInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AluaValue) {
		toSerialize["alua_value"] = o.AluaValue
	}
	if !IsNil(o.DcName) {
		toSerialize["dc_name"] = o.DcName
	}
	if !IsNil(o.LunCfg) {
		toSerialize["lun_cfg"] = o.LunCfg
	}
	if !IsNil(o.LunId) {
		toSerialize["lun_id"] = o.LunId
	}
	if !IsNil(o.LunName) {
		toSerialize["lun_name"] = o.LunName
	}
	if !IsNil(o.LunSize) {
		toSerialize["lun_size"] = o.LunSize
	}
	if !IsNil(o.LunSn) {
		toSerialize["lun_sn"] = o.LunSn
	}
	return toSerialize, nil
}

type NullableLunInfo struct {
	value *LunInfo
	isSet bool
}

func (v NullableLunInfo) Get() *LunInfo {
	return v.value
}

func (v *NullableLunInfo) Set(val *LunInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableLunInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableLunInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLunInfo(val *LunInfo) *NullableLunInfo {
	return &NullableLunInfo{value: val, isSet: true}
}

func (v NullableLunInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLunInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


