/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OSReplicationZoneCreateReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OSReplicationZoneCreateReq{}

// OSReplicationZoneCreateReq struct for OSReplicationZoneCreateReq
type OSReplicationZoneCreateReq struct {
	OsReplicationZone OSReplicationZoneCreateReqOSReplicationZone `json:"os_replication_zone"`
}

type _OSReplicationZoneCreateReq OSReplicationZoneCreateReq

// NewOSReplicationZoneCreateReq instantiates a new OSReplicationZoneCreateReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOSReplicationZoneCreateReq(osReplicationZone OSReplicationZoneCreateReqOSReplicationZone) *OSReplicationZoneCreateReq {
	this := OSReplicationZoneCreateReq{}
	this.OsReplicationZone = osReplicationZone
	return &this
}

// NewOSReplicationZoneCreateReqWithDefaults instantiates a new OSReplicationZoneCreateReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOSReplicationZoneCreateReqWithDefaults() *OSReplicationZoneCreateReq {
	this := OSReplicationZoneCreateReq{}
	return &this
}

// GetOsReplicationZone returns the OsReplicationZone field value
func (o *OSReplicationZoneCreateReq) GetOsReplicationZone() OSReplicationZoneCreateReqOSReplicationZone {
	if o == nil {
		var ret OSReplicationZoneCreateReqOSReplicationZone
		return ret
	}

	return o.OsReplicationZone
}

// GetOsReplicationZoneOk returns a tuple with the OsReplicationZone field value
// and a boolean to check if the value has been set.
func (o *OSReplicationZoneCreateReq) GetOsReplicationZoneOk() (*OSReplicationZoneCreateReqOSReplicationZone, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OsReplicationZone, true
}

// SetOsReplicationZone sets field value
func (o *OSReplicationZoneCreateReq) SetOsReplicationZone(v OSReplicationZoneCreateReqOSReplicationZone) {
	o.OsReplicationZone = v
}

func (o OSReplicationZoneCreateReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OSReplicationZoneCreateReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["os_replication_zone"] = o.OsReplicationZone
	return toSerialize, nil
}

func (o *OSReplicationZoneCreateReq) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"os_replication_zone",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOSReplicationZoneCreateReq := _OSReplicationZoneCreateReq{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOSReplicationZoneCreateReq)

	if err != nil {
		return err
	}

	*o = OSReplicationZoneCreateReq(varOSReplicationZoneCreateReq)

	return err
}

type NullableOSReplicationZoneCreateReq struct {
	value *OSReplicationZoneCreateReq
	isSet bool
}

func (v NullableOSReplicationZoneCreateReq) Get() *OSReplicationZoneCreateReq {
	return v.value
}

func (v *NullableOSReplicationZoneCreateReq) Set(val *OSReplicationZoneCreateReq) {
	v.value = val
	v.isSet = true
}

func (v NullableOSReplicationZoneCreateReq) IsSet() bool {
	return v.isSet
}

func (v *NullableOSReplicationZoneCreateReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSReplicationZoneCreateReq(val *OSReplicationZoneCreateReq) *NullableOSReplicationZoneCreateReq {
	return &NullableOSReplicationZoneCreateReq{value: val, isSet: true}
}

func (v NullableOSReplicationZoneCreateReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSReplicationZoneCreateReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


