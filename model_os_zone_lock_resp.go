/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OSZoneLockResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OSZoneLockResp{}

// OSZoneLockResp struct for OSZoneLockResp
type OSZoneLockResp struct {
	OsZoneLock OSZoneLock `json:"os_zone_lock"`
}

type _OSZoneLockResp OSZoneLockResp

// NewOSZoneLockResp instantiates a new OSZoneLockResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOSZoneLockResp(osZoneLock OSZoneLock) *OSZoneLockResp {
	this := OSZoneLockResp{}
	this.OsZoneLock = osZoneLock
	return &this
}

// NewOSZoneLockRespWithDefaults instantiates a new OSZoneLockResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOSZoneLockRespWithDefaults() *OSZoneLockResp {
	this := OSZoneLockResp{}
	return &this
}

// GetOsZoneLock returns the OsZoneLock field value
func (o *OSZoneLockResp) GetOsZoneLock() OSZoneLock {
	if o == nil {
		var ret OSZoneLock
		return ret
	}

	return o.OsZoneLock
}

// GetOsZoneLockOk returns a tuple with the OsZoneLock field value
// and a boolean to check if the value has been set.
func (o *OSZoneLockResp) GetOsZoneLockOk() (*OSZoneLock, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OsZoneLock, true
}

// SetOsZoneLock sets field value
func (o *OSZoneLockResp) SetOsZoneLock(v OSZoneLock) {
	o.OsZoneLock = v
}

func (o OSZoneLockResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OSZoneLockResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["os_zone_lock"] = o.OsZoneLock
	return toSerialize, nil
}

func (o *OSZoneLockResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"os_zone_lock",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOSZoneLockResp := _OSZoneLockResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOSZoneLockResp)

	if err != nil {
		return err
	}

	*o = OSZoneLockResp(varOSZoneLockResp)

	return err
}

type NullableOSZoneLockResp struct {
	value *OSZoneLockResp
	isSet bool
}

func (v NullableOSZoneLockResp) Get() *OSZoneLockResp {
	return v.value
}

func (v *NullableOSZoneLockResp) Set(val *OSZoneLockResp) {
	v.value = val
	v.isSet = true
}

func (v NullableOSZoneLockResp) IsSet() bool {
	return v.isSet
}

func (v *NullableOSZoneLockResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSZoneLockResp(val *OSZoneLockResp) *NullableOSZoneLockResp {
	return &NullableOSZoneLockResp{value: val, isSet: true}
}

func (v NullableOSZoneLockResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSZoneLockResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


