/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the HostRecord type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HostRecord{}

// HostRecord HostRecord combine Host and HostStatus to let API comfortable
type HostRecord struct {
	ActionStatus *string `json:"action_status,omitempty"`
	AdminIp string `json:"admin_ip"`
	AdminVip *AdminVIPNestview `json:"admin_vip,omitempty"`
	// clock diff in milliseconds with primary host
	ClockDiff *int64 `json:"clock_diff,omitempty"`
	Cluster *Cluster `json:"cluster,omitempty"`
	Cores *int64 `json:"cores,omitempty"`
	CpuArch *string `json:"cpu_arch,omitempty"`
	CpuModel *string `json:"cpu_model,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	Description *string `json:"description,omitempty"`
	DiskNum *int64 `json:"disk_num,omitempty"`
	Enclosures []map[string]interface{} `json:"enclosures,omitempty"`
	// fc ports of host
	Fcports []FCPort `json:"fcports,omitempty"`
	GatewayIps *string `json:"gateway_ips,omitempty"`
	Id *int64 `json:"id,omitempty"`
	IsMasterDb *bool `json:"is_master_db,omitempty"`
	// HostKVMStatus represent KVM status
	KvmStatus *int64 `json:"kvm_status,omitempty"`
	MemoryKbyte *int64 `json:"memory_kbyte,omitempty"`
	Model *string `json:"model,omitempty"`
	Name *string `json:"name,omitempty"`
	NumaNodes *string `json:"numa_nodes,omitempty"`
	Os *string `json:"os,omitempty"`
	OspCluster *Cluster `json:"osp_cluster,omitempty"`
	OspClusterIp *string `json:"osp_cluster_ip,omitempty"`
	OspGatewayIps *string `json:"osp_gateway_ips,omitempty"`
	OspPlacementNode *PlacementNode `json:"osp_placement_node,omitempty"`
	OspZoneId *int64 `json:"osp_zone_id,omitempty"`
	PlacementNode *PlacementNode `json:"placement_node,omitempty"`
	PrivateIp *string `json:"private_ip,omitempty"`
	ProtectionDomain *ProtectionDomainNestview `json:"protection_domain,omitempty"`
	PublicIps *string `json:"public_ips,omitempty"`
	Rack *string `json:"rack,omitempty"`
	Roles *string `json:"roles,omitempty"`
	RootDisk *DiskNestview `json:"root_disk,omitempty"`
	Serial *string `json:"serial,omitempty"`
	Status *string `json:"status,omitempty"`
	Type *string `json:"type,omitempty"`
	Up *bool `json:"up,omitempty"`
	Update *time.Time `json:"update,omitempty"`
	Uptime *time.Time `json:"uptime,omitempty"`
	Vendor *string `json:"vendor,omitempty"`
	Samples []HostStat `json:"samples,omitempty"`
}

type _HostRecord HostRecord

// NewHostRecord instantiates a new HostRecord object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHostRecord(adminIp string) *HostRecord {
	this := HostRecord{}
	this.AdminIp = adminIp
	return &this
}

// NewHostRecordWithDefaults instantiates a new HostRecord object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHostRecordWithDefaults() *HostRecord {
	this := HostRecord{}
	return &this
}

// GetActionStatus returns the ActionStatus field value if set, zero value otherwise.
func (o *HostRecord) GetActionStatus() string {
	if o == nil || IsNil(o.ActionStatus) {
		var ret string
		return ret
	}
	return *o.ActionStatus
}

// GetActionStatusOk returns a tuple with the ActionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetActionStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ActionStatus) {
		return nil, false
	}
	return o.ActionStatus, true
}

// HasActionStatus returns a boolean if a field has been set.
func (o *HostRecord) HasActionStatus() bool {
	if o != nil && !IsNil(o.ActionStatus) {
		return true
	}

	return false
}

// SetActionStatus gets a reference to the given string and assigns it to the ActionStatus field.
func (o *HostRecord) SetActionStatus(v string) {
	o.ActionStatus = &v
}

// GetAdminIp returns the AdminIp field value
func (o *HostRecord) GetAdminIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AdminIp
}

// GetAdminIpOk returns a tuple with the AdminIp field value
// and a boolean to check if the value has been set.
func (o *HostRecord) GetAdminIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdminIp, true
}

// SetAdminIp sets field value
func (o *HostRecord) SetAdminIp(v string) {
	o.AdminIp = v
}

// GetAdminVip returns the AdminVip field value if set, zero value otherwise.
func (o *HostRecord) GetAdminVip() AdminVIPNestview {
	if o == nil || IsNil(o.AdminVip) {
		var ret AdminVIPNestview
		return ret
	}
	return *o.AdminVip
}

// GetAdminVipOk returns a tuple with the AdminVip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetAdminVipOk() (*AdminVIPNestview, bool) {
	if o == nil || IsNil(o.AdminVip) {
		return nil, false
	}
	return o.AdminVip, true
}

// HasAdminVip returns a boolean if a field has been set.
func (o *HostRecord) HasAdminVip() bool {
	if o != nil && !IsNil(o.AdminVip) {
		return true
	}

	return false
}

// SetAdminVip gets a reference to the given AdminVIPNestview and assigns it to the AdminVip field.
func (o *HostRecord) SetAdminVip(v AdminVIPNestview) {
	o.AdminVip = &v
}

// GetClockDiff returns the ClockDiff field value if set, zero value otherwise.
func (o *HostRecord) GetClockDiff() int64 {
	if o == nil || IsNil(o.ClockDiff) {
		var ret int64
		return ret
	}
	return *o.ClockDiff
}

// GetClockDiffOk returns a tuple with the ClockDiff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetClockDiffOk() (*int64, bool) {
	if o == nil || IsNil(o.ClockDiff) {
		return nil, false
	}
	return o.ClockDiff, true
}

// HasClockDiff returns a boolean if a field has been set.
func (o *HostRecord) HasClockDiff() bool {
	if o != nil && !IsNil(o.ClockDiff) {
		return true
	}

	return false
}

// SetClockDiff gets a reference to the given int64 and assigns it to the ClockDiff field.
func (o *HostRecord) SetClockDiff(v int64) {
	o.ClockDiff = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *HostRecord) GetCluster() Cluster {
	if o == nil || IsNil(o.Cluster) {
		var ret Cluster
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetClusterOk() (*Cluster, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *HostRecord) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given Cluster and assigns it to the Cluster field.
func (o *HostRecord) SetCluster(v Cluster) {
	o.Cluster = &v
}

// GetCores returns the Cores field value if set, zero value otherwise.
func (o *HostRecord) GetCores() int64 {
	if o == nil || IsNil(o.Cores) {
		var ret int64
		return ret
	}
	return *o.Cores
}

// GetCoresOk returns a tuple with the Cores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetCoresOk() (*int64, bool) {
	if o == nil || IsNil(o.Cores) {
		return nil, false
	}
	return o.Cores, true
}

// HasCores returns a boolean if a field has been set.
func (o *HostRecord) HasCores() bool {
	if o != nil && !IsNil(o.Cores) {
		return true
	}

	return false
}

// SetCores gets a reference to the given int64 and assigns it to the Cores field.
func (o *HostRecord) SetCores(v int64) {
	o.Cores = &v
}

// GetCpuArch returns the CpuArch field value if set, zero value otherwise.
func (o *HostRecord) GetCpuArch() string {
	if o == nil || IsNil(o.CpuArch) {
		var ret string
		return ret
	}
	return *o.CpuArch
}

// GetCpuArchOk returns a tuple with the CpuArch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetCpuArchOk() (*string, bool) {
	if o == nil || IsNil(o.CpuArch) {
		return nil, false
	}
	return o.CpuArch, true
}

// HasCpuArch returns a boolean if a field has been set.
func (o *HostRecord) HasCpuArch() bool {
	if o != nil && !IsNil(o.CpuArch) {
		return true
	}

	return false
}

// SetCpuArch gets a reference to the given string and assigns it to the CpuArch field.
func (o *HostRecord) SetCpuArch(v string) {
	o.CpuArch = &v
}

// GetCpuModel returns the CpuModel field value if set, zero value otherwise.
func (o *HostRecord) GetCpuModel() string {
	if o == nil || IsNil(o.CpuModel) {
		var ret string
		return ret
	}
	return *o.CpuModel
}

// GetCpuModelOk returns a tuple with the CpuModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetCpuModelOk() (*string, bool) {
	if o == nil || IsNil(o.CpuModel) {
		return nil, false
	}
	return o.CpuModel, true
}

// HasCpuModel returns a boolean if a field has been set.
func (o *HostRecord) HasCpuModel() bool {
	if o != nil && !IsNil(o.CpuModel) {
		return true
	}

	return false
}

// SetCpuModel gets a reference to the given string and assigns it to the CpuModel field.
func (o *HostRecord) SetCpuModel(v string) {
	o.CpuModel = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *HostRecord) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *HostRecord) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *HostRecord) SetCreate(v time.Time) {
	o.Create = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *HostRecord) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *HostRecord) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *HostRecord) SetDescription(v string) {
	o.Description = &v
}

// GetDiskNum returns the DiskNum field value if set, zero value otherwise.
func (o *HostRecord) GetDiskNum() int64 {
	if o == nil || IsNil(o.DiskNum) {
		var ret int64
		return ret
	}
	return *o.DiskNum
}

// GetDiskNumOk returns a tuple with the DiskNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetDiskNumOk() (*int64, bool) {
	if o == nil || IsNil(o.DiskNum) {
		return nil, false
	}
	return o.DiskNum, true
}

// HasDiskNum returns a boolean if a field has been set.
func (o *HostRecord) HasDiskNum() bool {
	if o != nil && !IsNil(o.DiskNum) {
		return true
	}

	return false
}

// SetDiskNum gets a reference to the given int64 and assigns it to the DiskNum field.
func (o *HostRecord) SetDiskNum(v int64) {
	o.DiskNum = &v
}

// GetEnclosures returns the Enclosures field value if set, zero value otherwise.
func (o *HostRecord) GetEnclosures() []map[string]interface{} {
	if o == nil || IsNil(o.Enclosures) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Enclosures
}

// GetEnclosuresOk returns a tuple with the Enclosures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetEnclosuresOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Enclosures) {
		return nil, false
	}
	return o.Enclosures, true
}

// HasEnclosures returns a boolean if a field has been set.
func (o *HostRecord) HasEnclosures() bool {
	if o != nil && !IsNil(o.Enclosures) {
		return true
	}

	return false
}

// SetEnclosures gets a reference to the given []map[string]interface{} and assigns it to the Enclosures field.
func (o *HostRecord) SetEnclosures(v []map[string]interface{}) {
	o.Enclosures = v
}

// GetFcports returns the Fcports field value if set, zero value otherwise.
func (o *HostRecord) GetFcports() []FCPort {
	if o == nil || IsNil(o.Fcports) {
		var ret []FCPort
		return ret
	}
	return o.Fcports
}

// GetFcportsOk returns a tuple with the Fcports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetFcportsOk() ([]FCPort, bool) {
	if o == nil || IsNil(o.Fcports) {
		return nil, false
	}
	return o.Fcports, true
}

// HasFcports returns a boolean if a field has been set.
func (o *HostRecord) HasFcports() bool {
	if o != nil && !IsNil(o.Fcports) {
		return true
	}

	return false
}

// SetFcports gets a reference to the given []FCPort and assigns it to the Fcports field.
func (o *HostRecord) SetFcports(v []FCPort) {
	o.Fcports = v
}

// GetGatewayIps returns the GatewayIps field value if set, zero value otherwise.
func (o *HostRecord) GetGatewayIps() string {
	if o == nil || IsNil(o.GatewayIps) {
		var ret string
		return ret
	}
	return *o.GatewayIps
}

// GetGatewayIpsOk returns a tuple with the GatewayIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetGatewayIpsOk() (*string, bool) {
	if o == nil || IsNil(o.GatewayIps) {
		return nil, false
	}
	return o.GatewayIps, true
}

// HasGatewayIps returns a boolean if a field has been set.
func (o *HostRecord) HasGatewayIps() bool {
	if o != nil && !IsNil(o.GatewayIps) {
		return true
	}

	return false
}

// SetGatewayIps gets a reference to the given string and assigns it to the GatewayIps field.
func (o *HostRecord) SetGatewayIps(v string) {
	o.GatewayIps = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *HostRecord) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *HostRecord) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *HostRecord) SetId(v int64) {
	o.Id = &v
}

// GetIsMasterDb returns the IsMasterDb field value if set, zero value otherwise.
func (o *HostRecord) GetIsMasterDb() bool {
	if o == nil || IsNil(o.IsMasterDb) {
		var ret bool
		return ret
	}
	return *o.IsMasterDb
}

// GetIsMasterDbOk returns a tuple with the IsMasterDb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetIsMasterDbOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMasterDb) {
		return nil, false
	}
	return o.IsMasterDb, true
}

// HasIsMasterDb returns a boolean if a field has been set.
func (o *HostRecord) HasIsMasterDb() bool {
	if o != nil && !IsNil(o.IsMasterDb) {
		return true
	}

	return false
}

// SetIsMasterDb gets a reference to the given bool and assigns it to the IsMasterDb field.
func (o *HostRecord) SetIsMasterDb(v bool) {
	o.IsMasterDb = &v
}

// GetKvmStatus returns the KvmStatus field value if set, zero value otherwise.
func (o *HostRecord) GetKvmStatus() int64 {
	if o == nil || IsNil(o.KvmStatus) {
		var ret int64
		return ret
	}
	return *o.KvmStatus
}

// GetKvmStatusOk returns a tuple with the KvmStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetKvmStatusOk() (*int64, bool) {
	if o == nil || IsNil(o.KvmStatus) {
		return nil, false
	}
	return o.KvmStatus, true
}

// HasKvmStatus returns a boolean if a field has been set.
func (o *HostRecord) HasKvmStatus() bool {
	if o != nil && !IsNil(o.KvmStatus) {
		return true
	}

	return false
}

// SetKvmStatus gets a reference to the given int64 and assigns it to the KvmStatus field.
func (o *HostRecord) SetKvmStatus(v int64) {
	o.KvmStatus = &v
}

// GetMemoryKbyte returns the MemoryKbyte field value if set, zero value otherwise.
func (o *HostRecord) GetMemoryKbyte() int64 {
	if o == nil || IsNil(o.MemoryKbyte) {
		var ret int64
		return ret
	}
	return *o.MemoryKbyte
}

// GetMemoryKbyteOk returns a tuple with the MemoryKbyte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetMemoryKbyteOk() (*int64, bool) {
	if o == nil || IsNil(o.MemoryKbyte) {
		return nil, false
	}
	return o.MemoryKbyte, true
}

// HasMemoryKbyte returns a boolean if a field has been set.
func (o *HostRecord) HasMemoryKbyte() bool {
	if o != nil && !IsNil(o.MemoryKbyte) {
		return true
	}

	return false
}

// SetMemoryKbyte gets a reference to the given int64 and assigns it to the MemoryKbyte field.
func (o *HostRecord) SetMemoryKbyte(v int64) {
	o.MemoryKbyte = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *HostRecord) GetModel() string {
	if o == nil || IsNil(o.Model) {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetModelOk() (*string, bool) {
	if o == nil || IsNil(o.Model) {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *HostRecord) HasModel() bool {
	if o != nil && !IsNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *HostRecord) SetModel(v string) {
	o.Model = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *HostRecord) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *HostRecord) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *HostRecord) SetName(v string) {
	o.Name = &v
}

// GetNumaNodes returns the NumaNodes field value if set, zero value otherwise.
func (o *HostRecord) GetNumaNodes() string {
	if o == nil || IsNil(o.NumaNodes) {
		var ret string
		return ret
	}
	return *o.NumaNodes
}

// GetNumaNodesOk returns a tuple with the NumaNodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetNumaNodesOk() (*string, bool) {
	if o == nil || IsNil(o.NumaNodes) {
		return nil, false
	}
	return o.NumaNodes, true
}

// HasNumaNodes returns a boolean if a field has been set.
func (o *HostRecord) HasNumaNodes() bool {
	if o != nil && !IsNil(o.NumaNodes) {
		return true
	}

	return false
}

// SetNumaNodes gets a reference to the given string and assigns it to the NumaNodes field.
func (o *HostRecord) SetNumaNodes(v string) {
	o.NumaNodes = &v
}

// GetOs returns the Os field value if set, zero value otherwise.
func (o *HostRecord) GetOs() string {
	if o == nil || IsNil(o.Os) {
		var ret string
		return ret
	}
	return *o.Os
}

// GetOsOk returns a tuple with the Os field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetOsOk() (*string, bool) {
	if o == nil || IsNil(o.Os) {
		return nil, false
	}
	return o.Os, true
}

// HasOs returns a boolean if a field has been set.
func (o *HostRecord) HasOs() bool {
	if o != nil && !IsNil(o.Os) {
		return true
	}

	return false
}

// SetOs gets a reference to the given string and assigns it to the Os field.
func (o *HostRecord) SetOs(v string) {
	o.Os = &v
}

// GetOspCluster returns the OspCluster field value if set, zero value otherwise.
func (o *HostRecord) GetOspCluster() Cluster {
	if o == nil || IsNil(o.OspCluster) {
		var ret Cluster
		return ret
	}
	return *o.OspCluster
}

// GetOspClusterOk returns a tuple with the OspCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetOspClusterOk() (*Cluster, bool) {
	if o == nil || IsNil(o.OspCluster) {
		return nil, false
	}
	return o.OspCluster, true
}

// HasOspCluster returns a boolean if a field has been set.
func (o *HostRecord) HasOspCluster() bool {
	if o != nil && !IsNil(o.OspCluster) {
		return true
	}

	return false
}

// SetOspCluster gets a reference to the given Cluster and assigns it to the OspCluster field.
func (o *HostRecord) SetOspCluster(v Cluster) {
	o.OspCluster = &v
}

// GetOspClusterIp returns the OspClusterIp field value if set, zero value otherwise.
func (o *HostRecord) GetOspClusterIp() string {
	if o == nil || IsNil(o.OspClusterIp) {
		var ret string
		return ret
	}
	return *o.OspClusterIp
}

// GetOspClusterIpOk returns a tuple with the OspClusterIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetOspClusterIpOk() (*string, bool) {
	if o == nil || IsNil(o.OspClusterIp) {
		return nil, false
	}
	return o.OspClusterIp, true
}

// HasOspClusterIp returns a boolean if a field has been set.
func (o *HostRecord) HasOspClusterIp() bool {
	if o != nil && !IsNil(o.OspClusterIp) {
		return true
	}

	return false
}

// SetOspClusterIp gets a reference to the given string and assigns it to the OspClusterIp field.
func (o *HostRecord) SetOspClusterIp(v string) {
	o.OspClusterIp = &v
}

// GetOspGatewayIps returns the OspGatewayIps field value if set, zero value otherwise.
func (o *HostRecord) GetOspGatewayIps() string {
	if o == nil || IsNil(o.OspGatewayIps) {
		var ret string
		return ret
	}
	return *o.OspGatewayIps
}

// GetOspGatewayIpsOk returns a tuple with the OspGatewayIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetOspGatewayIpsOk() (*string, bool) {
	if o == nil || IsNil(o.OspGatewayIps) {
		return nil, false
	}
	return o.OspGatewayIps, true
}

// HasOspGatewayIps returns a boolean if a field has been set.
func (o *HostRecord) HasOspGatewayIps() bool {
	if o != nil && !IsNil(o.OspGatewayIps) {
		return true
	}

	return false
}

// SetOspGatewayIps gets a reference to the given string and assigns it to the OspGatewayIps field.
func (o *HostRecord) SetOspGatewayIps(v string) {
	o.OspGatewayIps = &v
}

// GetOspPlacementNode returns the OspPlacementNode field value if set, zero value otherwise.
func (o *HostRecord) GetOspPlacementNode() PlacementNode {
	if o == nil || IsNil(o.OspPlacementNode) {
		var ret PlacementNode
		return ret
	}
	return *o.OspPlacementNode
}

// GetOspPlacementNodeOk returns a tuple with the OspPlacementNode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetOspPlacementNodeOk() (*PlacementNode, bool) {
	if o == nil || IsNil(o.OspPlacementNode) {
		return nil, false
	}
	return o.OspPlacementNode, true
}

// HasOspPlacementNode returns a boolean if a field has been set.
func (o *HostRecord) HasOspPlacementNode() bool {
	if o != nil && !IsNil(o.OspPlacementNode) {
		return true
	}

	return false
}

// SetOspPlacementNode gets a reference to the given PlacementNode and assigns it to the OspPlacementNode field.
func (o *HostRecord) SetOspPlacementNode(v PlacementNode) {
	o.OspPlacementNode = &v
}

// GetOspZoneId returns the OspZoneId field value if set, zero value otherwise.
func (o *HostRecord) GetOspZoneId() int64 {
	if o == nil || IsNil(o.OspZoneId) {
		var ret int64
		return ret
	}
	return *o.OspZoneId
}

// GetOspZoneIdOk returns a tuple with the OspZoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetOspZoneIdOk() (*int64, bool) {
	if o == nil || IsNil(o.OspZoneId) {
		return nil, false
	}
	return o.OspZoneId, true
}

// HasOspZoneId returns a boolean if a field has been set.
func (o *HostRecord) HasOspZoneId() bool {
	if o != nil && !IsNil(o.OspZoneId) {
		return true
	}

	return false
}

// SetOspZoneId gets a reference to the given int64 and assigns it to the OspZoneId field.
func (o *HostRecord) SetOspZoneId(v int64) {
	o.OspZoneId = &v
}

// GetPlacementNode returns the PlacementNode field value if set, zero value otherwise.
func (o *HostRecord) GetPlacementNode() PlacementNode {
	if o == nil || IsNil(o.PlacementNode) {
		var ret PlacementNode
		return ret
	}
	return *o.PlacementNode
}

// GetPlacementNodeOk returns a tuple with the PlacementNode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetPlacementNodeOk() (*PlacementNode, bool) {
	if o == nil || IsNil(o.PlacementNode) {
		return nil, false
	}
	return o.PlacementNode, true
}

// HasPlacementNode returns a boolean if a field has been set.
func (o *HostRecord) HasPlacementNode() bool {
	if o != nil && !IsNil(o.PlacementNode) {
		return true
	}

	return false
}

// SetPlacementNode gets a reference to the given PlacementNode and assigns it to the PlacementNode field.
func (o *HostRecord) SetPlacementNode(v PlacementNode) {
	o.PlacementNode = &v
}

// GetPrivateIp returns the PrivateIp field value if set, zero value otherwise.
func (o *HostRecord) GetPrivateIp() string {
	if o == nil || IsNil(o.PrivateIp) {
		var ret string
		return ret
	}
	return *o.PrivateIp
}

// GetPrivateIpOk returns a tuple with the PrivateIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetPrivateIpOk() (*string, bool) {
	if o == nil || IsNil(o.PrivateIp) {
		return nil, false
	}
	return o.PrivateIp, true
}

// HasPrivateIp returns a boolean if a field has been set.
func (o *HostRecord) HasPrivateIp() bool {
	if o != nil && !IsNil(o.PrivateIp) {
		return true
	}

	return false
}

// SetPrivateIp gets a reference to the given string and assigns it to the PrivateIp field.
func (o *HostRecord) SetPrivateIp(v string) {
	o.PrivateIp = &v
}

// GetProtectionDomain returns the ProtectionDomain field value if set, zero value otherwise.
func (o *HostRecord) GetProtectionDomain() ProtectionDomainNestview {
	if o == nil || IsNil(o.ProtectionDomain) {
		var ret ProtectionDomainNestview
		return ret
	}
	return *o.ProtectionDomain
}

// GetProtectionDomainOk returns a tuple with the ProtectionDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetProtectionDomainOk() (*ProtectionDomainNestview, bool) {
	if o == nil || IsNil(o.ProtectionDomain) {
		return nil, false
	}
	return o.ProtectionDomain, true
}

// HasProtectionDomain returns a boolean if a field has been set.
func (o *HostRecord) HasProtectionDomain() bool {
	if o != nil && !IsNil(o.ProtectionDomain) {
		return true
	}

	return false
}

// SetProtectionDomain gets a reference to the given ProtectionDomainNestview and assigns it to the ProtectionDomain field.
func (o *HostRecord) SetProtectionDomain(v ProtectionDomainNestview) {
	o.ProtectionDomain = &v
}

// GetPublicIps returns the PublicIps field value if set, zero value otherwise.
func (o *HostRecord) GetPublicIps() string {
	if o == nil || IsNil(o.PublicIps) {
		var ret string
		return ret
	}
	return *o.PublicIps
}

// GetPublicIpsOk returns a tuple with the PublicIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetPublicIpsOk() (*string, bool) {
	if o == nil || IsNil(o.PublicIps) {
		return nil, false
	}
	return o.PublicIps, true
}

// HasPublicIps returns a boolean if a field has been set.
func (o *HostRecord) HasPublicIps() bool {
	if o != nil && !IsNil(o.PublicIps) {
		return true
	}

	return false
}

// SetPublicIps gets a reference to the given string and assigns it to the PublicIps field.
func (o *HostRecord) SetPublicIps(v string) {
	o.PublicIps = &v
}

// GetRack returns the Rack field value if set, zero value otherwise.
func (o *HostRecord) GetRack() string {
	if o == nil || IsNil(o.Rack) {
		var ret string
		return ret
	}
	return *o.Rack
}

// GetRackOk returns a tuple with the Rack field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetRackOk() (*string, bool) {
	if o == nil || IsNil(o.Rack) {
		return nil, false
	}
	return o.Rack, true
}

// HasRack returns a boolean if a field has been set.
func (o *HostRecord) HasRack() bool {
	if o != nil && !IsNil(o.Rack) {
		return true
	}

	return false
}

// SetRack gets a reference to the given string and assigns it to the Rack field.
func (o *HostRecord) SetRack(v string) {
	o.Rack = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *HostRecord) GetRoles() string {
	if o == nil || IsNil(o.Roles) {
		var ret string
		return ret
	}
	return *o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetRolesOk() (*string, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *HostRecord) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given string and assigns it to the Roles field.
func (o *HostRecord) SetRoles(v string) {
	o.Roles = &v
}

// GetRootDisk returns the RootDisk field value if set, zero value otherwise.
func (o *HostRecord) GetRootDisk() DiskNestview {
	if o == nil || IsNil(o.RootDisk) {
		var ret DiskNestview
		return ret
	}
	return *o.RootDisk
}

// GetRootDiskOk returns a tuple with the RootDisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetRootDiskOk() (*DiskNestview, bool) {
	if o == nil || IsNil(o.RootDisk) {
		return nil, false
	}
	return o.RootDisk, true
}

// HasRootDisk returns a boolean if a field has been set.
func (o *HostRecord) HasRootDisk() bool {
	if o != nil && !IsNil(o.RootDisk) {
		return true
	}

	return false
}

// SetRootDisk gets a reference to the given DiskNestview and assigns it to the RootDisk field.
func (o *HostRecord) SetRootDisk(v DiskNestview) {
	o.RootDisk = &v
}

// GetSerial returns the Serial field value if set, zero value otherwise.
func (o *HostRecord) GetSerial() string {
	if o == nil || IsNil(o.Serial) {
		var ret string
		return ret
	}
	return *o.Serial
}

// GetSerialOk returns a tuple with the Serial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetSerialOk() (*string, bool) {
	if o == nil || IsNil(o.Serial) {
		return nil, false
	}
	return o.Serial, true
}

// HasSerial returns a boolean if a field has been set.
func (o *HostRecord) HasSerial() bool {
	if o != nil && !IsNil(o.Serial) {
		return true
	}

	return false
}

// SetSerial gets a reference to the given string and assigns it to the Serial field.
func (o *HostRecord) SetSerial(v string) {
	o.Serial = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *HostRecord) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *HostRecord) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *HostRecord) SetStatus(v string) {
	o.Status = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *HostRecord) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *HostRecord) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *HostRecord) SetType(v string) {
	o.Type = &v
}

// GetUp returns the Up field value if set, zero value otherwise.
func (o *HostRecord) GetUp() bool {
	if o == nil || IsNil(o.Up) {
		var ret bool
		return ret
	}
	return *o.Up
}

// GetUpOk returns a tuple with the Up field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetUpOk() (*bool, bool) {
	if o == nil || IsNil(o.Up) {
		return nil, false
	}
	return o.Up, true
}

// HasUp returns a boolean if a field has been set.
func (o *HostRecord) HasUp() bool {
	if o != nil && !IsNil(o.Up) {
		return true
	}

	return false
}

// SetUp gets a reference to the given bool and assigns it to the Up field.
func (o *HostRecord) SetUp(v bool) {
	o.Up = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *HostRecord) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *HostRecord) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *HostRecord) SetUpdate(v time.Time) {
	o.Update = &v
}

// GetUptime returns the Uptime field value if set, zero value otherwise.
func (o *HostRecord) GetUptime() time.Time {
	if o == nil || IsNil(o.Uptime) {
		var ret time.Time
		return ret
	}
	return *o.Uptime
}

// GetUptimeOk returns a tuple with the Uptime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetUptimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Uptime) {
		return nil, false
	}
	return o.Uptime, true
}

// HasUptime returns a boolean if a field has been set.
func (o *HostRecord) HasUptime() bool {
	if o != nil && !IsNil(o.Uptime) {
		return true
	}

	return false
}

// SetUptime gets a reference to the given time.Time and assigns it to the Uptime field.
func (o *HostRecord) SetUptime(v time.Time) {
	o.Uptime = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *HostRecord) GetVendor() string {
	if o == nil || IsNil(o.Vendor) {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetVendorOk() (*string, bool) {
	if o == nil || IsNil(o.Vendor) {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *HostRecord) HasVendor() bool {
	if o != nil && !IsNil(o.Vendor) {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *HostRecord) SetVendor(v string) {
	o.Vendor = &v
}

// GetSamples returns the Samples field value if set, zero value otherwise.
func (o *HostRecord) GetSamples() []HostStat {
	if o == nil || IsNil(o.Samples) {
		var ret []HostStat
		return ret
	}
	return o.Samples
}

// GetSamplesOk returns a tuple with the Samples field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRecord) GetSamplesOk() ([]HostStat, bool) {
	if o == nil || IsNil(o.Samples) {
		return nil, false
	}
	return o.Samples, true
}

// HasSamples returns a boolean if a field has been set.
func (o *HostRecord) HasSamples() bool {
	if o != nil && !IsNil(o.Samples) {
		return true
	}

	return false
}

// SetSamples gets a reference to the given []HostStat and assigns it to the Samples field.
func (o *HostRecord) SetSamples(v []HostStat) {
	o.Samples = v
}

func (o HostRecord) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HostRecord) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActionStatus) {
		toSerialize["action_status"] = o.ActionStatus
	}
	toSerialize["admin_ip"] = o.AdminIp
	if !IsNil(o.AdminVip) {
		toSerialize["admin_vip"] = o.AdminVip
	}
	if !IsNil(o.ClockDiff) {
		toSerialize["clock_diff"] = o.ClockDiff
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Cores) {
		toSerialize["cores"] = o.Cores
	}
	if !IsNil(o.CpuArch) {
		toSerialize["cpu_arch"] = o.CpuArch
	}
	if !IsNil(o.CpuModel) {
		toSerialize["cpu_model"] = o.CpuModel
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DiskNum) {
		toSerialize["disk_num"] = o.DiskNum
	}
	if !IsNil(o.Enclosures) {
		toSerialize["enclosures"] = o.Enclosures
	}
	if !IsNil(o.Fcports) {
		toSerialize["fcports"] = o.Fcports
	}
	if !IsNil(o.GatewayIps) {
		toSerialize["gateway_ips"] = o.GatewayIps
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IsMasterDb) {
		toSerialize["is_master_db"] = o.IsMasterDb
	}
	if !IsNil(o.KvmStatus) {
		toSerialize["kvm_status"] = o.KvmStatus
	}
	if !IsNil(o.MemoryKbyte) {
		toSerialize["memory_kbyte"] = o.MemoryKbyte
	}
	if !IsNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NumaNodes) {
		toSerialize["numa_nodes"] = o.NumaNodes
	}
	if !IsNil(o.Os) {
		toSerialize["os"] = o.Os
	}
	if !IsNil(o.OspCluster) {
		toSerialize["osp_cluster"] = o.OspCluster
	}
	if !IsNil(o.OspClusterIp) {
		toSerialize["osp_cluster_ip"] = o.OspClusterIp
	}
	if !IsNil(o.OspGatewayIps) {
		toSerialize["osp_gateway_ips"] = o.OspGatewayIps
	}
	if !IsNil(o.OspPlacementNode) {
		toSerialize["osp_placement_node"] = o.OspPlacementNode
	}
	if !IsNil(o.OspZoneId) {
		toSerialize["osp_zone_id"] = o.OspZoneId
	}
	if !IsNil(o.PlacementNode) {
		toSerialize["placement_node"] = o.PlacementNode
	}
	if !IsNil(o.PrivateIp) {
		toSerialize["private_ip"] = o.PrivateIp
	}
	if !IsNil(o.ProtectionDomain) {
		toSerialize["protection_domain"] = o.ProtectionDomain
	}
	if !IsNil(o.PublicIps) {
		toSerialize["public_ips"] = o.PublicIps
	}
	if !IsNil(o.Rack) {
		toSerialize["rack"] = o.Rack
	}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	if !IsNil(o.RootDisk) {
		toSerialize["root_disk"] = o.RootDisk
	}
	if !IsNil(o.Serial) {
		toSerialize["serial"] = o.Serial
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Up) {
		toSerialize["up"] = o.Up
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	if !IsNil(o.Uptime) {
		toSerialize["uptime"] = o.Uptime
	}
	if !IsNil(o.Vendor) {
		toSerialize["vendor"] = o.Vendor
	}
	if !IsNil(o.Samples) {
		toSerialize["samples"] = o.Samples
	}
	return toSerialize, nil
}

func (o *HostRecord) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"admin_ip",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHostRecord := _HostRecord{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHostRecord)

	if err != nil {
		return err
	}

	*o = HostRecord(varHostRecord)

	return err
}

type NullableHostRecord struct {
	value *HostRecord
	isSet bool
}

func (v NullableHostRecord) Get() *HostRecord {
	return v.value
}

func (v *NullableHostRecord) Set(val *HostRecord) {
	v.value = val
	v.isSet = true
}

func (v NullableHostRecord) IsSet() bool {
	return v.isSet
}

func (v *NullableHostRecord) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHostRecord(val *HostRecord) *NullableHostRecord {
	return &NullableHostRecord{value: val, isSet: true}
}

func (v NullableHostRecord) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHostRecord) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


