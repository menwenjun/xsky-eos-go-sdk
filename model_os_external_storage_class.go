/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the OSExternalStorageClass type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OSExternalStorageClass{}

// OSExternalStorageClass OSExternalStorageClass is the model of os external storage class
type OSExternalStorageClass struct {
	Create *time.Time `json:"Create,omitempty"`
	ClassId *string `json:"class_id,omitempty"`
	ClassStatus *string `json:"class_status,omitempty"`
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	Description *string `json:"description,omitempty"`
	ExternalStoragePlatforms []OSExternalStoragePlatform `json:"external_storage_platforms,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	OsPolicy *ObjectStoragePolicy `json:"os_policy,omitempty"`
	OsPolicyId *int64 `json:"os_policy_id,omitempty"`
	Platform *string `json:"platform,omitempty"`
	PlatformType *string `json:"platform_type,omitempty"`
	PrefixEnabled *bool `json:"prefix_enabled,omitempty"`
	Status *string `json:"status,omitempty"`
	StoragePattern []string `json:"storage_pattern,omitempty"`
}

// NewOSExternalStorageClass instantiates a new OSExternalStorageClass object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOSExternalStorageClass() *OSExternalStorageClass {
	this := OSExternalStorageClass{}
	return &this
}

// NewOSExternalStorageClassWithDefaults instantiates a new OSExternalStorageClass object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOSExternalStorageClassWithDefaults() *OSExternalStorageClass {
	this := OSExternalStorageClass{}
	return &this
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *OSExternalStorageClass) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStorageClass) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *OSExternalStorageClass) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *OSExternalStorageClass) SetCreate(v time.Time) {
	o.Create = &v
}

// GetClassId returns the ClassId field value if set, zero value otherwise.
func (o *OSExternalStorageClass) GetClassId() string {
	if o == nil || IsNil(o.ClassId) {
		var ret string
		return ret
	}
	return *o.ClassId
}

// GetClassIdOk returns a tuple with the ClassId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStorageClass) GetClassIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClassId) {
		return nil, false
	}
	return o.ClassId, true
}

// HasClassId returns a boolean if a field has been set.
func (o *OSExternalStorageClass) HasClassId() bool {
	if o != nil && !IsNil(o.ClassId) {
		return true
	}

	return false
}

// SetClassId gets a reference to the given string and assigns it to the ClassId field.
func (o *OSExternalStorageClass) SetClassId(v string) {
	o.ClassId = &v
}

// GetClassStatus returns the ClassStatus field value if set, zero value otherwise.
func (o *OSExternalStorageClass) GetClassStatus() string {
	if o == nil || IsNil(o.ClassStatus) {
		var ret string
		return ret
	}
	return *o.ClassStatus
}

// GetClassStatusOk returns a tuple with the ClassStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStorageClass) GetClassStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ClassStatus) {
		return nil, false
	}
	return o.ClassStatus, true
}

// HasClassStatus returns a boolean if a field has been set.
func (o *OSExternalStorageClass) HasClassStatus() bool {
	if o != nil && !IsNil(o.ClassStatus) {
		return true
	}

	return false
}

// SetClassStatus gets a reference to the given string and assigns it to the ClassStatus field.
func (o *OSExternalStorageClass) SetClassStatus(v string) {
	o.ClassStatus = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *OSExternalStorageClass) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStorageClass) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *OSExternalStorageClass) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *OSExternalStorageClass) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *OSExternalStorageClass) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStorageClass) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *OSExternalStorageClass) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *OSExternalStorageClass) SetDescription(v string) {
	o.Description = &v
}

// GetExternalStoragePlatforms returns the ExternalStoragePlatforms field value if set, zero value otherwise.
func (o *OSExternalStorageClass) GetExternalStoragePlatforms() []OSExternalStoragePlatform {
	if o == nil || IsNil(o.ExternalStoragePlatforms) {
		var ret []OSExternalStoragePlatform
		return ret
	}
	return o.ExternalStoragePlatforms
}

// GetExternalStoragePlatformsOk returns a tuple with the ExternalStoragePlatforms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStorageClass) GetExternalStoragePlatformsOk() ([]OSExternalStoragePlatform, bool) {
	if o == nil || IsNil(o.ExternalStoragePlatforms) {
		return nil, false
	}
	return o.ExternalStoragePlatforms, true
}

// HasExternalStoragePlatforms returns a boolean if a field has been set.
func (o *OSExternalStorageClass) HasExternalStoragePlatforms() bool {
	if o != nil && !IsNil(o.ExternalStoragePlatforms) {
		return true
	}

	return false
}

// SetExternalStoragePlatforms gets a reference to the given []OSExternalStoragePlatform and assigns it to the ExternalStoragePlatforms field.
func (o *OSExternalStorageClass) SetExternalStoragePlatforms(v []OSExternalStoragePlatform) {
	o.ExternalStoragePlatforms = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OSExternalStorageClass) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStorageClass) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OSExternalStorageClass) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *OSExternalStorageClass) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OSExternalStorageClass) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStorageClass) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OSExternalStorageClass) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OSExternalStorageClass) SetName(v string) {
	o.Name = &v
}

// GetOsPolicy returns the OsPolicy field value if set, zero value otherwise.
func (o *OSExternalStorageClass) GetOsPolicy() ObjectStoragePolicy {
	if o == nil || IsNil(o.OsPolicy) {
		var ret ObjectStoragePolicy
		return ret
	}
	return *o.OsPolicy
}

// GetOsPolicyOk returns a tuple with the OsPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStorageClass) GetOsPolicyOk() (*ObjectStoragePolicy, bool) {
	if o == nil || IsNil(o.OsPolicy) {
		return nil, false
	}
	return o.OsPolicy, true
}

// HasOsPolicy returns a boolean if a field has been set.
func (o *OSExternalStorageClass) HasOsPolicy() bool {
	if o != nil && !IsNil(o.OsPolicy) {
		return true
	}

	return false
}

// SetOsPolicy gets a reference to the given ObjectStoragePolicy and assigns it to the OsPolicy field.
func (o *OSExternalStorageClass) SetOsPolicy(v ObjectStoragePolicy) {
	o.OsPolicy = &v
}

// GetOsPolicyId returns the OsPolicyId field value if set, zero value otherwise.
func (o *OSExternalStorageClass) GetOsPolicyId() int64 {
	if o == nil || IsNil(o.OsPolicyId) {
		var ret int64
		return ret
	}
	return *o.OsPolicyId
}

// GetOsPolicyIdOk returns a tuple with the OsPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStorageClass) GetOsPolicyIdOk() (*int64, bool) {
	if o == nil || IsNil(o.OsPolicyId) {
		return nil, false
	}
	return o.OsPolicyId, true
}

// HasOsPolicyId returns a boolean if a field has been set.
func (o *OSExternalStorageClass) HasOsPolicyId() bool {
	if o != nil && !IsNil(o.OsPolicyId) {
		return true
	}

	return false
}

// SetOsPolicyId gets a reference to the given int64 and assigns it to the OsPolicyId field.
func (o *OSExternalStorageClass) SetOsPolicyId(v int64) {
	o.OsPolicyId = &v
}

// GetPlatform returns the Platform field value if set, zero value otherwise.
func (o *OSExternalStorageClass) GetPlatform() string {
	if o == nil || IsNil(o.Platform) {
		var ret string
		return ret
	}
	return *o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStorageClass) GetPlatformOk() (*string, bool) {
	if o == nil || IsNil(o.Platform) {
		return nil, false
	}
	return o.Platform, true
}

// HasPlatform returns a boolean if a field has been set.
func (o *OSExternalStorageClass) HasPlatform() bool {
	if o != nil && !IsNil(o.Platform) {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given string and assigns it to the Platform field.
func (o *OSExternalStorageClass) SetPlatform(v string) {
	o.Platform = &v
}

// GetPlatformType returns the PlatformType field value if set, zero value otherwise.
func (o *OSExternalStorageClass) GetPlatformType() string {
	if o == nil || IsNil(o.PlatformType) {
		var ret string
		return ret
	}
	return *o.PlatformType
}

// GetPlatformTypeOk returns a tuple with the PlatformType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStorageClass) GetPlatformTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PlatformType) {
		return nil, false
	}
	return o.PlatformType, true
}

// HasPlatformType returns a boolean if a field has been set.
func (o *OSExternalStorageClass) HasPlatformType() bool {
	if o != nil && !IsNil(o.PlatformType) {
		return true
	}

	return false
}

// SetPlatformType gets a reference to the given string and assigns it to the PlatformType field.
func (o *OSExternalStorageClass) SetPlatformType(v string) {
	o.PlatformType = &v
}

// GetPrefixEnabled returns the PrefixEnabled field value if set, zero value otherwise.
func (o *OSExternalStorageClass) GetPrefixEnabled() bool {
	if o == nil || IsNil(o.PrefixEnabled) {
		var ret bool
		return ret
	}
	return *o.PrefixEnabled
}

// GetPrefixEnabledOk returns a tuple with the PrefixEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStorageClass) GetPrefixEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.PrefixEnabled) {
		return nil, false
	}
	return o.PrefixEnabled, true
}

// HasPrefixEnabled returns a boolean if a field has been set.
func (o *OSExternalStorageClass) HasPrefixEnabled() bool {
	if o != nil && !IsNil(o.PrefixEnabled) {
		return true
	}

	return false
}

// SetPrefixEnabled gets a reference to the given bool and assigns it to the PrefixEnabled field.
func (o *OSExternalStorageClass) SetPrefixEnabled(v bool) {
	o.PrefixEnabled = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *OSExternalStorageClass) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStorageClass) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *OSExternalStorageClass) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *OSExternalStorageClass) SetStatus(v string) {
	o.Status = &v
}

// GetStoragePattern returns the StoragePattern field value if set, zero value otherwise.
func (o *OSExternalStorageClass) GetStoragePattern() []string {
	if o == nil || IsNil(o.StoragePattern) {
		var ret []string
		return ret
	}
	return o.StoragePattern
}

// GetStoragePatternOk returns a tuple with the StoragePattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStorageClass) GetStoragePatternOk() ([]string, bool) {
	if o == nil || IsNil(o.StoragePattern) {
		return nil, false
	}
	return o.StoragePattern, true
}

// HasStoragePattern returns a boolean if a field has been set.
func (o *OSExternalStorageClass) HasStoragePattern() bool {
	if o != nil && !IsNil(o.StoragePattern) {
		return true
	}

	return false
}

// SetStoragePattern gets a reference to the given []string and assigns it to the StoragePattern field.
func (o *OSExternalStorageClass) SetStoragePattern(v []string) {
	o.StoragePattern = v
}

func (o OSExternalStorageClass) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OSExternalStorageClass) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Create) {
		toSerialize["Create"] = o.Create
	}
	if !IsNil(o.ClassId) {
		toSerialize["class_id"] = o.ClassId
	}
	if !IsNil(o.ClassStatus) {
		toSerialize["class_status"] = o.ClassStatus
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.ExternalStoragePlatforms) {
		toSerialize["external_storage_platforms"] = o.ExternalStoragePlatforms
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OsPolicy) {
		toSerialize["os_policy"] = o.OsPolicy
	}
	if !IsNil(o.OsPolicyId) {
		toSerialize["os_policy_id"] = o.OsPolicyId
	}
	if !IsNil(o.Platform) {
		toSerialize["platform"] = o.Platform
	}
	if !IsNil(o.PlatformType) {
		toSerialize["platform_type"] = o.PlatformType
	}
	if !IsNil(o.PrefixEnabled) {
		toSerialize["prefix_enabled"] = o.PrefixEnabled
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StoragePattern) {
		toSerialize["storage_pattern"] = o.StoragePattern
	}
	return toSerialize, nil
}

type NullableOSExternalStorageClass struct {
	value *OSExternalStorageClass
	isSet bool
}

func (v NullableOSExternalStorageClass) Get() *OSExternalStorageClass {
	return v.value
}

func (v *NullableOSExternalStorageClass) Set(val *OSExternalStorageClass) {
	v.value = val
	v.isSet = true
}

func (v NullableOSExternalStorageClass) IsSet() bool {
	return v.isSet
}

func (v *NullableOSExternalStorageClass) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSExternalStorageClass(val *OSExternalStorageClass) *NullableOSExternalStorageClass {
	return &NullableOSExternalStorageClass{value: val, isSet: true}
}

func (v NullableOSExternalStorageClass) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSExternalStorageClass) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


