/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CloudVolumeResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloudVolumeResp{}

// CloudVolumeResp struct for CloudVolumeResp
type CloudVolumeResp struct {
	CloudVolume *CloudVolume `json:"cloud_volume,omitempty"`
}

// NewCloudVolumeResp instantiates a new CloudVolumeResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudVolumeResp() *CloudVolumeResp {
	this := CloudVolumeResp{}
	return &this
}

// NewCloudVolumeRespWithDefaults instantiates a new CloudVolumeResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudVolumeRespWithDefaults() *CloudVolumeResp {
	this := CloudVolumeResp{}
	return &this
}

// GetCloudVolume returns the CloudVolume field value if set, zero value otherwise.
func (o *CloudVolumeResp) GetCloudVolume() CloudVolume {
	if o == nil || IsNil(o.CloudVolume) {
		var ret CloudVolume
		return ret
	}
	return *o.CloudVolume
}

// GetCloudVolumeOk returns a tuple with the CloudVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudVolumeResp) GetCloudVolumeOk() (*CloudVolume, bool) {
	if o == nil || IsNil(o.CloudVolume) {
		return nil, false
	}
	return o.CloudVolume, true
}

// HasCloudVolume returns a boolean if a field has been set.
func (o *CloudVolumeResp) HasCloudVolume() bool {
	if o != nil && !IsNil(o.CloudVolume) {
		return true
	}

	return false
}

// SetCloudVolume gets a reference to the given CloudVolume and assigns it to the CloudVolume field.
func (o *CloudVolumeResp) SetCloudVolume(v CloudVolume) {
	o.CloudVolume = &v
}

func (o CloudVolumeResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudVolumeResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CloudVolume) {
		toSerialize["cloud_volume"] = o.CloudVolume
	}
	return toSerialize, nil
}

type NullableCloudVolumeResp struct {
	value *CloudVolumeResp
	isSet bool
}

func (v NullableCloudVolumeResp) Get() *CloudVolumeResp {
	return v.value
}

func (v *NullableCloudVolumeResp) Set(val *CloudVolumeResp) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudVolumeResp) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudVolumeResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudVolumeResp(val *CloudVolumeResp) *NullableCloudVolumeResp {
	return &NullableCloudVolumeResp{value: val, isSet: true}
}

func (v NullableCloudVolumeResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudVolumeResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


