/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OspMetadataClusterSetSpaceUsageFactorReqOspMetadataCluster type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OspMetadataClusterSetSpaceUsageFactorReqOspMetadataCluster{}

// OspMetadataClusterSetSpaceUsageFactorReqOspMetadataCluster struct for OspMetadataClusterSetSpaceUsageFactorReqOspMetadataCluster
type OspMetadataClusterSetSpaceUsageFactorReqOspMetadataCluster struct {
	SpaceUsageFactor *float64 `json:"space_usage_factor,omitempty"`
}

// NewOspMetadataClusterSetSpaceUsageFactorReqOspMetadataCluster instantiates a new OspMetadataClusterSetSpaceUsageFactorReqOspMetadataCluster object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOspMetadataClusterSetSpaceUsageFactorReqOspMetadataCluster() *OspMetadataClusterSetSpaceUsageFactorReqOspMetadataCluster {
	this := OspMetadataClusterSetSpaceUsageFactorReqOspMetadataCluster{}
	return &this
}

// NewOspMetadataClusterSetSpaceUsageFactorReqOspMetadataClusterWithDefaults instantiates a new OspMetadataClusterSetSpaceUsageFactorReqOspMetadataCluster object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOspMetadataClusterSetSpaceUsageFactorReqOspMetadataClusterWithDefaults() *OspMetadataClusterSetSpaceUsageFactorReqOspMetadataCluster {
	this := OspMetadataClusterSetSpaceUsageFactorReqOspMetadataCluster{}
	return &this
}

// GetSpaceUsageFactor returns the SpaceUsageFactor field value if set, zero value otherwise.
func (o *OspMetadataClusterSetSpaceUsageFactorReqOspMetadataCluster) GetSpaceUsageFactor() float64 {
	if o == nil || IsNil(o.SpaceUsageFactor) {
		var ret float64
		return ret
	}
	return *o.SpaceUsageFactor
}

// GetSpaceUsageFactorOk returns a tuple with the SpaceUsageFactor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataClusterSetSpaceUsageFactorReqOspMetadataCluster) GetSpaceUsageFactorOk() (*float64, bool) {
	if o == nil || IsNil(o.SpaceUsageFactor) {
		return nil, false
	}
	return o.SpaceUsageFactor, true
}

// HasSpaceUsageFactor returns a boolean if a field has been set.
func (o *OspMetadataClusterSetSpaceUsageFactorReqOspMetadataCluster) HasSpaceUsageFactor() bool {
	if o != nil && !IsNil(o.SpaceUsageFactor) {
		return true
	}

	return false
}

// SetSpaceUsageFactor gets a reference to the given float64 and assigns it to the SpaceUsageFactor field.
func (o *OspMetadataClusterSetSpaceUsageFactorReqOspMetadataCluster) SetSpaceUsageFactor(v float64) {
	o.SpaceUsageFactor = &v
}

func (o OspMetadataClusterSetSpaceUsageFactorReqOspMetadataCluster) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OspMetadataClusterSetSpaceUsageFactorReqOspMetadataCluster) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SpaceUsageFactor) {
		toSerialize["space_usage_factor"] = o.SpaceUsageFactor
	}
	return toSerialize, nil
}

type NullableOspMetadataClusterSetSpaceUsageFactorReqOspMetadataCluster struct {
	value *OspMetadataClusterSetSpaceUsageFactorReqOspMetadataCluster
	isSet bool
}

func (v NullableOspMetadataClusterSetSpaceUsageFactorReqOspMetadataCluster) Get() *OspMetadataClusterSetSpaceUsageFactorReqOspMetadataCluster {
	return v.value
}

func (v *NullableOspMetadataClusterSetSpaceUsageFactorReqOspMetadataCluster) Set(val *OspMetadataClusterSetSpaceUsageFactorReqOspMetadataCluster) {
	v.value = val
	v.isSet = true
}

func (v NullableOspMetadataClusterSetSpaceUsageFactorReqOspMetadataCluster) IsSet() bool {
	return v.isSet
}

func (v *NullableOspMetadataClusterSetSpaceUsageFactorReqOspMetadataCluster) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOspMetadataClusterSetSpaceUsageFactorReqOspMetadataCluster(val *OspMetadataClusterSetSpaceUsageFactorReqOspMetadataCluster) *NullableOspMetadataClusterSetSpaceUsageFactorReqOspMetadataCluster {
	return &NullableOspMetadataClusterSetSpaceUsageFactorReqOspMetadataCluster{value: val, isSet: true}
}

func (v NullableOspMetadataClusterSetSpaceUsageFactorReqOspMetadataCluster) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOspMetadataClusterSetSpaceUsageFactorReqOspMetadataCluster) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


