/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DpBackupCluster type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DpBackupCluster{}

// DpBackupCluster DpBackupCluster is a cluster stored on a site
type DpBackupCluster struct {
	FsId *string `json:"fs_id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewDpBackupCluster instantiates a new DpBackupCluster object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDpBackupCluster() *DpBackupCluster {
	this := DpBackupCluster{}
	return &this
}

// NewDpBackupClusterWithDefaults instantiates a new DpBackupCluster object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDpBackupClusterWithDefaults() *DpBackupCluster {
	this := DpBackupCluster{}
	return &this
}

// GetFsId returns the FsId field value if set, zero value otherwise.
func (o *DpBackupCluster) GetFsId() string {
	if o == nil || IsNil(o.FsId) {
		var ret string
		return ret
	}
	return *o.FsId
}

// GetFsIdOk returns a tuple with the FsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpBackupCluster) GetFsIdOk() (*string, bool) {
	if o == nil || IsNil(o.FsId) {
		return nil, false
	}
	return o.FsId, true
}

// HasFsId returns a boolean if a field has been set.
func (o *DpBackupCluster) HasFsId() bool {
	if o != nil && !IsNil(o.FsId) {
		return true
	}

	return false
}

// SetFsId gets a reference to the given string and assigns it to the FsId field.
func (o *DpBackupCluster) SetFsId(v string) {
	o.FsId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DpBackupCluster) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpBackupCluster) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DpBackupCluster) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DpBackupCluster) SetName(v string) {
	o.Name = &v
}

func (o DpBackupCluster) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DpBackupCluster) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FsId) {
		toSerialize["fs_id"] = o.FsId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableDpBackupCluster struct {
	value *DpBackupCluster
	isSet bool
}

func (v NullableDpBackupCluster) Get() *DpBackupCluster {
	return v.value
}

func (v *NullableDpBackupCluster) Set(val *DpBackupCluster) {
	v.value = val
	v.isSet = true
}

func (v NullableDpBackupCluster) IsSet() bool {
	return v.isSet
}

func (v *NullableDpBackupCluster) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDpBackupCluster(val *DpBackupCluster) *NullableDpBackupCluster {
	return &NullableDpBackupCluster{value: val, isSet: true}
}

func (v NullableDpBackupCluster) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDpBackupCluster) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


