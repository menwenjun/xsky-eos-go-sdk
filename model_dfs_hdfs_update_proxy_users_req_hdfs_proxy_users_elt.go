/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt{}

// DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt struct for DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt
type DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt struct {
	// host node that allows access to hdfs through proxy
	Host *string `json:"host,omitempty"`
	// proxy user id
	Id int64 `json:"id"`
	// proxy user name of hdfs
	ProxyUserName *string `json:"proxy_user_name,omitempty"`
	// users allowed to proxy
	User *string `json:"user,omitempty"`
	// users group allowed to proxy
	UserGroup *string `json:"user_group,omitempty"`
}

type _DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt

// NewDfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt instantiates a new DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt(id int64) *DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt {
	this := DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt{}
	this.Id = id
	return &this
}

// NewDfsHdfsUpdateProxyUsersReqHdfsProxyUsersEltWithDefaults instantiates a new DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsHdfsUpdateProxyUsersReqHdfsProxyUsersEltWithDefaults() *DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt {
	this := DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt{}
	return &this
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt) GetHost() string {
	if o == nil || IsNil(o.Host) {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt) GetHostOk() (*string, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt) HasHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt) SetHost(v string) {
	o.Host = &v
}

// GetId returns the Id field value
func (o *DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt) SetId(v int64) {
	o.Id = v
}

// GetProxyUserName returns the ProxyUserName field value if set, zero value otherwise.
func (o *DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt) GetProxyUserName() string {
	if o == nil || IsNil(o.ProxyUserName) {
		var ret string
		return ret
	}
	return *o.ProxyUserName
}

// GetProxyUserNameOk returns a tuple with the ProxyUserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt) GetProxyUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProxyUserName) {
		return nil, false
	}
	return o.ProxyUserName, true
}

// HasProxyUserName returns a boolean if a field has been set.
func (o *DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt) HasProxyUserName() bool {
	if o != nil && !IsNil(o.ProxyUserName) {
		return true
	}

	return false
}

// SetProxyUserName gets a reference to the given string and assigns it to the ProxyUserName field.
func (o *DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt) SetProxyUserName(v string) {
	o.ProxyUserName = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt) GetUser() string {
	if o == nil || IsNil(o.User) {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt) GetUserOk() (*string, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt) SetUser(v string) {
	o.User = &v
}

// GetUserGroup returns the UserGroup field value if set, zero value otherwise.
func (o *DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt) GetUserGroup() string {
	if o == nil || IsNil(o.UserGroup) {
		var ret string
		return ret
	}
	return *o.UserGroup
}

// GetUserGroupOk returns a tuple with the UserGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt) GetUserGroupOk() (*string, bool) {
	if o == nil || IsNil(o.UserGroup) {
		return nil, false
	}
	return o.UserGroup, true
}

// HasUserGroup returns a boolean if a field has been set.
func (o *DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt) HasUserGroup() bool {
	if o != nil && !IsNil(o.UserGroup) {
		return true
	}

	return false
}

// SetUserGroup gets a reference to the given string and assigns it to the UserGroup field.
func (o *DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt) SetUserGroup(v string) {
	o.UserGroup = &v
}

func (o DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	toSerialize["id"] = o.Id
	if !IsNil(o.ProxyUserName) {
		toSerialize["proxy_user_name"] = o.ProxyUserName
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.UserGroup) {
		toSerialize["user_group"] = o.UserGroup
	}
	return toSerialize, nil
}

func (o *DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt := _DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt)

	if err != nil {
		return err
	}

	*o = DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt(varDfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt)

	return err
}

type NullableDfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt struct {
	value *DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt
	isSet bool
}

func (v NullableDfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt) Get() *DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt {
	return v.value
}

func (v *NullableDfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt) Set(val *DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt(val *DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt) *NullableDfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt {
	return &NullableDfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt{value: val, isSet: true}
}

func (v NullableDfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


