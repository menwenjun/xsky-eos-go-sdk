/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DNSLoadBalancePoliciesResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DNSLoadBalancePoliciesResp{}

// DNSLoadBalancePoliciesResp struct for DNSLoadBalancePoliciesResp
type DNSLoadBalancePoliciesResp struct {
	// dns load balance policy list
	DnsLoadBalancePolicies []DNSLoadBalancePolicy `json:"dns_load_balance_policies,omitempty"`
}

// NewDNSLoadBalancePoliciesResp instantiates a new DNSLoadBalancePoliciesResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDNSLoadBalancePoliciesResp() *DNSLoadBalancePoliciesResp {
	this := DNSLoadBalancePoliciesResp{}
	return &this
}

// NewDNSLoadBalancePoliciesRespWithDefaults instantiates a new DNSLoadBalancePoliciesResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDNSLoadBalancePoliciesRespWithDefaults() *DNSLoadBalancePoliciesResp {
	this := DNSLoadBalancePoliciesResp{}
	return &this
}

// GetDnsLoadBalancePolicies returns the DnsLoadBalancePolicies field value if set, zero value otherwise.
func (o *DNSLoadBalancePoliciesResp) GetDnsLoadBalancePolicies() []DNSLoadBalancePolicy {
	if o == nil || IsNil(o.DnsLoadBalancePolicies) {
		var ret []DNSLoadBalancePolicy
		return ret
	}
	return o.DnsLoadBalancePolicies
}

// GetDnsLoadBalancePoliciesOk returns a tuple with the DnsLoadBalancePolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DNSLoadBalancePoliciesResp) GetDnsLoadBalancePoliciesOk() ([]DNSLoadBalancePolicy, bool) {
	if o == nil || IsNil(o.DnsLoadBalancePolicies) {
		return nil, false
	}
	return o.DnsLoadBalancePolicies, true
}

// HasDnsLoadBalancePolicies returns a boolean if a field has been set.
func (o *DNSLoadBalancePoliciesResp) HasDnsLoadBalancePolicies() bool {
	if o != nil && !IsNil(o.DnsLoadBalancePolicies) {
		return true
	}

	return false
}

// SetDnsLoadBalancePolicies gets a reference to the given []DNSLoadBalancePolicy and assigns it to the DnsLoadBalancePolicies field.
func (o *DNSLoadBalancePoliciesResp) SetDnsLoadBalancePolicies(v []DNSLoadBalancePolicy) {
	o.DnsLoadBalancePolicies = v
}

func (o DNSLoadBalancePoliciesResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DNSLoadBalancePoliciesResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DnsLoadBalancePolicies) {
		toSerialize["dns_load_balance_policies"] = o.DnsLoadBalancePolicies
	}
	return toSerialize, nil
}

type NullableDNSLoadBalancePoliciesResp struct {
	value *DNSLoadBalancePoliciesResp
	isSet bool
}

func (v NullableDNSLoadBalancePoliciesResp) Get() *DNSLoadBalancePoliciesResp {
	return v.value
}

func (v *NullableDNSLoadBalancePoliciesResp) Set(val *DNSLoadBalancePoliciesResp) {
	v.value = val
	v.isSet = true
}

func (v NullableDNSLoadBalancePoliciesResp) IsSet() bool {
	return v.isSet
}

func (v *NullableDNSLoadBalancePoliciesResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDNSLoadBalancePoliciesResp(val *DNSLoadBalancePoliciesResp) *NullableDNSLoadBalancePoliciesResp {
	return &NullableDNSLoadBalancePoliciesResp{value: val, isSet: true}
}

func (v NullableDNSLoadBalancePoliciesResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDNSLoadBalancePoliciesResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


