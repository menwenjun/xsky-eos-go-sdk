/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the NetworkDiagnosisItemsResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkDiagnosisItemsResp{}

// NetworkDiagnosisItemsResp struct for NetworkDiagnosisItemsResp
type NetworkDiagnosisItemsResp struct {
	// network diagnosis items
	NetworkDiagnosisItems []NetworkDiagnosisItem `json:"network_diagnosis_items"`
}

type _NetworkDiagnosisItemsResp NetworkDiagnosisItemsResp

// NewNetworkDiagnosisItemsResp instantiates a new NetworkDiagnosisItemsResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkDiagnosisItemsResp(networkDiagnosisItems []NetworkDiagnosisItem) *NetworkDiagnosisItemsResp {
	this := NetworkDiagnosisItemsResp{}
	this.NetworkDiagnosisItems = networkDiagnosisItems
	return &this
}

// NewNetworkDiagnosisItemsRespWithDefaults instantiates a new NetworkDiagnosisItemsResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkDiagnosisItemsRespWithDefaults() *NetworkDiagnosisItemsResp {
	this := NetworkDiagnosisItemsResp{}
	return &this
}

// GetNetworkDiagnosisItems returns the NetworkDiagnosisItems field value
func (o *NetworkDiagnosisItemsResp) GetNetworkDiagnosisItems() []NetworkDiagnosisItem {
	if o == nil {
		var ret []NetworkDiagnosisItem
		return ret
	}

	return o.NetworkDiagnosisItems
}

// GetNetworkDiagnosisItemsOk returns a tuple with the NetworkDiagnosisItems field value
// and a boolean to check if the value has been set.
func (o *NetworkDiagnosisItemsResp) GetNetworkDiagnosisItemsOk() ([]NetworkDiagnosisItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.NetworkDiagnosisItems, true
}

// SetNetworkDiagnosisItems sets field value
func (o *NetworkDiagnosisItemsResp) SetNetworkDiagnosisItems(v []NetworkDiagnosisItem) {
	o.NetworkDiagnosisItems = v
}

func (o NetworkDiagnosisItemsResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkDiagnosisItemsResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["network_diagnosis_items"] = o.NetworkDiagnosisItems
	return toSerialize, nil
}

func (o *NetworkDiagnosisItemsResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"network_diagnosis_items",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNetworkDiagnosisItemsResp := _NetworkDiagnosisItemsResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varNetworkDiagnosisItemsResp)

	if err != nil {
		return err
	}

	*o = NetworkDiagnosisItemsResp(varNetworkDiagnosisItemsResp)

	return err
}

type NullableNetworkDiagnosisItemsResp struct {
	value *NetworkDiagnosisItemsResp
	isSet bool
}

func (v NullableNetworkDiagnosisItemsResp) Get() *NetworkDiagnosisItemsResp {
	return v.value
}

func (v *NullableNetworkDiagnosisItemsResp) Set(val *NetworkDiagnosisItemsResp) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkDiagnosisItemsResp) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkDiagnosisItemsResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkDiagnosisItemsResp(val *NetworkDiagnosisItemsResp) *NullableNetworkDiagnosisItemsResp {
	return &NullableNetworkDiagnosisItemsResp{value: val, isSet: true}
}

func (v NullableNetworkDiagnosisItemsResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkDiagnosisItemsResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


