/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the ObjectStorageZoneRecord type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ObjectStorageZoneRecord{}

// ObjectStorageZoneRecord ObjectStorageZoneRecord combine ObjectStorageZone and ObjectStorageZoneStat as API response
type ObjectStorageZoneRecord struct {
	Alias *string `json:"alias,omitempty"`
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	Connected *bool `json:"connected,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	Endpoints []string `json:"endpoints,omitempty"`
	EpochUuid *string `json:"epoch_uuid,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Local *bool `json:"local,omitempty"`
	Master *bool `json:"master,omitempty"`
	Name *string `json:"name,omitempty"`
	RealmName *string `json:"realm_name,omitempty"`
	RemoteCluster *RemoteClusterNestview `json:"remote_cluster,omitempty"`
	S3LoadBalancerGroup *S3LoadBalancerGroupNestview `json:"s3_load_balancer_group,omitempty"`
	SearchZoneUuid *string `json:"search_zone_uuid,omitempty"`
	Status *string `json:"status,omitempty"`
	SwitchStatus *string `json:"switch_status,omitempty"`
	SystemAccessKey *string `json:"system_access_key,omitempty"`
	SystemSecretKey *string `json:"system_secret_key,omitempty"`
	SystemUser *string `json:"system_user,omitempty"`
	TierType *string `json:"tier_type,omitempty"`
	Update *time.Time `json:"update,omitempty"`
	Uuid *string `json:"uuid,omitempty"`
	ZonegroupName *string `json:"zonegroup_name,omitempty"`
	Samples []ObjectStorageZoneStat `json:"samples,omitempty"`
}

// NewObjectStorageZoneRecord instantiates a new ObjectStorageZoneRecord object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectStorageZoneRecord() *ObjectStorageZoneRecord {
	this := ObjectStorageZoneRecord{}
	return &this
}

// NewObjectStorageZoneRecordWithDefaults instantiates a new ObjectStorageZoneRecord object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectStorageZoneRecordWithDefaults() *ObjectStorageZoneRecord {
	this := ObjectStorageZoneRecord{}
	return &this
}

// GetAlias returns the Alias field value if set, zero value otherwise.
func (o *ObjectStorageZoneRecord) GetAlias() string {
	if o == nil || IsNil(o.Alias) {
		var ret string
		return ret
	}
	return *o.Alias
}

// GetAliasOk returns a tuple with the Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageZoneRecord) GetAliasOk() (*string, bool) {
	if o == nil || IsNil(o.Alias) {
		return nil, false
	}
	return o.Alias, true
}

// HasAlias returns a boolean if a field has been set.
func (o *ObjectStorageZoneRecord) HasAlias() bool {
	if o != nil && !IsNil(o.Alias) {
		return true
	}

	return false
}

// SetAlias gets a reference to the given string and assigns it to the Alias field.
func (o *ObjectStorageZoneRecord) SetAlias(v string) {
	o.Alias = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *ObjectStorageZoneRecord) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageZoneRecord) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *ObjectStorageZoneRecord) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *ObjectStorageZoneRecord) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetConnected returns the Connected field value if set, zero value otherwise.
func (o *ObjectStorageZoneRecord) GetConnected() bool {
	if o == nil || IsNil(o.Connected) {
		var ret bool
		return ret
	}
	return *o.Connected
}

// GetConnectedOk returns a tuple with the Connected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageZoneRecord) GetConnectedOk() (*bool, bool) {
	if o == nil || IsNil(o.Connected) {
		return nil, false
	}
	return o.Connected, true
}

// HasConnected returns a boolean if a field has been set.
func (o *ObjectStorageZoneRecord) HasConnected() bool {
	if o != nil && !IsNil(o.Connected) {
		return true
	}

	return false
}

// SetConnected gets a reference to the given bool and assigns it to the Connected field.
func (o *ObjectStorageZoneRecord) SetConnected(v bool) {
	o.Connected = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *ObjectStorageZoneRecord) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageZoneRecord) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *ObjectStorageZoneRecord) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *ObjectStorageZoneRecord) SetCreate(v time.Time) {
	o.Create = &v
}

// GetEndpoints returns the Endpoints field value if set, zero value otherwise.
func (o *ObjectStorageZoneRecord) GetEndpoints() []string {
	if o == nil || IsNil(o.Endpoints) {
		var ret []string
		return ret
	}
	return o.Endpoints
}

// GetEndpointsOk returns a tuple with the Endpoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageZoneRecord) GetEndpointsOk() ([]string, bool) {
	if o == nil || IsNil(o.Endpoints) {
		return nil, false
	}
	return o.Endpoints, true
}

// HasEndpoints returns a boolean if a field has been set.
func (o *ObjectStorageZoneRecord) HasEndpoints() bool {
	if o != nil && !IsNil(o.Endpoints) {
		return true
	}

	return false
}

// SetEndpoints gets a reference to the given []string and assigns it to the Endpoints field.
func (o *ObjectStorageZoneRecord) SetEndpoints(v []string) {
	o.Endpoints = v
}

// GetEpochUuid returns the EpochUuid field value if set, zero value otherwise.
func (o *ObjectStorageZoneRecord) GetEpochUuid() string {
	if o == nil || IsNil(o.EpochUuid) {
		var ret string
		return ret
	}
	return *o.EpochUuid
}

// GetEpochUuidOk returns a tuple with the EpochUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageZoneRecord) GetEpochUuidOk() (*string, bool) {
	if o == nil || IsNil(o.EpochUuid) {
		return nil, false
	}
	return o.EpochUuid, true
}

// HasEpochUuid returns a boolean if a field has been set.
func (o *ObjectStorageZoneRecord) HasEpochUuid() bool {
	if o != nil && !IsNil(o.EpochUuid) {
		return true
	}

	return false
}

// SetEpochUuid gets a reference to the given string and assigns it to the EpochUuid field.
func (o *ObjectStorageZoneRecord) SetEpochUuid(v string) {
	o.EpochUuid = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ObjectStorageZoneRecord) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageZoneRecord) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ObjectStorageZoneRecord) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ObjectStorageZoneRecord) SetId(v int64) {
	o.Id = &v
}

// GetLocal returns the Local field value if set, zero value otherwise.
func (o *ObjectStorageZoneRecord) GetLocal() bool {
	if o == nil || IsNil(o.Local) {
		var ret bool
		return ret
	}
	return *o.Local
}

// GetLocalOk returns a tuple with the Local field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageZoneRecord) GetLocalOk() (*bool, bool) {
	if o == nil || IsNil(o.Local) {
		return nil, false
	}
	return o.Local, true
}

// HasLocal returns a boolean if a field has been set.
func (o *ObjectStorageZoneRecord) HasLocal() bool {
	if o != nil && !IsNil(o.Local) {
		return true
	}

	return false
}

// SetLocal gets a reference to the given bool and assigns it to the Local field.
func (o *ObjectStorageZoneRecord) SetLocal(v bool) {
	o.Local = &v
}

// GetMaster returns the Master field value if set, zero value otherwise.
func (o *ObjectStorageZoneRecord) GetMaster() bool {
	if o == nil || IsNil(o.Master) {
		var ret bool
		return ret
	}
	return *o.Master
}

// GetMasterOk returns a tuple with the Master field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageZoneRecord) GetMasterOk() (*bool, bool) {
	if o == nil || IsNil(o.Master) {
		return nil, false
	}
	return o.Master, true
}

// HasMaster returns a boolean if a field has been set.
func (o *ObjectStorageZoneRecord) HasMaster() bool {
	if o != nil && !IsNil(o.Master) {
		return true
	}

	return false
}

// SetMaster gets a reference to the given bool and assigns it to the Master field.
func (o *ObjectStorageZoneRecord) SetMaster(v bool) {
	o.Master = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ObjectStorageZoneRecord) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageZoneRecord) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ObjectStorageZoneRecord) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ObjectStorageZoneRecord) SetName(v string) {
	o.Name = &v
}

// GetRealmName returns the RealmName field value if set, zero value otherwise.
func (o *ObjectStorageZoneRecord) GetRealmName() string {
	if o == nil || IsNil(o.RealmName) {
		var ret string
		return ret
	}
	return *o.RealmName
}

// GetRealmNameOk returns a tuple with the RealmName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageZoneRecord) GetRealmNameOk() (*string, bool) {
	if o == nil || IsNil(o.RealmName) {
		return nil, false
	}
	return o.RealmName, true
}

// HasRealmName returns a boolean if a field has been set.
func (o *ObjectStorageZoneRecord) HasRealmName() bool {
	if o != nil && !IsNil(o.RealmName) {
		return true
	}

	return false
}

// SetRealmName gets a reference to the given string and assigns it to the RealmName field.
func (o *ObjectStorageZoneRecord) SetRealmName(v string) {
	o.RealmName = &v
}

// GetRemoteCluster returns the RemoteCluster field value if set, zero value otherwise.
func (o *ObjectStorageZoneRecord) GetRemoteCluster() RemoteClusterNestview {
	if o == nil || IsNil(o.RemoteCluster) {
		var ret RemoteClusterNestview
		return ret
	}
	return *o.RemoteCluster
}

// GetRemoteClusterOk returns a tuple with the RemoteCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageZoneRecord) GetRemoteClusterOk() (*RemoteClusterNestview, bool) {
	if o == nil || IsNil(o.RemoteCluster) {
		return nil, false
	}
	return o.RemoteCluster, true
}

// HasRemoteCluster returns a boolean if a field has been set.
func (o *ObjectStorageZoneRecord) HasRemoteCluster() bool {
	if o != nil && !IsNil(o.RemoteCluster) {
		return true
	}

	return false
}

// SetRemoteCluster gets a reference to the given RemoteClusterNestview and assigns it to the RemoteCluster field.
func (o *ObjectStorageZoneRecord) SetRemoteCluster(v RemoteClusterNestview) {
	o.RemoteCluster = &v
}

// GetS3LoadBalancerGroup returns the S3LoadBalancerGroup field value if set, zero value otherwise.
func (o *ObjectStorageZoneRecord) GetS3LoadBalancerGroup() S3LoadBalancerGroupNestview {
	if o == nil || IsNil(o.S3LoadBalancerGroup) {
		var ret S3LoadBalancerGroupNestview
		return ret
	}
	return *o.S3LoadBalancerGroup
}

// GetS3LoadBalancerGroupOk returns a tuple with the S3LoadBalancerGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageZoneRecord) GetS3LoadBalancerGroupOk() (*S3LoadBalancerGroupNestview, bool) {
	if o == nil || IsNil(o.S3LoadBalancerGroup) {
		return nil, false
	}
	return o.S3LoadBalancerGroup, true
}

// HasS3LoadBalancerGroup returns a boolean if a field has been set.
func (o *ObjectStorageZoneRecord) HasS3LoadBalancerGroup() bool {
	if o != nil && !IsNil(o.S3LoadBalancerGroup) {
		return true
	}

	return false
}

// SetS3LoadBalancerGroup gets a reference to the given S3LoadBalancerGroupNestview and assigns it to the S3LoadBalancerGroup field.
func (o *ObjectStorageZoneRecord) SetS3LoadBalancerGroup(v S3LoadBalancerGroupNestview) {
	o.S3LoadBalancerGroup = &v
}

// GetSearchZoneUuid returns the SearchZoneUuid field value if set, zero value otherwise.
func (o *ObjectStorageZoneRecord) GetSearchZoneUuid() string {
	if o == nil || IsNil(o.SearchZoneUuid) {
		var ret string
		return ret
	}
	return *o.SearchZoneUuid
}

// GetSearchZoneUuidOk returns a tuple with the SearchZoneUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageZoneRecord) GetSearchZoneUuidOk() (*string, bool) {
	if o == nil || IsNil(o.SearchZoneUuid) {
		return nil, false
	}
	return o.SearchZoneUuid, true
}

// HasSearchZoneUuid returns a boolean if a field has been set.
func (o *ObjectStorageZoneRecord) HasSearchZoneUuid() bool {
	if o != nil && !IsNil(o.SearchZoneUuid) {
		return true
	}

	return false
}

// SetSearchZoneUuid gets a reference to the given string and assigns it to the SearchZoneUuid field.
func (o *ObjectStorageZoneRecord) SetSearchZoneUuid(v string) {
	o.SearchZoneUuid = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ObjectStorageZoneRecord) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageZoneRecord) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ObjectStorageZoneRecord) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ObjectStorageZoneRecord) SetStatus(v string) {
	o.Status = &v
}

// GetSwitchStatus returns the SwitchStatus field value if set, zero value otherwise.
func (o *ObjectStorageZoneRecord) GetSwitchStatus() string {
	if o == nil || IsNil(o.SwitchStatus) {
		var ret string
		return ret
	}
	return *o.SwitchStatus
}

// GetSwitchStatusOk returns a tuple with the SwitchStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageZoneRecord) GetSwitchStatusOk() (*string, bool) {
	if o == nil || IsNil(o.SwitchStatus) {
		return nil, false
	}
	return o.SwitchStatus, true
}

// HasSwitchStatus returns a boolean if a field has been set.
func (o *ObjectStorageZoneRecord) HasSwitchStatus() bool {
	if o != nil && !IsNil(o.SwitchStatus) {
		return true
	}

	return false
}

// SetSwitchStatus gets a reference to the given string and assigns it to the SwitchStatus field.
func (o *ObjectStorageZoneRecord) SetSwitchStatus(v string) {
	o.SwitchStatus = &v
}

// GetSystemAccessKey returns the SystemAccessKey field value if set, zero value otherwise.
func (o *ObjectStorageZoneRecord) GetSystemAccessKey() string {
	if o == nil || IsNil(o.SystemAccessKey) {
		var ret string
		return ret
	}
	return *o.SystemAccessKey
}

// GetSystemAccessKeyOk returns a tuple with the SystemAccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageZoneRecord) GetSystemAccessKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SystemAccessKey) {
		return nil, false
	}
	return o.SystemAccessKey, true
}

// HasSystemAccessKey returns a boolean if a field has been set.
func (o *ObjectStorageZoneRecord) HasSystemAccessKey() bool {
	if o != nil && !IsNil(o.SystemAccessKey) {
		return true
	}

	return false
}

// SetSystemAccessKey gets a reference to the given string and assigns it to the SystemAccessKey field.
func (o *ObjectStorageZoneRecord) SetSystemAccessKey(v string) {
	o.SystemAccessKey = &v
}

// GetSystemSecretKey returns the SystemSecretKey field value if set, zero value otherwise.
func (o *ObjectStorageZoneRecord) GetSystemSecretKey() string {
	if o == nil || IsNil(o.SystemSecretKey) {
		var ret string
		return ret
	}
	return *o.SystemSecretKey
}

// GetSystemSecretKeyOk returns a tuple with the SystemSecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageZoneRecord) GetSystemSecretKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SystemSecretKey) {
		return nil, false
	}
	return o.SystemSecretKey, true
}

// HasSystemSecretKey returns a boolean if a field has been set.
func (o *ObjectStorageZoneRecord) HasSystemSecretKey() bool {
	if o != nil && !IsNil(o.SystemSecretKey) {
		return true
	}

	return false
}

// SetSystemSecretKey gets a reference to the given string and assigns it to the SystemSecretKey field.
func (o *ObjectStorageZoneRecord) SetSystemSecretKey(v string) {
	o.SystemSecretKey = &v
}

// GetSystemUser returns the SystemUser field value if set, zero value otherwise.
func (o *ObjectStorageZoneRecord) GetSystemUser() string {
	if o == nil || IsNil(o.SystemUser) {
		var ret string
		return ret
	}
	return *o.SystemUser
}

// GetSystemUserOk returns a tuple with the SystemUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageZoneRecord) GetSystemUserOk() (*string, bool) {
	if o == nil || IsNil(o.SystemUser) {
		return nil, false
	}
	return o.SystemUser, true
}

// HasSystemUser returns a boolean if a field has been set.
func (o *ObjectStorageZoneRecord) HasSystemUser() bool {
	if o != nil && !IsNil(o.SystemUser) {
		return true
	}

	return false
}

// SetSystemUser gets a reference to the given string and assigns it to the SystemUser field.
func (o *ObjectStorageZoneRecord) SetSystemUser(v string) {
	o.SystemUser = &v
}

// GetTierType returns the TierType field value if set, zero value otherwise.
func (o *ObjectStorageZoneRecord) GetTierType() string {
	if o == nil || IsNil(o.TierType) {
		var ret string
		return ret
	}
	return *o.TierType
}

// GetTierTypeOk returns a tuple with the TierType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageZoneRecord) GetTierTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TierType) {
		return nil, false
	}
	return o.TierType, true
}

// HasTierType returns a boolean if a field has been set.
func (o *ObjectStorageZoneRecord) HasTierType() bool {
	if o != nil && !IsNil(o.TierType) {
		return true
	}

	return false
}

// SetTierType gets a reference to the given string and assigns it to the TierType field.
func (o *ObjectStorageZoneRecord) SetTierType(v string) {
	o.TierType = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *ObjectStorageZoneRecord) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageZoneRecord) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *ObjectStorageZoneRecord) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *ObjectStorageZoneRecord) SetUpdate(v time.Time) {
	o.Update = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *ObjectStorageZoneRecord) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageZoneRecord) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *ObjectStorageZoneRecord) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *ObjectStorageZoneRecord) SetUuid(v string) {
	o.Uuid = &v
}

// GetZonegroupName returns the ZonegroupName field value if set, zero value otherwise.
func (o *ObjectStorageZoneRecord) GetZonegroupName() string {
	if o == nil || IsNil(o.ZonegroupName) {
		var ret string
		return ret
	}
	return *o.ZonegroupName
}

// GetZonegroupNameOk returns a tuple with the ZonegroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageZoneRecord) GetZonegroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.ZonegroupName) {
		return nil, false
	}
	return o.ZonegroupName, true
}

// HasZonegroupName returns a boolean if a field has been set.
func (o *ObjectStorageZoneRecord) HasZonegroupName() bool {
	if o != nil && !IsNil(o.ZonegroupName) {
		return true
	}

	return false
}

// SetZonegroupName gets a reference to the given string and assigns it to the ZonegroupName field.
func (o *ObjectStorageZoneRecord) SetZonegroupName(v string) {
	o.ZonegroupName = &v
}

// GetSamples returns the Samples field value if set, zero value otherwise.
func (o *ObjectStorageZoneRecord) GetSamples() []ObjectStorageZoneStat {
	if o == nil || IsNil(o.Samples) {
		var ret []ObjectStorageZoneStat
		return ret
	}
	return o.Samples
}

// GetSamplesOk returns a tuple with the Samples field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageZoneRecord) GetSamplesOk() ([]ObjectStorageZoneStat, bool) {
	if o == nil || IsNil(o.Samples) {
		return nil, false
	}
	return o.Samples, true
}

// HasSamples returns a boolean if a field has been set.
func (o *ObjectStorageZoneRecord) HasSamples() bool {
	if o != nil && !IsNil(o.Samples) {
		return true
	}

	return false
}

// SetSamples gets a reference to the given []ObjectStorageZoneStat and assigns it to the Samples field.
func (o *ObjectStorageZoneRecord) SetSamples(v []ObjectStorageZoneStat) {
	o.Samples = v
}

func (o ObjectStorageZoneRecord) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ObjectStorageZoneRecord) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Alias) {
		toSerialize["alias"] = o.Alias
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Connected) {
		toSerialize["connected"] = o.Connected
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.Endpoints) {
		toSerialize["endpoints"] = o.Endpoints
	}
	if !IsNil(o.EpochUuid) {
		toSerialize["epoch_uuid"] = o.EpochUuid
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Local) {
		toSerialize["local"] = o.Local
	}
	if !IsNil(o.Master) {
		toSerialize["master"] = o.Master
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.RealmName) {
		toSerialize["realm_name"] = o.RealmName
	}
	if !IsNil(o.RemoteCluster) {
		toSerialize["remote_cluster"] = o.RemoteCluster
	}
	if !IsNil(o.S3LoadBalancerGroup) {
		toSerialize["s3_load_balancer_group"] = o.S3LoadBalancerGroup
	}
	if !IsNil(o.SearchZoneUuid) {
		toSerialize["search_zone_uuid"] = o.SearchZoneUuid
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.SwitchStatus) {
		toSerialize["switch_status"] = o.SwitchStatus
	}
	if !IsNil(o.SystemAccessKey) {
		toSerialize["system_access_key"] = o.SystemAccessKey
	}
	if !IsNil(o.SystemSecretKey) {
		toSerialize["system_secret_key"] = o.SystemSecretKey
	}
	if !IsNil(o.SystemUser) {
		toSerialize["system_user"] = o.SystemUser
	}
	if !IsNil(o.TierType) {
		toSerialize["tier_type"] = o.TierType
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	if !IsNil(o.ZonegroupName) {
		toSerialize["zonegroup_name"] = o.ZonegroupName
	}
	if !IsNil(o.Samples) {
		toSerialize["samples"] = o.Samples
	}
	return toSerialize, nil
}

type NullableObjectStorageZoneRecord struct {
	value *ObjectStorageZoneRecord
	isSet bool
}

func (v NullableObjectStorageZoneRecord) Get() *ObjectStorageZoneRecord {
	return v.value
}

func (v *NullableObjectStorageZoneRecord) Set(val *ObjectStorageZoneRecord) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectStorageZoneRecord) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectStorageZoneRecord) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectStorageZoneRecord(val *ObjectStorageZoneRecord) *NullableObjectStorageZoneRecord {
	return &NullableObjectStorageZoneRecord{value: val, isSet: true}
}

func (v NullableObjectStorageZoneRecord) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectStorageZoneRecord) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


