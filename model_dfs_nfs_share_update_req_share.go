/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DfsNFSShareUpdateReqShare type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsNFSShareUpdateReqShare{}

// DfsNFSShareUpdateReqShare struct for DfsNFSShareUpdateReqShare
type DfsNFSShareUpdateReqShare struct {
	// description of share
	Description *string `json:"description,omitempty"`
	// new dfs gateway group id
	DfsGatewayGroupId *int64 `json:"dfs_gateway_group_id,omitempty"`
	// name of share
	Name *string `json:"name,omitempty"`
	// nfs versions of nfs supported
	NfsVersions []string `json:"nfs_versions,omitempty"`
}

// NewDfsNFSShareUpdateReqShare instantiates a new DfsNFSShareUpdateReqShare object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsNFSShareUpdateReqShare() *DfsNFSShareUpdateReqShare {
	this := DfsNFSShareUpdateReqShare{}
	return &this
}

// NewDfsNFSShareUpdateReqShareWithDefaults instantiates a new DfsNFSShareUpdateReqShare object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsNFSShareUpdateReqShareWithDefaults() *DfsNFSShareUpdateReqShare {
	this := DfsNFSShareUpdateReqShare{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *DfsNFSShareUpdateReqShare) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsNFSShareUpdateReqShare) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *DfsNFSShareUpdateReqShare) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DfsNFSShareUpdateReqShare) SetDescription(v string) {
	o.Description = &v
}

// GetDfsGatewayGroupId returns the DfsGatewayGroupId field value if set, zero value otherwise.
func (o *DfsNFSShareUpdateReqShare) GetDfsGatewayGroupId() int64 {
	if o == nil || IsNil(o.DfsGatewayGroupId) {
		var ret int64
		return ret
	}
	return *o.DfsGatewayGroupId
}

// GetDfsGatewayGroupIdOk returns a tuple with the DfsGatewayGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsNFSShareUpdateReqShare) GetDfsGatewayGroupIdOk() (*int64, bool) {
	if o == nil || IsNil(o.DfsGatewayGroupId) {
		return nil, false
	}
	return o.DfsGatewayGroupId, true
}

// HasDfsGatewayGroupId returns a boolean if a field has been set.
func (o *DfsNFSShareUpdateReqShare) HasDfsGatewayGroupId() bool {
	if o != nil && !IsNil(o.DfsGatewayGroupId) {
		return true
	}

	return false
}

// SetDfsGatewayGroupId gets a reference to the given int64 and assigns it to the DfsGatewayGroupId field.
func (o *DfsNFSShareUpdateReqShare) SetDfsGatewayGroupId(v int64) {
	o.DfsGatewayGroupId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DfsNFSShareUpdateReqShare) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsNFSShareUpdateReqShare) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DfsNFSShareUpdateReqShare) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DfsNFSShareUpdateReqShare) SetName(v string) {
	o.Name = &v
}

// GetNfsVersions returns the NfsVersions field value if set, zero value otherwise.
func (o *DfsNFSShareUpdateReqShare) GetNfsVersions() []string {
	if o == nil || IsNil(o.NfsVersions) {
		var ret []string
		return ret
	}
	return o.NfsVersions
}

// GetNfsVersionsOk returns a tuple with the NfsVersions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsNFSShareUpdateReqShare) GetNfsVersionsOk() ([]string, bool) {
	if o == nil || IsNil(o.NfsVersions) {
		return nil, false
	}
	return o.NfsVersions, true
}

// HasNfsVersions returns a boolean if a field has been set.
func (o *DfsNFSShareUpdateReqShare) HasNfsVersions() bool {
	if o != nil && !IsNil(o.NfsVersions) {
		return true
	}

	return false
}

// SetNfsVersions gets a reference to the given []string and assigns it to the NfsVersions field.
func (o *DfsNFSShareUpdateReqShare) SetNfsVersions(v []string) {
	o.NfsVersions = v
}

func (o DfsNFSShareUpdateReqShare) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsNFSShareUpdateReqShare) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DfsGatewayGroupId) {
		toSerialize["dfs_gateway_group_id"] = o.DfsGatewayGroupId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NfsVersions) {
		toSerialize["nfs_versions"] = o.NfsVersions
	}
	return toSerialize, nil
}

type NullableDfsNFSShareUpdateReqShare struct {
	value *DfsNFSShareUpdateReqShare
	isSet bool
}

func (v NullableDfsNFSShareUpdateReqShare) Get() *DfsNFSShareUpdateReqShare {
	return v.value
}

func (v *NullableDfsNFSShareUpdateReqShare) Set(val *DfsNFSShareUpdateReqShare) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsNFSShareUpdateReqShare) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsNFSShareUpdateReqShare) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsNFSShareUpdateReqShare(val *DfsNFSShareUpdateReqShare) *NullableDfsNFSShareUpdateReqShare {
	return &NullableDfsNFSShareUpdateReqShare{value: val, isSet: true}
}

func (v NullableDfsNFSShareUpdateReqShare) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsNFSShareUpdateReqShare) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


