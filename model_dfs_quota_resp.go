/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DfsQuotaResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsQuotaResp{}

// DfsQuotaResp struct for DfsQuotaResp
type DfsQuotaResp struct {
	DfsQuota *DfsQuotaRecord `json:"dfs_quota,omitempty"`
}

// NewDfsQuotaResp instantiates a new DfsQuotaResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsQuotaResp() *DfsQuotaResp {
	this := DfsQuotaResp{}
	return &this
}

// NewDfsQuotaRespWithDefaults instantiates a new DfsQuotaResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsQuotaRespWithDefaults() *DfsQuotaResp {
	this := DfsQuotaResp{}
	return &this
}

// GetDfsQuota returns the DfsQuota field value if set, zero value otherwise.
func (o *DfsQuotaResp) GetDfsQuota() DfsQuotaRecord {
	if o == nil || IsNil(o.DfsQuota) {
		var ret DfsQuotaRecord
		return ret
	}
	return *o.DfsQuota
}

// GetDfsQuotaOk returns a tuple with the DfsQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQuotaResp) GetDfsQuotaOk() (*DfsQuotaRecord, bool) {
	if o == nil || IsNil(o.DfsQuota) {
		return nil, false
	}
	return o.DfsQuota, true
}

// HasDfsQuota returns a boolean if a field has been set.
func (o *DfsQuotaResp) HasDfsQuota() bool {
	if o != nil && !IsNil(o.DfsQuota) {
		return true
	}

	return false
}

// SetDfsQuota gets a reference to the given DfsQuotaRecord and assigns it to the DfsQuota field.
func (o *DfsQuotaResp) SetDfsQuota(v DfsQuotaRecord) {
	o.DfsQuota = &v
}

func (o DfsQuotaResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsQuotaResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DfsQuota) {
		toSerialize["dfs_quota"] = o.DfsQuota
	}
	return toSerialize, nil
}

type NullableDfsQuotaResp struct {
	value *DfsQuotaResp
	isSet bool
}

func (v NullableDfsQuotaResp) Get() *DfsQuotaResp {
	return v.value
}

func (v *NullableDfsQuotaResp) Set(val *DfsQuotaResp) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsQuotaResp) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsQuotaResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsQuotaResp(val *DfsQuotaResp) *NullableDfsQuotaResp {
	return &NullableDfsQuotaResp{value: val, isSet: true}
}

func (v NullableDfsQuotaResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsQuotaResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


