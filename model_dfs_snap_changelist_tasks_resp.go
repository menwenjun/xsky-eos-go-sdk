/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DfsSnapChangelistTasksResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsSnapChangelistTasksResp{}

// DfsSnapChangelistTasksResp struct for DfsSnapChangelistTasksResp
type DfsSnapChangelistTasksResp struct {
	DfsSnapChangelistTasks []DfsSnapChangelistTask `json:"dfs_snap_changelist_tasks"`
}

type _DfsSnapChangelistTasksResp DfsSnapChangelistTasksResp

// NewDfsSnapChangelistTasksResp instantiates a new DfsSnapChangelistTasksResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsSnapChangelistTasksResp(dfsSnapChangelistTasks []DfsSnapChangelistTask) *DfsSnapChangelistTasksResp {
	this := DfsSnapChangelistTasksResp{}
	this.DfsSnapChangelistTasks = dfsSnapChangelistTasks
	return &this
}

// NewDfsSnapChangelistTasksRespWithDefaults instantiates a new DfsSnapChangelistTasksResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsSnapChangelistTasksRespWithDefaults() *DfsSnapChangelistTasksResp {
	this := DfsSnapChangelistTasksResp{}
	return &this
}

// GetDfsSnapChangelistTasks returns the DfsSnapChangelistTasks field value
func (o *DfsSnapChangelistTasksResp) GetDfsSnapChangelistTasks() []DfsSnapChangelistTask {
	if o == nil {
		var ret []DfsSnapChangelistTask
		return ret
	}

	return o.DfsSnapChangelistTasks
}

// GetDfsSnapChangelistTasksOk returns a tuple with the DfsSnapChangelistTasks field value
// and a boolean to check if the value has been set.
func (o *DfsSnapChangelistTasksResp) GetDfsSnapChangelistTasksOk() ([]DfsSnapChangelistTask, bool) {
	if o == nil {
		return nil, false
	}
	return o.DfsSnapChangelistTasks, true
}

// SetDfsSnapChangelistTasks sets field value
func (o *DfsSnapChangelistTasksResp) SetDfsSnapChangelistTasks(v []DfsSnapChangelistTask) {
	o.DfsSnapChangelistTasks = v
}

func (o DfsSnapChangelistTasksResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsSnapChangelistTasksResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dfs_snap_changelist_tasks"] = o.DfsSnapChangelistTasks
	return toSerialize, nil
}

func (o *DfsSnapChangelistTasksResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dfs_snap_changelist_tasks",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDfsSnapChangelistTasksResp := _DfsSnapChangelistTasksResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDfsSnapChangelistTasksResp)

	if err != nil {
		return err
	}

	*o = DfsSnapChangelistTasksResp(varDfsSnapChangelistTasksResp)

	return err
}

type NullableDfsSnapChangelistTasksResp struct {
	value *DfsSnapChangelistTasksResp
	isSet bool
}

func (v NullableDfsSnapChangelistTasksResp) Get() *DfsSnapChangelistTasksResp {
	return v.value
}

func (v *NullableDfsSnapChangelistTasksResp) Set(val *DfsSnapChangelistTasksResp) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsSnapChangelistTasksResp) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsSnapChangelistTasksResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsSnapChangelistTasksResp(val *DfsSnapChangelistTasksResp) *NullableDfsSnapChangelistTasksResp {
	return &NullableDfsSnapChangelistTasksResp{value: val, isSet: true}
}

func (v NullableDfsSnapChangelistTasksResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsSnapChangelistTasksResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


