/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the S3LbGroupWebServiceConfigCredential type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &S3LbGroupWebServiceConfigCredential{}

// S3LbGroupWebServiceConfigCredential struct for S3LbGroupWebServiceConfigCredential
type S3LbGroupWebServiceConfigCredential struct {
	Password *string `json:"password,omitempty"`
	UserName string `json:"user_name"`
}

type _S3LbGroupWebServiceConfigCredential S3LbGroupWebServiceConfigCredential

// NewS3LbGroupWebServiceConfigCredential instantiates a new S3LbGroupWebServiceConfigCredential object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewS3LbGroupWebServiceConfigCredential(userName string) *S3LbGroupWebServiceConfigCredential {
	this := S3LbGroupWebServiceConfigCredential{}
	this.UserName = userName
	return &this
}

// NewS3LbGroupWebServiceConfigCredentialWithDefaults instantiates a new S3LbGroupWebServiceConfigCredential object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewS3LbGroupWebServiceConfigCredentialWithDefaults() *S3LbGroupWebServiceConfigCredential {
	this := S3LbGroupWebServiceConfigCredential{}
	return &this
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *S3LbGroupWebServiceConfigCredential) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3LbGroupWebServiceConfigCredential) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *S3LbGroupWebServiceConfigCredential) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *S3LbGroupWebServiceConfigCredential) SetPassword(v string) {
	o.Password = &v
}

// GetUserName returns the UserName field value
func (o *S3LbGroupWebServiceConfigCredential) GetUserName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value
// and a boolean to check if the value has been set.
func (o *S3LbGroupWebServiceConfigCredential) GetUserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserName, true
}

// SetUserName sets field value
func (o *S3LbGroupWebServiceConfigCredential) SetUserName(v string) {
	o.UserName = v
}

func (o S3LbGroupWebServiceConfigCredential) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o S3LbGroupWebServiceConfigCredential) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	toSerialize["user_name"] = o.UserName
	return toSerialize, nil
}

func (o *S3LbGroupWebServiceConfigCredential) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"user_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varS3LbGroupWebServiceConfigCredential := _S3LbGroupWebServiceConfigCredential{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varS3LbGroupWebServiceConfigCredential)

	if err != nil {
		return err
	}

	*o = S3LbGroupWebServiceConfigCredential(varS3LbGroupWebServiceConfigCredential)

	return err
}

type NullableS3LbGroupWebServiceConfigCredential struct {
	value *S3LbGroupWebServiceConfigCredential
	isSet bool
}

func (v NullableS3LbGroupWebServiceConfigCredential) Get() *S3LbGroupWebServiceConfigCredential {
	return v.value
}

func (v *NullableS3LbGroupWebServiceConfigCredential) Set(val *S3LbGroupWebServiceConfigCredential) {
	v.value = val
	v.isSet = true
}

func (v NullableS3LbGroupWebServiceConfigCredential) IsSet() bool {
	return v.isSet
}

func (v *NullableS3LbGroupWebServiceConfigCredential) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableS3LbGroupWebServiceConfigCredential(val *S3LbGroupWebServiceConfigCredential) *NullableS3LbGroupWebServiceConfigCredential {
	return &NullableS3LbGroupWebServiceConfigCredential{value: val, isSet: true}
}

func (v NullableS3LbGroupWebServiceConfigCredential) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableS3LbGroupWebServiceConfigCredential) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


