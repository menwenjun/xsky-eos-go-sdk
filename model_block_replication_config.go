/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BlockReplicationConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlockReplicationConfig{}

// BlockReplicationConfig BlockReplicationConfig contains config for block replication
type BlockReplicationConfig struct {
	Destination *string `json:"destination,omitempty"`
	LocalGateways []string `json:"local_gateways,omitempty"`
	RemoteGateways []string `json:"remote_gateways,omitempty"`
}

// NewBlockReplicationConfig instantiates a new BlockReplicationConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockReplicationConfig() *BlockReplicationConfig {
	this := BlockReplicationConfig{}
	return &this
}

// NewBlockReplicationConfigWithDefaults instantiates a new BlockReplicationConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockReplicationConfigWithDefaults() *BlockReplicationConfig {
	this := BlockReplicationConfig{}
	return &this
}

// GetDestination returns the Destination field value if set, zero value otherwise.
func (o *BlockReplicationConfig) GetDestination() string {
	if o == nil || IsNil(o.Destination) {
		var ret string
		return ret
	}
	return *o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockReplicationConfig) GetDestinationOk() (*string, bool) {
	if o == nil || IsNil(o.Destination) {
		return nil, false
	}
	return o.Destination, true
}

// HasDestination returns a boolean if a field has been set.
func (o *BlockReplicationConfig) HasDestination() bool {
	if o != nil && !IsNil(o.Destination) {
		return true
	}

	return false
}

// SetDestination gets a reference to the given string and assigns it to the Destination field.
func (o *BlockReplicationConfig) SetDestination(v string) {
	o.Destination = &v
}

// GetLocalGateways returns the LocalGateways field value if set, zero value otherwise.
func (o *BlockReplicationConfig) GetLocalGateways() []string {
	if o == nil || IsNil(o.LocalGateways) {
		var ret []string
		return ret
	}
	return o.LocalGateways
}

// GetLocalGatewaysOk returns a tuple with the LocalGateways field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockReplicationConfig) GetLocalGatewaysOk() ([]string, bool) {
	if o == nil || IsNil(o.LocalGateways) {
		return nil, false
	}
	return o.LocalGateways, true
}

// HasLocalGateways returns a boolean if a field has been set.
func (o *BlockReplicationConfig) HasLocalGateways() bool {
	if o != nil && !IsNil(o.LocalGateways) {
		return true
	}

	return false
}

// SetLocalGateways gets a reference to the given []string and assigns it to the LocalGateways field.
func (o *BlockReplicationConfig) SetLocalGateways(v []string) {
	o.LocalGateways = v
}

// GetRemoteGateways returns the RemoteGateways field value if set, zero value otherwise.
func (o *BlockReplicationConfig) GetRemoteGateways() []string {
	if o == nil || IsNil(o.RemoteGateways) {
		var ret []string
		return ret
	}
	return o.RemoteGateways
}

// GetRemoteGatewaysOk returns a tuple with the RemoteGateways field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockReplicationConfig) GetRemoteGatewaysOk() ([]string, bool) {
	if o == nil || IsNil(o.RemoteGateways) {
		return nil, false
	}
	return o.RemoteGateways, true
}

// HasRemoteGateways returns a boolean if a field has been set.
func (o *BlockReplicationConfig) HasRemoteGateways() bool {
	if o != nil && !IsNil(o.RemoteGateways) {
		return true
	}

	return false
}

// SetRemoteGateways gets a reference to the given []string and assigns it to the RemoteGateways field.
func (o *BlockReplicationConfig) SetRemoteGateways(v []string) {
	o.RemoteGateways = v
}

func (o BlockReplicationConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlockReplicationConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Destination) {
		toSerialize["destination"] = o.Destination
	}
	if !IsNil(o.LocalGateways) {
		toSerialize["local_gateways"] = o.LocalGateways
	}
	if !IsNil(o.RemoteGateways) {
		toSerialize["remote_gateways"] = o.RemoteGateways
	}
	return toSerialize, nil
}

type NullableBlockReplicationConfig struct {
	value *BlockReplicationConfig
	isSet bool
}

func (v NullableBlockReplicationConfig) Get() *BlockReplicationConfig {
	return v.value
}

func (v *NullableBlockReplicationConfig) Set(val *BlockReplicationConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockReplicationConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockReplicationConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockReplicationConfig(val *BlockReplicationConfig) *NullableBlockReplicationConfig {
	return &NullableBlockReplicationConfig{value: val, isSet: true}
}

func (v NullableBlockReplicationConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockReplicationConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


