/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SumOspGatewayStat type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SumOspGatewayStat{}

// SumOspGatewayStat SumOspGatewayStat defines response for sum of osp gateways stat
type SumOspGatewayStat struct {
	DownBandwidthKbyte *float64 `json:"down_bandwidth_kbyte,omitempty"`
	DownLatency *float64 `json:"down_latency,omitempty"`
	DownOps *float64 `json:"down_ops,omitempty"`
	SyncDownBandwidthKbyte *float64 `json:"sync_down_bandwidth_kbyte,omitempty"`
	SyncDownLatency *float64 `json:"sync_down_latency,omitempty"`
	SyncDownOps *float64 `json:"sync_down_ops,omitempty"`
	SyncUpBandwidthKbyte *float64 `json:"sync_up_bandwidth_kbyte,omitempty"`
	SyncUpLatency *float64 `json:"sync_up_latency,omitempty"`
	SyncUpOps *float64 `json:"sync_up_ops,omitempty"`
	UpBandwidthKbyte *float64 `json:"up_bandwidth_kbyte,omitempty"`
	UpLatency *float64 `json:"up_latency,omitempty"`
	UpOps *float64 `json:"up_ops,omitempty"`
}

// NewSumOspGatewayStat instantiates a new SumOspGatewayStat object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSumOspGatewayStat() *SumOspGatewayStat {
	this := SumOspGatewayStat{}
	return &this
}

// NewSumOspGatewayStatWithDefaults instantiates a new SumOspGatewayStat object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSumOspGatewayStatWithDefaults() *SumOspGatewayStat {
	this := SumOspGatewayStat{}
	return &this
}

// GetDownBandwidthKbyte returns the DownBandwidthKbyte field value if set, zero value otherwise.
func (o *SumOspGatewayStat) GetDownBandwidthKbyte() float64 {
	if o == nil || IsNil(o.DownBandwidthKbyte) {
		var ret float64
		return ret
	}
	return *o.DownBandwidthKbyte
}

// GetDownBandwidthKbyteOk returns a tuple with the DownBandwidthKbyte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SumOspGatewayStat) GetDownBandwidthKbyteOk() (*float64, bool) {
	if o == nil || IsNil(o.DownBandwidthKbyte) {
		return nil, false
	}
	return o.DownBandwidthKbyte, true
}

// HasDownBandwidthKbyte returns a boolean if a field has been set.
func (o *SumOspGatewayStat) HasDownBandwidthKbyte() bool {
	if o != nil && !IsNil(o.DownBandwidthKbyte) {
		return true
	}

	return false
}

// SetDownBandwidthKbyte gets a reference to the given float64 and assigns it to the DownBandwidthKbyte field.
func (o *SumOspGatewayStat) SetDownBandwidthKbyte(v float64) {
	o.DownBandwidthKbyte = &v
}

// GetDownLatency returns the DownLatency field value if set, zero value otherwise.
func (o *SumOspGatewayStat) GetDownLatency() float64 {
	if o == nil || IsNil(o.DownLatency) {
		var ret float64
		return ret
	}
	return *o.DownLatency
}

// GetDownLatencyOk returns a tuple with the DownLatency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SumOspGatewayStat) GetDownLatencyOk() (*float64, bool) {
	if o == nil || IsNil(o.DownLatency) {
		return nil, false
	}
	return o.DownLatency, true
}

// HasDownLatency returns a boolean if a field has been set.
func (o *SumOspGatewayStat) HasDownLatency() bool {
	if o != nil && !IsNil(o.DownLatency) {
		return true
	}

	return false
}

// SetDownLatency gets a reference to the given float64 and assigns it to the DownLatency field.
func (o *SumOspGatewayStat) SetDownLatency(v float64) {
	o.DownLatency = &v
}

// GetDownOps returns the DownOps field value if set, zero value otherwise.
func (o *SumOspGatewayStat) GetDownOps() float64 {
	if o == nil || IsNil(o.DownOps) {
		var ret float64
		return ret
	}
	return *o.DownOps
}

// GetDownOpsOk returns a tuple with the DownOps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SumOspGatewayStat) GetDownOpsOk() (*float64, bool) {
	if o == nil || IsNil(o.DownOps) {
		return nil, false
	}
	return o.DownOps, true
}

// HasDownOps returns a boolean if a field has been set.
func (o *SumOspGatewayStat) HasDownOps() bool {
	if o != nil && !IsNil(o.DownOps) {
		return true
	}

	return false
}

// SetDownOps gets a reference to the given float64 and assigns it to the DownOps field.
func (o *SumOspGatewayStat) SetDownOps(v float64) {
	o.DownOps = &v
}

// GetSyncDownBandwidthKbyte returns the SyncDownBandwidthKbyte field value if set, zero value otherwise.
func (o *SumOspGatewayStat) GetSyncDownBandwidthKbyte() float64 {
	if o == nil || IsNil(o.SyncDownBandwidthKbyte) {
		var ret float64
		return ret
	}
	return *o.SyncDownBandwidthKbyte
}

// GetSyncDownBandwidthKbyteOk returns a tuple with the SyncDownBandwidthKbyte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SumOspGatewayStat) GetSyncDownBandwidthKbyteOk() (*float64, bool) {
	if o == nil || IsNil(o.SyncDownBandwidthKbyte) {
		return nil, false
	}
	return o.SyncDownBandwidthKbyte, true
}

// HasSyncDownBandwidthKbyte returns a boolean if a field has been set.
func (o *SumOspGatewayStat) HasSyncDownBandwidthKbyte() bool {
	if o != nil && !IsNil(o.SyncDownBandwidthKbyte) {
		return true
	}

	return false
}

// SetSyncDownBandwidthKbyte gets a reference to the given float64 and assigns it to the SyncDownBandwidthKbyte field.
func (o *SumOspGatewayStat) SetSyncDownBandwidthKbyte(v float64) {
	o.SyncDownBandwidthKbyte = &v
}

// GetSyncDownLatency returns the SyncDownLatency field value if set, zero value otherwise.
func (o *SumOspGatewayStat) GetSyncDownLatency() float64 {
	if o == nil || IsNil(o.SyncDownLatency) {
		var ret float64
		return ret
	}
	return *o.SyncDownLatency
}

// GetSyncDownLatencyOk returns a tuple with the SyncDownLatency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SumOspGatewayStat) GetSyncDownLatencyOk() (*float64, bool) {
	if o == nil || IsNil(o.SyncDownLatency) {
		return nil, false
	}
	return o.SyncDownLatency, true
}

// HasSyncDownLatency returns a boolean if a field has been set.
func (o *SumOspGatewayStat) HasSyncDownLatency() bool {
	if o != nil && !IsNil(o.SyncDownLatency) {
		return true
	}

	return false
}

// SetSyncDownLatency gets a reference to the given float64 and assigns it to the SyncDownLatency field.
func (o *SumOspGatewayStat) SetSyncDownLatency(v float64) {
	o.SyncDownLatency = &v
}

// GetSyncDownOps returns the SyncDownOps field value if set, zero value otherwise.
func (o *SumOspGatewayStat) GetSyncDownOps() float64 {
	if o == nil || IsNil(o.SyncDownOps) {
		var ret float64
		return ret
	}
	return *o.SyncDownOps
}

// GetSyncDownOpsOk returns a tuple with the SyncDownOps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SumOspGatewayStat) GetSyncDownOpsOk() (*float64, bool) {
	if o == nil || IsNil(o.SyncDownOps) {
		return nil, false
	}
	return o.SyncDownOps, true
}

// HasSyncDownOps returns a boolean if a field has been set.
func (o *SumOspGatewayStat) HasSyncDownOps() bool {
	if o != nil && !IsNil(o.SyncDownOps) {
		return true
	}

	return false
}

// SetSyncDownOps gets a reference to the given float64 and assigns it to the SyncDownOps field.
func (o *SumOspGatewayStat) SetSyncDownOps(v float64) {
	o.SyncDownOps = &v
}

// GetSyncUpBandwidthKbyte returns the SyncUpBandwidthKbyte field value if set, zero value otherwise.
func (o *SumOspGatewayStat) GetSyncUpBandwidthKbyte() float64 {
	if o == nil || IsNil(o.SyncUpBandwidthKbyte) {
		var ret float64
		return ret
	}
	return *o.SyncUpBandwidthKbyte
}

// GetSyncUpBandwidthKbyteOk returns a tuple with the SyncUpBandwidthKbyte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SumOspGatewayStat) GetSyncUpBandwidthKbyteOk() (*float64, bool) {
	if o == nil || IsNil(o.SyncUpBandwidthKbyte) {
		return nil, false
	}
	return o.SyncUpBandwidthKbyte, true
}

// HasSyncUpBandwidthKbyte returns a boolean if a field has been set.
func (o *SumOspGatewayStat) HasSyncUpBandwidthKbyte() bool {
	if o != nil && !IsNil(o.SyncUpBandwidthKbyte) {
		return true
	}

	return false
}

// SetSyncUpBandwidthKbyte gets a reference to the given float64 and assigns it to the SyncUpBandwidthKbyte field.
func (o *SumOspGatewayStat) SetSyncUpBandwidthKbyte(v float64) {
	o.SyncUpBandwidthKbyte = &v
}

// GetSyncUpLatency returns the SyncUpLatency field value if set, zero value otherwise.
func (o *SumOspGatewayStat) GetSyncUpLatency() float64 {
	if o == nil || IsNil(o.SyncUpLatency) {
		var ret float64
		return ret
	}
	return *o.SyncUpLatency
}

// GetSyncUpLatencyOk returns a tuple with the SyncUpLatency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SumOspGatewayStat) GetSyncUpLatencyOk() (*float64, bool) {
	if o == nil || IsNil(o.SyncUpLatency) {
		return nil, false
	}
	return o.SyncUpLatency, true
}

// HasSyncUpLatency returns a boolean if a field has been set.
func (o *SumOspGatewayStat) HasSyncUpLatency() bool {
	if o != nil && !IsNil(o.SyncUpLatency) {
		return true
	}

	return false
}

// SetSyncUpLatency gets a reference to the given float64 and assigns it to the SyncUpLatency field.
func (o *SumOspGatewayStat) SetSyncUpLatency(v float64) {
	o.SyncUpLatency = &v
}

// GetSyncUpOps returns the SyncUpOps field value if set, zero value otherwise.
func (o *SumOspGatewayStat) GetSyncUpOps() float64 {
	if o == nil || IsNil(o.SyncUpOps) {
		var ret float64
		return ret
	}
	return *o.SyncUpOps
}

// GetSyncUpOpsOk returns a tuple with the SyncUpOps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SumOspGatewayStat) GetSyncUpOpsOk() (*float64, bool) {
	if o == nil || IsNil(o.SyncUpOps) {
		return nil, false
	}
	return o.SyncUpOps, true
}

// HasSyncUpOps returns a boolean if a field has been set.
func (o *SumOspGatewayStat) HasSyncUpOps() bool {
	if o != nil && !IsNil(o.SyncUpOps) {
		return true
	}

	return false
}

// SetSyncUpOps gets a reference to the given float64 and assigns it to the SyncUpOps field.
func (o *SumOspGatewayStat) SetSyncUpOps(v float64) {
	o.SyncUpOps = &v
}

// GetUpBandwidthKbyte returns the UpBandwidthKbyte field value if set, zero value otherwise.
func (o *SumOspGatewayStat) GetUpBandwidthKbyte() float64 {
	if o == nil || IsNil(o.UpBandwidthKbyte) {
		var ret float64
		return ret
	}
	return *o.UpBandwidthKbyte
}

// GetUpBandwidthKbyteOk returns a tuple with the UpBandwidthKbyte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SumOspGatewayStat) GetUpBandwidthKbyteOk() (*float64, bool) {
	if o == nil || IsNil(o.UpBandwidthKbyte) {
		return nil, false
	}
	return o.UpBandwidthKbyte, true
}

// HasUpBandwidthKbyte returns a boolean if a field has been set.
func (o *SumOspGatewayStat) HasUpBandwidthKbyte() bool {
	if o != nil && !IsNil(o.UpBandwidthKbyte) {
		return true
	}

	return false
}

// SetUpBandwidthKbyte gets a reference to the given float64 and assigns it to the UpBandwidthKbyte field.
func (o *SumOspGatewayStat) SetUpBandwidthKbyte(v float64) {
	o.UpBandwidthKbyte = &v
}

// GetUpLatency returns the UpLatency field value if set, zero value otherwise.
func (o *SumOspGatewayStat) GetUpLatency() float64 {
	if o == nil || IsNil(o.UpLatency) {
		var ret float64
		return ret
	}
	return *o.UpLatency
}

// GetUpLatencyOk returns a tuple with the UpLatency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SumOspGatewayStat) GetUpLatencyOk() (*float64, bool) {
	if o == nil || IsNil(o.UpLatency) {
		return nil, false
	}
	return o.UpLatency, true
}

// HasUpLatency returns a boolean if a field has been set.
func (o *SumOspGatewayStat) HasUpLatency() bool {
	if o != nil && !IsNil(o.UpLatency) {
		return true
	}

	return false
}

// SetUpLatency gets a reference to the given float64 and assigns it to the UpLatency field.
func (o *SumOspGatewayStat) SetUpLatency(v float64) {
	o.UpLatency = &v
}

// GetUpOps returns the UpOps field value if set, zero value otherwise.
func (o *SumOspGatewayStat) GetUpOps() float64 {
	if o == nil || IsNil(o.UpOps) {
		var ret float64
		return ret
	}
	return *o.UpOps
}

// GetUpOpsOk returns a tuple with the UpOps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SumOspGatewayStat) GetUpOpsOk() (*float64, bool) {
	if o == nil || IsNil(o.UpOps) {
		return nil, false
	}
	return o.UpOps, true
}

// HasUpOps returns a boolean if a field has been set.
func (o *SumOspGatewayStat) HasUpOps() bool {
	if o != nil && !IsNil(o.UpOps) {
		return true
	}

	return false
}

// SetUpOps gets a reference to the given float64 and assigns it to the UpOps field.
func (o *SumOspGatewayStat) SetUpOps(v float64) {
	o.UpOps = &v
}

func (o SumOspGatewayStat) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SumOspGatewayStat) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DownBandwidthKbyte) {
		toSerialize["down_bandwidth_kbyte"] = o.DownBandwidthKbyte
	}
	if !IsNil(o.DownLatency) {
		toSerialize["down_latency"] = o.DownLatency
	}
	if !IsNil(o.DownOps) {
		toSerialize["down_ops"] = o.DownOps
	}
	if !IsNil(o.SyncDownBandwidthKbyte) {
		toSerialize["sync_down_bandwidth_kbyte"] = o.SyncDownBandwidthKbyte
	}
	if !IsNil(o.SyncDownLatency) {
		toSerialize["sync_down_latency"] = o.SyncDownLatency
	}
	if !IsNil(o.SyncDownOps) {
		toSerialize["sync_down_ops"] = o.SyncDownOps
	}
	if !IsNil(o.SyncUpBandwidthKbyte) {
		toSerialize["sync_up_bandwidth_kbyte"] = o.SyncUpBandwidthKbyte
	}
	if !IsNil(o.SyncUpLatency) {
		toSerialize["sync_up_latency"] = o.SyncUpLatency
	}
	if !IsNil(o.SyncUpOps) {
		toSerialize["sync_up_ops"] = o.SyncUpOps
	}
	if !IsNil(o.UpBandwidthKbyte) {
		toSerialize["up_bandwidth_kbyte"] = o.UpBandwidthKbyte
	}
	if !IsNil(o.UpLatency) {
		toSerialize["up_latency"] = o.UpLatency
	}
	if !IsNil(o.UpOps) {
		toSerialize["up_ops"] = o.UpOps
	}
	return toSerialize, nil
}

type NullableSumOspGatewayStat struct {
	value *SumOspGatewayStat
	isSet bool
}

func (v NullableSumOspGatewayStat) Get() *SumOspGatewayStat {
	return v.value
}

func (v *NullableSumOspGatewayStat) Set(val *SumOspGatewayStat) {
	v.value = val
	v.isSet = true
}

func (v NullableSumOspGatewayStat) IsSet() bool {
	return v.isSet
}

func (v *NullableSumOspGatewayStat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSumOspGatewayStat(val *SumOspGatewayStat) *NullableSumOspGatewayStat {
	return &NullableSumOspGatewayStat{value: val, isSet: true}
}

func (v NullableSumOspGatewayStat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSumOspGatewayStat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


