/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OSBucketSetAccessLoggingReqBucket type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OSBucketSetAccessLoggingReqBucket{}

// OSBucketSetAccessLoggingReqBucket struct for OSBucketSetAccessLoggingReqBucket
type OSBucketSetAccessLoggingReqBucket struct {
	LoggingGrants []map[string]interface{} `json:"logging_grants,omitempty"`
	LoggingOwnerId *int64 `json:"logging_owner_id,omitempty"`
	LoggingPrefix *string `json:"logging_prefix,omitempty"`
	LoggingTargetBucketId *int64 `json:"logging_target_bucket_id,omitempty"`
}

// NewOSBucketSetAccessLoggingReqBucket instantiates a new OSBucketSetAccessLoggingReqBucket object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOSBucketSetAccessLoggingReqBucket() *OSBucketSetAccessLoggingReqBucket {
	this := OSBucketSetAccessLoggingReqBucket{}
	return &this
}

// NewOSBucketSetAccessLoggingReqBucketWithDefaults instantiates a new OSBucketSetAccessLoggingReqBucket object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOSBucketSetAccessLoggingReqBucketWithDefaults() *OSBucketSetAccessLoggingReqBucket {
	this := OSBucketSetAccessLoggingReqBucket{}
	return &this
}

// GetLoggingGrants returns the LoggingGrants field value if set, zero value otherwise.
func (o *OSBucketSetAccessLoggingReqBucket) GetLoggingGrants() []map[string]interface{} {
	if o == nil || IsNil(o.LoggingGrants) {
		var ret []map[string]interface{}
		return ret
	}
	return o.LoggingGrants
}

// GetLoggingGrantsOk returns a tuple with the LoggingGrants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBucketSetAccessLoggingReqBucket) GetLoggingGrantsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.LoggingGrants) {
		return nil, false
	}
	return o.LoggingGrants, true
}

// HasLoggingGrants returns a boolean if a field has been set.
func (o *OSBucketSetAccessLoggingReqBucket) HasLoggingGrants() bool {
	if o != nil && !IsNil(o.LoggingGrants) {
		return true
	}

	return false
}

// SetLoggingGrants gets a reference to the given []map[string]interface{} and assigns it to the LoggingGrants field.
func (o *OSBucketSetAccessLoggingReqBucket) SetLoggingGrants(v []map[string]interface{}) {
	o.LoggingGrants = v
}

// GetLoggingOwnerId returns the LoggingOwnerId field value if set, zero value otherwise.
func (o *OSBucketSetAccessLoggingReqBucket) GetLoggingOwnerId() int64 {
	if o == nil || IsNil(o.LoggingOwnerId) {
		var ret int64
		return ret
	}
	return *o.LoggingOwnerId
}

// GetLoggingOwnerIdOk returns a tuple with the LoggingOwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBucketSetAccessLoggingReqBucket) GetLoggingOwnerIdOk() (*int64, bool) {
	if o == nil || IsNil(o.LoggingOwnerId) {
		return nil, false
	}
	return o.LoggingOwnerId, true
}

// HasLoggingOwnerId returns a boolean if a field has been set.
func (o *OSBucketSetAccessLoggingReqBucket) HasLoggingOwnerId() bool {
	if o != nil && !IsNil(o.LoggingOwnerId) {
		return true
	}

	return false
}

// SetLoggingOwnerId gets a reference to the given int64 and assigns it to the LoggingOwnerId field.
func (o *OSBucketSetAccessLoggingReqBucket) SetLoggingOwnerId(v int64) {
	o.LoggingOwnerId = &v
}

// GetLoggingPrefix returns the LoggingPrefix field value if set, zero value otherwise.
func (o *OSBucketSetAccessLoggingReqBucket) GetLoggingPrefix() string {
	if o == nil || IsNil(o.LoggingPrefix) {
		var ret string
		return ret
	}
	return *o.LoggingPrefix
}

// GetLoggingPrefixOk returns a tuple with the LoggingPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBucketSetAccessLoggingReqBucket) GetLoggingPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.LoggingPrefix) {
		return nil, false
	}
	return o.LoggingPrefix, true
}

// HasLoggingPrefix returns a boolean if a field has been set.
func (o *OSBucketSetAccessLoggingReqBucket) HasLoggingPrefix() bool {
	if o != nil && !IsNil(o.LoggingPrefix) {
		return true
	}

	return false
}

// SetLoggingPrefix gets a reference to the given string and assigns it to the LoggingPrefix field.
func (o *OSBucketSetAccessLoggingReqBucket) SetLoggingPrefix(v string) {
	o.LoggingPrefix = &v
}

// GetLoggingTargetBucketId returns the LoggingTargetBucketId field value if set, zero value otherwise.
func (o *OSBucketSetAccessLoggingReqBucket) GetLoggingTargetBucketId() int64 {
	if o == nil || IsNil(o.LoggingTargetBucketId) {
		var ret int64
		return ret
	}
	return *o.LoggingTargetBucketId
}

// GetLoggingTargetBucketIdOk returns a tuple with the LoggingTargetBucketId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBucketSetAccessLoggingReqBucket) GetLoggingTargetBucketIdOk() (*int64, bool) {
	if o == nil || IsNil(o.LoggingTargetBucketId) {
		return nil, false
	}
	return o.LoggingTargetBucketId, true
}

// HasLoggingTargetBucketId returns a boolean if a field has been set.
func (o *OSBucketSetAccessLoggingReqBucket) HasLoggingTargetBucketId() bool {
	if o != nil && !IsNil(o.LoggingTargetBucketId) {
		return true
	}

	return false
}

// SetLoggingTargetBucketId gets a reference to the given int64 and assigns it to the LoggingTargetBucketId field.
func (o *OSBucketSetAccessLoggingReqBucket) SetLoggingTargetBucketId(v int64) {
	o.LoggingTargetBucketId = &v
}

func (o OSBucketSetAccessLoggingReqBucket) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OSBucketSetAccessLoggingReqBucket) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LoggingGrants) {
		toSerialize["logging_grants"] = o.LoggingGrants
	}
	if !IsNil(o.LoggingOwnerId) {
		toSerialize["logging_owner_id"] = o.LoggingOwnerId
	}
	if !IsNil(o.LoggingPrefix) {
		toSerialize["logging_prefix"] = o.LoggingPrefix
	}
	if !IsNil(o.LoggingTargetBucketId) {
		toSerialize["logging_target_bucket_id"] = o.LoggingTargetBucketId
	}
	return toSerialize, nil
}

type NullableOSBucketSetAccessLoggingReqBucket struct {
	value *OSBucketSetAccessLoggingReqBucket
	isSet bool
}

func (v NullableOSBucketSetAccessLoggingReqBucket) Get() *OSBucketSetAccessLoggingReqBucket {
	return v.value
}

func (v *NullableOSBucketSetAccessLoggingReqBucket) Set(val *OSBucketSetAccessLoggingReqBucket) {
	v.value = val
	v.isSet = true
}

func (v NullableOSBucketSetAccessLoggingReqBucket) IsSet() bool {
	return v.isSet
}

func (v *NullableOSBucketSetAccessLoggingReqBucket) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSBucketSetAccessLoggingReqBucket(val *OSBucketSetAccessLoggingReqBucket) *NullableOSBucketSetAccessLoggingReqBucket {
	return &NullableOSBucketSetAccessLoggingReqBucket{value: val, isSet: true}
}

func (v NullableOSBucketSetAccessLoggingReqBucket) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSBucketSetAccessLoggingReqBucket) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


