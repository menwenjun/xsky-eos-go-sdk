/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AlertWechatConfigUpdateReqAlertWechatConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertWechatConfigUpdateReqAlertWechatConfig{}

// AlertWechatConfigUpdateReqAlertWechatConfig struct for AlertWechatConfigUpdateReqAlertWechatConfig
type AlertWechatConfigUpdateReqAlertWechatConfig struct {
	AgentId *string `json:"agent_id,omitempty"`
	ApiSecret *string `json:"api_secret,omitempty"`
	ApiUrl *string `json:"api_url,omitempty"`
	CorpId *string `json:"corp_id,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	RsaKeyId *string `json:"rsa_key_id,omitempty"`
}

// NewAlertWechatConfigUpdateReqAlertWechatConfig instantiates a new AlertWechatConfigUpdateReqAlertWechatConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertWechatConfigUpdateReqAlertWechatConfig() *AlertWechatConfigUpdateReqAlertWechatConfig {
	this := AlertWechatConfigUpdateReqAlertWechatConfig{}
	return &this
}

// NewAlertWechatConfigUpdateReqAlertWechatConfigWithDefaults instantiates a new AlertWechatConfigUpdateReqAlertWechatConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertWechatConfigUpdateReqAlertWechatConfigWithDefaults() *AlertWechatConfigUpdateReqAlertWechatConfig {
	this := AlertWechatConfigUpdateReqAlertWechatConfig{}
	return &this
}

// GetAgentId returns the AgentId field value if set, zero value otherwise.
func (o *AlertWechatConfigUpdateReqAlertWechatConfig) GetAgentId() string {
	if o == nil || IsNil(o.AgentId) {
		var ret string
		return ret
	}
	return *o.AgentId
}

// GetAgentIdOk returns a tuple with the AgentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertWechatConfigUpdateReqAlertWechatConfig) GetAgentIdOk() (*string, bool) {
	if o == nil || IsNil(o.AgentId) {
		return nil, false
	}
	return o.AgentId, true
}

// HasAgentId returns a boolean if a field has been set.
func (o *AlertWechatConfigUpdateReqAlertWechatConfig) HasAgentId() bool {
	if o != nil && !IsNil(o.AgentId) {
		return true
	}

	return false
}

// SetAgentId gets a reference to the given string and assigns it to the AgentId field.
func (o *AlertWechatConfigUpdateReqAlertWechatConfig) SetAgentId(v string) {
	o.AgentId = &v
}

// GetApiSecret returns the ApiSecret field value if set, zero value otherwise.
func (o *AlertWechatConfigUpdateReqAlertWechatConfig) GetApiSecret() string {
	if o == nil || IsNil(o.ApiSecret) {
		var ret string
		return ret
	}
	return *o.ApiSecret
}

// GetApiSecretOk returns a tuple with the ApiSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertWechatConfigUpdateReqAlertWechatConfig) GetApiSecretOk() (*string, bool) {
	if o == nil || IsNil(o.ApiSecret) {
		return nil, false
	}
	return o.ApiSecret, true
}

// HasApiSecret returns a boolean if a field has been set.
func (o *AlertWechatConfigUpdateReqAlertWechatConfig) HasApiSecret() bool {
	if o != nil && !IsNil(o.ApiSecret) {
		return true
	}

	return false
}

// SetApiSecret gets a reference to the given string and assigns it to the ApiSecret field.
func (o *AlertWechatConfigUpdateReqAlertWechatConfig) SetApiSecret(v string) {
	o.ApiSecret = &v
}

// GetApiUrl returns the ApiUrl field value if set, zero value otherwise.
func (o *AlertWechatConfigUpdateReqAlertWechatConfig) GetApiUrl() string {
	if o == nil || IsNil(o.ApiUrl) {
		var ret string
		return ret
	}
	return *o.ApiUrl
}

// GetApiUrlOk returns a tuple with the ApiUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertWechatConfigUpdateReqAlertWechatConfig) GetApiUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ApiUrl) {
		return nil, false
	}
	return o.ApiUrl, true
}

// HasApiUrl returns a boolean if a field has been set.
func (o *AlertWechatConfigUpdateReqAlertWechatConfig) HasApiUrl() bool {
	if o != nil && !IsNil(o.ApiUrl) {
		return true
	}

	return false
}

// SetApiUrl gets a reference to the given string and assigns it to the ApiUrl field.
func (o *AlertWechatConfigUpdateReqAlertWechatConfig) SetApiUrl(v string) {
	o.ApiUrl = &v
}

// GetCorpId returns the CorpId field value if set, zero value otherwise.
func (o *AlertWechatConfigUpdateReqAlertWechatConfig) GetCorpId() string {
	if o == nil || IsNil(o.CorpId) {
		var ret string
		return ret
	}
	return *o.CorpId
}

// GetCorpIdOk returns a tuple with the CorpId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertWechatConfigUpdateReqAlertWechatConfig) GetCorpIdOk() (*string, bool) {
	if o == nil || IsNil(o.CorpId) {
		return nil, false
	}
	return o.CorpId, true
}

// HasCorpId returns a boolean if a field has been set.
func (o *AlertWechatConfigUpdateReqAlertWechatConfig) HasCorpId() bool {
	if o != nil && !IsNil(o.CorpId) {
		return true
	}

	return false
}

// SetCorpId gets a reference to the given string and assigns it to the CorpId field.
func (o *AlertWechatConfigUpdateReqAlertWechatConfig) SetCorpId(v string) {
	o.CorpId = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *AlertWechatConfigUpdateReqAlertWechatConfig) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertWechatConfigUpdateReqAlertWechatConfig) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *AlertWechatConfigUpdateReqAlertWechatConfig) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *AlertWechatConfigUpdateReqAlertWechatConfig) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetRsaKeyId returns the RsaKeyId field value if set, zero value otherwise.
func (o *AlertWechatConfigUpdateReqAlertWechatConfig) GetRsaKeyId() string {
	if o == nil || IsNil(o.RsaKeyId) {
		var ret string
		return ret
	}
	return *o.RsaKeyId
}

// GetRsaKeyIdOk returns a tuple with the RsaKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertWechatConfigUpdateReqAlertWechatConfig) GetRsaKeyIdOk() (*string, bool) {
	if o == nil || IsNil(o.RsaKeyId) {
		return nil, false
	}
	return o.RsaKeyId, true
}

// HasRsaKeyId returns a boolean if a field has been set.
func (o *AlertWechatConfigUpdateReqAlertWechatConfig) HasRsaKeyId() bool {
	if o != nil && !IsNil(o.RsaKeyId) {
		return true
	}

	return false
}

// SetRsaKeyId gets a reference to the given string and assigns it to the RsaKeyId field.
func (o *AlertWechatConfigUpdateReqAlertWechatConfig) SetRsaKeyId(v string) {
	o.RsaKeyId = &v
}

func (o AlertWechatConfigUpdateReqAlertWechatConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertWechatConfigUpdateReqAlertWechatConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AgentId) {
		toSerialize["agent_id"] = o.AgentId
	}
	if !IsNil(o.ApiSecret) {
		toSerialize["api_secret"] = o.ApiSecret
	}
	if !IsNil(o.ApiUrl) {
		toSerialize["api_url"] = o.ApiUrl
	}
	if !IsNil(o.CorpId) {
		toSerialize["corp_id"] = o.CorpId
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.RsaKeyId) {
		toSerialize["rsa_key_id"] = o.RsaKeyId
	}
	return toSerialize, nil
}

type NullableAlertWechatConfigUpdateReqAlertWechatConfig struct {
	value *AlertWechatConfigUpdateReqAlertWechatConfig
	isSet bool
}

func (v NullableAlertWechatConfigUpdateReqAlertWechatConfig) Get() *AlertWechatConfigUpdateReqAlertWechatConfig {
	return v.value
}

func (v *NullableAlertWechatConfigUpdateReqAlertWechatConfig) Set(val *AlertWechatConfigUpdateReqAlertWechatConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertWechatConfigUpdateReqAlertWechatConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertWechatConfigUpdateReqAlertWechatConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertWechatConfigUpdateReqAlertWechatConfig(val *AlertWechatConfigUpdateReqAlertWechatConfig) *NullableAlertWechatConfigUpdateReqAlertWechatConfig {
	return &NullableAlertWechatConfigUpdateReqAlertWechatConfig{value: val, isSet: true}
}

func (v NullableAlertWechatConfigUpdateReqAlertWechatConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertWechatConfigUpdateReqAlertWechatConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


