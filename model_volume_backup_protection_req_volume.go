/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the VolumeBackupProtectionReqVolume type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeBackupProtectionReqVolume{}

// VolumeBackupProtectionReqVolume struct for VolumeBackupProtectionReqVolume
type VolumeBackupProtectionReqVolume struct {
	// policy
	DpBlockBackupPolicyId int64 `json:"dp_block_backup_policy_id"`
}

type _VolumeBackupProtectionReqVolume VolumeBackupProtectionReqVolume

// NewVolumeBackupProtectionReqVolume instantiates a new VolumeBackupProtectionReqVolume object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeBackupProtectionReqVolume(dpBlockBackupPolicyId int64) *VolumeBackupProtectionReqVolume {
	this := VolumeBackupProtectionReqVolume{}
	this.DpBlockBackupPolicyId = dpBlockBackupPolicyId
	return &this
}

// NewVolumeBackupProtectionReqVolumeWithDefaults instantiates a new VolumeBackupProtectionReqVolume object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeBackupProtectionReqVolumeWithDefaults() *VolumeBackupProtectionReqVolume {
	this := VolumeBackupProtectionReqVolume{}
	return &this
}

// GetDpBlockBackupPolicyId returns the DpBlockBackupPolicyId field value
func (o *VolumeBackupProtectionReqVolume) GetDpBlockBackupPolicyId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DpBlockBackupPolicyId
}

// GetDpBlockBackupPolicyIdOk returns a tuple with the DpBlockBackupPolicyId field value
// and a boolean to check if the value has been set.
func (o *VolumeBackupProtectionReqVolume) GetDpBlockBackupPolicyIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DpBlockBackupPolicyId, true
}

// SetDpBlockBackupPolicyId sets field value
func (o *VolumeBackupProtectionReqVolume) SetDpBlockBackupPolicyId(v int64) {
	o.DpBlockBackupPolicyId = v
}

func (o VolumeBackupProtectionReqVolume) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeBackupProtectionReqVolume) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dp_block_backup_policy_id"] = o.DpBlockBackupPolicyId
	return toSerialize, nil
}

func (o *VolumeBackupProtectionReqVolume) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dp_block_backup_policy_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVolumeBackupProtectionReqVolume := _VolumeBackupProtectionReqVolume{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVolumeBackupProtectionReqVolume)

	if err != nil {
		return err
	}

	*o = VolumeBackupProtectionReqVolume(varVolumeBackupProtectionReqVolume)

	return err
}

type NullableVolumeBackupProtectionReqVolume struct {
	value *VolumeBackupProtectionReqVolume
	isSet bool
}

func (v NullableVolumeBackupProtectionReqVolume) Get() *VolumeBackupProtectionReqVolume {
	return v.value
}

func (v *NullableVolumeBackupProtectionReqVolume) Set(val *VolumeBackupProtectionReqVolume) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeBackupProtectionReqVolume) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeBackupProtectionReqVolume) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeBackupProtectionReqVolume(val *VolumeBackupProtectionReqVolume) *NullableVolumeBackupProtectionReqVolume {
	return &NullableVolumeBackupProtectionReqVolume{value: val, isSet: true}
}

func (v NullableVolumeBackupProtectionReqVolume) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeBackupProtectionReqVolume) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


