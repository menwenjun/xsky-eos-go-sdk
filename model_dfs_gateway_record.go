/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the DfsGatewayRecord type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsGatewayRecord{}

// DfsGatewayRecord DfsGatewayRecord combine DfsGateway and DfsGatewayStat as API response
type DfsGatewayRecord struct {
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	ConnNum *int64 `json:"conn_num,omitempty"`
	// container resource limit
	Cpus *int64 `json:"cpus,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	CtdbServiceStatus *string `json:"ctdb_service_status,omitempty"`
	DfsGatewayGroup *DfsGatewayGroupNestview `json:"dfs_gateway_group,omitempty"`
	Host *HostNestview `json:"host,omitempty"`
	Id *int64 `json:"id,omitempty"`
	MemoryKbyte *int64 `json:"memory_kbyte,omitempty"`
	S3Port *int64 `json:"s3_port,omitempty"`
	S3Scheme *string `json:"s3_scheme,omitempty"`
	SslCertificate *SSLCertificateNestview `json:"ssl_certificate,omitempty"`
	Status *string `json:"status,omitempty"`
	Update *time.Time `json:"update,omitempty"`
	Samples []DfsGatewayStat `json:"samples,omitempty"`
}

// NewDfsGatewayRecord instantiates a new DfsGatewayRecord object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsGatewayRecord() *DfsGatewayRecord {
	this := DfsGatewayRecord{}
	return &this
}

// NewDfsGatewayRecordWithDefaults instantiates a new DfsGatewayRecord object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsGatewayRecordWithDefaults() *DfsGatewayRecord {
	this := DfsGatewayRecord{}
	return &this
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *DfsGatewayRecord) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayRecord) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *DfsGatewayRecord) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *DfsGatewayRecord) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetConnNum returns the ConnNum field value if set, zero value otherwise.
func (o *DfsGatewayRecord) GetConnNum() int64 {
	if o == nil || IsNil(o.ConnNum) {
		var ret int64
		return ret
	}
	return *o.ConnNum
}

// GetConnNumOk returns a tuple with the ConnNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayRecord) GetConnNumOk() (*int64, bool) {
	if o == nil || IsNil(o.ConnNum) {
		return nil, false
	}
	return o.ConnNum, true
}

// HasConnNum returns a boolean if a field has been set.
func (o *DfsGatewayRecord) HasConnNum() bool {
	if o != nil && !IsNil(o.ConnNum) {
		return true
	}

	return false
}

// SetConnNum gets a reference to the given int64 and assigns it to the ConnNum field.
func (o *DfsGatewayRecord) SetConnNum(v int64) {
	o.ConnNum = &v
}

// GetCpus returns the Cpus field value if set, zero value otherwise.
func (o *DfsGatewayRecord) GetCpus() int64 {
	if o == nil || IsNil(o.Cpus) {
		var ret int64
		return ret
	}
	return *o.Cpus
}

// GetCpusOk returns a tuple with the Cpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayRecord) GetCpusOk() (*int64, bool) {
	if o == nil || IsNil(o.Cpus) {
		return nil, false
	}
	return o.Cpus, true
}

// HasCpus returns a boolean if a field has been set.
func (o *DfsGatewayRecord) HasCpus() bool {
	if o != nil && !IsNil(o.Cpus) {
		return true
	}

	return false
}

// SetCpus gets a reference to the given int64 and assigns it to the Cpus field.
func (o *DfsGatewayRecord) SetCpus(v int64) {
	o.Cpus = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *DfsGatewayRecord) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayRecord) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *DfsGatewayRecord) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *DfsGatewayRecord) SetCreate(v time.Time) {
	o.Create = &v
}

// GetCtdbServiceStatus returns the CtdbServiceStatus field value if set, zero value otherwise.
func (o *DfsGatewayRecord) GetCtdbServiceStatus() string {
	if o == nil || IsNil(o.CtdbServiceStatus) {
		var ret string
		return ret
	}
	return *o.CtdbServiceStatus
}

// GetCtdbServiceStatusOk returns a tuple with the CtdbServiceStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayRecord) GetCtdbServiceStatusOk() (*string, bool) {
	if o == nil || IsNil(o.CtdbServiceStatus) {
		return nil, false
	}
	return o.CtdbServiceStatus, true
}

// HasCtdbServiceStatus returns a boolean if a field has been set.
func (o *DfsGatewayRecord) HasCtdbServiceStatus() bool {
	if o != nil && !IsNil(o.CtdbServiceStatus) {
		return true
	}

	return false
}

// SetCtdbServiceStatus gets a reference to the given string and assigns it to the CtdbServiceStatus field.
func (o *DfsGatewayRecord) SetCtdbServiceStatus(v string) {
	o.CtdbServiceStatus = &v
}

// GetDfsGatewayGroup returns the DfsGatewayGroup field value if set, zero value otherwise.
func (o *DfsGatewayRecord) GetDfsGatewayGroup() DfsGatewayGroupNestview {
	if o == nil || IsNil(o.DfsGatewayGroup) {
		var ret DfsGatewayGroupNestview
		return ret
	}
	return *o.DfsGatewayGroup
}

// GetDfsGatewayGroupOk returns a tuple with the DfsGatewayGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayRecord) GetDfsGatewayGroupOk() (*DfsGatewayGroupNestview, bool) {
	if o == nil || IsNil(o.DfsGatewayGroup) {
		return nil, false
	}
	return o.DfsGatewayGroup, true
}

// HasDfsGatewayGroup returns a boolean if a field has been set.
func (o *DfsGatewayRecord) HasDfsGatewayGroup() bool {
	if o != nil && !IsNil(o.DfsGatewayGroup) {
		return true
	}

	return false
}

// SetDfsGatewayGroup gets a reference to the given DfsGatewayGroupNestview and assigns it to the DfsGatewayGroup field.
func (o *DfsGatewayRecord) SetDfsGatewayGroup(v DfsGatewayGroupNestview) {
	o.DfsGatewayGroup = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *DfsGatewayRecord) GetHost() HostNestview {
	if o == nil || IsNil(o.Host) {
		var ret HostNestview
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayRecord) GetHostOk() (*HostNestview, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *DfsGatewayRecord) HasHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given HostNestview and assigns it to the Host field.
func (o *DfsGatewayRecord) SetHost(v HostNestview) {
	o.Host = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DfsGatewayRecord) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayRecord) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DfsGatewayRecord) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *DfsGatewayRecord) SetId(v int64) {
	o.Id = &v
}

// GetMemoryKbyte returns the MemoryKbyte field value if set, zero value otherwise.
func (o *DfsGatewayRecord) GetMemoryKbyte() int64 {
	if o == nil || IsNil(o.MemoryKbyte) {
		var ret int64
		return ret
	}
	return *o.MemoryKbyte
}

// GetMemoryKbyteOk returns a tuple with the MemoryKbyte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayRecord) GetMemoryKbyteOk() (*int64, bool) {
	if o == nil || IsNil(o.MemoryKbyte) {
		return nil, false
	}
	return o.MemoryKbyte, true
}

// HasMemoryKbyte returns a boolean if a field has been set.
func (o *DfsGatewayRecord) HasMemoryKbyte() bool {
	if o != nil && !IsNil(o.MemoryKbyte) {
		return true
	}

	return false
}

// SetMemoryKbyte gets a reference to the given int64 and assigns it to the MemoryKbyte field.
func (o *DfsGatewayRecord) SetMemoryKbyte(v int64) {
	o.MemoryKbyte = &v
}

// GetS3Port returns the S3Port field value if set, zero value otherwise.
func (o *DfsGatewayRecord) GetS3Port() int64 {
	if o == nil || IsNil(o.S3Port) {
		var ret int64
		return ret
	}
	return *o.S3Port
}

// GetS3PortOk returns a tuple with the S3Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayRecord) GetS3PortOk() (*int64, bool) {
	if o == nil || IsNil(o.S3Port) {
		return nil, false
	}
	return o.S3Port, true
}

// HasS3Port returns a boolean if a field has been set.
func (o *DfsGatewayRecord) HasS3Port() bool {
	if o != nil && !IsNil(o.S3Port) {
		return true
	}

	return false
}

// SetS3Port gets a reference to the given int64 and assigns it to the S3Port field.
func (o *DfsGatewayRecord) SetS3Port(v int64) {
	o.S3Port = &v
}

// GetS3Scheme returns the S3Scheme field value if set, zero value otherwise.
func (o *DfsGatewayRecord) GetS3Scheme() string {
	if o == nil || IsNil(o.S3Scheme) {
		var ret string
		return ret
	}
	return *o.S3Scheme
}

// GetS3SchemeOk returns a tuple with the S3Scheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayRecord) GetS3SchemeOk() (*string, bool) {
	if o == nil || IsNil(o.S3Scheme) {
		return nil, false
	}
	return o.S3Scheme, true
}

// HasS3Scheme returns a boolean if a field has been set.
func (o *DfsGatewayRecord) HasS3Scheme() bool {
	if o != nil && !IsNil(o.S3Scheme) {
		return true
	}

	return false
}

// SetS3Scheme gets a reference to the given string and assigns it to the S3Scheme field.
func (o *DfsGatewayRecord) SetS3Scheme(v string) {
	o.S3Scheme = &v
}

// GetSslCertificate returns the SslCertificate field value if set, zero value otherwise.
func (o *DfsGatewayRecord) GetSslCertificate() SSLCertificateNestview {
	if o == nil || IsNil(o.SslCertificate) {
		var ret SSLCertificateNestview
		return ret
	}
	return *o.SslCertificate
}

// GetSslCertificateOk returns a tuple with the SslCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayRecord) GetSslCertificateOk() (*SSLCertificateNestview, bool) {
	if o == nil || IsNil(o.SslCertificate) {
		return nil, false
	}
	return o.SslCertificate, true
}

// HasSslCertificate returns a boolean if a field has been set.
func (o *DfsGatewayRecord) HasSslCertificate() bool {
	if o != nil && !IsNil(o.SslCertificate) {
		return true
	}

	return false
}

// SetSslCertificate gets a reference to the given SSLCertificateNestview and assigns it to the SslCertificate field.
func (o *DfsGatewayRecord) SetSslCertificate(v SSLCertificateNestview) {
	o.SslCertificate = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DfsGatewayRecord) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayRecord) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DfsGatewayRecord) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DfsGatewayRecord) SetStatus(v string) {
	o.Status = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *DfsGatewayRecord) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayRecord) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *DfsGatewayRecord) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *DfsGatewayRecord) SetUpdate(v time.Time) {
	o.Update = &v
}

// GetSamples returns the Samples field value if set, zero value otherwise.
func (o *DfsGatewayRecord) GetSamples() []DfsGatewayStat {
	if o == nil || IsNil(o.Samples) {
		var ret []DfsGatewayStat
		return ret
	}
	return o.Samples
}

// GetSamplesOk returns a tuple with the Samples field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayRecord) GetSamplesOk() ([]DfsGatewayStat, bool) {
	if o == nil || IsNil(o.Samples) {
		return nil, false
	}
	return o.Samples, true
}

// HasSamples returns a boolean if a field has been set.
func (o *DfsGatewayRecord) HasSamples() bool {
	if o != nil && !IsNil(o.Samples) {
		return true
	}

	return false
}

// SetSamples gets a reference to the given []DfsGatewayStat and assigns it to the Samples field.
func (o *DfsGatewayRecord) SetSamples(v []DfsGatewayStat) {
	o.Samples = v
}

func (o DfsGatewayRecord) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsGatewayRecord) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.ConnNum) {
		toSerialize["conn_num"] = o.ConnNum
	}
	if !IsNil(o.Cpus) {
		toSerialize["cpus"] = o.Cpus
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.CtdbServiceStatus) {
		toSerialize["ctdb_service_status"] = o.CtdbServiceStatus
	}
	if !IsNil(o.DfsGatewayGroup) {
		toSerialize["dfs_gateway_group"] = o.DfsGatewayGroup
	}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.MemoryKbyte) {
		toSerialize["memory_kbyte"] = o.MemoryKbyte
	}
	if !IsNil(o.S3Port) {
		toSerialize["s3_port"] = o.S3Port
	}
	if !IsNil(o.S3Scheme) {
		toSerialize["s3_scheme"] = o.S3Scheme
	}
	if !IsNil(o.SslCertificate) {
		toSerialize["ssl_certificate"] = o.SslCertificate
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	if !IsNil(o.Samples) {
		toSerialize["samples"] = o.Samples
	}
	return toSerialize, nil
}

type NullableDfsGatewayRecord struct {
	value *DfsGatewayRecord
	isSet bool
}

func (v NullableDfsGatewayRecord) Get() *DfsGatewayRecord {
	return v.value
}

func (v *NullableDfsGatewayRecord) Set(val *DfsGatewayRecord) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsGatewayRecord) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsGatewayRecord) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsGatewayRecord(val *DfsGatewayRecord) *NullableDfsGatewayRecord {
	return &NullableDfsGatewayRecord{value: val, isSet: true}
}

func (v NullableDfsGatewayRecord) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsGatewayRecord) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


