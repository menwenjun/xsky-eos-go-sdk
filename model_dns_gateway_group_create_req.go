/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DNSGatewayGroupCreateReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DNSGatewayGroupCreateReq{}

// DNSGatewayGroupCreateReq struct for DNSGatewayGroupCreateReq
type DNSGatewayGroupCreateReq struct {
	DnsGatewayGroup DNSGatewayGroupCreateReqGroup `json:"dns_gateway_group"`
}

type _DNSGatewayGroupCreateReq DNSGatewayGroupCreateReq

// NewDNSGatewayGroupCreateReq instantiates a new DNSGatewayGroupCreateReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDNSGatewayGroupCreateReq(dnsGatewayGroup DNSGatewayGroupCreateReqGroup) *DNSGatewayGroupCreateReq {
	this := DNSGatewayGroupCreateReq{}
	this.DnsGatewayGroup = dnsGatewayGroup
	return &this
}

// NewDNSGatewayGroupCreateReqWithDefaults instantiates a new DNSGatewayGroupCreateReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDNSGatewayGroupCreateReqWithDefaults() *DNSGatewayGroupCreateReq {
	this := DNSGatewayGroupCreateReq{}
	return &this
}

// GetDnsGatewayGroup returns the DnsGatewayGroup field value
func (o *DNSGatewayGroupCreateReq) GetDnsGatewayGroup() DNSGatewayGroupCreateReqGroup {
	if o == nil {
		var ret DNSGatewayGroupCreateReqGroup
		return ret
	}

	return o.DnsGatewayGroup
}

// GetDnsGatewayGroupOk returns a tuple with the DnsGatewayGroup field value
// and a boolean to check if the value has been set.
func (o *DNSGatewayGroupCreateReq) GetDnsGatewayGroupOk() (*DNSGatewayGroupCreateReqGroup, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DnsGatewayGroup, true
}

// SetDnsGatewayGroup sets field value
func (o *DNSGatewayGroupCreateReq) SetDnsGatewayGroup(v DNSGatewayGroupCreateReqGroup) {
	o.DnsGatewayGroup = v
}

func (o DNSGatewayGroupCreateReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DNSGatewayGroupCreateReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dns_gateway_group"] = o.DnsGatewayGroup
	return toSerialize, nil
}

func (o *DNSGatewayGroupCreateReq) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dns_gateway_group",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDNSGatewayGroupCreateReq := _DNSGatewayGroupCreateReq{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDNSGatewayGroupCreateReq)

	if err != nil {
		return err
	}

	*o = DNSGatewayGroupCreateReq(varDNSGatewayGroupCreateReq)

	return err
}

type NullableDNSGatewayGroupCreateReq struct {
	value *DNSGatewayGroupCreateReq
	isSet bool
}

func (v NullableDNSGatewayGroupCreateReq) Get() *DNSGatewayGroupCreateReq {
	return v.value
}

func (v *NullableDNSGatewayGroupCreateReq) Set(val *DNSGatewayGroupCreateReq) {
	v.value = val
	v.isSet = true
}

func (v NullableDNSGatewayGroupCreateReq) IsSet() bool {
	return v.isSet
}

func (v *NullableDNSGatewayGroupCreateReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDNSGatewayGroupCreateReq(val *DNSGatewayGroupCreateReq) *NullableDNSGatewayGroupCreateReq {
	return &NullableDNSGatewayGroupCreateReq{value: val, isSet: true}
}

func (v NullableDNSGatewayGroupCreateReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDNSGatewayGroupCreateReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


