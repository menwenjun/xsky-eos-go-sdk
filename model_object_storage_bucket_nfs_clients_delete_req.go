/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ObjectStorageBucketNFSClientsDeleteReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ObjectStorageBucketNFSClientsDeleteReq{}

// ObjectStorageBucketNFSClientsDeleteReq struct for ObjectStorageBucketNFSClientsDeleteReq
type ObjectStorageBucketNFSClientsDeleteReq struct {
	ClientIds []int64 `json:"client_ids"`
}

type _ObjectStorageBucketNFSClientsDeleteReq ObjectStorageBucketNFSClientsDeleteReq

// NewObjectStorageBucketNFSClientsDeleteReq instantiates a new ObjectStorageBucketNFSClientsDeleteReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectStorageBucketNFSClientsDeleteReq(clientIds []int64) *ObjectStorageBucketNFSClientsDeleteReq {
	this := ObjectStorageBucketNFSClientsDeleteReq{}
	this.ClientIds = clientIds
	return &this
}

// NewObjectStorageBucketNFSClientsDeleteReqWithDefaults instantiates a new ObjectStorageBucketNFSClientsDeleteReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectStorageBucketNFSClientsDeleteReqWithDefaults() *ObjectStorageBucketNFSClientsDeleteReq {
	this := ObjectStorageBucketNFSClientsDeleteReq{}
	return &this
}

// GetClientIds returns the ClientIds field value
func (o *ObjectStorageBucketNFSClientsDeleteReq) GetClientIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}

	return o.ClientIds
}

// GetClientIdsOk returns a tuple with the ClientIds field value
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketNFSClientsDeleteReq) GetClientIdsOk() ([]int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClientIds, true
}

// SetClientIds sets field value
func (o *ObjectStorageBucketNFSClientsDeleteReq) SetClientIds(v []int64) {
	o.ClientIds = v
}

func (o ObjectStorageBucketNFSClientsDeleteReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ObjectStorageBucketNFSClientsDeleteReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["client_ids"] = o.ClientIds
	return toSerialize, nil
}

func (o *ObjectStorageBucketNFSClientsDeleteReq) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"client_ids",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varObjectStorageBucketNFSClientsDeleteReq := _ObjectStorageBucketNFSClientsDeleteReq{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varObjectStorageBucketNFSClientsDeleteReq)

	if err != nil {
		return err
	}

	*o = ObjectStorageBucketNFSClientsDeleteReq(varObjectStorageBucketNFSClientsDeleteReq)

	return err
}

type NullableObjectStorageBucketNFSClientsDeleteReq struct {
	value *ObjectStorageBucketNFSClientsDeleteReq
	isSet bool
}

func (v NullableObjectStorageBucketNFSClientsDeleteReq) Get() *ObjectStorageBucketNFSClientsDeleteReq {
	return v.value
}

func (v *NullableObjectStorageBucketNFSClientsDeleteReq) Set(val *ObjectStorageBucketNFSClientsDeleteReq) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectStorageBucketNFSClientsDeleteReq) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectStorageBucketNFSClientsDeleteReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectStorageBucketNFSClientsDeleteReq(val *ObjectStorageBucketNFSClientsDeleteReq) *NullableObjectStorageBucketNFSClientsDeleteReq {
	return &NullableObjectStorageBucketNFSClientsDeleteReq{value: val, isSet: true}
}

func (v NullableObjectStorageBucketNFSClientsDeleteReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectStorageBucketNFSClientsDeleteReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


