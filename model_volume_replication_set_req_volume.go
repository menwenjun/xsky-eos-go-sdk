/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the VolumeReplicationSetReqVolume type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeReplicationSetReqVolume{}

// VolumeReplicationSetReqVolume struct for VolumeReplicationSetReqVolume
type VolumeReplicationSetReqVolume struct {
	// destination pool id
	DestPoolId *int64 `json:"dest_pool_id,omitempty"`
	// destination volume name
	DestVolumeName *string `json:"dest_volume_name,omitempty"`
	// block replication policy id
	DpBlockReplicationPolicyId *int64 `json:"dp_block_replication_policy_id,omitempty"`
	// remote cluster
	RemoteClusterFsId *string `json:"remote_cluster_fs_id,omitempty"`
	// replication peer pool
	ReplicationPool *string `json:"replication_pool,omitempty"`
	// replication peer pool id
	ReplicationPoolId *int64 `json:"replication_pool_id,omitempty"`
	// replication peer pool name
	ReplicationPoolName *string `json:"replication_pool_name,omitempty"`
	// replication version
	ReplicationVersion *int64 `json:"replication_version,omitempty"`
	// replication peer volume
	ReplicationVolume *string `json:"replication_volume,omitempty"`
	// replication peer volume id
	ReplicationVolumeId *int64 `json:"replication_volume_id,omitempty"`
	// replication peer volume name
	ReplicationVolumeName *string `json:"replication_volume_name,omitempty"`
}

// NewVolumeReplicationSetReqVolume instantiates a new VolumeReplicationSetReqVolume object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeReplicationSetReqVolume() *VolumeReplicationSetReqVolume {
	this := VolumeReplicationSetReqVolume{}
	return &this
}

// NewVolumeReplicationSetReqVolumeWithDefaults instantiates a new VolumeReplicationSetReqVolume object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeReplicationSetReqVolumeWithDefaults() *VolumeReplicationSetReqVolume {
	this := VolumeReplicationSetReqVolume{}
	return &this
}

// GetDestPoolId returns the DestPoolId field value if set, zero value otherwise.
func (o *VolumeReplicationSetReqVolume) GetDestPoolId() int64 {
	if o == nil || IsNil(o.DestPoolId) {
		var ret int64
		return ret
	}
	return *o.DestPoolId
}

// GetDestPoolIdOk returns a tuple with the DestPoolId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeReplicationSetReqVolume) GetDestPoolIdOk() (*int64, bool) {
	if o == nil || IsNil(o.DestPoolId) {
		return nil, false
	}
	return o.DestPoolId, true
}

// HasDestPoolId returns a boolean if a field has been set.
func (o *VolumeReplicationSetReqVolume) HasDestPoolId() bool {
	if o != nil && !IsNil(o.DestPoolId) {
		return true
	}

	return false
}

// SetDestPoolId gets a reference to the given int64 and assigns it to the DestPoolId field.
func (o *VolumeReplicationSetReqVolume) SetDestPoolId(v int64) {
	o.DestPoolId = &v
}

// GetDestVolumeName returns the DestVolumeName field value if set, zero value otherwise.
func (o *VolumeReplicationSetReqVolume) GetDestVolumeName() string {
	if o == nil || IsNil(o.DestVolumeName) {
		var ret string
		return ret
	}
	return *o.DestVolumeName
}

// GetDestVolumeNameOk returns a tuple with the DestVolumeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeReplicationSetReqVolume) GetDestVolumeNameOk() (*string, bool) {
	if o == nil || IsNil(o.DestVolumeName) {
		return nil, false
	}
	return o.DestVolumeName, true
}

// HasDestVolumeName returns a boolean if a field has been set.
func (o *VolumeReplicationSetReqVolume) HasDestVolumeName() bool {
	if o != nil && !IsNil(o.DestVolumeName) {
		return true
	}

	return false
}

// SetDestVolumeName gets a reference to the given string and assigns it to the DestVolumeName field.
func (o *VolumeReplicationSetReqVolume) SetDestVolumeName(v string) {
	o.DestVolumeName = &v
}

// GetDpBlockReplicationPolicyId returns the DpBlockReplicationPolicyId field value if set, zero value otherwise.
func (o *VolumeReplicationSetReqVolume) GetDpBlockReplicationPolicyId() int64 {
	if o == nil || IsNil(o.DpBlockReplicationPolicyId) {
		var ret int64
		return ret
	}
	return *o.DpBlockReplicationPolicyId
}

// GetDpBlockReplicationPolicyIdOk returns a tuple with the DpBlockReplicationPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeReplicationSetReqVolume) GetDpBlockReplicationPolicyIdOk() (*int64, bool) {
	if o == nil || IsNil(o.DpBlockReplicationPolicyId) {
		return nil, false
	}
	return o.DpBlockReplicationPolicyId, true
}

// HasDpBlockReplicationPolicyId returns a boolean if a field has been set.
func (o *VolumeReplicationSetReqVolume) HasDpBlockReplicationPolicyId() bool {
	if o != nil && !IsNil(o.DpBlockReplicationPolicyId) {
		return true
	}

	return false
}

// SetDpBlockReplicationPolicyId gets a reference to the given int64 and assigns it to the DpBlockReplicationPolicyId field.
func (o *VolumeReplicationSetReqVolume) SetDpBlockReplicationPolicyId(v int64) {
	o.DpBlockReplicationPolicyId = &v
}

// GetRemoteClusterFsId returns the RemoteClusterFsId field value if set, zero value otherwise.
func (o *VolumeReplicationSetReqVolume) GetRemoteClusterFsId() string {
	if o == nil || IsNil(o.RemoteClusterFsId) {
		var ret string
		return ret
	}
	return *o.RemoteClusterFsId
}

// GetRemoteClusterFsIdOk returns a tuple with the RemoteClusterFsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeReplicationSetReqVolume) GetRemoteClusterFsIdOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteClusterFsId) {
		return nil, false
	}
	return o.RemoteClusterFsId, true
}

// HasRemoteClusterFsId returns a boolean if a field has been set.
func (o *VolumeReplicationSetReqVolume) HasRemoteClusterFsId() bool {
	if o != nil && !IsNil(o.RemoteClusterFsId) {
		return true
	}

	return false
}

// SetRemoteClusterFsId gets a reference to the given string and assigns it to the RemoteClusterFsId field.
func (o *VolumeReplicationSetReqVolume) SetRemoteClusterFsId(v string) {
	o.RemoteClusterFsId = &v
}

// GetReplicationPool returns the ReplicationPool field value if set, zero value otherwise.
func (o *VolumeReplicationSetReqVolume) GetReplicationPool() string {
	if o == nil || IsNil(o.ReplicationPool) {
		var ret string
		return ret
	}
	return *o.ReplicationPool
}

// GetReplicationPoolOk returns a tuple with the ReplicationPool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeReplicationSetReqVolume) GetReplicationPoolOk() (*string, bool) {
	if o == nil || IsNil(o.ReplicationPool) {
		return nil, false
	}
	return o.ReplicationPool, true
}

// HasReplicationPool returns a boolean if a field has been set.
func (o *VolumeReplicationSetReqVolume) HasReplicationPool() bool {
	if o != nil && !IsNil(o.ReplicationPool) {
		return true
	}

	return false
}

// SetReplicationPool gets a reference to the given string and assigns it to the ReplicationPool field.
func (o *VolumeReplicationSetReqVolume) SetReplicationPool(v string) {
	o.ReplicationPool = &v
}

// GetReplicationPoolId returns the ReplicationPoolId field value if set, zero value otherwise.
func (o *VolumeReplicationSetReqVolume) GetReplicationPoolId() int64 {
	if o == nil || IsNil(o.ReplicationPoolId) {
		var ret int64
		return ret
	}
	return *o.ReplicationPoolId
}

// GetReplicationPoolIdOk returns a tuple with the ReplicationPoolId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeReplicationSetReqVolume) GetReplicationPoolIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ReplicationPoolId) {
		return nil, false
	}
	return o.ReplicationPoolId, true
}

// HasReplicationPoolId returns a boolean if a field has been set.
func (o *VolumeReplicationSetReqVolume) HasReplicationPoolId() bool {
	if o != nil && !IsNil(o.ReplicationPoolId) {
		return true
	}

	return false
}

// SetReplicationPoolId gets a reference to the given int64 and assigns it to the ReplicationPoolId field.
func (o *VolumeReplicationSetReqVolume) SetReplicationPoolId(v int64) {
	o.ReplicationPoolId = &v
}

// GetReplicationPoolName returns the ReplicationPoolName field value if set, zero value otherwise.
func (o *VolumeReplicationSetReqVolume) GetReplicationPoolName() string {
	if o == nil || IsNil(o.ReplicationPoolName) {
		var ret string
		return ret
	}
	return *o.ReplicationPoolName
}

// GetReplicationPoolNameOk returns a tuple with the ReplicationPoolName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeReplicationSetReqVolume) GetReplicationPoolNameOk() (*string, bool) {
	if o == nil || IsNil(o.ReplicationPoolName) {
		return nil, false
	}
	return o.ReplicationPoolName, true
}

// HasReplicationPoolName returns a boolean if a field has been set.
func (o *VolumeReplicationSetReqVolume) HasReplicationPoolName() bool {
	if o != nil && !IsNil(o.ReplicationPoolName) {
		return true
	}

	return false
}

// SetReplicationPoolName gets a reference to the given string and assigns it to the ReplicationPoolName field.
func (o *VolumeReplicationSetReqVolume) SetReplicationPoolName(v string) {
	o.ReplicationPoolName = &v
}

// GetReplicationVersion returns the ReplicationVersion field value if set, zero value otherwise.
func (o *VolumeReplicationSetReqVolume) GetReplicationVersion() int64 {
	if o == nil || IsNil(o.ReplicationVersion) {
		var ret int64
		return ret
	}
	return *o.ReplicationVersion
}

// GetReplicationVersionOk returns a tuple with the ReplicationVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeReplicationSetReqVolume) GetReplicationVersionOk() (*int64, bool) {
	if o == nil || IsNil(o.ReplicationVersion) {
		return nil, false
	}
	return o.ReplicationVersion, true
}

// HasReplicationVersion returns a boolean if a field has been set.
func (o *VolumeReplicationSetReqVolume) HasReplicationVersion() bool {
	if o != nil && !IsNil(o.ReplicationVersion) {
		return true
	}

	return false
}

// SetReplicationVersion gets a reference to the given int64 and assigns it to the ReplicationVersion field.
func (o *VolumeReplicationSetReqVolume) SetReplicationVersion(v int64) {
	o.ReplicationVersion = &v
}

// GetReplicationVolume returns the ReplicationVolume field value if set, zero value otherwise.
func (o *VolumeReplicationSetReqVolume) GetReplicationVolume() string {
	if o == nil || IsNil(o.ReplicationVolume) {
		var ret string
		return ret
	}
	return *o.ReplicationVolume
}

// GetReplicationVolumeOk returns a tuple with the ReplicationVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeReplicationSetReqVolume) GetReplicationVolumeOk() (*string, bool) {
	if o == nil || IsNil(o.ReplicationVolume) {
		return nil, false
	}
	return o.ReplicationVolume, true
}

// HasReplicationVolume returns a boolean if a field has been set.
func (o *VolumeReplicationSetReqVolume) HasReplicationVolume() bool {
	if o != nil && !IsNil(o.ReplicationVolume) {
		return true
	}

	return false
}

// SetReplicationVolume gets a reference to the given string and assigns it to the ReplicationVolume field.
func (o *VolumeReplicationSetReqVolume) SetReplicationVolume(v string) {
	o.ReplicationVolume = &v
}

// GetReplicationVolumeId returns the ReplicationVolumeId field value if set, zero value otherwise.
func (o *VolumeReplicationSetReqVolume) GetReplicationVolumeId() int64 {
	if o == nil || IsNil(o.ReplicationVolumeId) {
		var ret int64
		return ret
	}
	return *o.ReplicationVolumeId
}

// GetReplicationVolumeIdOk returns a tuple with the ReplicationVolumeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeReplicationSetReqVolume) GetReplicationVolumeIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ReplicationVolumeId) {
		return nil, false
	}
	return o.ReplicationVolumeId, true
}

// HasReplicationVolumeId returns a boolean if a field has been set.
func (o *VolumeReplicationSetReqVolume) HasReplicationVolumeId() bool {
	if o != nil && !IsNil(o.ReplicationVolumeId) {
		return true
	}

	return false
}

// SetReplicationVolumeId gets a reference to the given int64 and assigns it to the ReplicationVolumeId field.
func (o *VolumeReplicationSetReqVolume) SetReplicationVolumeId(v int64) {
	o.ReplicationVolumeId = &v
}

// GetReplicationVolumeName returns the ReplicationVolumeName field value if set, zero value otherwise.
func (o *VolumeReplicationSetReqVolume) GetReplicationVolumeName() string {
	if o == nil || IsNil(o.ReplicationVolumeName) {
		var ret string
		return ret
	}
	return *o.ReplicationVolumeName
}

// GetReplicationVolumeNameOk returns a tuple with the ReplicationVolumeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeReplicationSetReqVolume) GetReplicationVolumeNameOk() (*string, bool) {
	if o == nil || IsNil(o.ReplicationVolumeName) {
		return nil, false
	}
	return o.ReplicationVolumeName, true
}

// HasReplicationVolumeName returns a boolean if a field has been set.
func (o *VolumeReplicationSetReqVolume) HasReplicationVolumeName() bool {
	if o != nil && !IsNil(o.ReplicationVolumeName) {
		return true
	}

	return false
}

// SetReplicationVolumeName gets a reference to the given string and assigns it to the ReplicationVolumeName field.
func (o *VolumeReplicationSetReqVolume) SetReplicationVolumeName(v string) {
	o.ReplicationVolumeName = &v
}

func (o VolumeReplicationSetReqVolume) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeReplicationSetReqVolume) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DestPoolId) {
		toSerialize["dest_pool_id"] = o.DestPoolId
	}
	if !IsNil(o.DestVolumeName) {
		toSerialize["dest_volume_name"] = o.DestVolumeName
	}
	if !IsNil(o.DpBlockReplicationPolicyId) {
		toSerialize["dp_block_replication_policy_id"] = o.DpBlockReplicationPolicyId
	}
	if !IsNil(o.RemoteClusterFsId) {
		toSerialize["remote_cluster_fs_id"] = o.RemoteClusterFsId
	}
	if !IsNil(o.ReplicationPool) {
		toSerialize["replication_pool"] = o.ReplicationPool
	}
	if !IsNil(o.ReplicationPoolId) {
		toSerialize["replication_pool_id"] = o.ReplicationPoolId
	}
	if !IsNil(o.ReplicationPoolName) {
		toSerialize["replication_pool_name"] = o.ReplicationPoolName
	}
	if !IsNil(o.ReplicationVersion) {
		toSerialize["replication_version"] = o.ReplicationVersion
	}
	if !IsNil(o.ReplicationVolume) {
		toSerialize["replication_volume"] = o.ReplicationVolume
	}
	if !IsNil(o.ReplicationVolumeId) {
		toSerialize["replication_volume_id"] = o.ReplicationVolumeId
	}
	if !IsNil(o.ReplicationVolumeName) {
		toSerialize["replication_volume_name"] = o.ReplicationVolumeName
	}
	return toSerialize, nil
}

type NullableVolumeReplicationSetReqVolume struct {
	value *VolumeReplicationSetReqVolume
	isSet bool
}

func (v NullableVolumeReplicationSetReqVolume) Get() *VolumeReplicationSetReqVolume {
	return v.value
}

func (v *NullableVolumeReplicationSetReqVolume) Set(val *VolumeReplicationSetReqVolume) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeReplicationSetReqVolume) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeReplicationSetReqVolume) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeReplicationSetReqVolume(val *VolumeReplicationSetReqVolume) *NullableVolumeReplicationSetReqVolume {
	return &NullableVolumeReplicationSetReqVolume{value: val, isSet: true}
}

func (v NullableVolumeReplicationSetReqVolume) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeReplicationSetReqVolume) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


