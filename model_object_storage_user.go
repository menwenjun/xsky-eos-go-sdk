/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the ObjectStorageUser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ObjectStorageUser{}

// ObjectStorageUser ObjectStorageUser is the model of object_storage_user
type ObjectStorageUser struct {
	BucketNum *int64 `json:"bucket_num,omitempty"`
	BucketQuotaMaxObjects *int64 `json:"bucket_quota_max_objects,omitempty"`
	BucketQuotaMaxSize *int64 `json:"bucket_quota_max_size,omitempty"`
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	Description *string `json:"description,omitempty"`
	DisplayName *string `json:"display_name,omitempty"`
	Email *string `json:"email,omitempty"`
	ExternalBucketQuotaMaxObjects *int64 `json:"external_bucket_quota_max_objects,omitempty"`
	ExternalBucketQuotaMaxSize *int64 `json:"external_bucket_quota_max_size,omitempty"`
	ExternalUserQuotaMaxObjects *int64 `json:"external_user_quota_max_objects,omitempty"`
	ExternalUserQuotaMaxSize *int64 `json:"external_user_quota_max_size,omitempty"`
	Id *int64 `json:"id,omitempty"`
	LocalBucketQuotaMaxObjects *int64 `json:"local_bucket_quota_max_objects,omitempty"`
	LocalBucketQuotaMaxSize *int64 `json:"local_bucket_quota_max_size,omitempty"`
	LocalUserQuotaMaxObjects *int64 `json:"local_user_quota_max_objects,omitempty"`
	LocalUserQuotaMaxSize *int64 `json:"local_user_quota_max_size,omitempty"`
	LocationConstraintEnabled *bool `json:"location_constraint_enabled,omitempty"`
	MaxBuckets *int64 `json:"max_buckets,omitempty"`
	Name *string `json:"name,omitempty"`
	OpMask *string `json:"op_mask,omitempty"`
	Parent *ObjectStorageUserNestview `json:"parent,omitempty"`
	Policy *ObjectStoragePolicyNestview `json:"policy,omitempty"`
	PolicyPollingEnabled *bool `json:"policy_polling_enabled,omitempty"`
	Properties *OSUserProperties `json:"properties,omitempty"`
	Status *string `json:"status,omitempty"`
	Suspended *bool `json:"suspended,omitempty"`
	Update *time.Time `json:"update,omitempty"`
	UserQuotaMaxObjects *int64 `json:"user_quota_max_objects,omitempty"`
	UserQuotaMaxSize *int64 `json:"user_quota_max_size,omitempty"`
}

// NewObjectStorageUser instantiates a new ObjectStorageUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectStorageUser() *ObjectStorageUser {
	this := ObjectStorageUser{}
	return &this
}

// NewObjectStorageUserWithDefaults instantiates a new ObjectStorageUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectStorageUserWithDefaults() *ObjectStorageUser {
	this := ObjectStorageUser{}
	return &this
}

// GetBucketNum returns the BucketNum field value if set, zero value otherwise.
func (o *ObjectStorageUser) GetBucketNum() int64 {
	if o == nil || IsNil(o.BucketNum) {
		var ret int64
		return ret
	}
	return *o.BucketNum
}

// GetBucketNumOk returns a tuple with the BucketNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUser) GetBucketNumOk() (*int64, bool) {
	if o == nil || IsNil(o.BucketNum) {
		return nil, false
	}
	return o.BucketNum, true
}

// HasBucketNum returns a boolean if a field has been set.
func (o *ObjectStorageUser) HasBucketNum() bool {
	if o != nil && !IsNil(o.BucketNum) {
		return true
	}

	return false
}

// SetBucketNum gets a reference to the given int64 and assigns it to the BucketNum field.
func (o *ObjectStorageUser) SetBucketNum(v int64) {
	o.BucketNum = &v
}

// GetBucketQuotaMaxObjects returns the BucketQuotaMaxObjects field value if set, zero value otherwise.
func (o *ObjectStorageUser) GetBucketQuotaMaxObjects() int64 {
	if o == nil || IsNil(o.BucketQuotaMaxObjects) {
		var ret int64
		return ret
	}
	return *o.BucketQuotaMaxObjects
}

// GetBucketQuotaMaxObjectsOk returns a tuple with the BucketQuotaMaxObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUser) GetBucketQuotaMaxObjectsOk() (*int64, bool) {
	if o == nil || IsNil(o.BucketQuotaMaxObjects) {
		return nil, false
	}
	return o.BucketQuotaMaxObjects, true
}

// HasBucketQuotaMaxObjects returns a boolean if a field has been set.
func (o *ObjectStorageUser) HasBucketQuotaMaxObjects() bool {
	if o != nil && !IsNil(o.BucketQuotaMaxObjects) {
		return true
	}

	return false
}

// SetBucketQuotaMaxObjects gets a reference to the given int64 and assigns it to the BucketQuotaMaxObjects field.
func (o *ObjectStorageUser) SetBucketQuotaMaxObjects(v int64) {
	o.BucketQuotaMaxObjects = &v
}

// GetBucketQuotaMaxSize returns the BucketQuotaMaxSize field value if set, zero value otherwise.
func (o *ObjectStorageUser) GetBucketQuotaMaxSize() int64 {
	if o == nil || IsNil(o.BucketQuotaMaxSize) {
		var ret int64
		return ret
	}
	return *o.BucketQuotaMaxSize
}

// GetBucketQuotaMaxSizeOk returns a tuple with the BucketQuotaMaxSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUser) GetBucketQuotaMaxSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.BucketQuotaMaxSize) {
		return nil, false
	}
	return o.BucketQuotaMaxSize, true
}

// HasBucketQuotaMaxSize returns a boolean if a field has been set.
func (o *ObjectStorageUser) HasBucketQuotaMaxSize() bool {
	if o != nil && !IsNil(o.BucketQuotaMaxSize) {
		return true
	}

	return false
}

// SetBucketQuotaMaxSize gets a reference to the given int64 and assigns it to the BucketQuotaMaxSize field.
func (o *ObjectStorageUser) SetBucketQuotaMaxSize(v int64) {
	o.BucketQuotaMaxSize = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *ObjectStorageUser) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUser) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *ObjectStorageUser) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *ObjectStorageUser) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *ObjectStorageUser) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUser) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *ObjectStorageUser) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *ObjectStorageUser) SetCreate(v time.Time) {
	o.Create = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ObjectStorageUser) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUser) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ObjectStorageUser) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ObjectStorageUser) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ObjectStorageUser) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUser) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ObjectStorageUser) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *ObjectStorageUser) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *ObjectStorageUser) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUser) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *ObjectStorageUser) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *ObjectStorageUser) SetEmail(v string) {
	o.Email = &v
}

// GetExternalBucketQuotaMaxObjects returns the ExternalBucketQuotaMaxObjects field value if set, zero value otherwise.
func (o *ObjectStorageUser) GetExternalBucketQuotaMaxObjects() int64 {
	if o == nil || IsNil(o.ExternalBucketQuotaMaxObjects) {
		var ret int64
		return ret
	}
	return *o.ExternalBucketQuotaMaxObjects
}

// GetExternalBucketQuotaMaxObjectsOk returns a tuple with the ExternalBucketQuotaMaxObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUser) GetExternalBucketQuotaMaxObjectsOk() (*int64, bool) {
	if o == nil || IsNil(o.ExternalBucketQuotaMaxObjects) {
		return nil, false
	}
	return o.ExternalBucketQuotaMaxObjects, true
}

// HasExternalBucketQuotaMaxObjects returns a boolean if a field has been set.
func (o *ObjectStorageUser) HasExternalBucketQuotaMaxObjects() bool {
	if o != nil && !IsNil(o.ExternalBucketQuotaMaxObjects) {
		return true
	}

	return false
}

// SetExternalBucketQuotaMaxObjects gets a reference to the given int64 and assigns it to the ExternalBucketQuotaMaxObjects field.
func (o *ObjectStorageUser) SetExternalBucketQuotaMaxObjects(v int64) {
	o.ExternalBucketQuotaMaxObjects = &v
}

// GetExternalBucketQuotaMaxSize returns the ExternalBucketQuotaMaxSize field value if set, zero value otherwise.
func (o *ObjectStorageUser) GetExternalBucketQuotaMaxSize() int64 {
	if o == nil || IsNil(o.ExternalBucketQuotaMaxSize) {
		var ret int64
		return ret
	}
	return *o.ExternalBucketQuotaMaxSize
}

// GetExternalBucketQuotaMaxSizeOk returns a tuple with the ExternalBucketQuotaMaxSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUser) GetExternalBucketQuotaMaxSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.ExternalBucketQuotaMaxSize) {
		return nil, false
	}
	return o.ExternalBucketQuotaMaxSize, true
}

// HasExternalBucketQuotaMaxSize returns a boolean if a field has been set.
func (o *ObjectStorageUser) HasExternalBucketQuotaMaxSize() bool {
	if o != nil && !IsNil(o.ExternalBucketQuotaMaxSize) {
		return true
	}

	return false
}

// SetExternalBucketQuotaMaxSize gets a reference to the given int64 and assigns it to the ExternalBucketQuotaMaxSize field.
func (o *ObjectStorageUser) SetExternalBucketQuotaMaxSize(v int64) {
	o.ExternalBucketQuotaMaxSize = &v
}

// GetExternalUserQuotaMaxObjects returns the ExternalUserQuotaMaxObjects field value if set, zero value otherwise.
func (o *ObjectStorageUser) GetExternalUserQuotaMaxObjects() int64 {
	if o == nil || IsNil(o.ExternalUserQuotaMaxObjects) {
		var ret int64
		return ret
	}
	return *o.ExternalUserQuotaMaxObjects
}

// GetExternalUserQuotaMaxObjectsOk returns a tuple with the ExternalUserQuotaMaxObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUser) GetExternalUserQuotaMaxObjectsOk() (*int64, bool) {
	if o == nil || IsNil(o.ExternalUserQuotaMaxObjects) {
		return nil, false
	}
	return o.ExternalUserQuotaMaxObjects, true
}

// HasExternalUserQuotaMaxObjects returns a boolean if a field has been set.
func (o *ObjectStorageUser) HasExternalUserQuotaMaxObjects() bool {
	if o != nil && !IsNil(o.ExternalUserQuotaMaxObjects) {
		return true
	}

	return false
}

// SetExternalUserQuotaMaxObjects gets a reference to the given int64 and assigns it to the ExternalUserQuotaMaxObjects field.
func (o *ObjectStorageUser) SetExternalUserQuotaMaxObjects(v int64) {
	o.ExternalUserQuotaMaxObjects = &v
}

// GetExternalUserQuotaMaxSize returns the ExternalUserQuotaMaxSize field value if set, zero value otherwise.
func (o *ObjectStorageUser) GetExternalUserQuotaMaxSize() int64 {
	if o == nil || IsNil(o.ExternalUserQuotaMaxSize) {
		var ret int64
		return ret
	}
	return *o.ExternalUserQuotaMaxSize
}

// GetExternalUserQuotaMaxSizeOk returns a tuple with the ExternalUserQuotaMaxSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUser) GetExternalUserQuotaMaxSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.ExternalUserQuotaMaxSize) {
		return nil, false
	}
	return o.ExternalUserQuotaMaxSize, true
}

// HasExternalUserQuotaMaxSize returns a boolean if a field has been set.
func (o *ObjectStorageUser) HasExternalUserQuotaMaxSize() bool {
	if o != nil && !IsNil(o.ExternalUserQuotaMaxSize) {
		return true
	}

	return false
}

// SetExternalUserQuotaMaxSize gets a reference to the given int64 and assigns it to the ExternalUserQuotaMaxSize field.
func (o *ObjectStorageUser) SetExternalUserQuotaMaxSize(v int64) {
	o.ExternalUserQuotaMaxSize = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ObjectStorageUser) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUser) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ObjectStorageUser) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ObjectStorageUser) SetId(v int64) {
	o.Id = &v
}

// GetLocalBucketQuotaMaxObjects returns the LocalBucketQuotaMaxObjects field value if set, zero value otherwise.
func (o *ObjectStorageUser) GetLocalBucketQuotaMaxObjects() int64 {
	if o == nil || IsNil(o.LocalBucketQuotaMaxObjects) {
		var ret int64
		return ret
	}
	return *o.LocalBucketQuotaMaxObjects
}

// GetLocalBucketQuotaMaxObjectsOk returns a tuple with the LocalBucketQuotaMaxObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUser) GetLocalBucketQuotaMaxObjectsOk() (*int64, bool) {
	if o == nil || IsNil(o.LocalBucketQuotaMaxObjects) {
		return nil, false
	}
	return o.LocalBucketQuotaMaxObjects, true
}

// HasLocalBucketQuotaMaxObjects returns a boolean if a field has been set.
func (o *ObjectStorageUser) HasLocalBucketQuotaMaxObjects() bool {
	if o != nil && !IsNil(o.LocalBucketQuotaMaxObjects) {
		return true
	}

	return false
}

// SetLocalBucketQuotaMaxObjects gets a reference to the given int64 and assigns it to the LocalBucketQuotaMaxObjects field.
func (o *ObjectStorageUser) SetLocalBucketQuotaMaxObjects(v int64) {
	o.LocalBucketQuotaMaxObjects = &v
}

// GetLocalBucketQuotaMaxSize returns the LocalBucketQuotaMaxSize field value if set, zero value otherwise.
func (o *ObjectStorageUser) GetLocalBucketQuotaMaxSize() int64 {
	if o == nil || IsNil(o.LocalBucketQuotaMaxSize) {
		var ret int64
		return ret
	}
	return *o.LocalBucketQuotaMaxSize
}

// GetLocalBucketQuotaMaxSizeOk returns a tuple with the LocalBucketQuotaMaxSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUser) GetLocalBucketQuotaMaxSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.LocalBucketQuotaMaxSize) {
		return nil, false
	}
	return o.LocalBucketQuotaMaxSize, true
}

// HasLocalBucketQuotaMaxSize returns a boolean if a field has been set.
func (o *ObjectStorageUser) HasLocalBucketQuotaMaxSize() bool {
	if o != nil && !IsNil(o.LocalBucketQuotaMaxSize) {
		return true
	}

	return false
}

// SetLocalBucketQuotaMaxSize gets a reference to the given int64 and assigns it to the LocalBucketQuotaMaxSize field.
func (o *ObjectStorageUser) SetLocalBucketQuotaMaxSize(v int64) {
	o.LocalBucketQuotaMaxSize = &v
}

// GetLocalUserQuotaMaxObjects returns the LocalUserQuotaMaxObjects field value if set, zero value otherwise.
func (o *ObjectStorageUser) GetLocalUserQuotaMaxObjects() int64 {
	if o == nil || IsNil(o.LocalUserQuotaMaxObjects) {
		var ret int64
		return ret
	}
	return *o.LocalUserQuotaMaxObjects
}

// GetLocalUserQuotaMaxObjectsOk returns a tuple with the LocalUserQuotaMaxObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUser) GetLocalUserQuotaMaxObjectsOk() (*int64, bool) {
	if o == nil || IsNil(o.LocalUserQuotaMaxObjects) {
		return nil, false
	}
	return o.LocalUserQuotaMaxObjects, true
}

// HasLocalUserQuotaMaxObjects returns a boolean if a field has been set.
func (o *ObjectStorageUser) HasLocalUserQuotaMaxObjects() bool {
	if o != nil && !IsNil(o.LocalUserQuotaMaxObjects) {
		return true
	}

	return false
}

// SetLocalUserQuotaMaxObjects gets a reference to the given int64 and assigns it to the LocalUserQuotaMaxObjects field.
func (o *ObjectStorageUser) SetLocalUserQuotaMaxObjects(v int64) {
	o.LocalUserQuotaMaxObjects = &v
}

// GetLocalUserQuotaMaxSize returns the LocalUserQuotaMaxSize field value if set, zero value otherwise.
func (o *ObjectStorageUser) GetLocalUserQuotaMaxSize() int64 {
	if o == nil || IsNil(o.LocalUserQuotaMaxSize) {
		var ret int64
		return ret
	}
	return *o.LocalUserQuotaMaxSize
}

// GetLocalUserQuotaMaxSizeOk returns a tuple with the LocalUserQuotaMaxSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUser) GetLocalUserQuotaMaxSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.LocalUserQuotaMaxSize) {
		return nil, false
	}
	return o.LocalUserQuotaMaxSize, true
}

// HasLocalUserQuotaMaxSize returns a boolean if a field has been set.
func (o *ObjectStorageUser) HasLocalUserQuotaMaxSize() bool {
	if o != nil && !IsNil(o.LocalUserQuotaMaxSize) {
		return true
	}

	return false
}

// SetLocalUserQuotaMaxSize gets a reference to the given int64 and assigns it to the LocalUserQuotaMaxSize field.
func (o *ObjectStorageUser) SetLocalUserQuotaMaxSize(v int64) {
	o.LocalUserQuotaMaxSize = &v
}

// GetLocationConstraintEnabled returns the LocationConstraintEnabled field value if set, zero value otherwise.
func (o *ObjectStorageUser) GetLocationConstraintEnabled() bool {
	if o == nil || IsNil(o.LocationConstraintEnabled) {
		var ret bool
		return ret
	}
	return *o.LocationConstraintEnabled
}

// GetLocationConstraintEnabledOk returns a tuple with the LocationConstraintEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUser) GetLocationConstraintEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.LocationConstraintEnabled) {
		return nil, false
	}
	return o.LocationConstraintEnabled, true
}

// HasLocationConstraintEnabled returns a boolean if a field has been set.
func (o *ObjectStorageUser) HasLocationConstraintEnabled() bool {
	if o != nil && !IsNil(o.LocationConstraintEnabled) {
		return true
	}

	return false
}

// SetLocationConstraintEnabled gets a reference to the given bool and assigns it to the LocationConstraintEnabled field.
func (o *ObjectStorageUser) SetLocationConstraintEnabled(v bool) {
	o.LocationConstraintEnabled = &v
}

// GetMaxBuckets returns the MaxBuckets field value if set, zero value otherwise.
func (o *ObjectStorageUser) GetMaxBuckets() int64 {
	if o == nil || IsNil(o.MaxBuckets) {
		var ret int64
		return ret
	}
	return *o.MaxBuckets
}

// GetMaxBucketsOk returns a tuple with the MaxBuckets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUser) GetMaxBucketsOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxBuckets) {
		return nil, false
	}
	return o.MaxBuckets, true
}

// HasMaxBuckets returns a boolean if a field has been set.
func (o *ObjectStorageUser) HasMaxBuckets() bool {
	if o != nil && !IsNil(o.MaxBuckets) {
		return true
	}

	return false
}

// SetMaxBuckets gets a reference to the given int64 and assigns it to the MaxBuckets field.
func (o *ObjectStorageUser) SetMaxBuckets(v int64) {
	o.MaxBuckets = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ObjectStorageUser) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUser) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ObjectStorageUser) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ObjectStorageUser) SetName(v string) {
	o.Name = &v
}

// GetOpMask returns the OpMask field value if set, zero value otherwise.
func (o *ObjectStorageUser) GetOpMask() string {
	if o == nil || IsNil(o.OpMask) {
		var ret string
		return ret
	}
	return *o.OpMask
}

// GetOpMaskOk returns a tuple with the OpMask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUser) GetOpMaskOk() (*string, bool) {
	if o == nil || IsNil(o.OpMask) {
		return nil, false
	}
	return o.OpMask, true
}

// HasOpMask returns a boolean if a field has been set.
func (o *ObjectStorageUser) HasOpMask() bool {
	if o != nil && !IsNil(o.OpMask) {
		return true
	}

	return false
}

// SetOpMask gets a reference to the given string and assigns it to the OpMask field.
func (o *ObjectStorageUser) SetOpMask(v string) {
	o.OpMask = &v
}

// GetParent returns the Parent field value if set, zero value otherwise.
func (o *ObjectStorageUser) GetParent() ObjectStorageUserNestview {
	if o == nil || IsNil(o.Parent) {
		var ret ObjectStorageUserNestview
		return ret
	}
	return *o.Parent
}

// GetParentOk returns a tuple with the Parent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUser) GetParentOk() (*ObjectStorageUserNestview, bool) {
	if o == nil || IsNil(o.Parent) {
		return nil, false
	}
	return o.Parent, true
}

// HasParent returns a boolean if a field has been set.
func (o *ObjectStorageUser) HasParent() bool {
	if o != nil && !IsNil(o.Parent) {
		return true
	}

	return false
}

// SetParent gets a reference to the given ObjectStorageUserNestview and assigns it to the Parent field.
func (o *ObjectStorageUser) SetParent(v ObjectStorageUserNestview) {
	o.Parent = &v
}

// GetPolicy returns the Policy field value if set, zero value otherwise.
func (o *ObjectStorageUser) GetPolicy() ObjectStoragePolicyNestview {
	if o == nil || IsNil(o.Policy) {
		var ret ObjectStoragePolicyNestview
		return ret
	}
	return *o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUser) GetPolicyOk() (*ObjectStoragePolicyNestview, bool) {
	if o == nil || IsNil(o.Policy) {
		return nil, false
	}
	return o.Policy, true
}

// HasPolicy returns a boolean if a field has been set.
func (o *ObjectStorageUser) HasPolicy() bool {
	if o != nil && !IsNil(o.Policy) {
		return true
	}

	return false
}

// SetPolicy gets a reference to the given ObjectStoragePolicyNestview and assigns it to the Policy field.
func (o *ObjectStorageUser) SetPolicy(v ObjectStoragePolicyNestview) {
	o.Policy = &v
}

// GetPolicyPollingEnabled returns the PolicyPollingEnabled field value if set, zero value otherwise.
func (o *ObjectStorageUser) GetPolicyPollingEnabled() bool {
	if o == nil || IsNil(o.PolicyPollingEnabled) {
		var ret bool
		return ret
	}
	return *o.PolicyPollingEnabled
}

// GetPolicyPollingEnabledOk returns a tuple with the PolicyPollingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUser) GetPolicyPollingEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.PolicyPollingEnabled) {
		return nil, false
	}
	return o.PolicyPollingEnabled, true
}

// HasPolicyPollingEnabled returns a boolean if a field has been set.
func (o *ObjectStorageUser) HasPolicyPollingEnabled() bool {
	if o != nil && !IsNil(o.PolicyPollingEnabled) {
		return true
	}

	return false
}

// SetPolicyPollingEnabled gets a reference to the given bool and assigns it to the PolicyPollingEnabled field.
func (o *ObjectStorageUser) SetPolicyPollingEnabled(v bool) {
	o.PolicyPollingEnabled = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *ObjectStorageUser) GetProperties() OSUserProperties {
	if o == nil || IsNil(o.Properties) {
		var ret OSUserProperties
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUser) GetPropertiesOk() (*OSUserProperties, bool) {
	if o == nil || IsNil(o.Properties) {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *ObjectStorageUser) HasProperties() bool {
	if o != nil && !IsNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given OSUserProperties and assigns it to the Properties field.
func (o *ObjectStorageUser) SetProperties(v OSUserProperties) {
	o.Properties = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ObjectStorageUser) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUser) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ObjectStorageUser) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ObjectStorageUser) SetStatus(v string) {
	o.Status = &v
}

// GetSuspended returns the Suspended field value if set, zero value otherwise.
func (o *ObjectStorageUser) GetSuspended() bool {
	if o == nil || IsNil(o.Suspended) {
		var ret bool
		return ret
	}
	return *o.Suspended
}

// GetSuspendedOk returns a tuple with the Suspended field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUser) GetSuspendedOk() (*bool, bool) {
	if o == nil || IsNil(o.Suspended) {
		return nil, false
	}
	return o.Suspended, true
}

// HasSuspended returns a boolean if a field has been set.
func (o *ObjectStorageUser) HasSuspended() bool {
	if o != nil && !IsNil(o.Suspended) {
		return true
	}

	return false
}

// SetSuspended gets a reference to the given bool and assigns it to the Suspended field.
func (o *ObjectStorageUser) SetSuspended(v bool) {
	o.Suspended = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *ObjectStorageUser) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUser) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *ObjectStorageUser) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *ObjectStorageUser) SetUpdate(v time.Time) {
	o.Update = &v
}

// GetUserQuotaMaxObjects returns the UserQuotaMaxObjects field value if set, zero value otherwise.
func (o *ObjectStorageUser) GetUserQuotaMaxObjects() int64 {
	if o == nil || IsNil(o.UserQuotaMaxObjects) {
		var ret int64
		return ret
	}
	return *o.UserQuotaMaxObjects
}

// GetUserQuotaMaxObjectsOk returns a tuple with the UserQuotaMaxObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUser) GetUserQuotaMaxObjectsOk() (*int64, bool) {
	if o == nil || IsNil(o.UserQuotaMaxObjects) {
		return nil, false
	}
	return o.UserQuotaMaxObjects, true
}

// HasUserQuotaMaxObjects returns a boolean if a field has been set.
func (o *ObjectStorageUser) HasUserQuotaMaxObjects() bool {
	if o != nil && !IsNil(o.UserQuotaMaxObjects) {
		return true
	}

	return false
}

// SetUserQuotaMaxObjects gets a reference to the given int64 and assigns it to the UserQuotaMaxObjects field.
func (o *ObjectStorageUser) SetUserQuotaMaxObjects(v int64) {
	o.UserQuotaMaxObjects = &v
}

// GetUserQuotaMaxSize returns the UserQuotaMaxSize field value if set, zero value otherwise.
func (o *ObjectStorageUser) GetUserQuotaMaxSize() int64 {
	if o == nil || IsNil(o.UserQuotaMaxSize) {
		var ret int64
		return ret
	}
	return *o.UserQuotaMaxSize
}

// GetUserQuotaMaxSizeOk returns a tuple with the UserQuotaMaxSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageUser) GetUserQuotaMaxSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.UserQuotaMaxSize) {
		return nil, false
	}
	return o.UserQuotaMaxSize, true
}

// HasUserQuotaMaxSize returns a boolean if a field has been set.
func (o *ObjectStorageUser) HasUserQuotaMaxSize() bool {
	if o != nil && !IsNil(o.UserQuotaMaxSize) {
		return true
	}

	return false
}

// SetUserQuotaMaxSize gets a reference to the given int64 and assigns it to the UserQuotaMaxSize field.
func (o *ObjectStorageUser) SetUserQuotaMaxSize(v int64) {
	o.UserQuotaMaxSize = &v
}

func (o ObjectStorageUser) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ObjectStorageUser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BucketNum) {
		toSerialize["bucket_num"] = o.BucketNum
	}
	if !IsNil(o.BucketQuotaMaxObjects) {
		toSerialize["bucket_quota_max_objects"] = o.BucketQuotaMaxObjects
	}
	if !IsNil(o.BucketQuotaMaxSize) {
		toSerialize["bucket_quota_max_size"] = o.BucketQuotaMaxSize
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DisplayName) {
		toSerialize["display_name"] = o.DisplayName
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.ExternalBucketQuotaMaxObjects) {
		toSerialize["external_bucket_quota_max_objects"] = o.ExternalBucketQuotaMaxObjects
	}
	if !IsNil(o.ExternalBucketQuotaMaxSize) {
		toSerialize["external_bucket_quota_max_size"] = o.ExternalBucketQuotaMaxSize
	}
	if !IsNil(o.ExternalUserQuotaMaxObjects) {
		toSerialize["external_user_quota_max_objects"] = o.ExternalUserQuotaMaxObjects
	}
	if !IsNil(o.ExternalUserQuotaMaxSize) {
		toSerialize["external_user_quota_max_size"] = o.ExternalUserQuotaMaxSize
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LocalBucketQuotaMaxObjects) {
		toSerialize["local_bucket_quota_max_objects"] = o.LocalBucketQuotaMaxObjects
	}
	if !IsNil(o.LocalBucketQuotaMaxSize) {
		toSerialize["local_bucket_quota_max_size"] = o.LocalBucketQuotaMaxSize
	}
	if !IsNil(o.LocalUserQuotaMaxObjects) {
		toSerialize["local_user_quota_max_objects"] = o.LocalUserQuotaMaxObjects
	}
	if !IsNil(o.LocalUserQuotaMaxSize) {
		toSerialize["local_user_quota_max_size"] = o.LocalUserQuotaMaxSize
	}
	if !IsNil(o.LocationConstraintEnabled) {
		toSerialize["location_constraint_enabled"] = o.LocationConstraintEnabled
	}
	if !IsNil(o.MaxBuckets) {
		toSerialize["max_buckets"] = o.MaxBuckets
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OpMask) {
		toSerialize["op_mask"] = o.OpMask
	}
	if !IsNil(o.Parent) {
		toSerialize["parent"] = o.Parent
	}
	if !IsNil(o.Policy) {
		toSerialize["policy"] = o.Policy
	}
	if !IsNil(o.PolicyPollingEnabled) {
		toSerialize["policy_polling_enabled"] = o.PolicyPollingEnabled
	}
	if !IsNil(o.Properties) {
		toSerialize["properties"] = o.Properties
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Suspended) {
		toSerialize["suspended"] = o.Suspended
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	if !IsNil(o.UserQuotaMaxObjects) {
		toSerialize["user_quota_max_objects"] = o.UserQuotaMaxObjects
	}
	if !IsNil(o.UserQuotaMaxSize) {
		toSerialize["user_quota_max_size"] = o.UserQuotaMaxSize
	}
	return toSerialize, nil
}

type NullableObjectStorageUser struct {
	value *ObjectStorageUser
	isSet bool
}

func (v NullableObjectStorageUser) Get() *ObjectStorageUser {
	return v.value
}

func (v *NullableObjectStorageUser) Set(val *ObjectStorageUser) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectStorageUser) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectStorageUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectStorageUser(val *ObjectStorageUser) *NullableObjectStorageUser {
	return &NullableObjectStorageUser{value: val, isSet: true}
}

func (v NullableObjectStorageUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectStorageUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


