/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the ObjectStorageZoneStat type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ObjectStorageZoneStat{}

// ObjectStorageZoneStat ObjectStorageZoneStat contains info of os zone
type ObjectStorageZoneStat struct {
	BandwidthKbyte *float64 `json:"bandwidth_kbyte,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	ObjectKbytesPs *float64 `json:"object_kbytes_ps,omitempty"`
	ObjectsPm *float64 `json:"objects_pm,omitempty"`
	TotalBytes *int64 `json:"total_bytes,omitempty"`
	TotalObjectBytes *int64 `json:"total_object_bytes,omitempty"`
	TotalObjects *int64 `json:"total_objects,omitempty"`
}

// NewObjectStorageZoneStat instantiates a new ObjectStorageZoneStat object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectStorageZoneStat() *ObjectStorageZoneStat {
	this := ObjectStorageZoneStat{}
	return &this
}

// NewObjectStorageZoneStatWithDefaults instantiates a new ObjectStorageZoneStat object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectStorageZoneStatWithDefaults() *ObjectStorageZoneStat {
	this := ObjectStorageZoneStat{}
	return &this
}

// GetBandwidthKbyte returns the BandwidthKbyte field value if set, zero value otherwise.
func (o *ObjectStorageZoneStat) GetBandwidthKbyte() float64 {
	if o == nil || IsNil(o.BandwidthKbyte) {
		var ret float64
		return ret
	}
	return *o.BandwidthKbyte
}

// GetBandwidthKbyteOk returns a tuple with the BandwidthKbyte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageZoneStat) GetBandwidthKbyteOk() (*float64, bool) {
	if o == nil || IsNil(o.BandwidthKbyte) {
		return nil, false
	}
	return o.BandwidthKbyte, true
}

// HasBandwidthKbyte returns a boolean if a field has been set.
func (o *ObjectStorageZoneStat) HasBandwidthKbyte() bool {
	if o != nil && !IsNil(o.BandwidthKbyte) {
		return true
	}

	return false
}

// SetBandwidthKbyte gets a reference to the given float64 and assigns it to the BandwidthKbyte field.
func (o *ObjectStorageZoneStat) SetBandwidthKbyte(v float64) {
	o.BandwidthKbyte = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *ObjectStorageZoneStat) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageZoneStat) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *ObjectStorageZoneStat) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *ObjectStorageZoneStat) SetCreate(v time.Time) {
	o.Create = &v
}

// GetObjectKbytesPs returns the ObjectKbytesPs field value if set, zero value otherwise.
func (o *ObjectStorageZoneStat) GetObjectKbytesPs() float64 {
	if o == nil || IsNil(o.ObjectKbytesPs) {
		var ret float64
		return ret
	}
	return *o.ObjectKbytesPs
}

// GetObjectKbytesPsOk returns a tuple with the ObjectKbytesPs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageZoneStat) GetObjectKbytesPsOk() (*float64, bool) {
	if o == nil || IsNil(o.ObjectKbytesPs) {
		return nil, false
	}
	return o.ObjectKbytesPs, true
}

// HasObjectKbytesPs returns a boolean if a field has been set.
func (o *ObjectStorageZoneStat) HasObjectKbytesPs() bool {
	if o != nil && !IsNil(o.ObjectKbytesPs) {
		return true
	}

	return false
}

// SetObjectKbytesPs gets a reference to the given float64 and assigns it to the ObjectKbytesPs field.
func (o *ObjectStorageZoneStat) SetObjectKbytesPs(v float64) {
	o.ObjectKbytesPs = &v
}

// GetObjectsPm returns the ObjectsPm field value if set, zero value otherwise.
func (o *ObjectStorageZoneStat) GetObjectsPm() float64 {
	if o == nil || IsNil(o.ObjectsPm) {
		var ret float64
		return ret
	}
	return *o.ObjectsPm
}

// GetObjectsPmOk returns a tuple with the ObjectsPm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageZoneStat) GetObjectsPmOk() (*float64, bool) {
	if o == nil || IsNil(o.ObjectsPm) {
		return nil, false
	}
	return o.ObjectsPm, true
}

// HasObjectsPm returns a boolean if a field has been set.
func (o *ObjectStorageZoneStat) HasObjectsPm() bool {
	if o != nil && !IsNil(o.ObjectsPm) {
		return true
	}

	return false
}

// SetObjectsPm gets a reference to the given float64 and assigns it to the ObjectsPm field.
func (o *ObjectStorageZoneStat) SetObjectsPm(v float64) {
	o.ObjectsPm = &v
}

// GetTotalBytes returns the TotalBytes field value if set, zero value otherwise.
func (o *ObjectStorageZoneStat) GetTotalBytes() int64 {
	if o == nil || IsNil(o.TotalBytes) {
		var ret int64
		return ret
	}
	return *o.TotalBytes
}

// GetTotalBytesOk returns a tuple with the TotalBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageZoneStat) GetTotalBytesOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalBytes) {
		return nil, false
	}
	return o.TotalBytes, true
}

// HasTotalBytes returns a boolean if a field has been set.
func (o *ObjectStorageZoneStat) HasTotalBytes() bool {
	if o != nil && !IsNil(o.TotalBytes) {
		return true
	}

	return false
}

// SetTotalBytes gets a reference to the given int64 and assigns it to the TotalBytes field.
func (o *ObjectStorageZoneStat) SetTotalBytes(v int64) {
	o.TotalBytes = &v
}

// GetTotalObjectBytes returns the TotalObjectBytes field value if set, zero value otherwise.
func (o *ObjectStorageZoneStat) GetTotalObjectBytes() int64 {
	if o == nil || IsNil(o.TotalObjectBytes) {
		var ret int64
		return ret
	}
	return *o.TotalObjectBytes
}

// GetTotalObjectBytesOk returns a tuple with the TotalObjectBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageZoneStat) GetTotalObjectBytesOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalObjectBytes) {
		return nil, false
	}
	return o.TotalObjectBytes, true
}

// HasTotalObjectBytes returns a boolean if a field has been set.
func (o *ObjectStorageZoneStat) HasTotalObjectBytes() bool {
	if o != nil && !IsNil(o.TotalObjectBytes) {
		return true
	}

	return false
}

// SetTotalObjectBytes gets a reference to the given int64 and assigns it to the TotalObjectBytes field.
func (o *ObjectStorageZoneStat) SetTotalObjectBytes(v int64) {
	o.TotalObjectBytes = &v
}

// GetTotalObjects returns the TotalObjects field value if set, zero value otherwise.
func (o *ObjectStorageZoneStat) GetTotalObjects() int64 {
	if o == nil || IsNil(o.TotalObjects) {
		var ret int64
		return ret
	}
	return *o.TotalObjects
}

// GetTotalObjectsOk returns a tuple with the TotalObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageZoneStat) GetTotalObjectsOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalObjects) {
		return nil, false
	}
	return o.TotalObjects, true
}

// HasTotalObjects returns a boolean if a field has been set.
func (o *ObjectStorageZoneStat) HasTotalObjects() bool {
	if o != nil && !IsNil(o.TotalObjects) {
		return true
	}

	return false
}

// SetTotalObjects gets a reference to the given int64 and assigns it to the TotalObjects field.
func (o *ObjectStorageZoneStat) SetTotalObjects(v int64) {
	o.TotalObjects = &v
}

func (o ObjectStorageZoneStat) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ObjectStorageZoneStat) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BandwidthKbyte) {
		toSerialize["bandwidth_kbyte"] = o.BandwidthKbyte
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.ObjectKbytesPs) {
		toSerialize["object_kbytes_ps"] = o.ObjectKbytesPs
	}
	if !IsNil(o.ObjectsPm) {
		toSerialize["objects_pm"] = o.ObjectsPm
	}
	if !IsNil(o.TotalBytes) {
		toSerialize["total_bytes"] = o.TotalBytes
	}
	if !IsNil(o.TotalObjectBytes) {
		toSerialize["total_object_bytes"] = o.TotalObjectBytes
	}
	if !IsNil(o.TotalObjects) {
		toSerialize["total_objects"] = o.TotalObjects
	}
	return toSerialize, nil
}

type NullableObjectStorageZoneStat struct {
	value *ObjectStorageZoneStat
	isSet bool
}

func (v NullableObjectStorageZoneStat) Get() *ObjectStorageZoneStat {
	return v.value
}

func (v *NullableObjectStorageZoneStat) Set(val *ObjectStorageZoneStat) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectStorageZoneStat) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectStorageZoneStat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectStorageZoneStat(val *ObjectStorageZoneStat) *NullableObjectStorageZoneStat {
	return &NullableObjectStorageZoneStat{value: val, isSet: true}
}

func (v NullableObjectStorageZoneStat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectStorageZoneStat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


