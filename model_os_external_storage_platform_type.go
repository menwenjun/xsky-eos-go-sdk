/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the OSExternalStoragePlatformType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OSExternalStoragePlatformType{}

// OSExternalStoragePlatformType OSExternalStoragePlatformType is the model of os_external_storage_platform_type
type OSExternalStoragePlatformType struct {
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Platform *string `json:"platform,omitempty"`
	PlatformType *string `json:"platform_type,omitempty"`
	Region *string `json:"region,omitempty"`
	RegionZh *string `json:"region_zh,omitempty"`
}

// NewOSExternalStoragePlatformType instantiates a new OSExternalStoragePlatformType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOSExternalStoragePlatformType() *OSExternalStoragePlatformType {
	this := OSExternalStoragePlatformType{}
	return &this
}

// NewOSExternalStoragePlatformTypeWithDefaults instantiates a new OSExternalStoragePlatformType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOSExternalStoragePlatformTypeWithDefaults() *OSExternalStoragePlatformType {
	this := OSExternalStoragePlatformType{}
	return &this
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *OSExternalStoragePlatformType) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStoragePlatformType) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *OSExternalStoragePlatformType) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *OSExternalStoragePlatformType) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *OSExternalStoragePlatformType) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStoragePlatformType) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *OSExternalStoragePlatformType) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *OSExternalStoragePlatformType) SetCreate(v time.Time) {
	o.Create = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OSExternalStoragePlatformType) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStoragePlatformType) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OSExternalStoragePlatformType) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *OSExternalStoragePlatformType) SetId(v int64) {
	o.Id = &v
}

// GetPlatform returns the Platform field value if set, zero value otherwise.
func (o *OSExternalStoragePlatformType) GetPlatform() string {
	if o == nil || IsNil(o.Platform) {
		var ret string
		return ret
	}
	return *o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStoragePlatformType) GetPlatformOk() (*string, bool) {
	if o == nil || IsNil(o.Platform) {
		return nil, false
	}
	return o.Platform, true
}

// HasPlatform returns a boolean if a field has been set.
func (o *OSExternalStoragePlatformType) HasPlatform() bool {
	if o != nil && !IsNil(o.Platform) {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given string and assigns it to the Platform field.
func (o *OSExternalStoragePlatformType) SetPlatform(v string) {
	o.Platform = &v
}

// GetPlatformType returns the PlatformType field value if set, zero value otherwise.
func (o *OSExternalStoragePlatformType) GetPlatformType() string {
	if o == nil || IsNil(o.PlatformType) {
		var ret string
		return ret
	}
	return *o.PlatformType
}

// GetPlatformTypeOk returns a tuple with the PlatformType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStoragePlatformType) GetPlatformTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PlatformType) {
		return nil, false
	}
	return o.PlatformType, true
}

// HasPlatformType returns a boolean if a field has been set.
func (o *OSExternalStoragePlatformType) HasPlatformType() bool {
	if o != nil && !IsNil(o.PlatformType) {
		return true
	}

	return false
}

// SetPlatformType gets a reference to the given string and assigns it to the PlatformType field.
func (o *OSExternalStoragePlatformType) SetPlatformType(v string) {
	o.PlatformType = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *OSExternalStoragePlatformType) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStoragePlatformType) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *OSExternalStoragePlatformType) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *OSExternalStoragePlatformType) SetRegion(v string) {
	o.Region = &v
}

// GetRegionZh returns the RegionZh field value if set, zero value otherwise.
func (o *OSExternalStoragePlatformType) GetRegionZh() string {
	if o == nil || IsNil(o.RegionZh) {
		var ret string
		return ret
	}
	return *o.RegionZh
}

// GetRegionZhOk returns a tuple with the RegionZh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSExternalStoragePlatformType) GetRegionZhOk() (*string, bool) {
	if o == nil || IsNil(o.RegionZh) {
		return nil, false
	}
	return o.RegionZh, true
}

// HasRegionZh returns a boolean if a field has been set.
func (o *OSExternalStoragePlatformType) HasRegionZh() bool {
	if o != nil && !IsNil(o.RegionZh) {
		return true
	}

	return false
}

// SetRegionZh gets a reference to the given string and assigns it to the RegionZh field.
func (o *OSExternalStoragePlatformType) SetRegionZh(v string) {
	o.RegionZh = &v
}

func (o OSExternalStoragePlatformType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OSExternalStoragePlatformType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Platform) {
		toSerialize["platform"] = o.Platform
	}
	if !IsNil(o.PlatformType) {
		toSerialize["platform_type"] = o.PlatformType
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.RegionZh) {
		toSerialize["region_zh"] = o.RegionZh
	}
	return toSerialize, nil
}

type NullableOSExternalStoragePlatformType struct {
	value *OSExternalStoragePlatformType
	isSet bool
}

func (v NullableOSExternalStoragePlatformType) Get() *OSExternalStoragePlatformType {
	return v.value
}

func (v *NullableOSExternalStoragePlatformType) Set(val *OSExternalStoragePlatformType) {
	v.value = val
	v.isSet = true
}

func (v NullableOSExternalStoragePlatformType) IsSet() bool {
	return v.isSet
}

func (v *NullableOSExternalStoragePlatformType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSExternalStoragePlatformType(val *OSExternalStoragePlatformType) *NullableOSExternalStoragePlatformType {
	return &NullableOSExternalStoragePlatformType{value: val, isSet: true}
}

func (v NullableOSExternalStoragePlatformType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSExternalStoragePlatformType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


