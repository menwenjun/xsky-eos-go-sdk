/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TargetReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TargetReq{}

// TargetReq struct for TargetReq
type TargetReq struct {
	GatewayIps []string `json:"gateway_ips,omitempty"`
	HostId *int64 `json:"host_id,omitempty"`
}

// NewTargetReq instantiates a new TargetReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTargetReq() *TargetReq {
	this := TargetReq{}
	return &this
}

// NewTargetReqWithDefaults instantiates a new TargetReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTargetReqWithDefaults() *TargetReq {
	this := TargetReq{}
	return &this
}

// GetGatewayIps returns the GatewayIps field value if set, zero value otherwise.
func (o *TargetReq) GetGatewayIps() []string {
	if o == nil || IsNil(o.GatewayIps) {
		var ret []string
		return ret
	}
	return o.GatewayIps
}

// GetGatewayIpsOk returns a tuple with the GatewayIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetReq) GetGatewayIpsOk() ([]string, bool) {
	if o == nil || IsNil(o.GatewayIps) {
		return nil, false
	}
	return o.GatewayIps, true
}

// HasGatewayIps returns a boolean if a field has been set.
func (o *TargetReq) HasGatewayIps() bool {
	if o != nil && !IsNil(o.GatewayIps) {
		return true
	}

	return false
}

// SetGatewayIps gets a reference to the given []string and assigns it to the GatewayIps field.
func (o *TargetReq) SetGatewayIps(v []string) {
	o.GatewayIps = v
}

// GetHostId returns the HostId field value if set, zero value otherwise.
func (o *TargetReq) GetHostId() int64 {
	if o == nil || IsNil(o.HostId) {
		var ret int64
		return ret
	}
	return *o.HostId
}

// GetHostIdOk returns a tuple with the HostId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetReq) GetHostIdOk() (*int64, bool) {
	if o == nil || IsNil(o.HostId) {
		return nil, false
	}
	return o.HostId, true
}

// HasHostId returns a boolean if a field has been set.
func (o *TargetReq) HasHostId() bool {
	if o != nil && !IsNil(o.HostId) {
		return true
	}

	return false
}

// SetHostId gets a reference to the given int64 and assigns it to the HostId field.
func (o *TargetReq) SetHostId(v int64) {
	o.HostId = &v
}

func (o TargetReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TargetReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GatewayIps) {
		toSerialize["gateway_ips"] = o.GatewayIps
	}
	if !IsNil(o.HostId) {
		toSerialize["host_id"] = o.HostId
	}
	return toSerialize, nil
}

type NullableTargetReq struct {
	value *TargetReq
	isSet bool
}

func (v NullableTargetReq) Get() *TargetReq {
	return v.value
}

func (v *NullableTargetReq) Set(val *TargetReq) {
	v.value = val
	v.isSet = true
}

func (v NullableTargetReq) IsSet() bool {
	return v.isSet
}

func (v *NullableTargetReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTargetReq(val *TargetReq) *NullableTargetReq {
	return &NullableTargetReq{value: val, isSet: true}
}

func (v NullableTargetReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTargetReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


