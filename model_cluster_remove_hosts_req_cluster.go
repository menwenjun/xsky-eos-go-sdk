/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ClusterRemoveHostsReqCluster type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterRemoveHostsReqCluster{}

// ClusterRemoveHostsReqCluster struct for ClusterRemoveHostsReqCluster
type ClusterRemoveHostsReqCluster struct {
	// ceph host ids
	CephHostIds []int64 `json:"ceph_host_ids,omitempty"`
	// osp host ids
	OspHostIds []int64 `json:"osp_host_ids,omitempty"`
}

// NewClusterRemoveHostsReqCluster instantiates a new ClusterRemoveHostsReqCluster object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterRemoveHostsReqCluster() *ClusterRemoveHostsReqCluster {
	this := ClusterRemoveHostsReqCluster{}
	return &this
}

// NewClusterRemoveHostsReqClusterWithDefaults instantiates a new ClusterRemoveHostsReqCluster object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterRemoveHostsReqClusterWithDefaults() *ClusterRemoveHostsReqCluster {
	this := ClusterRemoveHostsReqCluster{}
	return &this
}

// GetCephHostIds returns the CephHostIds field value if set, zero value otherwise.
func (o *ClusterRemoveHostsReqCluster) GetCephHostIds() []int64 {
	if o == nil || IsNil(o.CephHostIds) {
		var ret []int64
		return ret
	}
	return o.CephHostIds
}

// GetCephHostIdsOk returns a tuple with the CephHostIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterRemoveHostsReqCluster) GetCephHostIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.CephHostIds) {
		return nil, false
	}
	return o.CephHostIds, true
}

// HasCephHostIds returns a boolean if a field has been set.
func (o *ClusterRemoveHostsReqCluster) HasCephHostIds() bool {
	if o != nil && !IsNil(o.CephHostIds) {
		return true
	}

	return false
}

// SetCephHostIds gets a reference to the given []int64 and assigns it to the CephHostIds field.
func (o *ClusterRemoveHostsReqCluster) SetCephHostIds(v []int64) {
	o.CephHostIds = v
}

// GetOspHostIds returns the OspHostIds field value if set, zero value otherwise.
func (o *ClusterRemoveHostsReqCluster) GetOspHostIds() []int64 {
	if o == nil || IsNil(o.OspHostIds) {
		var ret []int64
		return ret
	}
	return o.OspHostIds
}

// GetOspHostIdsOk returns a tuple with the OspHostIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterRemoveHostsReqCluster) GetOspHostIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.OspHostIds) {
		return nil, false
	}
	return o.OspHostIds, true
}

// HasOspHostIds returns a boolean if a field has been set.
func (o *ClusterRemoveHostsReqCluster) HasOspHostIds() bool {
	if o != nil && !IsNil(o.OspHostIds) {
		return true
	}

	return false
}

// SetOspHostIds gets a reference to the given []int64 and assigns it to the OspHostIds field.
func (o *ClusterRemoveHostsReqCluster) SetOspHostIds(v []int64) {
	o.OspHostIds = v
}

func (o ClusterRemoveHostsReqCluster) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterRemoveHostsReqCluster) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CephHostIds) {
		toSerialize["ceph_host_ids"] = o.CephHostIds
	}
	if !IsNil(o.OspHostIds) {
		toSerialize["osp_host_ids"] = o.OspHostIds
	}
	return toSerialize, nil
}

type NullableClusterRemoveHostsReqCluster struct {
	value *ClusterRemoveHostsReqCluster
	isSet bool
}

func (v NullableClusterRemoveHostsReqCluster) Get() *ClusterRemoveHostsReqCluster {
	return v.value
}

func (v *NullableClusterRemoveHostsReqCluster) Set(val *ClusterRemoveHostsReqCluster) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterRemoveHostsReqCluster) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterRemoveHostsReqCluster) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterRemoveHostsReqCluster(val *ClusterRemoveHostsReqCluster) *NullableClusterRemoveHostsReqCluster {
	return &NullableClusterRemoveHostsReqCluster{value: val, isSet: true}
}

func (v NullableClusterRemoveHostsReqCluster) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterRemoveHostsReqCluster) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


