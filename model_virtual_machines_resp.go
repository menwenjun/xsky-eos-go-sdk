/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the VirtualMachinesResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VirtualMachinesResp{}

// VirtualMachinesResp struct for VirtualMachinesResp
type VirtualMachinesResp struct {
	VirtualMachines []VirtualMachine `json:"virtual_machines,omitempty"`
}

// NewVirtualMachinesResp instantiates a new VirtualMachinesResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVirtualMachinesResp() *VirtualMachinesResp {
	this := VirtualMachinesResp{}
	return &this
}

// NewVirtualMachinesRespWithDefaults instantiates a new VirtualMachinesResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVirtualMachinesRespWithDefaults() *VirtualMachinesResp {
	this := VirtualMachinesResp{}
	return &this
}

// GetVirtualMachines returns the VirtualMachines field value if set, zero value otherwise.
func (o *VirtualMachinesResp) GetVirtualMachines() []VirtualMachine {
	if o == nil || IsNil(o.VirtualMachines) {
		var ret []VirtualMachine
		return ret
	}
	return o.VirtualMachines
}

// GetVirtualMachinesOk returns a tuple with the VirtualMachines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachinesResp) GetVirtualMachinesOk() ([]VirtualMachine, bool) {
	if o == nil || IsNil(o.VirtualMachines) {
		return nil, false
	}
	return o.VirtualMachines, true
}

// HasVirtualMachines returns a boolean if a field has been set.
func (o *VirtualMachinesResp) HasVirtualMachines() bool {
	if o != nil && !IsNil(o.VirtualMachines) {
		return true
	}

	return false
}

// SetVirtualMachines gets a reference to the given []VirtualMachine and assigns it to the VirtualMachines field.
func (o *VirtualMachinesResp) SetVirtualMachines(v []VirtualMachine) {
	o.VirtualMachines = v
}

func (o VirtualMachinesResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VirtualMachinesResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VirtualMachines) {
		toSerialize["virtual_machines"] = o.VirtualMachines
	}
	return toSerialize, nil
}

type NullableVirtualMachinesResp struct {
	value *VirtualMachinesResp
	isSet bool
}

func (v NullableVirtualMachinesResp) Get() *VirtualMachinesResp {
	return v.value
}

func (v *NullableVirtualMachinesResp) Set(val *VirtualMachinesResp) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualMachinesResp) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualMachinesResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualMachinesResp(val *VirtualMachinesResp) *NullableVirtualMachinesResp {
	return &NullableVirtualMachinesResp{value: val, isSet: true}
}

func (v NullableVirtualMachinesResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualMachinesResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


