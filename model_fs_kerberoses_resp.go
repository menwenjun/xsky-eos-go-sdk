/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FSKerberosesResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FSKerberosesResp{}

// FSKerberosesResp struct for FSKerberosesResp
type FSKerberosesResp struct {
	// file storage kerberoses
	FsKerberoses []FSKerberos `json:"fs_kerberoses"`
}

type _FSKerberosesResp FSKerberosesResp

// NewFSKerberosesResp instantiates a new FSKerberosesResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFSKerberosesResp(fsKerberoses []FSKerberos) *FSKerberosesResp {
	this := FSKerberosesResp{}
	this.FsKerberoses = fsKerberoses
	return &this
}

// NewFSKerberosesRespWithDefaults instantiates a new FSKerberosesResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFSKerberosesRespWithDefaults() *FSKerberosesResp {
	this := FSKerberosesResp{}
	return &this
}

// GetFsKerberoses returns the FsKerberoses field value
func (o *FSKerberosesResp) GetFsKerberoses() []FSKerberos {
	if o == nil {
		var ret []FSKerberos
		return ret
	}

	return o.FsKerberoses
}

// GetFsKerberosesOk returns a tuple with the FsKerberoses field value
// and a boolean to check if the value has been set.
func (o *FSKerberosesResp) GetFsKerberosesOk() ([]FSKerberos, bool) {
	if o == nil {
		return nil, false
	}
	return o.FsKerberoses, true
}

// SetFsKerberoses sets field value
func (o *FSKerberosesResp) SetFsKerberoses(v []FSKerberos) {
	o.FsKerberoses = v
}

func (o FSKerberosesResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FSKerberosesResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["fs_kerberoses"] = o.FsKerberoses
	return toSerialize, nil
}

func (o *FSKerberosesResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"fs_kerberoses",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFSKerberosesResp := _FSKerberosesResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFSKerberosesResp)

	if err != nil {
		return err
	}

	*o = FSKerberosesResp(varFSKerberosesResp)

	return err
}

type NullableFSKerberosesResp struct {
	value *FSKerberosesResp
	isSet bool
}

func (v NullableFSKerberosesResp) Get() *FSKerberosesResp {
	return v.value
}

func (v *NullableFSKerberosesResp) Set(val *FSKerberosesResp) {
	v.value = val
	v.isSet = true
}

func (v NullableFSKerberosesResp) IsSet() bool {
	return v.isSet
}

func (v *NullableFSKerberosesResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFSKerberosesResp(val *FSKerberosesResp) *NullableFSKerberosesResp {
	return &NullableFSKerberosesResp{value: val, isSet: true}
}

func (v NullableFSKerberosesResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFSKerberosesResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


