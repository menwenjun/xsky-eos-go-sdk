/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DpBlockReplicationPolicyCreateReqPolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DpBlockReplicationPolicyCreateReqPolicy{}

// DpBlockReplicationPolicyCreateReqPolicy struct for DpBlockReplicationPolicyCreateReqPolicy
type DpBlockReplicationPolicyCreateReqPolicy struct {
	// protection site id
	DpSiteId int64 `json:"dp_site_id"`
	// name
	Name string `json:"name"`
	// replication timeout seconds
	TimeoutSeconds int64 `json:"timeout_seconds"`
}

type _DpBlockReplicationPolicyCreateReqPolicy DpBlockReplicationPolicyCreateReqPolicy

// NewDpBlockReplicationPolicyCreateReqPolicy instantiates a new DpBlockReplicationPolicyCreateReqPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDpBlockReplicationPolicyCreateReqPolicy(dpSiteId int64, name string, timeoutSeconds int64) *DpBlockReplicationPolicyCreateReqPolicy {
	this := DpBlockReplicationPolicyCreateReqPolicy{}
	this.DpSiteId = dpSiteId
	this.Name = name
	this.TimeoutSeconds = timeoutSeconds
	return &this
}

// NewDpBlockReplicationPolicyCreateReqPolicyWithDefaults instantiates a new DpBlockReplicationPolicyCreateReqPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDpBlockReplicationPolicyCreateReqPolicyWithDefaults() *DpBlockReplicationPolicyCreateReqPolicy {
	this := DpBlockReplicationPolicyCreateReqPolicy{}
	return &this
}

// GetDpSiteId returns the DpSiteId field value
func (o *DpBlockReplicationPolicyCreateReqPolicy) GetDpSiteId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DpSiteId
}

// GetDpSiteIdOk returns a tuple with the DpSiteId field value
// and a boolean to check if the value has been set.
func (o *DpBlockReplicationPolicyCreateReqPolicy) GetDpSiteIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DpSiteId, true
}

// SetDpSiteId sets field value
func (o *DpBlockReplicationPolicyCreateReqPolicy) SetDpSiteId(v int64) {
	o.DpSiteId = v
}

// GetName returns the Name field value
func (o *DpBlockReplicationPolicyCreateReqPolicy) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DpBlockReplicationPolicyCreateReqPolicy) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DpBlockReplicationPolicyCreateReqPolicy) SetName(v string) {
	o.Name = v
}

// GetTimeoutSeconds returns the TimeoutSeconds field value
func (o *DpBlockReplicationPolicyCreateReqPolicy) GetTimeoutSeconds() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TimeoutSeconds
}

// GetTimeoutSecondsOk returns a tuple with the TimeoutSeconds field value
// and a boolean to check if the value has been set.
func (o *DpBlockReplicationPolicyCreateReqPolicy) GetTimeoutSecondsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeoutSeconds, true
}

// SetTimeoutSeconds sets field value
func (o *DpBlockReplicationPolicyCreateReqPolicy) SetTimeoutSeconds(v int64) {
	o.TimeoutSeconds = v
}

func (o DpBlockReplicationPolicyCreateReqPolicy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DpBlockReplicationPolicyCreateReqPolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dp_site_id"] = o.DpSiteId
	toSerialize["name"] = o.Name
	toSerialize["timeout_seconds"] = o.TimeoutSeconds
	return toSerialize, nil
}

func (o *DpBlockReplicationPolicyCreateReqPolicy) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dp_site_id",
		"name",
		"timeout_seconds",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDpBlockReplicationPolicyCreateReqPolicy := _DpBlockReplicationPolicyCreateReqPolicy{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDpBlockReplicationPolicyCreateReqPolicy)

	if err != nil {
		return err
	}

	*o = DpBlockReplicationPolicyCreateReqPolicy(varDpBlockReplicationPolicyCreateReqPolicy)

	return err
}

type NullableDpBlockReplicationPolicyCreateReqPolicy struct {
	value *DpBlockReplicationPolicyCreateReqPolicy
	isSet bool
}

func (v NullableDpBlockReplicationPolicyCreateReqPolicy) Get() *DpBlockReplicationPolicyCreateReqPolicy {
	return v.value
}

func (v *NullableDpBlockReplicationPolicyCreateReqPolicy) Set(val *DpBlockReplicationPolicyCreateReqPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableDpBlockReplicationPolicyCreateReqPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableDpBlockReplicationPolicyCreateReqPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDpBlockReplicationPolicyCreateReqPolicy(val *DpBlockReplicationPolicyCreateReqPolicy) *NullableDpBlockReplicationPolicyCreateReqPolicy {
	return &NullableDpBlockReplicationPolicyCreateReqPolicy{value: val, isSet: true}
}

func (v NullableDpBlockReplicationPolicyCreateReqPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDpBlockReplicationPolicyCreateReqPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


