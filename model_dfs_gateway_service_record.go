/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the DfsGatewayServiceRecord type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsGatewayServiceRecord{}

// DfsGatewayServiceRecord DfsGatewayServiceRecord combine DfsGatewayService and DfsGatewayServiceStat as API response
type DfsGatewayServiceRecord struct {
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	DfsGateway *DfsGateway `json:"dfs_gateway,omitempty"`
	Host *HostNestview `json:"host,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Pid *int64 `json:"pid,omitempty"`
	Status *string `json:"status,omitempty"`
	Update *time.Time `json:"update,omitempty"`
	Samples []DfsGatewayServiceStat `json:"samples,omitempty"`
}

// NewDfsGatewayServiceRecord instantiates a new DfsGatewayServiceRecord object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsGatewayServiceRecord() *DfsGatewayServiceRecord {
	this := DfsGatewayServiceRecord{}
	return &this
}

// NewDfsGatewayServiceRecordWithDefaults instantiates a new DfsGatewayServiceRecord object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsGatewayServiceRecordWithDefaults() *DfsGatewayServiceRecord {
	this := DfsGatewayServiceRecord{}
	return &this
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *DfsGatewayServiceRecord) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayServiceRecord) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *DfsGatewayServiceRecord) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *DfsGatewayServiceRecord) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *DfsGatewayServiceRecord) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayServiceRecord) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *DfsGatewayServiceRecord) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *DfsGatewayServiceRecord) SetCreate(v time.Time) {
	o.Create = &v
}

// GetDfsGateway returns the DfsGateway field value if set, zero value otherwise.
func (o *DfsGatewayServiceRecord) GetDfsGateway() DfsGateway {
	if o == nil || IsNil(o.DfsGateway) {
		var ret DfsGateway
		return ret
	}
	return *o.DfsGateway
}

// GetDfsGatewayOk returns a tuple with the DfsGateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayServiceRecord) GetDfsGatewayOk() (*DfsGateway, bool) {
	if o == nil || IsNil(o.DfsGateway) {
		return nil, false
	}
	return o.DfsGateway, true
}

// HasDfsGateway returns a boolean if a field has been set.
func (o *DfsGatewayServiceRecord) HasDfsGateway() bool {
	if o != nil && !IsNil(o.DfsGateway) {
		return true
	}

	return false
}

// SetDfsGateway gets a reference to the given DfsGateway and assigns it to the DfsGateway field.
func (o *DfsGatewayServiceRecord) SetDfsGateway(v DfsGateway) {
	o.DfsGateway = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *DfsGatewayServiceRecord) GetHost() HostNestview {
	if o == nil || IsNil(o.Host) {
		var ret HostNestview
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayServiceRecord) GetHostOk() (*HostNestview, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *DfsGatewayServiceRecord) HasHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given HostNestview and assigns it to the Host field.
func (o *DfsGatewayServiceRecord) SetHost(v HostNestview) {
	o.Host = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DfsGatewayServiceRecord) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayServiceRecord) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DfsGatewayServiceRecord) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *DfsGatewayServiceRecord) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DfsGatewayServiceRecord) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayServiceRecord) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DfsGatewayServiceRecord) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DfsGatewayServiceRecord) SetName(v string) {
	o.Name = &v
}

// GetPid returns the Pid field value if set, zero value otherwise.
func (o *DfsGatewayServiceRecord) GetPid() int64 {
	if o == nil || IsNil(o.Pid) {
		var ret int64
		return ret
	}
	return *o.Pid
}

// GetPidOk returns a tuple with the Pid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayServiceRecord) GetPidOk() (*int64, bool) {
	if o == nil || IsNil(o.Pid) {
		return nil, false
	}
	return o.Pid, true
}

// HasPid returns a boolean if a field has been set.
func (o *DfsGatewayServiceRecord) HasPid() bool {
	if o != nil && !IsNil(o.Pid) {
		return true
	}

	return false
}

// SetPid gets a reference to the given int64 and assigns it to the Pid field.
func (o *DfsGatewayServiceRecord) SetPid(v int64) {
	o.Pid = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DfsGatewayServiceRecord) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayServiceRecord) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DfsGatewayServiceRecord) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DfsGatewayServiceRecord) SetStatus(v string) {
	o.Status = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *DfsGatewayServiceRecord) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayServiceRecord) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *DfsGatewayServiceRecord) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *DfsGatewayServiceRecord) SetUpdate(v time.Time) {
	o.Update = &v
}

// GetSamples returns the Samples field value if set, zero value otherwise.
func (o *DfsGatewayServiceRecord) GetSamples() []DfsGatewayServiceStat {
	if o == nil || IsNil(o.Samples) {
		var ret []DfsGatewayServiceStat
		return ret
	}
	return o.Samples
}

// GetSamplesOk returns a tuple with the Samples field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayServiceRecord) GetSamplesOk() ([]DfsGatewayServiceStat, bool) {
	if o == nil || IsNil(o.Samples) {
		return nil, false
	}
	return o.Samples, true
}

// HasSamples returns a boolean if a field has been set.
func (o *DfsGatewayServiceRecord) HasSamples() bool {
	if o != nil && !IsNil(o.Samples) {
		return true
	}

	return false
}

// SetSamples gets a reference to the given []DfsGatewayServiceStat and assigns it to the Samples field.
func (o *DfsGatewayServiceRecord) SetSamples(v []DfsGatewayServiceStat) {
	o.Samples = v
}

func (o DfsGatewayServiceRecord) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsGatewayServiceRecord) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.DfsGateway) {
		toSerialize["dfs_gateway"] = o.DfsGateway
	}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Pid) {
		toSerialize["pid"] = o.Pid
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	if !IsNil(o.Samples) {
		toSerialize["samples"] = o.Samples
	}
	return toSerialize, nil
}

type NullableDfsGatewayServiceRecord struct {
	value *DfsGatewayServiceRecord
	isSet bool
}

func (v NullableDfsGatewayServiceRecord) Get() *DfsGatewayServiceRecord {
	return v.value
}

func (v *NullableDfsGatewayServiceRecord) Set(val *DfsGatewayServiceRecord) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsGatewayServiceRecord) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsGatewayServiceRecord) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsGatewayServiceRecord(val *DfsGatewayServiceRecord) *NullableDfsGatewayServiceRecord {
	return &NullableDfsGatewayServiceRecord{value: val, isSet: true}
}

func (v NullableDfsGatewayServiceRecord) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsGatewayServiceRecord) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


