/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the NFSGatewaySamplesResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NFSGatewaySamplesResp{}

// NFSGatewaySamplesResp struct for NFSGatewaySamplesResp
type NFSGatewaySamplesResp struct {
	// nfs gateway samples
	NfsGatewaySamples []NFSGatewayStat `json:"nfs_gateway_samples"`
}

type _NFSGatewaySamplesResp NFSGatewaySamplesResp

// NewNFSGatewaySamplesResp instantiates a new NFSGatewaySamplesResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNFSGatewaySamplesResp(nfsGatewaySamples []NFSGatewayStat) *NFSGatewaySamplesResp {
	this := NFSGatewaySamplesResp{}
	this.NfsGatewaySamples = nfsGatewaySamples
	return &this
}

// NewNFSGatewaySamplesRespWithDefaults instantiates a new NFSGatewaySamplesResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNFSGatewaySamplesRespWithDefaults() *NFSGatewaySamplesResp {
	this := NFSGatewaySamplesResp{}
	return &this
}

// GetNfsGatewaySamples returns the NfsGatewaySamples field value
func (o *NFSGatewaySamplesResp) GetNfsGatewaySamples() []NFSGatewayStat {
	if o == nil {
		var ret []NFSGatewayStat
		return ret
	}

	return o.NfsGatewaySamples
}

// GetNfsGatewaySamplesOk returns a tuple with the NfsGatewaySamples field value
// and a boolean to check if the value has been set.
func (o *NFSGatewaySamplesResp) GetNfsGatewaySamplesOk() ([]NFSGatewayStat, bool) {
	if o == nil {
		return nil, false
	}
	return o.NfsGatewaySamples, true
}

// SetNfsGatewaySamples sets field value
func (o *NFSGatewaySamplesResp) SetNfsGatewaySamples(v []NFSGatewayStat) {
	o.NfsGatewaySamples = v
}

func (o NFSGatewaySamplesResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NFSGatewaySamplesResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["nfs_gateway_samples"] = o.NfsGatewaySamples
	return toSerialize, nil
}

func (o *NFSGatewaySamplesResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"nfs_gateway_samples",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNFSGatewaySamplesResp := _NFSGatewaySamplesResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varNFSGatewaySamplesResp)

	if err != nil {
		return err
	}

	*o = NFSGatewaySamplesResp(varNFSGatewaySamplesResp)

	return err
}

type NullableNFSGatewaySamplesResp struct {
	value *NFSGatewaySamplesResp
	isSet bool
}

func (v NullableNFSGatewaySamplesResp) Get() *NFSGatewaySamplesResp {
	return v.value
}

func (v *NullableNFSGatewaySamplesResp) Set(val *NFSGatewaySamplesResp) {
	v.value = val
	v.isSet = true
}

func (v NullableNFSGatewaySamplesResp) IsSet() bool {
	return v.isSet
}

func (v *NullableNFSGatewaySamplesResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNFSGatewaySamplesResp(val *NFSGatewaySamplesResp) *NullableNFSGatewaySamplesResp {
	return &NullableNFSGatewaySamplesResp{value: val, isSet: true}
}

func (v NullableNFSGatewaySamplesResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNFSGatewaySamplesResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


