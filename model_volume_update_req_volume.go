/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the VolumeUpdateReqVolume type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeUpdateReqVolume{}

// VolumeUpdateReqVolume struct for VolumeUpdateReqVolume
type VolumeUpdateReqVolume struct {
	Action *string `json:"action,omitempty"`
	BlockSnapshotId *int64 `json:"block_snapshot_id,omitempty"`
	Description *string `json:"description,omitempty"`
	Flattened *bool `json:"flattened,omitempty"`
	Name *string `json:"name,omitempty"`
	PerformancePriority *int64 `json:"performance_priority,omitempty"`
	Qos *VolumeQosSpec `json:"qos,omitempty"`
	QosEnabled *bool `json:"qos_enabled,omitempty"`
	Size *int64 `json:"size,omitempty"`
}

// NewVolumeUpdateReqVolume instantiates a new VolumeUpdateReqVolume object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeUpdateReqVolume() *VolumeUpdateReqVolume {
	this := VolumeUpdateReqVolume{}
	return &this
}

// NewVolumeUpdateReqVolumeWithDefaults instantiates a new VolumeUpdateReqVolume object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeUpdateReqVolumeWithDefaults() *VolumeUpdateReqVolume {
	this := VolumeUpdateReqVolume{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *VolumeUpdateReqVolume) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeUpdateReqVolume) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *VolumeUpdateReqVolume) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *VolumeUpdateReqVolume) SetAction(v string) {
	o.Action = &v
}

// GetBlockSnapshotId returns the BlockSnapshotId field value if set, zero value otherwise.
func (o *VolumeUpdateReqVolume) GetBlockSnapshotId() int64 {
	if o == nil || IsNil(o.BlockSnapshotId) {
		var ret int64
		return ret
	}
	return *o.BlockSnapshotId
}

// GetBlockSnapshotIdOk returns a tuple with the BlockSnapshotId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeUpdateReqVolume) GetBlockSnapshotIdOk() (*int64, bool) {
	if o == nil || IsNil(o.BlockSnapshotId) {
		return nil, false
	}
	return o.BlockSnapshotId, true
}

// HasBlockSnapshotId returns a boolean if a field has been set.
func (o *VolumeUpdateReqVolume) HasBlockSnapshotId() bool {
	if o != nil && !IsNil(o.BlockSnapshotId) {
		return true
	}

	return false
}

// SetBlockSnapshotId gets a reference to the given int64 and assigns it to the BlockSnapshotId field.
func (o *VolumeUpdateReqVolume) SetBlockSnapshotId(v int64) {
	o.BlockSnapshotId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *VolumeUpdateReqVolume) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeUpdateReqVolume) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *VolumeUpdateReqVolume) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *VolumeUpdateReqVolume) SetDescription(v string) {
	o.Description = &v
}

// GetFlattened returns the Flattened field value if set, zero value otherwise.
func (o *VolumeUpdateReqVolume) GetFlattened() bool {
	if o == nil || IsNil(o.Flattened) {
		var ret bool
		return ret
	}
	return *o.Flattened
}

// GetFlattenedOk returns a tuple with the Flattened field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeUpdateReqVolume) GetFlattenedOk() (*bool, bool) {
	if o == nil || IsNil(o.Flattened) {
		return nil, false
	}
	return o.Flattened, true
}

// HasFlattened returns a boolean if a field has been set.
func (o *VolumeUpdateReqVolume) HasFlattened() bool {
	if o != nil && !IsNil(o.Flattened) {
		return true
	}

	return false
}

// SetFlattened gets a reference to the given bool and assigns it to the Flattened field.
func (o *VolumeUpdateReqVolume) SetFlattened(v bool) {
	o.Flattened = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VolumeUpdateReqVolume) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeUpdateReqVolume) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VolumeUpdateReqVolume) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VolumeUpdateReqVolume) SetName(v string) {
	o.Name = &v
}

// GetPerformancePriority returns the PerformancePriority field value if set, zero value otherwise.
func (o *VolumeUpdateReqVolume) GetPerformancePriority() int64 {
	if o == nil || IsNil(o.PerformancePriority) {
		var ret int64
		return ret
	}
	return *o.PerformancePriority
}

// GetPerformancePriorityOk returns a tuple with the PerformancePriority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeUpdateReqVolume) GetPerformancePriorityOk() (*int64, bool) {
	if o == nil || IsNil(o.PerformancePriority) {
		return nil, false
	}
	return o.PerformancePriority, true
}

// HasPerformancePriority returns a boolean if a field has been set.
func (o *VolumeUpdateReqVolume) HasPerformancePriority() bool {
	if o != nil && !IsNil(o.PerformancePriority) {
		return true
	}

	return false
}

// SetPerformancePriority gets a reference to the given int64 and assigns it to the PerformancePriority field.
func (o *VolumeUpdateReqVolume) SetPerformancePriority(v int64) {
	o.PerformancePriority = &v
}

// GetQos returns the Qos field value if set, zero value otherwise.
func (o *VolumeUpdateReqVolume) GetQos() VolumeQosSpec {
	if o == nil || IsNil(o.Qos) {
		var ret VolumeQosSpec
		return ret
	}
	return *o.Qos
}

// GetQosOk returns a tuple with the Qos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeUpdateReqVolume) GetQosOk() (*VolumeQosSpec, bool) {
	if o == nil || IsNil(o.Qos) {
		return nil, false
	}
	return o.Qos, true
}

// HasQos returns a boolean if a field has been set.
func (o *VolumeUpdateReqVolume) HasQos() bool {
	if o != nil && !IsNil(o.Qos) {
		return true
	}

	return false
}

// SetQos gets a reference to the given VolumeQosSpec and assigns it to the Qos field.
func (o *VolumeUpdateReqVolume) SetQos(v VolumeQosSpec) {
	o.Qos = &v
}

// GetQosEnabled returns the QosEnabled field value if set, zero value otherwise.
func (o *VolumeUpdateReqVolume) GetQosEnabled() bool {
	if o == nil || IsNil(o.QosEnabled) {
		var ret bool
		return ret
	}
	return *o.QosEnabled
}

// GetQosEnabledOk returns a tuple with the QosEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeUpdateReqVolume) GetQosEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.QosEnabled) {
		return nil, false
	}
	return o.QosEnabled, true
}

// HasQosEnabled returns a boolean if a field has been set.
func (o *VolumeUpdateReqVolume) HasQosEnabled() bool {
	if o != nil && !IsNil(o.QosEnabled) {
		return true
	}

	return false
}

// SetQosEnabled gets a reference to the given bool and assigns it to the QosEnabled field.
func (o *VolumeUpdateReqVolume) SetQosEnabled(v bool) {
	o.QosEnabled = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *VolumeUpdateReqVolume) GetSize() int64 {
	if o == nil || IsNil(o.Size) {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeUpdateReqVolume) GetSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *VolumeUpdateReqVolume) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *VolumeUpdateReqVolume) SetSize(v int64) {
	o.Size = &v
}

func (o VolumeUpdateReqVolume) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeUpdateReqVolume) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.BlockSnapshotId) {
		toSerialize["block_snapshot_id"] = o.BlockSnapshotId
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Flattened) {
		toSerialize["flattened"] = o.Flattened
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PerformancePriority) {
		toSerialize["performance_priority"] = o.PerformancePriority
	}
	if !IsNil(o.Qos) {
		toSerialize["qos"] = o.Qos
	}
	if !IsNil(o.QosEnabled) {
		toSerialize["qos_enabled"] = o.QosEnabled
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	return toSerialize, nil
}

type NullableVolumeUpdateReqVolume struct {
	value *VolumeUpdateReqVolume
	isSet bool
}

func (v NullableVolumeUpdateReqVolume) Get() *VolumeUpdateReqVolume {
	return v.value
}

func (v *NullableVolumeUpdateReqVolume) Set(val *VolumeUpdateReqVolume) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeUpdateReqVolume) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeUpdateReqVolume) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeUpdateReqVolume(val *VolumeUpdateReqVolume) *NullableVolumeUpdateReqVolume {
	return &NullableVolumeUpdateReqVolume{value: val, isSet: true}
}

func (v NullableVolumeUpdateReqVolume) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeUpdateReqVolume) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


