/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the NFSGatewayBucketMap type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NFSGatewayBucketMap{}

// NFSGatewayBucketMap NFSGatewayBucketMap defines nfs gateway bucket map
type NFSGatewayBucketMap struct {
	ActionStatus *string `json:"action_status,omitempty"`
	Bucket *ObjectStorageBucketNestview `json:"bucket,omitempty"`
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Key *ObjectStorageKeyNestview `json:"key,omitempty"`
	MountClients *string `json:"mount_clients,omitempty"`
	MountNum *int64 `json:"mount_num,omitempty"`
	NfsGateway *NFSGatewayNestview `json:"nfs_gateway,omitempty"`
	Status *string `json:"status,omitempty"`
	Update *time.Time `json:"update,omitempty"`
}

// NewNFSGatewayBucketMap instantiates a new NFSGatewayBucketMap object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNFSGatewayBucketMap() *NFSGatewayBucketMap {
	this := NFSGatewayBucketMap{}
	return &this
}

// NewNFSGatewayBucketMapWithDefaults instantiates a new NFSGatewayBucketMap object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNFSGatewayBucketMapWithDefaults() *NFSGatewayBucketMap {
	this := NFSGatewayBucketMap{}
	return &this
}

// GetActionStatus returns the ActionStatus field value if set, zero value otherwise.
func (o *NFSGatewayBucketMap) GetActionStatus() string {
	if o == nil || IsNil(o.ActionStatus) {
		var ret string
		return ret
	}
	return *o.ActionStatus
}

// GetActionStatusOk returns a tuple with the ActionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NFSGatewayBucketMap) GetActionStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ActionStatus) {
		return nil, false
	}
	return o.ActionStatus, true
}

// HasActionStatus returns a boolean if a field has been set.
func (o *NFSGatewayBucketMap) HasActionStatus() bool {
	if o != nil && !IsNil(o.ActionStatus) {
		return true
	}

	return false
}

// SetActionStatus gets a reference to the given string and assigns it to the ActionStatus field.
func (o *NFSGatewayBucketMap) SetActionStatus(v string) {
	o.ActionStatus = &v
}

// GetBucket returns the Bucket field value if set, zero value otherwise.
func (o *NFSGatewayBucketMap) GetBucket() ObjectStorageBucketNestview {
	if o == nil || IsNil(o.Bucket) {
		var ret ObjectStorageBucketNestview
		return ret
	}
	return *o.Bucket
}

// GetBucketOk returns a tuple with the Bucket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NFSGatewayBucketMap) GetBucketOk() (*ObjectStorageBucketNestview, bool) {
	if o == nil || IsNil(o.Bucket) {
		return nil, false
	}
	return o.Bucket, true
}

// HasBucket returns a boolean if a field has been set.
func (o *NFSGatewayBucketMap) HasBucket() bool {
	if o != nil && !IsNil(o.Bucket) {
		return true
	}

	return false
}

// SetBucket gets a reference to the given ObjectStorageBucketNestview and assigns it to the Bucket field.
func (o *NFSGatewayBucketMap) SetBucket(v ObjectStorageBucketNestview) {
	o.Bucket = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *NFSGatewayBucketMap) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NFSGatewayBucketMap) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *NFSGatewayBucketMap) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *NFSGatewayBucketMap) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *NFSGatewayBucketMap) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NFSGatewayBucketMap) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *NFSGatewayBucketMap) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *NFSGatewayBucketMap) SetCreate(v time.Time) {
	o.Create = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *NFSGatewayBucketMap) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NFSGatewayBucketMap) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *NFSGatewayBucketMap) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *NFSGatewayBucketMap) SetId(v int64) {
	o.Id = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *NFSGatewayBucketMap) GetKey() ObjectStorageKeyNestview {
	if o == nil || IsNil(o.Key) {
		var ret ObjectStorageKeyNestview
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NFSGatewayBucketMap) GetKeyOk() (*ObjectStorageKeyNestview, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *NFSGatewayBucketMap) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given ObjectStorageKeyNestview and assigns it to the Key field.
func (o *NFSGatewayBucketMap) SetKey(v ObjectStorageKeyNestview) {
	o.Key = &v
}

// GetMountClients returns the MountClients field value if set, zero value otherwise.
func (o *NFSGatewayBucketMap) GetMountClients() string {
	if o == nil || IsNil(o.MountClients) {
		var ret string
		return ret
	}
	return *o.MountClients
}

// GetMountClientsOk returns a tuple with the MountClients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NFSGatewayBucketMap) GetMountClientsOk() (*string, bool) {
	if o == nil || IsNil(o.MountClients) {
		return nil, false
	}
	return o.MountClients, true
}

// HasMountClients returns a boolean if a field has been set.
func (o *NFSGatewayBucketMap) HasMountClients() bool {
	if o != nil && !IsNil(o.MountClients) {
		return true
	}

	return false
}

// SetMountClients gets a reference to the given string and assigns it to the MountClients field.
func (o *NFSGatewayBucketMap) SetMountClients(v string) {
	o.MountClients = &v
}

// GetMountNum returns the MountNum field value if set, zero value otherwise.
func (o *NFSGatewayBucketMap) GetMountNum() int64 {
	if o == nil || IsNil(o.MountNum) {
		var ret int64
		return ret
	}
	return *o.MountNum
}

// GetMountNumOk returns a tuple with the MountNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NFSGatewayBucketMap) GetMountNumOk() (*int64, bool) {
	if o == nil || IsNil(o.MountNum) {
		return nil, false
	}
	return o.MountNum, true
}

// HasMountNum returns a boolean if a field has been set.
func (o *NFSGatewayBucketMap) HasMountNum() bool {
	if o != nil && !IsNil(o.MountNum) {
		return true
	}

	return false
}

// SetMountNum gets a reference to the given int64 and assigns it to the MountNum field.
func (o *NFSGatewayBucketMap) SetMountNum(v int64) {
	o.MountNum = &v
}

// GetNfsGateway returns the NfsGateway field value if set, zero value otherwise.
func (o *NFSGatewayBucketMap) GetNfsGateway() NFSGatewayNestview {
	if o == nil || IsNil(o.NfsGateway) {
		var ret NFSGatewayNestview
		return ret
	}
	return *o.NfsGateway
}

// GetNfsGatewayOk returns a tuple with the NfsGateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NFSGatewayBucketMap) GetNfsGatewayOk() (*NFSGatewayNestview, bool) {
	if o == nil || IsNil(o.NfsGateway) {
		return nil, false
	}
	return o.NfsGateway, true
}

// HasNfsGateway returns a boolean if a field has been set.
func (o *NFSGatewayBucketMap) HasNfsGateway() bool {
	if o != nil && !IsNil(o.NfsGateway) {
		return true
	}

	return false
}

// SetNfsGateway gets a reference to the given NFSGatewayNestview and assigns it to the NfsGateway field.
func (o *NFSGatewayBucketMap) SetNfsGateway(v NFSGatewayNestview) {
	o.NfsGateway = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *NFSGatewayBucketMap) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NFSGatewayBucketMap) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *NFSGatewayBucketMap) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *NFSGatewayBucketMap) SetStatus(v string) {
	o.Status = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *NFSGatewayBucketMap) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NFSGatewayBucketMap) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *NFSGatewayBucketMap) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *NFSGatewayBucketMap) SetUpdate(v time.Time) {
	o.Update = &v
}

func (o NFSGatewayBucketMap) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NFSGatewayBucketMap) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActionStatus) {
		toSerialize["action_status"] = o.ActionStatus
	}
	if !IsNil(o.Bucket) {
		toSerialize["bucket"] = o.Bucket
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.MountClients) {
		toSerialize["mount_clients"] = o.MountClients
	}
	if !IsNil(o.MountNum) {
		toSerialize["mount_num"] = o.MountNum
	}
	if !IsNil(o.NfsGateway) {
		toSerialize["nfs_gateway"] = o.NfsGateway
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	return toSerialize, nil
}

type NullableNFSGatewayBucketMap struct {
	value *NFSGatewayBucketMap
	isSet bool
}

func (v NullableNFSGatewayBucketMap) Get() *NFSGatewayBucketMap {
	return v.value
}

func (v *NullableNFSGatewayBucketMap) Set(val *NFSGatewayBucketMap) {
	v.value = val
	v.isSet = true
}

func (v NullableNFSGatewayBucketMap) IsSet() bool {
	return v.isSet
}

func (v *NullableNFSGatewayBucketMap) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNFSGatewayBucketMap(val *NFSGatewayBucketMap) *NullableNFSGatewayBucketMap {
	return &NullableNFSGatewayBucketMap{value: val, isSet: true}
}

func (v NullableNFSGatewayBucketMap) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNFSGatewayBucketMap) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


