/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the NFSGatewayBucketMapUpdateReqNFSGatewayBucketMap type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NFSGatewayBucketMapUpdateReqNFSGatewayBucketMap{}

// NFSGatewayBucketMapUpdateReqNFSGatewayBucketMap struct for NFSGatewayBucketMapUpdateReqNFSGatewayBucketMap
type NFSGatewayBucketMapUpdateReqNFSGatewayBucketMap struct {
	KeyId *int64 `json:"key_id,omitempty"`
}

// NewNFSGatewayBucketMapUpdateReqNFSGatewayBucketMap instantiates a new NFSGatewayBucketMapUpdateReqNFSGatewayBucketMap object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNFSGatewayBucketMapUpdateReqNFSGatewayBucketMap() *NFSGatewayBucketMapUpdateReqNFSGatewayBucketMap {
	this := NFSGatewayBucketMapUpdateReqNFSGatewayBucketMap{}
	return &this
}

// NewNFSGatewayBucketMapUpdateReqNFSGatewayBucketMapWithDefaults instantiates a new NFSGatewayBucketMapUpdateReqNFSGatewayBucketMap object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNFSGatewayBucketMapUpdateReqNFSGatewayBucketMapWithDefaults() *NFSGatewayBucketMapUpdateReqNFSGatewayBucketMap {
	this := NFSGatewayBucketMapUpdateReqNFSGatewayBucketMap{}
	return &this
}

// GetKeyId returns the KeyId field value if set, zero value otherwise.
func (o *NFSGatewayBucketMapUpdateReqNFSGatewayBucketMap) GetKeyId() int64 {
	if o == nil || IsNil(o.KeyId) {
		var ret int64
		return ret
	}
	return *o.KeyId
}

// GetKeyIdOk returns a tuple with the KeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NFSGatewayBucketMapUpdateReqNFSGatewayBucketMap) GetKeyIdOk() (*int64, bool) {
	if o == nil || IsNil(o.KeyId) {
		return nil, false
	}
	return o.KeyId, true
}

// HasKeyId returns a boolean if a field has been set.
func (o *NFSGatewayBucketMapUpdateReqNFSGatewayBucketMap) HasKeyId() bool {
	if o != nil && !IsNil(o.KeyId) {
		return true
	}

	return false
}

// SetKeyId gets a reference to the given int64 and assigns it to the KeyId field.
func (o *NFSGatewayBucketMapUpdateReqNFSGatewayBucketMap) SetKeyId(v int64) {
	o.KeyId = &v
}

func (o NFSGatewayBucketMapUpdateReqNFSGatewayBucketMap) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NFSGatewayBucketMapUpdateReqNFSGatewayBucketMap) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.KeyId) {
		toSerialize["key_id"] = o.KeyId
	}
	return toSerialize, nil
}

type NullableNFSGatewayBucketMapUpdateReqNFSGatewayBucketMap struct {
	value *NFSGatewayBucketMapUpdateReqNFSGatewayBucketMap
	isSet bool
}

func (v NullableNFSGatewayBucketMapUpdateReqNFSGatewayBucketMap) Get() *NFSGatewayBucketMapUpdateReqNFSGatewayBucketMap {
	return v.value
}

func (v *NullableNFSGatewayBucketMapUpdateReqNFSGatewayBucketMap) Set(val *NFSGatewayBucketMapUpdateReqNFSGatewayBucketMap) {
	v.value = val
	v.isSet = true
}

func (v NullableNFSGatewayBucketMapUpdateReqNFSGatewayBucketMap) IsSet() bool {
	return v.isSet
}

func (v *NullableNFSGatewayBucketMapUpdateReqNFSGatewayBucketMap) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNFSGatewayBucketMapUpdateReqNFSGatewayBucketMap(val *NFSGatewayBucketMapUpdateReqNFSGatewayBucketMap) *NullableNFSGatewayBucketMapUpdateReqNFSGatewayBucketMap {
	return &NullableNFSGatewayBucketMapUpdateReqNFSGatewayBucketMap{value: val, isSet: true}
}

func (v NullableNFSGatewayBucketMapUpdateReqNFSGatewayBucketMap) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNFSGatewayBucketMapUpdateReqNFSGatewayBucketMap) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


