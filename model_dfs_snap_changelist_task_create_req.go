/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DfsSnapChangelistTaskCreateReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsSnapChangelistTaskCreateReq{}

// DfsSnapChangelistTaskCreateReq struct for DfsSnapChangelistTaskCreateReq
type DfsSnapChangelistTaskCreateReq struct {
	DfsSnapChangelistTask DfsSnapChangelistTaskCreateReqSnapChangelistTask `json:"dfs_snap_changelist_task"`
}

type _DfsSnapChangelistTaskCreateReq DfsSnapChangelistTaskCreateReq

// NewDfsSnapChangelistTaskCreateReq instantiates a new DfsSnapChangelistTaskCreateReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsSnapChangelistTaskCreateReq(dfsSnapChangelistTask DfsSnapChangelistTaskCreateReqSnapChangelistTask) *DfsSnapChangelistTaskCreateReq {
	this := DfsSnapChangelistTaskCreateReq{}
	this.DfsSnapChangelistTask = dfsSnapChangelistTask
	return &this
}

// NewDfsSnapChangelistTaskCreateReqWithDefaults instantiates a new DfsSnapChangelistTaskCreateReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsSnapChangelistTaskCreateReqWithDefaults() *DfsSnapChangelistTaskCreateReq {
	this := DfsSnapChangelistTaskCreateReq{}
	return &this
}

// GetDfsSnapChangelistTask returns the DfsSnapChangelistTask field value
func (o *DfsSnapChangelistTaskCreateReq) GetDfsSnapChangelistTask() DfsSnapChangelistTaskCreateReqSnapChangelistTask {
	if o == nil {
		var ret DfsSnapChangelistTaskCreateReqSnapChangelistTask
		return ret
	}

	return o.DfsSnapChangelistTask
}

// GetDfsSnapChangelistTaskOk returns a tuple with the DfsSnapChangelistTask field value
// and a boolean to check if the value has been set.
func (o *DfsSnapChangelistTaskCreateReq) GetDfsSnapChangelistTaskOk() (*DfsSnapChangelistTaskCreateReqSnapChangelistTask, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DfsSnapChangelistTask, true
}

// SetDfsSnapChangelistTask sets field value
func (o *DfsSnapChangelistTaskCreateReq) SetDfsSnapChangelistTask(v DfsSnapChangelistTaskCreateReqSnapChangelistTask) {
	o.DfsSnapChangelistTask = v
}

func (o DfsSnapChangelistTaskCreateReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsSnapChangelistTaskCreateReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dfs_snap_changelist_task"] = o.DfsSnapChangelistTask
	return toSerialize, nil
}

func (o *DfsSnapChangelistTaskCreateReq) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dfs_snap_changelist_task",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDfsSnapChangelistTaskCreateReq := _DfsSnapChangelistTaskCreateReq{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDfsSnapChangelistTaskCreateReq)

	if err != nil {
		return err
	}

	*o = DfsSnapChangelistTaskCreateReq(varDfsSnapChangelistTaskCreateReq)

	return err
}

type NullableDfsSnapChangelistTaskCreateReq struct {
	value *DfsSnapChangelistTaskCreateReq
	isSet bool
}

func (v NullableDfsSnapChangelistTaskCreateReq) Get() *DfsSnapChangelistTaskCreateReq {
	return v.value
}

func (v *NullableDfsSnapChangelistTaskCreateReq) Set(val *DfsSnapChangelistTaskCreateReq) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsSnapChangelistTaskCreateReq) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsSnapChangelistTaskCreateReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsSnapChangelistTaskCreateReq(val *DfsSnapChangelistTaskCreateReq) *NullableDfsSnapChangelistTaskCreateReq {
	return &NullableDfsSnapChangelistTaskCreateReq{value: val, isSet: true}
}

func (v NullableDfsSnapChangelistTaskCreateReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsSnapChangelistTaskCreateReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


