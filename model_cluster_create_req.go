/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ClusterCreateReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterCreateReq{}

// ClusterCreateReq struct for ClusterCreateReq
type ClusterCreateReq struct {
	Cluster *ClusterCreateReqCluster `json:"cluster,omitempty"`
}

// NewClusterCreateReq instantiates a new ClusterCreateReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterCreateReq() *ClusterCreateReq {
	this := ClusterCreateReq{}
	return &this
}

// NewClusterCreateReqWithDefaults instantiates a new ClusterCreateReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterCreateReqWithDefaults() *ClusterCreateReq {
	this := ClusterCreateReq{}
	return &this
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *ClusterCreateReq) GetCluster() ClusterCreateReqCluster {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterCreateReqCluster
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterCreateReq) GetClusterOk() (*ClusterCreateReqCluster, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *ClusterCreateReq) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterCreateReqCluster and assigns it to the Cluster field.
func (o *ClusterCreateReq) SetCluster(v ClusterCreateReqCluster) {
	o.Cluster = &v
}

func (o ClusterCreateReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterCreateReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	return toSerialize, nil
}

type NullableClusterCreateReq struct {
	value *ClusterCreateReq
	isSet bool
}

func (v NullableClusterCreateReq) Get() *ClusterCreateReq {
	return v.value
}

func (v *NullableClusterCreateReq) Set(val *ClusterCreateReq) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterCreateReq) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterCreateReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterCreateReq(val *ClusterCreateReq) *NullableClusterCreateReq {
	return &NullableClusterCreateReq{value: val, isSet: true}
}

func (v NullableClusterCreateReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterCreateReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


