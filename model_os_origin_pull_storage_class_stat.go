/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OSOriginPullStorageClassStat type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OSOriginPullStorageClassStat{}

// OSOriginPullStorageClassStat OSOriginPullStorageClassStat define the os origin pull storage class statistics
type OSOriginPullStorageClassStat struct {
	ClassName *string `json:"class_name,omitempty"`
	ExpiredObjects *int64 `json:"expired_objects,omitempty"`
	ExpiredSize *int64 `json:"expired_size,omitempty"`
	RxObjects *int64 `json:"rx_objects,omitempty"`
	RxSize *int64 `json:"rx_size,omitempty"`
	TotalRxObjects *int64 `json:"total_rx_objects,omitempty"`
	TotalRxSize *int64 `json:"total_rx_size,omitempty"`
}

// NewOSOriginPullStorageClassStat instantiates a new OSOriginPullStorageClassStat object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOSOriginPullStorageClassStat() *OSOriginPullStorageClassStat {
	this := OSOriginPullStorageClassStat{}
	return &this
}

// NewOSOriginPullStorageClassStatWithDefaults instantiates a new OSOriginPullStorageClassStat object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOSOriginPullStorageClassStatWithDefaults() *OSOriginPullStorageClassStat {
	this := OSOriginPullStorageClassStat{}
	return &this
}

// GetClassName returns the ClassName field value if set, zero value otherwise.
func (o *OSOriginPullStorageClassStat) GetClassName() string {
	if o == nil || IsNil(o.ClassName) {
		var ret string
		return ret
	}
	return *o.ClassName
}

// GetClassNameOk returns a tuple with the ClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSOriginPullStorageClassStat) GetClassNameOk() (*string, bool) {
	if o == nil || IsNil(o.ClassName) {
		return nil, false
	}
	return o.ClassName, true
}

// HasClassName returns a boolean if a field has been set.
func (o *OSOriginPullStorageClassStat) HasClassName() bool {
	if o != nil && !IsNil(o.ClassName) {
		return true
	}

	return false
}

// SetClassName gets a reference to the given string and assigns it to the ClassName field.
func (o *OSOriginPullStorageClassStat) SetClassName(v string) {
	o.ClassName = &v
}

// GetExpiredObjects returns the ExpiredObjects field value if set, zero value otherwise.
func (o *OSOriginPullStorageClassStat) GetExpiredObjects() int64 {
	if o == nil || IsNil(o.ExpiredObjects) {
		var ret int64
		return ret
	}
	return *o.ExpiredObjects
}

// GetExpiredObjectsOk returns a tuple with the ExpiredObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSOriginPullStorageClassStat) GetExpiredObjectsOk() (*int64, bool) {
	if o == nil || IsNil(o.ExpiredObjects) {
		return nil, false
	}
	return o.ExpiredObjects, true
}

// HasExpiredObjects returns a boolean if a field has been set.
func (o *OSOriginPullStorageClassStat) HasExpiredObjects() bool {
	if o != nil && !IsNil(o.ExpiredObjects) {
		return true
	}

	return false
}

// SetExpiredObjects gets a reference to the given int64 and assigns it to the ExpiredObjects field.
func (o *OSOriginPullStorageClassStat) SetExpiredObjects(v int64) {
	o.ExpiredObjects = &v
}

// GetExpiredSize returns the ExpiredSize field value if set, zero value otherwise.
func (o *OSOriginPullStorageClassStat) GetExpiredSize() int64 {
	if o == nil || IsNil(o.ExpiredSize) {
		var ret int64
		return ret
	}
	return *o.ExpiredSize
}

// GetExpiredSizeOk returns a tuple with the ExpiredSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSOriginPullStorageClassStat) GetExpiredSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.ExpiredSize) {
		return nil, false
	}
	return o.ExpiredSize, true
}

// HasExpiredSize returns a boolean if a field has been set.
func (o *OSOriginPullStorageClassStat) HasExpiredSize() bool {
	if o != nil && !IsNil(o.ExpiredSize) {
		return true
	}

	return false
}

// SetExpiredSize gets a reference to the given int64 and assigns it to the ExpiredSize field.
func (o *OSOriginPullStorageClassStat) SetExpiredSize(v int64) {
	o.ExpiredSize = &v
}

// GetRxObjects returns the RxObjects field value if set, zero value otherwise.
func (o *OSOriginPullStorageClassStat) GetRxObjects() int64 {
	if o == nil || IsNil(o.RxObjects) {
		var ret int64
		return ret
	}
	return *o.RxObjects
}

// GetRxObjectsOk returns a tuple with the RxObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSOriginPullStorageClassStat) GetRxObjectsOk() (*int64, bool) {
	if o == nil || IsNil(o.RxObjects) {
		return nil, false
	}
	return o.RxObjects, true
}

// HasRxObjects returns a boolean if a field has been set.
func (o *OSOriginPullStorageClassStat) HasRxObjects() bool {
	if o != nil && !IsNil(o.RxObjects) {
		return true
	}

	return false
}

// SetRxObjects gets a reference to the given int64 and assigns it to the RxObjects field.
func (o *OSOriginPullStorageClassStat) SetRxObjects(v int64) {
	o.RxObjects = &v
}

// GetRxSize returns the RxSize field value if set, zero value otherwise.
func (o *OSOriginPullStorageClassStat) GetRxSize() int64 {
	if o == nil || IsNil(o.RxSize) {
		var ret int64
		return ret
	}
	return *o.RxSize
}

// GetRxSizeOk returns a tuple with the RxSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSOriginPullStorageClassStat) GetRxSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.RxSize) {
		return nil, false
	}
	return o.RxSize, true
}

// HasRxSize returns a boolean if a field has been set.
func (o *OSOriginPullStorageClassStat) HasRxSize() bool {
	if o != nil && !IsNil(o.RxSize) {
		return true
	}

	return false
}

// SetRxSize gets a reference to the given int64 and assigns it to the RxSize field.
func (o *OSOriginPullStorageClassStat) SetRxSize(v int64) {
	o.RxSize = &v
}

// GetTotalRxObjects returns the TotalRxObjects field value if set, zero value otherwise.
func (o *OSOriginPullStorageClassStat) GetTotalRxObjects() int64 {
	if o == nil || IsNil(o.TotalRxObjects) {
		var ret int64
		return ret
	}
	return *o.TotalRxObjects
}

// GetTotalRxObjectsOk returns a tuple with the TotalRxObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSOriginPullStorageClassStat) GetTotalRxObjectsOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalRxObjects) {
		return nil, false
	}
	return o.TotalRxObjects, true
}

// HasTotalRxObjects returns a boolean if a field has been set.
func (o *OSOriginPullStorageClassStat) HasTotalRxObjects() bool {
	if o != nil && !IsNil(o.TotalRxObjects) {
		return true
	}

	return false
}

// SetTotalRxObjects gets a reference to the given int64 and assigns it to the TotalRxObjects field.
func (o *OSOriginPullStorageClassStat) SetTotalRxObjects(v int64) {
	o.TotalRxObjects = &v
}

// GetTotalRxSize returns the TotalRxSize field value if set, zero value otherwise.
func (o *OSOriginPullStorageClassStat) GetTotalRxSize() int64 {
	if o == nil || IsNil(o.TotalRxSize) {
		var ret int64
		return ret
	}
	return *o.TotalRxSize
}

// GetTotalRxSizeOk returns a tuple with the TotalRxSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSOriginPullStorageClassStat) GetTotalRxSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalRxSize) {
		return nil, false
	}
	return o.TotalRxSize, true
}

// HasTotalRxSize returns a boolean if a field has been set.
func (o *OSOriginPullStorageClassStat) HasTotalRxSize() bool {
	if o != nil && !IsNil(o.TotalRxSize) {
		return true
	}

	return false
}

// SetTotalRxSize gets a reference to the given int64 and assigns it to the TotalRxSize field.
func (o *OSOriginPullStorageClassStat) SetTotalRxSize(v int64) {
	o.TotalRxSize = &v
}

func (o OSOriginPullStorageClassStat) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OSOriginPullStorageClassStat) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClassName) {
		toSerialize["class_name"] = o.ClassName
	}
	if !IsNil(o.ExpiredObjects) {
		toSerialize["expired_objects"] = o.ExpiredObjects
	}
	if !IsNil(o.ExpiredSize) {
		toSerialize["expired_size"] = o.ExpiredSize
	}
	if !IsNil(o.RxObjects) {
		toSerialize["rx_objects"] = o.RxObjects
	}
	if !IsNil(o.RxSize) {
		toSerialize["rx_size"] = o.RxSize
	}
	if !IsNil(o.TotalRxObjects) {
		toSerialize["total_rx_objects"] = o.TotalRxObjects
	}
	if !IsNil(o.TotalRxSize) {
		toSerialize["total_rx_size"] = o.TotalRxSize
	}
	return toSerialize, nil
}

type NullableOSOriginPullStorageClassStat struct {
	value *OSOriginPullStorageClassStat
	isSet bool
}

func (v NullableOSOriginPullStorageClassStat) Get() *OSOriginPullStorageClassStat {
	return v.value
}

func (v *NullableOSOriginPullStorageClassStat) Set(val *OSOriginPullStorageClassStat) {
	v.value = val
	v.isSet = true
}

func (v NullableOSOriginPullStorageClassStat) IsSet() bool {
	return v.isSet
}

func (v *NullableOSOriginPullStorageClassStat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSOriginPullStorageClassStat(val *OSOriginPullStorageClassStat) *NullableOSOriginPullStorageClassStat {
	return &NullableOSOriginPullStorageClassStat{value: val, isSet: true}
}

func (v NullableOSOriginPullStorageClassStat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSOriginPullStorageClassStat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


