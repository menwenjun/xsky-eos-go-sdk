/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the NetworkAddressesResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkAddressesResp{}

// NetworkAddressesResp struct for NetworkAddressesResp
type NetworkAddressesResp struct {
	// network address records
	NetworkAddresses []NetworkAddress `json:"network_addresses,omitempty"`
}

// NewNetworkAddressesResp instantiates a new NetworkAddressesResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkAddressesResp() *NetworkAddressesResp {
	this := NetworkAddressesResp{}
	return &this
}

// NewNetworkAddressesRespWithDefaults instantiates a new NetworkAddressesResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkAddressesRespWithDefaults() *NetworkAddressesResp {
	this := NetworkAddressesResp{}
	return &this
}

// GetNetworkAddresses returns the NetworkAddresses field value if set, zero value otherwise.
func (o *NetworkAddressesResp) GetNetworkAddresses() []NetworkAddress {
	if o == nil || IsNil(o.NetworkAddresses) {
		var ret []NetworkAddress
		return ret
	}
	return o.NetworkAddresses
}

// GetNetworkAddressesOk returns a tuple with the NetworkAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkAddressesResp) GetNetworkAddressesOk() ([]NetworkAddress, bool) {
	if o == nil || IsNil(o.NetworkAddresses) {
		return nil, false
	}
	return o.NetworkAddresses, true
}

// HasNetworkAddresses returns a boolean if a field has been set.
func (o *NetworkAddressesResp) HasNetworkAddresses() bool {
	if o != nil && !IsNil(o.NetworkAddresses) {
		return true
	}

	return false
}

// SetNetworkAddresses gets a reference to the given []NetworkAddress and assigns it to the NetworkAddresses field.
func (o *NetworkAddressesResp) SetNetworkAddresses(v []NetworkAddress) {
	o.NetworkAddresses = v
}

func (o NetworkAddressesResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkAddressesResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NetworkAddresses) {
		toSerialize["network_addresses"] = o.NetworkAddresses
	}
	return toSerialize, nil
}

type NullableNetworkAddressesResp struct {
	value *NetworkAddressesResp
	isSet bool
}

func (v NullableNetworkAddressesResp) Get() *NetworkAddressesResp {
	return v.value
}

func (v *NullableNetworkAddressesResp) Set(val *NetworkAddressesResp) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkAddressesResp) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkAddressesResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkAddressesResp(val *NetworkAddressesResp) *NullableNetworkAddressesResp {
	return &NullableNetworkAddressesResp{value: val, isSet: true}
}

func (v NullableNetworkAddressesResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkAddressesResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


