/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the AccessPath type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessPath{}

// AccessPath AccessPath defines access path
type AccessPath struct {
	ActionStatus *string `json:"action_status,omitempty"`
	BlockVolumeNum *int64 `json:"block_volume_num,omitempty"`
	Chap *bool `json:"chap,omitempty"`
	ClientGroupNum *int64 `json:"client_group_num,omitempty"`
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	Description *string `json:"description,omitempty"`
	HasAluaVolumes *bool `json:"has_alua_volumes,omitempty"`
	Hidden *bool `json:"hidden,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Iqn *string `json:"iqn,omitempty"`
	Name *string `json:"name,omitempty"`
	NvmfType *string `json:"nvmf_type,omitempty"`
	ProtectionDomain *ProtectionDomainNestview `json:"protection_domain,omitempty"`
	Status *string `json:"status,omitempty"`
	Tname *string `json:"tname,omitempty"`
	Tsecret *string `json:"tsecret,omitempty"`
	Type *string `json:"type,omitempty"`
	Uid *string `json:"uid,omitempty"`
	Update *time.Time `json:"update,omitempty"`
	VipGroupNum *int64 `json:"vip_group_num,omitempty"`
}

// NewAccessPath instantiates a new AccessPath object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessPath() *AccessPath {
	this := AccessPath{}
	return &this
}

// NewAccessPathWithDefaults instantiates a new AccessPath object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessPathWithDefaults() *AccessPath {
	this := AccessPath{}
	return &this
}

// GetActionStatus returns the ActionStatus field value if set, zero value otherwise.
func (o *AccessPath) GetActionStatus() string {
	if o == nil || IsNil(o.ActionStatus) {
		var ret string
		return ret
	}
	return *o.ActionStatus
}

// GetActionStatusOk returns a tuple with the ActionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPath) GetActionStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ActionStatus) {
		return nil, false
	}
	return o.ActionStatus, true
}

// HasActionStatus returns a boolean if a field has been set.
func (o *AccessPath) HasActionStatus() bool {
	if o != nil && !IsNil(o.ActionStatus) {
		return true
	}

	return false
}

// SetActionStatus gets a reference to the given string and assigns it to the ActionStatus field.
func (o *AccessPath) SetActionStatus(v string) {
	o.ActionStatus = &v
}

// GetBlockVolumeNum returns the BlockVolumeNum field value if set, zero value otherwise.
func (o *AccessPath) GetBlockVolumeNum() int64 {
	if o == nil || IsNil(o.BlockVolumeNum) {
		var ret int64
		return ret
	}
	return *o.BlockVolumeNum
}

// GetBlockVolumeNumOk returns a tuple with the BlockVolumeNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPath) GetBlockVolumeNumOk() (*int64, bool) {
	if o == nil || IsNil(o.BlockVolumeNum) {
		return nil, false
	}
	return o.BlockVolumeNum, true
}

// HasBlockVolumeNum returns a boolean if a field has been set.
func (o *AccessPath) HasBlockVolumeNum() bool {
	if o != nil && !IsNil(o.BlockVolumeNum) {
		return true
	}

	return false
}

// SetBlockVolumeNum gets a reference to the given int64 and assigns it to the BlockVolumeNum field.
func (o *AccessPath) SetBlockVolumeNum(v int64) {
	o.BlockVolumeNum = &v
}

// GetChap returns the Chap field value if set, zero value otherwise.
func (o *AccessPath) GetChap() bool {
	if o == nil || IsNil(o.Chap) {
		var ret bool
		return ret
	}
	return *o.Chap
}

// GetChapOk returns a tuple with the Chap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPath) GetChapOk() (*bool, bool) {
	if o == nil || IsNil(o.Chap) {
		return nil, false
	}
	return o.Chap, true
}

// HasChap returns a boolean if a field has been set.
func (o *AccessPath) HasChap() bool {
	if o != nil && !IsNil(o.Chap) {
		return true
	}

	return false
}

// SetChap gets a reference to the given bool and assigns it to the Chap field.
func (o *AccessPath) SetChap(v bool) {
	o.Chap = &v
}

// GetClientGroupNum returns the ClientGroupNum field value if set, zero value otherwise.
func (o *AccessPath) GetClientGroupNum() int64 {
	if o == nil || IsNil(o.ClientGroupNum) {
		var ret int64
		return ret
	}
	return *o.ClientGroupNum
}

// GetClientGroupNumOk returns a tuple with the ClientGroupNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPath) GetClientGroupNumOk() (*int64, bool) {
	if o == nil || IsNil(o.ClientGroupNum) {
		return nil, false
	}
	return o.ClientGroupNum, true
}

// HasClientGroupNum returns a boolean if a field has been set.
func (o *AccessPath) HasClientGroupNum() bool {
	if o != nil && !IsNil(o.ClientGroupNum) {
		return true
	}

	return false
}

// SetClientGroupNum gets a reference to the given int64 and assigns it to the ClientGroupNum field.
func (o *AccessPath) SetClientGroupNum(v int64) {
	o.ClientGroupNum = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *AccessPath) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPath) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *AccessPath) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *AccessPath) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *AccessPath) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPath) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *AccessPath) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *AccessPath) SetCreate(v time.Time) {
	o.Create = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AccessPath) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPath) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AccessPath) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AccessPath) SetDescription(v string) {
	o.Description = &v
}

// GetHasAluaVolumes returns the HasAluaVolumes field value if set, zero value otherwise.
func (o *AccessPath) GetHasAluaVolumes() bool {
	if o == nil || IsNil(o.HasAluaVolumes) {
		var ret bool
		return ret
	}
	return *o.HasAluaVolumes
}

// GetHasAluaVolumesOk returns a tuple with the HasAluaVolumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPath) GetHasAluaVolumesOk() (*bool, bool) {
	if o == nil || IsNil(o.HasAluaVolumes) {
		return nil, false
	}
	return o.HasAluaVolumes, true
}

// HasHasAluaVolumes returns a boolean if a field has been set.
func (o *AccessPath) HasHasAluaVolumes() bool {
	if o != nil && !IsNil(o.HasAluaVolumes) {
		return true
	}

	return false
}

// SetHasAluaVolumes gets a reference to the given bool and assigns it to the HasAluaVolumes field.
func (o *AccessPath) SetHasAluaVolumes(v bool) {
	o.HasAluaVolumes = &v
}

// GetHidden returns the Hidden field value if set, zero value otherwise.
func (o *AccessPath) GetHidden() bool {
	if o == nil || IsNil(o.Hidden) {
		var ret bool
		return ret
	}
	return *o.Hidden
}

// GetHiddenOk returns a tuple with the Hidden field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPath) GetHiddenOk() (*bool, bool) {
	if o == nil || IsNil(o.Hidden) {
		return nil, false
	}
	return o.Hidden, true
}

// HasHidden returns a boolean if a field has been set.
func (o *AccessPath) HasHidden() bool {
	if o != nil && !IsNil(o.Hidden) {
		return true
	}

	return false
}

// SetHidden gets a reference to the given bool and assigns it to the Hidden field.
func (o *AccessPath) SetHidden(v bool) {
	o.Hidden = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AccessPath) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPath) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AccessPath) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *AccessPath) SetId(v int64) {
	o.Id = &v
}

// GetIqn returns the Iqn field value if set, zero value otherwise.
func (o *AccessPath) GetIqn() string {
	if o == nil || IsNil(o.Iqn) {
		var ret string
		return ret
	}
	return *o.Iqn
}

// GetIqnOk returns a tuple with the Iqn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPath) GetIqnOk() (*string, bool) {
	if o == nil || IsNil(o.Iqn) {
		return nil, false
	}
	return o.Iqn, true
}

// HasIqn returns a boolean if a field has been set.
func (o *AccessPath) HasIqn() bool {
	if o != nil && !IsNil(o.Iqn) {
		return true
	}

	return false
}

// SetIqn gets a reference to the given string and assigns it to the Iqn field.
func (o *AccessPath) SetIqn(v string) {
	o.Iqn = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AccessPath) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPath) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AccessPath) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AccessPath) SetName(v string) {
	o.Name = &v
}

// GetNvmfType returns the NvmfType field value if set, zero value otherwise.
func (o *AccessPath) GetNvmfType() string {
	if o == nil || IsNil(o.NvmfType) {
		var ret string
		return ret
	}
	return *o.NvmfType
}

// GetNvmfTypeOk returns a tuple with the NvmfType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPath) GetNvmfTypeOk() (*string, bool) {
	if o == nil || IsNil(o.NvmfType) {
		return nil, false
	}
	return o.NvmfType, true
}

// HasNvmfType returns a boolean if a field has been set.
func (o *AccessPath) HasNvmfType() bool {
	if o != nil && !IsNil(o.NvmfType) {
		return true
	}

	return false
}

// SetNvmfType gets a reference to the given string and assigns it to the NvmfType field.
func (o *AccessPath) SetNvmfType(v string) {
	o.NvmfType = &v
}

// GetProtectionDomain returns the ProtectionDomain field value if set, zero value otherwise.
func (o *AccessPath) GetProtectionDomain() ProtectionDomainNestview {
	if o == nil || IsNil(o.ProtectionDomain) {
		var ret ProtectionDomainNestview
		return ret
	}
	return *o.ProtectionDomain
}

// GetProtectionDomainOk returns a tuple with the ProtectionDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPath) GetProtectionDomainOk() (*ProtectionDomainNestview, bool) {
	if o == nil || IsNil(o.ProtectionDomain) {
		return nil, false
	}
	return o.ProtectionDomain, true
}

// HasProtectionDomain returns a boolean if a field has been set.
func (o *AccessPath) HasProtectionDomain() bool {
	if o != nil && !IsNil(o.ProtectionDomain) {
		return true
	}

	return false
}

// SetProtectionDomain gets a reference to the given ProtectionDomainNestview and assigns it to the ProtectionDomain field.
func (o *AccessPath) SetProtectionDomain(v ProtectionDomainNestview) {
	o.ProtectionDomain = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AccessPath) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPath) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AccessPath) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *AccessPath) SetStatus(v string) {
	o.Status = &v
}

// GetTname returns the Tname field value if set, zero value otherwise.
func (o *AccessPath) GetTname() string {
	if o == nil || IsNil(o.Tname) {
		var ret string
		return ret
	}
	return *o.Tname
}

// GetTnameOk returns a tuple with the Tname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPath) GetTnameOk() (*string, bool) {
	if o == nil || IsNil(o.Tname) {
		return nil, false
	}
	return o.Tname, true
}

// HasTname returns a boolean if a field has been set.
func (o *AccessPath) HasTname() bool {
	if o != nil && !IsNil(o.Tname) {
		return true
	}

	return false
}

// SetTname gets a reference to the given string and assigns it to the Tname field.
func (o *AccessPath) SetTname(v string) {
	o.Tname = &v
}

// GetTsecret returns the Tsecret field value if set, zero value otherwise.
func (o *AccessPath) GetTsecret() string {
	if o == nil || IsNil(o.Tsecret) {
		var ret string
		return ret
	}
	return *o.Tsecret
}

// GetTsecretOk returns a tuple with the Tsecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPath) GetTsecretOk() (*string, bool) {
	if o == nil || IsNil(o.Tsecret) {
		return nil, false
	}
	return o.Tsecret, true
}

// HasTsecret returns a boolean if a field has been set.
func (o *AccessPath) HasTsecret() bool {
	if o != nil && !IsNil(o.Tsecret) {
		return true
	}

	return false
}

// SetTsecret gets a reference to the given string and assigns it to the Tsecret field.
func (o *AccessPath) SetTsecret(v string) {
	o.Tsecret = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AccessPath) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPath) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AccessPath) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AccessPath) SetType(v string) {
	o.Type = &v
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *AccessPath) GetUid() string {
	if o == nil || IsNil(o.Uid) {
		var ret string
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPath) GetUidOk() (*string, bool) {
	if o == nil || IsNil(o.Uid) {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *AccessPath) HasUid() bool {
	if o != nil && !IsNil(o.Uid) {
		return true
	}

	return false
}

// SetUid gets a reference to the given string and assigns it to the Uid field.
func (o *AccessPath) SetUid(v string) {
	o.Uid = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *AccessPath) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPath) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *AccessPath) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *AccessPath) SetUpdate(v time.Time) {
	o.Update = &v
}

// GetVipGroupNum returns the VipGroupNum field value if set, zero value otherwise.
func (o *AccessPath) GetVipGroupNum() int64 {
	if o == nil || IsNil(o.VipGroupNum) {
		var ret int64
		return ret
	}
	return *o.VipGroupNum
}

// GetVipGroupNumOk returns a tuple with the VipGroupNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessPath) GetVipGroupNumOk() (*int64, bool) {
	if o == nil || IsNil(o.VipGroupNum) {
		return nil, false
	}
	return o.VipGroupNum, true
}

// HasVipGroupNum returns a boolean if a field has been set.
func (o *AccessPath) HasVipGroupNum() bool {
	if o != nil && !IsNil(o.VipGroupNum) {
		return true
	}

	return false
}

// SetVipGroupNum gets a reference to the given int64 and assigns it to the VipGroupNum field.
func (o *AccessPath) SetVipGroupNum(v int64) {
	o.VipGroupNum = &v
}

func (o AccessPath) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessPath) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActionStatus) {
		toSerialize["action_status"] = o.ActionStatus
	}
	if !IsNil(o.BlockVolumeNum) {
		toSerialize["block_volume_num"] = o.BlockVolumeNum
	}
	if !IsNil(o.Chap) {
		toSerialize["chap"] = o.Chap
	}
	if !IsNil(o.ClientGroupNum) {
		toSerialize["client_group_num"] = o.ClientGroupNum
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.HasAluaVolumes) {
		toSerialize["has_alua_volumes"] = o.HasAluaVolumes
	}
	if !IsNil(o.Hidden) {
		toSerialize["hidden"] = o.Hidden
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Iqn) {
		toSerialize["iqn"] = o.Iqn
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NvmfType) {
		toSerialize["nvmf_type"] = o.NvmfType
	}
	if !IsNil(o.ProtectionDomain) {
		toSerialize["protection_domain"] = o.ProtectionDomain
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Tname) {
		toSerialize["tname"] = o.Tname
	}
	if !IsNil(o.Tsecret) {
		toSerialize["tsecret"] = o.Tsecret
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Uid) {
		toSerialize["uid"] = o.Uid
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	if !IsNil(o.VipGroupNum) {
		toSerialize["vip_group_num"] = o.VipGroupNum
	}
	return toSerialize, nil
}

type NullableAccessPath struct {
	value *AccessPath
	isSet bool
}

func (v NullableAccessPath) Get() *AccessPath {
	return v.value
}

func (v *NullableAccessPath) Set(val *AccessPath) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessPath) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessPath) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessPath(val *AccessPath) *NullableAccessPath {
	return &NullableAccessPath{value: val, isSet: true}
}

func (v NullableAccessPath) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessPath) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


