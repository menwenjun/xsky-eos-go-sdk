/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the DfsQosStat type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsQosStat{}

// DfsQosStat DfsQosStat records dfs qos stat info
type DfsQosStat struct {
	Create *time.Time `json:"create,omitempty"`
	ReadBandwidth *int64 `json:"read_bandwidth,omitempty"`
	ReadObject *int64 `json:"read_object,omitempty"`
	TotalBandwidth *int64 `json:"total_bandwidth,omitempty"`
	TotalObject *int64 `json:"total_object,omitempty"`
	WriteBandwidth *int64 `json:"write_bandwidth,omitempty"`
	WriteObject *int64 `json:"write_object,omitempty"`
}

// NewDfsQosStat instantiates a new DfsQosStat object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsQosStat() *DfsQosStat {
	this := DfsQosStat{}
	return &this
}

// NewDfsQosStatWithDefaults instantiates a new DfsQosStat object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsQosStatWithDefaults() *DfsQosStat {
	this := DfsQosStat{}
	return &this
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *DfsQosStat) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQosStat) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *DfsQosStat) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *DfsQosStat) SetCreate(v time.Time) {
	o.Create = &v
}

// GetReadBandwidth returns the ReadBandwidth field value if set, zero value otherwise.
func (o *DfsQosStat) GetReadBandwidth() int64 {
	if o == nil || IsNil(o.ReadBandwidth) {
		var ret int64
		return ret
	}
	return *o.ReadBandwidth
}

// GetReadBandwidthOk returns a tuple with the ReadBandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQosStat) GetReadBandwidthOk() (*int64, bool) {
	if o == nil || IsNil(o.ReadBandwidth) {
		return nil, false
	}
	return o.ReadBandwidth, true
}

// HasReadBandwidth returns a boolean if a field has been set.
func (o *DfsQosStat) HasReadBandwidth() bool {
	if o != nil && !IsNil(o.ReadBandwidth) {
		return true
	}

	return false
}

// SetReadBandwidth gets a reference to the given int64 and assigns it to the ReadBandwidth field.
func (o *DfsQosStat) SetReadBandwidth(v int64) {
	o.ReadBandwidth = &v
}

// GetReadObject returns the ReadObject field value if set, zero value otherwise.
func (o *DfsQosStat) GetReadObject() int64 {
	if o == nil || IsNil(o.ReadObject) {
		var ret int64
		return ret
	}
	return *o.ReadObject
}

// GetReadObjectOk returns a tuple with the ReadObject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQosStat) GetReadObjectOk() (*int64, bool) {
	if o == nil || IsNil(o.ReadObject) {
		return nil, false
	}
	return o.ReadObject, true
}

// HasReadObject returns a boolean if a field has been set.
func (o *DfsQosStat) HasReadObject() bool {
	if o != nil && !IsNil(o.ReadObject) {
		return true
	}

	return false
}

// SetReadObject gets a reference to the given int64 and assigns it to the ReadObject field.
func (o *DfsQosStat) SetReadObject(v int64) {
	o.ReadObject = &v
}

// GetTotalBandwidth returns the TotalBandwidth field value if set, zero value otherwise.
func (o *DfsQosStat) GetTotalBandwidth() int64 {
	if o == nil || IsNil(o.TotalBandwidth) {
		var ret int64
		return ret
	}
	return *o.TotalBandwidth
}

// GetTotalBandwidthOk returns a tuple with the TotalBandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQosStat) GetTotalBandwidthOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalBandwidth) {
		return nil, false
	}
	return o.TotalBandwidth, true
}

// HasTotalBandwidth returns a boolean if a field has been set.
func (o *DfsQosStat) HasTotalBandwidth() bool {
	if o != nil && !IsNil(o.TotalBandwidth) {
		return true
	}

	return false
}

// SetTotalBandwidth gets a reference to the given int64 and assigns it to the TotalBandwidth field.
func (o *DfsQosStat) SetTotalBandwidth(v int64) {
	o.TotalBandwidth = &v
}

// GetTotalObject returns the TotalObject field value if set, zero value otherwise.
func (o *DfsQosStat) GetTotalObject() int64 {
	if o == nil || IsNil(o.TotalObject) {
		var ret int64
		return ret
	}
	return *o.TotalObject
}

// GetTotalObjectOk returns a tuple with the TotalObject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQosStat) GetTotalObjectOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalObject) {
		return nil, false
	}
	return o.TotalObject, true
}

// HasTotalObject returns a boolean if a field has been set.
func (o *DfsQosStat) HasTotalObject() bool {
	if o != nil && !IsNil(o.TotalObject) {
		return true
	}

	return false
}

// SetTotalObject gets a reference to the given int64 and assigns it to the TotalObject field.
func (o *DfsQosStat) SetTotalObject(v int64) {
	o.TotalObject = &v
}

// GetWriteBandwidth returns the WriteBandwidth field value if set, zero value otherwise.
func (o *DfsQosStat) GetWriteBandwidth() int64 {
	if o == nil || IsNil(o.WriteBandwidth) {
		var ret int64
		return ret
	}
	return *o.WriteBandwidth
}

// GetWriteBandwidthOk returns a tuple with the WriteBandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQosStat) GetWriteBandwidthOk() (*int64, bool) {
	if o == nil || IsNil(o.WriteBandwidth) {
		return nil, false
	}
	return o.WriteBandwidth, true
}

// HasWriteBandwidth returns a boolean if a field has been set.
func (o *DfsQosStat) HasWriteBandwidth() bool {
	if o != nil && !IsNil(o.WriteBandwidth) {
		return true
	}

	return false
}

// SetWriteBandwidth gets a reference to the given int64 and assigns it to the WriteBandwidth field.
func (o *DfsQosStat) SetWriteBandwidth(v int64) {
	o.WriteBandwidth = &v
}

// GetWriteObject returns the WriteObject field value if set, zero value otherwise.
func (o *DfsQosStat) GetWriteObject() int64 {
	if o == nil || IsNil(o.WriteObject) {
		var ret int64
		return ret
	}
	return *o.WriteObject
}

// GetWriteObjectOk returns a tuple with the WriteObject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQosStat) GetWriteObjectOk() (*int64, bool) {
	if o == nil || IsNil(o.WriteObject) {
		return nil, false
	}
	return o.WriteObject, true
}

// HasWriteObject returns a boolean if a field has been set.
func (o *DfsQosStat) HasWriteObject() bool {
	if o != nil && !IsNil(o.WriteObject) {
		return true
	}

	return false
}

// SetWriteObject gets a reference to the given int64 and assigns it to the WriteObject field.
func (o *DfsQosStat) SetWriteObject(v int64) {
	o.WriteObject = &v
}

func (o DfsQosStat) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsQosStat) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.ReadBandwidth) {
		toSerialize["read_bandwidth"] = o.ReadBandwidth
	}
	if !IsNil(o.ReadObject) {
		toSerialize["read_object"] = o.ReadObject
	}
	if !IsNil(o.TotalBandwidth) {
		toSerialize["total_bandwidth"] = o.TotalBandwidth
	}
	if !IsNil(o.TotalObject) {
		toSerialize["total_object"] = o.TotalObject
	}
	if !IsNil(o.WriteBandwidth) {
		toSerialize["write_bandwidth"] = o.WriteBandwidth
	}
	if !IsNil(o.WriteObject) {
		toSerialize["write_object"] = o.WriteObject
	}
	return toSerialize, nil
}

type NullableDfsQosStat struct {
	value *DfsQosStat
	isSet bool
}

func (v NullableDfsQosStat) Get() *DfsQosStat {
	return v.value
}

func (v *NullableDfsQosStat) Set(val *DfsQosStat) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsQosStat) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsQosStat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsQosStat(val *DfsQosStat) *NullableDfsQosStat {
	return &NullableDfsQosStat{value: val, isSet: true}
}

func (v NullableDfsQosStat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsQosStat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


