/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DpBlockAsyncReplicationPairUpdateReqPair type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DpBlockAsyncReplicationPairUpdateReqPair{}

// DpBlockAsyncReplicationPairUpdateReqPair struct for DpBlockAsyncReplicationPairUpdateReqPair
type DpBlockAsyncReplicationPairUpdateReqPair struct {
	// connection
	Connected *bool `json:"connected,omitempty"`
	// master policy cron
	MasterPolicyCron *string `json:"master_policy_cron,omitempty"`
	// master pool name
	MasterPoolName *string `json:"master_pool_name,omitempty"`
	// master volume name
	MasterVolumeName *string `json:"master_volume_name,omitempty"`
}

// NewDpBlockAsyncReplicationPairUpdateReqPair instantiates a new DpBlockAsyncReplicationPairUpdateReqPair object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDpBlockAsyncReplicationPairUpdateReqPair() *DpBlockAsyncReplicationPairUpdateReqPair {
	this := DpBlockAsyncReplicationPairUpdateReqPair{}
	return &this
}

// NewDpBlockAsyncReplicationPairUpdateReqPairWithDefaults instantiates a new DpBlockAsyncReplicationPairUpdateReqPair object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDpBlockAsyncReplicationPairUpdateReqPairWithDefaults() *DpBlockAsyncReplicationPairUpdateReqPair {
	this := DpBlockAsyncReplicationPairUpdateReqPair{}
	return &this
}

// GetConnected returns the Connected field value if set, zero value otherwise.
func (o *DpBlockAsyncReplicationPairUpdateReqPair) GetConnected() bool {
	if o == nil || IsNil(o.Connected) {
		var ret bool
		return ret
	}
	return *o.Connected
}

// GetConnectedOk returns a tuple with the Connected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpBlockAsyncReplicationPairUpdateReqPair) GetConnectedOk() (*bool, bool) {
	if o == nil || IsNil(o.Connected) {
		return nil, false
	}
	return o.Connected, true
}

// HasConnected returns a boolean if a field has been set.
func (o *DpBlockAsyncReplicationPairUpdateReqPair) HasConnected() bool {
	if o != nil && !IsNil(o.Connected) {
		return true
	}

	return false
}

// SetConnected gets a reference to the given bool and assigns it to the Connected field.
func (o *DpBlockAsyncReplicationPairUpdateReqPair) SetConnected(v bool) {
	o.Connected = &v
}

// GetMasterPolicyCron returns the MasterPolicyCron field value if set, zero value otherwise.
func (o *DpBlockAsyncReplicationPairUpdateReqPair) GetMasterPolicyCron() string {
	if o == nil || IsNil(o.MasterPolicyCron) {
		var ret string
		return ret
	}
	return *o.MasterPolicyCron
}

// GetMasterPolicyCronOk returns a tuple with the MasterPolicyCron field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpBlockAsyncReplicationPairUpdateReqPair) GetMasterPolicyCronOk() (*string, bool) {
	if o == nil || IsNil(o.MasterPolicyCron) {
		return nil, false
	}
	return o.MasterPolicyCron, true
}

// HasMasterPolicyCron returns a boolean if a field has been set.
func (o *DpBlockAsyncReplicationPairUpdateReqPair) HasMasterPolicyCron() bool {
	if o != nil && !IsNil(o.MasterPolicyCron) {
		return true
	}

	return false
}

// SetMasterPolicyCron gets a reference to the given string and assigns it to the MasterPolicyCron field.
func (o *DpBlockAsyncReplicationPairUpdateReqPair) SetMasterPolicyCron(v string) {
	o.MasterPolicyCron = &v
}

// GetMasterPoolName returns the MasterPoolName field value if set, zero value otherwise.
func (o *DpBlockAsyncReplicationPairUpdateReqPair) GetMasterPoolName() string {
	if o == nil || IsNil(o.MasterPoolName) {
		var ret string
		return ret
	}
	return *o.MasterPoolName
}

// GetMasterPoolNameOk returns a tuple with the MasterPoolName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpBlockAsyncReplicationPairUpdateReqPair) GetMasterPoolNameOk() (*string, bool) {
	if o == nil || IsNil(o.MasterPoolName) {
		return nil, false
	}
	return o.MasterPoolName, true
}

// HasMasterPoolName returns a boolean if a field has been set.
func (o *DpBlockAsyncReplicationPairUpdateReqPair) HasMasterPoolName() bool {
	if o != nil && !IsNil(o.MasterPoolName) {
		return true
	}

	return false
}

// SetMasterPoolName gets a reference to the given string and assigns it to the MasterPoolName field.
func (o *DpBlockAsyncReplicationPairUpdateReqPair) SetMasterPoolName(v string) {
	o.MasterPoolName = &v
}

// GetMasterVolumeName returns the MasterVolumeName field value if set, zero value otherwise.
func (o *DpBlockAsyncReplicationPairUpdateReqPair) GetMasterVolumeName() string {
	if o == nil || IsNil(o.MasterVolumeName) {
		var ret string
		return ret
	}
	return *o.MasterVolumeName
}

// GetMasterVolumeNameOk returns a tuple with the MasterVolumeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpBlockAsyncReplicationPairUpdateReqPair) GetMasterVolumeNameOk() (*string, bool) {
	if o == nil || IsNil(o.MasterVolumeName) {
		return nil, false
	}
	return o.MasterVolumeName, true
}

// HasMasterVolumeName returns a boolean if a field has been set.
func (o *DpBlockAsyncReplicationPairUpdateReqPair) HasMasterVolumeName() bool {
	if o != nil && !IsNil(o.MasterVolumeName) {
		return true
	}

	return false
}

// SetMasterVolumeName gets a reference to the given string and assigns it to the MasterVolumeName field.
func (o *DpBlockAsyncReplicationPairUpdateReqPair) SetMasterVolumeName(v string) {
	o.MasterVolumeName = &v
}

func (o DpBlockAsyncReplicationPairUpdateReqPair) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DpBlockAsyncReplicationPairUpdateReqPair) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Connected) {
		toSerialize["connected"] = o.Connected
	}
	if !IsNil(o.MasterPolicyCron) {
		toSerialize["master_policy_cron"] = o.MasterPolicyCron
	}
	if !IsNil(o.MasterPoolName) {
		toSerialize["master_pool_name"] = o.MasterPoolName
	}
	if !IsNil(o.MasterVolumeName) {
		toSerialize["master_volume_name"] = o.MasterVolumeName
	}
	return toSerialize, nil
}

type NullableDpBlockAsyncReplicationPairUpdateReqPair struct {
	value *DpBlockAsyncReplicationPairUpdateReqPair
	isSet bool
}

func (v NullableDpBlockAsyncReplicationPairUpdateReqPair) Get() *DpBlockAsyncReplicationPairUpdateReqPair {
	return v.value
}

func (v *NullableDpBlockAsyncReplicationPairUpdateReqPair) Set(val *DpBlockAsyncReplicationPairUpdateReqPair) {
	v.value = val
	v.isSet = true
}

func (v NullableDpBlockAsyncReplicationPairUpdateReqPair) IsSet() bool {
	return v.isSet
}

func (v *NullableDpBlockAsyncReplicationPairUpdateReqPair) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDpBlockAsyncReplicationPairUpdateReqPair(val *DpBlockAsyncReplicationPairUpdateReqPair) *NullableDpBlockAsyncReplicationPairUpdateReqPair {
	return &NullableDpBlockAsyncReplicationPairUpdateReqPair{value: val, isSet: true}
}

func (v NullableDpBlockAsyncReplicationPairUpdateReqPair) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDpBlockAsyncReplicationPairUpdateReqPair) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


