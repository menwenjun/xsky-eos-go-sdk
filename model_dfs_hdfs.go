/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the DfsHdfs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsHdfs{}

// DfsHdfs DfsHdfs defines models of dfs hdfs
type DfsHdfs struct {
	ActionStatus *string `json:"action_status,omitempty"`
	AuthToLocals []string `json:"auth_to_locals,omitempty"`
	AuthType *string `json:"auth_type,omitempty"`
	BlockSize *int64 `json:"block_size,omitempty"`
	ChecksumType *string `json:"checksum_type,omitempty"`
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	Description *string `json:"description,omitempty"`
	DfsGatewayGroup *DfsGatewayGroupNestview `json:"dfs_gateway_group,omitempty"`
	DfsGatewayZone *DfsGatewayZoneNestview `json:"dfs_gateway_zone,omitempty"`
	DfsHdfsAclNum *int64 `json:"dfs_hdfs_acl_num,omitempty"`
	DfsHdfsIpWhiteLists []DfsHdfsIPWhiteList `json:"dfs_hdfs_ip_white_lists,omitempty"`
	DfsHdfsIpWhiteListsNum *int64 `json:"dfs_hdfs_ip_white_lists_num,omitempty"`
	DfsHdfsProxyUserNum *int64 `json:"dfs_hdfs_proxy_user_num,omitempty"`
	DfsPath *DfsPathNestview `json:"dfs_path,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Kerberos *FSKerberosNestview `json:"kerberos,omitempty"`
	Name *string `json:"name,omitempty"`
	Port *int64 `json:"port,omitempty"`
	PrincipalName *string `json:"principal_name,omitempty"`
	Ranger *bool `json:"ranger,omitempty"`
	RangerIp *string `json:"ranger_ip,omitempty"`
	RangerServiceName *string `json:"ranger_service_name,omitempty"`
	RangerUrl *string `json:"ranger_url,omitempty"`
	Securities []string `json:"securities,omitempty"`
	Status *string `json:"status,omitempty"`
	Update *time.Time `json:"update,omitempty"`
	Version *string `json:"version,omitempty"`
}

// NewDfsHdfs instantiates a new DfsHdfs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsHdfs() *DfsHdfs {
	this := DfsHdfs{}
	return &this
}

// NewDfsHdfsWithDefaults instantiates a new DfsHdfs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsHdfsWithDefaults() *DfsHdfs {
	this := DfsHdfs{}
	return &this
}

// GetActionStatus returns the ActionStatus field value if set, zero value otherwise.
func (o *DfsHdfs) GetActionStatus() string {
	if o == nil || IsNil(o.ActionStatus) {
		var ret string
		return ret
	}
	return *o.ActionStatus
}

// GetActionStatusOk returns a tuple with the ActionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfs) GetActionStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ActionStatus) {
		return nil, false
	}
	return o.ActionStatus, true
}

// HasActionStatus returns a boolean if a field has been set.
func (o *DfsHdfs) HasActionStatus() bool {
	if o != nil && !IsNil(o.ActionStatus) {
		return true
	}

	return false
}

// SetActionStatus gets a reference to the given string and assigns it to the ActionStatus field.
func (o *DfsHdfs) SetActionStatus(v string) {
	o.ActionStatus = &v
}

// GetAuthToLocals returns the AuthToLocals field value if set, zero value otherwise.
func (o *DfsHdfs) GetAuthToLocals() []string {
	if o == nil || IsNil(o.AuthToLocals) {
		var ret []string
		return ret
	}
	return o.AuthToLocals
}

// GetAuthToLocalsOk returns a tuple with the AuthToLocals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfs) GetAuthToLocalsOk() ([]string, bool) {
	if o == nil || IsNil(o.AuthToLocals) {
		return nil, false
	}
	return o.AuthToLocals, true
}

// HasAuthToLocals returns a boolean if a field has been set.
func (o *DfsHdfs) HasAuthToLocals() bool {
	if o != nil && !IsNil(o.AuthToLocals) {
		return true
	}

	return false
}

// SetAuthToLocals gets a reference to the given []string and assigns it to the AuthToLocals field.
func (o *DfsHdfs) SetAuthToLocals(v []string) {
	o.AuthToLocals = v
}

// GetAuthType returns the AuthType field value if set, zero value otherwise.
func (o *DfsHdfs) GetAuthType() string {
	if o == nil || IsNil(o.AuthType) {
		var ret string
		return ret
	}
	return *o.AuthType
}

// GetAuthTypeOk returns a tuple with the AuthType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfs) GetAuthTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AuthType) {
		return nil, false
	}
	return o.AuthType, true
}

// HasAuthType returns a boolean if a field has been set.
func (o *DfsHdfs) HasAuthType() bool {
	if o != nil && !IsNil(o.AuthType) {
		return true
	}

	return false
}

// SetAuthType gets a reference to the given string and assigns it to the AuthType field.
func (o *DfsHdfs) SetAuthType(v string) {
	o.AuthType = &v
}

// GetBlockSize returns the BlockSize field value if set, zero value otherwise.
func (o *DfsHdfs) GetBlockSize() int64 {
	if o == nil || IsNil(o.BlockSize) {
		var ret int64
		return ret
	}
	return *o.BlockSize
}

// GetBlockSizeOk returns a tuple with the BlockSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfs) GetBlockSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.BlockSize) {
		return nil, false
	}
	return o.BlockSize, true
}

// HasBlockSize returns a boolean if a field has been set.
func (o *DfsHdfs) HasBlockSize() bool {
	if o != nil && !IsNil(o.BlockSize) {
		return true
	}

	return false
}

// SetBlockSize gets a reference to the given int64 and assigns it to the BlockSize field.
func (o *DfsHdfs) SetBlockSize(v int64) {
	o.BlockSize = &v
}

// GetChecksumType returns the ChecksumType field value if set, zero value otherwise.
func (o *DfsHdfs) GetChecksumType() string {
	if o == nil || IsNil(o.ChecksumType) {
		var ret string
		return ret
	}
	return *o.ChecksumType
}

// GetChecksumTypeOk returns a tuple with the ChecksumType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfs) GetChecksumTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ChecksumType) {
		return nil, false
	}
	return o.ChecksumType, true
}

// HasChecksumType returns a boolean if a field has been set.
func (o *DfsHdfs) HasChecksumType() bool {
	if o != nil && !IsNil(o.ChecksumType) {
		return true
	}

	return false
}

// SetChecksumType gets a reference to the given string and assigns it to the ChecksumType field.
func (o *DfsHdfs) SetChecksumType(v string) {
	o.ChecksumType = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *DfsHdfs) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfs) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *DfsHdfs) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *DfsHdfs) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *DfsHdfs) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfs) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *DfsHdfs) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *DfsHdfs) SetCreate(v time.Time) {
	o.Create = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *DfsHdfs) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfs) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *DfsHdfs) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DfsHdfs) SetDescription(v string) {
	o.Description = &v
}

// GetDfsGatewayGroup returns the DfsGatewayGroup field value if set, zero value otherwise.
func (o *DfsHdfs) GetDfsGatewayGroup() DfsGatewayGroupNestview {
	if o == nil || IsNil(o.DfsGatewayGroup) {
		var ret DfsGatewayGroupNestview
		return ret
	}
	return *o.DfsGatewayGroup
}

// GetDfsGatewayGroupOk returns a tuple with the DfsGatewayGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfs) GetDfsGatewayGroupOk() (*DfsGatewayGroupNestview, bool) {
	if o == nil || IsNil(o.DfsGatewayGroup) {
		return nil, false
	}
	return o.DfsGatewayGroup, true
}

// HasDfsGatewayGroup returns a boolean if a field has been set.
func (o *DfsHdfs) HasDfsGatewayGroup() bool {
	if o != nil && !IsNil(o.DfsGatewayGroup) {
		return true
	}

	return false
}

// SetDfsGatewayGroup gets a reference to the given DfsGatewayGroupNestview and assigns it to the DfsGatewayGroup field.
func (o *DfsHdfs) SetDfsGatewayGroup(v DfsGatewayGroupNestview) {
	o.DfsGatewayGroup = &v
}

// GetDfsGatewayZone returns the DfsGatewayZone field value if set, zero value otherwise.
func (o *DfsHdfs) GetDfsGatewayZone() DfsGatewayZoneNestview {
	if o == nil || IsNil(o.DfsGatewayZone) {
		var ret DfsGatewayZoneNestview
		return ret
	}
	return *o.DfsGatewayZone
}

// GetDfsGatewayZoneOk returns a tuple with the DfsGatewayZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfs) GetDfsGatewayZoneOk() (*DfsGatewayZoneNestview, bool) {
	if o == nil || IsNil(o.DfsGatewayZone) {
		return nil, false
	}
	return o.DfsGatewayZone, true
}

// HasDfsGatewayZone returns a boolean if a field has been set.
func (o *DfsHdfs) HasDfsGatewayZone() bool {
	if o != nil && !IsNil(o.DfsGatewayZone) {
		return true
	}

	return false
}

// SetDfsGatewayZone gets a reference to the given DfsGatewayZoneNestview and assigns it to the DfsGatewayZone field.
func (o *DfsHdfs) SetDfsGatewayZone(v DfsGatewayZoneNestview) {
	o.DfsGatewayZone = &v
}

// GetDfsHdfsAclNum returns the DfsHdfsAclNum field value if set, zero value otherwise.
func (o *DfsHdfs) GetDfsHdfsAclNum() int64 {
	if o == nil || IsNil(o.DfsHdfsAclNum) {
		var ret int64
		return ret
	}
	return *o.DfsHdfsAclNum
}

// GetDfsHdfsAclNumOk returns a tuple with the DfsHdfsAclNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfs) GetDfsHdfsAclNumOk() (*int64, bool) {
	if o == nil || IsNil(o.DfsHdfsAclNum) {
		return nil, false
	}
	return o.DfsHdfsAclNum, true
}

// HasDfsHdfsAclNum returns a boolean if a field has been set.
func (o *DfsHdfs) HasDfsHdfsAclNum() bool {
	if o != nil && !IsNil(o.DfsHdfsAclNum) {
		return true
	}

	return false
}

// SetDfsHdfsAclNum gets a reference to the given int64 and assigns it to the DfsHdfsAclNum field.
func (o *DfsHdfs) SetDfsHdfsAclNum(v int64) {
	o.DfsHdfsAclNum = &v
}

// GetDfsHdfsIpWhiteLists returns the DfsHdfsIpWhiteLists field value if set, zero value otherwise.
func (o *DfsHdfs) GetDfsHdfsIpWhiteLists() []DfsHdfsIPWhiteList {
	if o == nil || IsNil(o.DfsHdfsIpWhiteLists) {
		var ret []DfsHdfsIPWhiteList
		return ret
	}
	return o.DfsHdfsIpWhiteLists
}

// GetDfsHdfsIpWhiteListsOk returns a tuple with the DfsHdfsIpWhiteLists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfs) GetDfsHdfsIpWhiteListsOk() ([]DfsHdfsIPWhiteList, bool) {
	if o == nil || IsNil(o.DfsHdfsIpWhiteLists) {
		return nil, false
	}
	return o.DfsHdfsIpWhiteLists, true
}

// HasDfsHdfsIpWhiteLists returns a boolean if a field has been set.
func (o *DfsHdfs) HasDfsHdfsIpWhiteLists() bool {
	if o != nil && !IsNil(o.DfsHdfsIpWhiteLists) {
		return true
	}

	return false
}

// SetDfsHdfsIpWhiteLists gets a reference to the given []DfsHdfsIPWhiteList and assigns it to the DfsHdfsIpWhiteLists field.
func (o *DfsHdfs) SetDfsHdfsIpWhiteLists(v []DfsHdfsIPWhiteList) {
	o.DfsHdfsIpWhiteLists = v
}

// GetDfsHdfsIpWhiteListsNum returns the DfsHdfsIpWhiteListsNum field value if set, zero value otherwise.
func (o *DfsHdfs) GetDfsHdfsIpWhiteListsNum() int64 {
	if o == nil || IsNil(o.DfsHdfsIpWhiteListsNum) {
		var ret int64
		return ret
	}
	return *o.DfsHdfsIpWhiteListsNum
}

// GetDfsHdfsIpWhiteListsNumOk returns a tuple with the DfsHdfsIpWhiteListsNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfs) GetDfsHdfsIpWhiteListsNumOk() (*int64, bool) {
	if o == nil || IsNil(o.DfsHdfsIpWhiteListsNum) {
		return nil, false
	}
	return o.DfsHdfsIpWhiteListsNum, true
}

// HasDfsHdfsIpWhiteListsNum returns a boolean if a field has been set.
func (o *DfsHdfs) HasDfsHdfsIpWhiteListsNum() bool {
	if o != nil && !IsNil(o.DfsHdfsIpWhiteListsNum) {
		return true
	}

	return false
}

// SetDfsHdfsIpWhiteListsNum gets a reference to the given int64 and assigns it to the DfsHdfsIpWhiteListsNum field.
func (o *DfsHdfs) SetDfsHdfsIpWhiteListsNum(v int64) {
	o.DfsHdfsIpWhiteListsNum = &v
}

// GetDfsHdfsProxyUserNum returns the DfsHdfsProxyUserNum field value if set, zero value otherwise.
func (o *DfsHdfs) GetDfsHdfsProxyUserNum() int64 {
	if o == nil || IsNil(o.DfsHdfsProxyUserNum) {
		var ret int64
		return ret
	}
	return *o.DfsHdfsProxyUserNum
}

// GetDfsHdfsProxyUserNumOk returns a tuple with the DfsHdfsProxyUserNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfs) GetDfsHdfsProxyUserNumOk() (*int64, bool) {
	if o == nil || IsNil(o.DfsHdfsProxyUserNum) {
		return nil, false
	}
	return o.DfsHdfsProxyUserNum, true
}

// HasDfsHdfsProxyUserNum returns a boolean if a field has been set.
func (o *DfsHdfs) HasDfsHdfsProxyUserNum() bool {
	if o != nil && !IsNil(o.DfsHdfsProxyUserNum) {
		return true
	}

	return false
}

// SetDfsHdfsProxyUserNum gets a reference to the given int64 and assigns it to the DfsHdfsProxyUserNum field.
func (o *DfsHdfs) SetDfsHdfsProxyUserNum(v int64) {
	o.DfsHdfsProxyUserNum = &v
}

// GetDfsPath returns the DfsPath field value if set, zero value otherwise.
func (o *DfsHdfs) GetDfsPath() DfsPathNestview {
	if o == nil || IsNil(o.DfsPath) {
		var ret DfsPathNestview
		return ret
	}
	return *o.DfsPath
}

// GetDfsPathOk returns a tuple with the DfsPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfs) GetDfsPathOk() (*DfsPathNestview, bool) {
	if o == nil || IsNil(o.DfsPath) {
		return nil, false
	}
	return o.DfsPath, true
}

// HasDfsPath returns a boolean if a field has been set.
func (o *DfsHdfs) HasDfsPath() bool {
	if o != nil && !IsNil(o.DfsPath) {
		return true
	}

	return false
}

// SetDfsPath gets a reference to the given DfsPathNestview and assigns it to the DfsPath field.
func (o *DfsHdfs) SetDfsPath(v DfsPathNestview) {
	o.DfsPath = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DfsHdfs) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfs) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DfsHdfs) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *DfsHdfs) SetId(v int64) {
	o.Id = &v
}

// GetKerberos returns the Kerberos field value if set, zero value otherwise.
func (o *DfsHdfs) GetKerberos() FSKerberosNestview {
	if o == nil || IsNil(o.Kerberos) {
		var ret FSKerberosNestview
		return ret
	}
	return *o.Kerberos
}

// GetKerberosOk returns a tuple with the Kerberos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfs) GetKerberosOk() (*FSKerberosNestview, bool) {
	if o == nil || IsNil(o.Kerberos) {
		return nil, false
	}
	return o.Kerberos, true
}

// HasKerberos returns a boolean if a field has been set.
func (o *DfsHdfs) HasKerberos() bool {
	if o != nil && !IsNil(o.Kerberos) {
		return true
	}

	return false
}

// SetKerberos gets a reference to the given FSKerberosNestview and assigns it to the Kerberos field.
func (o *DfsHdfs) SetKerberos(v FSKerberosNestview) {
	o.Kerberos = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DfsHdfs) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfs) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DfsHdfs) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DfsHdfs) SetName(v string) {
	o.Name = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *DfsHdfs) GetPort() int64 {
	if o == nil || IsNil(o.Port) {
		var ret int64
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfs) GetPortOk() (*int64, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *DfsHdfs) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int64 and assigns it to the Port field.
func (o *DfsHdfs) SetPort(v int64) {
	o.Port = &v
}

// GetPrincipalName returns the PrincipalName field value if set, zero value otherwise.
func (o *DfsHdfs) GetPrincipalName() string {
	if o == nil || IsNil(o.PrincipalName) {
		var ret string
		return ret
	}
	return *o.PrincipalName
}

// GetPrincipalNameOk returns a tuple with the PrincipalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfs) GetPrincipalNameOk() (*string, bool) {
	if o == nil || IsNil(o.PrincipalName) {
		return nil, false
	}
	return o.PrincipalName, true
}

// HasPrincipalName returns a boolean if a field has been set.
func (o *DfsHdfs) HasPrincipalName() bool {
	if o != nil && !IsNil(o.PrincipalName) {
		return true
	}

	return false
}

// SetPrincipalName gets a reference to the given string and assigns it to the PrincipalName field.
func (o *DfsHdfs) SetPrincipalName(v string) {
	o.PrincipalName = &v
}

// GetRanger returns the Ranger field value if set, zero value otherwise.
func (o *DfsHdfs) GetRanger() bool {
	if o == nil || IsNil(o.Ranger) {
		var ret bool
		return ret
	}
	return *o.Ranger
}

// GetRangerOk returns a tuple with the Ranger field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfs) GetRangerOk() (*bool, bool) {
	if o == nil || IsNil(o.Ranger) {
		return nil, false
	}
	return o.Ranger, true
}

// HasRanger returns a boolean if a field has been set.
func (o *DfsHdfs) HasRanger() bool {
	if o != nil && !IsNil(o.Ranger) {
		return true
	}

	return false
}

// SetRanger gets a reference to the given bool and assigns it to the Ranger field.
func (o *DfsHdfs) SetRanger(v bool) {
	o.Ranger = &v
}

// GetRangerIp returns the RangerIp field value if set, zero value otherwise.
func (o *DfsHdfs) GetRangerIp() string {
	if o == nil || IsNil(o.RangerIp) {
		var ret string
		return ret
	}
	return *o.RangerIp
}

// GetRangerIpOk returns a tuple with the RangerIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfs) GetRangerIpOk() (*string, bool) {
	if o == nil || IsNil(o.RangerIp) {
		return nil, false
	}
	return o.RangerIp, true
}

// HasRangerIp returns a boolean if a field has been set.
func (o *DfsHdfs) HasRangerIp() bool {
	if o != nil && !IsNil(o.RangerIp) {
		return true
	}

	return false
}

// SetRangerIp gets a reference to the given string and assigns it to the RangerIp field.
func (o *DfsHdfs) SetRangerIp(v string) {
	o.RangerIp = &v
}

// GetRangerServiceName returns the RangerServiceName field value if set, zero value otherwise.
func (o *DfsHdfs) GetRangerServiceName() string {
	if o == nil || IsNil(o.RangerServiceName) {
		var ret string
		return ret
	}
	return *o.RangerServiceName
}

// GetRangerServiceNameOk returns a tuple with the RangerServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfs) GetRangerServiceNameOk() (*string, bool) {
	if o == nil || IsNil(o.RangerServiceName) {
		return nil, false
	}
	return o.RangerServiceName, true
}

// HasRangerServiceName returns a boolean if a field has been set.
func (o *DfsHdfs) HasRangerServiceName() bool {
	if o != nil && !IsNil(o.RangerServiceName) {
		return true
	}

	return false
}

// SetRangerServiceName gets a reference to the given string and assigns it to the RangerServiceName field.
func (o *DfsHdfs) SetRangerServiceName(v string) {
	o.RangerServiceName = &v
}

// GetRangerUrl returns the RangerUrl field value if set, zero value otherwise.
func (o *DfsHdfs) GetRangerUrl() string {
	if o == nil || IsNil(o.RangerUrl) {
		var ret string
		return ret
	}
	return *o.RangerUrl
}

// GetRangerUrlOk returns a tuple with the RangerUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfs) GetRangerUrlOk() (*string, bool) {
	if o == nil || IsNil(o.RangerUrl) {
		return nil, false
	}
	return o.RangerUrl, true
}

// HasRangerUrl returns a boolean if a field has been set.
func (o *DfsHdfs) HasRangerUrl() bool {
	if o != nil && !IsNil(o.RangerUrl) {
		return true
	}

	return false
}

// SetRangerUrl gets a reference to the given string and assigns it to the RangerUrl field.
func (o *DfsHdfs) SetRangerUrl(v string) {
	o.RangerUrl = &v
}

// GetSecurities returns the Securities field value if set, zero value otherwise.
func (o *DfsHdfs) GetSecurities() []string {
	if o == nil || IsNil(o.Securities) {
		var ret []string
		return ret
	}
	return o.Securities
}

// GetSecuritiesOk returns a tuple with the Securities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfs) GetSecuritiesOk() ([]string, bool) {
	if o == nil || IsNil(o.Securities) {
		return nil, false
	}
	return o.Securities, true
}

// HasSecurities returns a boolean if a field has been set.
func (o *DfsHdfs) HasSecurities() bool {
	if o != nil && !IsNil(o.Securities) {
		return true
	}

	return false
}

// SetSecurities gets a reference to the given []string and assigns it to the Securities field.
func (o *DfsHdfs) SetSecurities(v []string) {
	o.Securities = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DfsHdfs) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfs) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DfsHdfs) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DfsHdfs) SetStatus(v string) {
	o.Status = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *DfsHdfs) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfs) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *DfsHdfs) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *DfsHdfs) SetUpdate(v time.Time) {
	o.Update = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *DfsHdfs) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfs) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *DfsHdfs) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *DfsHdfs) SetVersion(v string) {
	o.Version = &v
}

func (o DfsHdfs) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsHdfs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActionStatus) {
		toSerialize["action_status"] = o.ActionStatus
	}
	if !IsNil(o.AuthToLocals) {
		toSerialize["auth_to_locals"] = o.AuthToLocals
	}
	if !IsNil(o.AuthType) {
		toSerialize["auth_type"] = o.AuthType
	}
	if !IsNil(o.BlockSize) {
		toSerialize["block_size"] = o.BlockSize
	}
	if !IsNil(o.ChecksumType) {
		toSerialize["checksum_type"] = o.ChecksumType
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DfsGatewayGroup) {
		toSerialize["dfs_gateway_group"] = o.DfsGatewayGroup
	}
	if !IsNil(o.DfsGatewayZone) {
		toSerialize["dfs_gateway_zone"] = o.DfsGatewayZone
	}
	if !IsNil(o.DfsHdfsAclNum) {
		toSerialize["dfs_hdfs_acl_num"] = o.DfsHdfsAclNum
	}
	if !IsNil(o.DfsHdfsIpWhiteLists) {
		toSerialize["dfs_hdfs_ip_white_lists"] = o.DfsHdfsIpWhiteLists
	}
	if !IsNil(o.DfsHdfsIpWhiteListsNum) {
		toSerialize["dfs_hdfs_ip_white_lists_num"] = o.DfsHdfsIpWhiteListsNum
	}
	if !IsNil(o.DfsHdfsProxyUserNum) {
		toSerialize["dfs_hdfs_proxy_user_num"] = o.DfsHdfsProxyUserNum
	}
	if !IsNil(o.DfsPath) {
		toSerialize["dfs_path"] = o.DfsPath
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Kerberos) {
		toSerialize["kerberos"] = o.Kerberos
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.PrincipalName) {
		toSerialize["principal_name"] = o.PrincipalName
	}
	if !IsNil(o.Ranger) {
		toSerialize["ranger"] = o.Ranger
	}
	if !IsNil(o.RangerIp) {
		toSerialize["ranger_ip"] = o.RangerIp
	}
	if !IsNil(o.RangerServiceName) {
		toSerialize["ranger_service_name"] = o.RangerServiceName
	}
	if !IsNil(o.RangerUrl) {
		toSerialize["ranger_url"] = o.RangerUrl
	}
	if !IsNil(o.Securities) {
		toSerialize["securities"] = o.Securities
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableDfsHdfs struct {
	value *DfsHdfs
	isSet bool
}

func (v NullableDfsHdfs) Get() *DfsHdfs {
	return v.value
}

func (v *NullableDfsHdfs) Set(val *DfsHdfs) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsHdfs) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsHdfs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsHdfs(val *DfsHdfs) *NullableDfsHdfs {
	return &NullableDfsHdfs{value: val, isSet: true}
}

func (v NullableDfsHdfs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsHdfs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


