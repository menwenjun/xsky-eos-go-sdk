/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PartitionsCreateReqPartitions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PartitionsCreateReqPartitions{}

// PartitionsCreateReqPartitions struct for PartitionsCreateReqPartitions
type PartitionsCreateReqPartitions struct {
	JournalBytes *int64 `json:"journal_bytes,omitempty"`
	MetadataPartitionNum *int64 `json:"metadata_partition_num,omitempty"`
	Num *int64 `json:"num,omitempty"`
	OmapByte *int64 `json:"omap_byte,omitempty"`
	TotalCacheBytes *int64 `json:"total_cache_bytes,omitempty"`
	TotalMetadataBytes *int64 `json:"total_metadata_bytes,omitempty"`
}

// NewPartitionsCreateReqPartitions instantiates a new PartitionsCreateReqPartitions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPartitionsCreateReqPartitions() *PartitionsCreateReqPartitions {
	this := PartitionsCreateReqPartitions{}
	return &this
}

// NewPartitionsCreateReqPartitionsWithDefaults instantiates a new PartitionsCreateReqPartitions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPartitionsCreateReqPartitionsWithDefaults() *PartitionsCreateReqPartitions {
	this := PartitionsCreateReqPartitions{}
	return &this
}

// GetJournalBytes returns the JournalBytes field value if set, zero value otherwise.
func (o *PartitionsCreateReqPartitions) GetJournalBytes() int64 {
	if o == nil || IsNil(o.JournalBytes) {
		var ret int64
		return ret
	}
	return *o.JournalBytes
}

// GetJournalBytesOk returns a tuple with the JournalBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartitionsCreateReqPartitions) GetJournalBytesOk() (*int64, bool) {
	if o == nil || IsNil(o.JournalBytes) {
		return nil, false
	}
	return o.JournalBytes, true
}

// HasJournalBytes returns a boolean if a field has been set.
func (o *PartitionsCreateReqPartitions) HasJournalBytes() bool {
	if o != nil && !IsNil(o.JournalBytes) {
		return true
	}

	return false
}

// SetJournalBytes gets a reference to the given int64 and assigns it to the JournalBytes field.
func (o *PartitionsCreateReqPartitions) SetJournalBytes(v int64) {
	o.JournalBytes = &v
}

// GetMetadataPartitionNum returns the MetadataPartitionNum field value if set, zero value otherwise.
func (o *PartitionsCreateReqPartitions) GetMetadataPartitionNum() int64 {
	if o == nil || IsNil(o.MetadataPartitionNum) {
		var ret int64
		return ret
	}
	return *o.MetadataPartitionNum
}

// GetMetadataPartitionNumOk returns a tuple with the MetadataPartitionNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartitionsCreateReqPartitions) GetMetadataPartitionNumOk() (*int64, bool) {
	if o == nil || IsNil(o.MetadataPartitionNum) {
		return nil, false
	}
	return o.MetadataPartitionNum, true
}

// HasMetadataPartitionNum returns a boolean if a field has been set.
func (o *PartitionsCreateReqPartitions) HasMetadataPartitionNum() bool {
	if o != nil && !IsNil(o.MetadataPartitionNum) {
		return true
	}

	return false
}

// SetMetadataPartitionNum gets a reference to the given int64 and assigns it to the MetadataPartitionNum field.
func (o *PartitionsCreateReqPartitions) SetMetadataPartitionNum(v int64) {
	o.MetadataPartitionNum = &v
}

// GetNum returns the Num field value if set, zero value otherwise.
func (o *PartitionsCreateReqPartitions) GetNum() int64 {
	if o == nil || IsNil(o.Num) {
		var ret int64
		return ret
	}
	return *o.Num
}

// GetNumOk returns a tuple with the Num field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartitionsCreateReqPartitions) GetNumOk() (*int64, bool) {
	if o == nil || IsNil(o.Num) {
		return nil, false
	}
	return o.Num, true
}

// HasNum returns a boolean if a field has been set.
func (o *PartitionsCreateReqPartitions) HasNum() bool {
	if o != nil && !IsNil(o.Num) {
		return true
	}

	return false
}

// SetNum gets a reference to the given int64 and assigns it to the Num field.
func (o *PartitionsCreateReqPartitions) SetNum(v int64) {
	o.Num = &v
}

// GetOmapByte returns the OmapByte field value if set, zero value otherwise.
func (o *PartitionsCreateReqPartitions) GetOmapByte() int64 {
	if o == nil || IsNil(o.OmapByte) {
		var ret int64
		return ret
	}
	return *o.OmapByte
}

// GetOmapByteOk returns a tuple with the OmapByte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartitionsCreateReqPartitions) GetOmapByteOk() (*int64, bool) {
	if o == nil || IsNil(o.OmapByte) {
		return nil, false
	}
	return o.OmapByte, true
}

// HasOmapByte returns a boolean if a field has been set.
func (o *PartitionsCreateReqPartitions) HasOmapByte() bool {
	if o != nil && !IsNil(o.OmapByte) {
		return true
	}

	return false
}

// SetOmapByte gets a reference to the given int64 and assigns it to the OmapByte field.
func (o *PartitionsCreateReqPartitions) SetOmapByte(v int64) {
	o.OmapByte = &v
}

// GetTotalCacheBytes returns the TotalCacheBytes field value if set, zero value otherwise.
func (o *PartitionsCreateReqPartitions) GetTotalCacheBytes() int64 {
	if o == nil || IsNil(o.TotalCacheBytes) {
		var ret int64
		return ret
	}
	return *o.TotalCacheBytes
}

// GetTotalCacheBytesOk returns a tuple with the TotalCacheBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartitionsCreateReqPartitions) GetTotalCacheBytesOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalCacheBytes) {
		return nil, false
	}
	return o.TotalCacheBytes, true
}

// HasTotalCacheBytes returns a boolean if a field has been set.
func (o *PartitionsCreateReqPartitions) HasTotalCacheBytes() bool {
	if o != nil && !IsNil(o.TotalCacheBytes) {
		return true
	}

	return false
}

// SetTotalCacheBytes gets a reference to the given int64 and assigns it to the TotalCacheBytes field.
func (o *PartitionsCreateReqPartitions) SetTotalCacheBytes(v int64) {
	o.TotalCacheBytes = &v
}

// GetTotalMetadataBytes returns the TotalMetadataBytes field value if set, zero value otherwise.
func (o *PartitionsCreateReqPartitions) GetTotalMetadataBytes() int64 {
	if o == nil || IsNil(o.TotalMetadataBytes) {
		var ret int64
		return ret
	}
	return *o.TotalMetadataBytes
}

// GetTotalMetadataBytesOk returns a tuple with the TotalMetadataBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartitionsCreateReqPartitions) GetTotalMetadataBytesOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalMetadataBytes) {
		return nil, false
	}
	return o.TotalMetadataBytes, true
}

// HasTotalMetadataBytes returns a boolean if a field has been set.
func (o *PartitionsCreateReqPartitions) HasTotalMetadataBytes() bool {
	if o != nil && !IsNil(o.TotalMetadataBytes) {
		return true
	}

	return false
}

// SetTotalMetadataBytes gets a reference to the given int64 and assigns it to the TotalMetadataBytes field.
func (o *PartitionsCreateReqPartitions) SetTotalMetadataBytes(v int64) {
	o.TotalMetadataBytes = &v
}

func (o PartitionsCreateReqPartitions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PartitionsCreateReqPartitions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.JournalBytes) {
		toSerialize["journal_bytes"] = o.JournalBytes
	}
	if !IsNil(o.MetadataPartitionNum) {
		toSerialize["metadata_partition_num"] = o.MetadataPartitionNum
	}
	if !IsNil(o.Num) {
		toSerialize["num"] = o.Num
	}
	if !IsNil(o.OmapByte) {
		toSerialize["omap_byte"] = o.OmapByte
	}
	if !IsNil(o.TotalCacheBytes) {
		toSerialize["total_cache_bytes"] = o.TotalCacheBytes
	}
	if !IsNil(o.TotalMetadataBytes) {
		toSerialize["total_metadata_bytes"] = o.TotalMetadataBytes
	}
	return toSerialize, nil
}

type NullablePartitionsCreateReqPartitions struct {
	value *PartitionsCreateReqPartitions
	isSet bool
}

func (v NullablePartitionsCreateReqPartitions) Get() *PartitionsCreateReqPartitions {
	return v.value
}

func (v *NullablePartitionsCreateReqPartitions) Set(val *PartitionsCreateReqPartitions) {
	v.value = val
	v.isSet = true
}

func (v NullablePartitionsCreateReqPartitions) IsSet() bool {
	return v.isSet
}

func (v *NullablePartitionsCreateReqPartitions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePartitionsCreateReqPartitions(val *PartitionsCreateReqPartitions) *NullablePartitionsCreateReqPartitions {
	return &NullablePartitionsCreateReqPartitions{value: val, isSet: true}
}

func (v NullablePartitionsCreateReqPartitions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePartitionsCreateReqPartitions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


