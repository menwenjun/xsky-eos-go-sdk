/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the FilesPredictionPoint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FilesPredictionPoint{}

// FilesPredictionPoint FilesPredictionPoint is a point in a files prediction graph
type FilesPredictionPoint struct {
	Create *time.Time `json:"create,omitempty"`
	UsedFiles *int64 `json:"used_files,omitempty"`
}

// NewFilesPredictionPoint instantiates a new FilesPredictionPoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilesPredictionPoint() *FilesPredictionPoint {
	this := FilesPredictionPoint{}
	return &this
}

// NewFilesPredictionPointWithDefaults instantiates a new FilesPredictionPoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilesPredictionPointWithDefaults() *FilesPredictionPoint {
	this := FilesPredictionPoint{}
	return &this
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *FilesPredictionPoint) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilesPredictionPoint) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *FilesPredictionPoint) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *FilesPredictionPoint) SetCreate(v time.Time) {
	o.Create = &v
}

// GetUsedFiles returns the UsedFiles field value if set, zero value otherwise.
func (o *FilesPredictionPoint) GetUsedFiles() int64 {
	if o == nil || IsNil(o.UsedFiles) {
		var ret int64
		return ret
	}
	return *o.UsedFiles
}

// GetUsedFilesOk returns a tuple with the UsedFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilesPredictionPoint) GetUsedFilesOk() (*int64, bool) {
	if o == nil || IsNil(o.UsedFiles) {
		return nil, false
	}
	return o.UsedFiles, true
}

// HasUsedFiles returns a boolean if a field has been set.
func (o *FilesPredictionPoint) HasUsedFiles() bool {
	if o != nil && !IsNil(o.UsedFiles) {
		return true
	}

	return false
}

// SetUsedFiles gets a reference to the given int64 and assigns it to the UsedFiles field.
func (o *FilesPredictionPoint) SetUsedFiles(v int64) {
	o.UsedFiles = &v
}

func (o FilesPredictionPoint) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FilesPredictionPoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.UsedFiles) {
		toSerialize["used_files"] = o.UsedFiles
	}
	return toSerialize, nil
}

type NullableFilesPredictionPoint struct {
	value *FilesPredictionPoint
	isSet bool
}

func (v NullableFilesPredictionPoint) Get() *FilesPredictionPoint {
	return v.value
}

func (v *NullableFilesPredictionPoint) Set(val *FilesPredictionPoint) {
	v.value = val
	v.isSet = true
}

func (v NullableFilesPredictionPoint) IsSet() bool {
	return v.isSet
}

func (v *NullableFilesPredictionPoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilesPredictionPoint(val *FilesPredictionPoint) *NullableFilesPredictionPoint {
	return &NullableFilesPredictionPoint{value: val, isSet: true}
}

func (v NullableFilesPredictionPoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilesPredictionPoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


