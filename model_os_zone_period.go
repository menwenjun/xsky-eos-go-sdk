/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the OSZonePeriod type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OSZonePeriod{}

// OSZonePeriod OSZonePeriod records progressing of a zone group operation. +X:model:generate;
type OSZonePeriod struct {
	Action *string `json:"action,omitempty"`
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	Id *int64 `json:"id,omitempty"`
	MasterOsZoneUuid *string `json:"master_os_zone_uuid,omitempty"`
	NextMasterOsZoneUuid *string `json:"next_master_os_zone_uuid,omitempty"`
	PeriodId *string `json:"period_id,omitempty"`
	Status *string `json:"status,omitempty"`
	Update *time.Time `json:"update,omitempty"`
	Uuid *string `json:"uuid,omitempty"`
}

// NewOSZonePeriod instantiates a new OSZonePeriod object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOSZonePeriod() *OSZonePeriod {
	this := OSZonePeriod{}
	return &this
}

// NewOSZonePeriodWithDefaults instantiates a new OSZonePeriod object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOSZonePeriodWithDefaults() *OSZonePeriod {
	this := OSZonePeriod{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *OSZonePeriod) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSZonePeriod) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *OSZonePeriod) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *OSZonePeriod) SetAction(v string) {
	o.Action = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *OSZonePeriod) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSZonePeriod) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *OSZonePeriod) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *OSZonePeriod) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *OSZonePeriod) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSZonePeriod) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *OSZonePeriod) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *OSZonePeriod) SetCreate(v time.Time) {
	o.Create = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OSZonePeriod) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSZonePeriod) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OSZonePeriod) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *OSZonePeriod) SetId(v int64) {
	o.Id = &v
}

// GetMasterOsZoneUuid returns the MasterOsZoneUuid field value if set, zero value otherwise.
func (o *OSZonePeriod) GetMasterOsZoneUuid() string {
	if o == nil || IsNil(o.MasterOsZoneUuid) {
		var ret string
		return ret
	}
	return *o.MasterOsZoneUuid
}

// GetMasterOsZoneUuidOk returns a tuple with the MasterOsZoneUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSZonePeriod) GetMasterOsZoneUuidOk() (*string, bool) {
	if o == nil || IsNil(o.MasterOsZoneUuid) {
		return nil, false
	}
	return o.MasterOsZoneUuid, true
}

// HasMasterOsZoneUuid returns a boolean if a field has been set.
func (o *OSZonePeriod) HasMasterOsZoneUuid() bool {
	if o != nil && !IsNil(o.MasterOsZoneUuid) {
		return true
	}

	return false
}

// SetMasterOsZoneUuid gets a reference to the given string and assigns it to the MasterOsZoneUuid field.
func (o *OSZonePeriod) SetMasterOsZoneUuid(v string) {
	o.MasterOsZoneUuid = &v
}

// GetNextMasterOsZoneUuid returns the NextMasterOsZoneUuid field value if set, zero value otherwise.
func (o *OSZonePeriod) GetNextMasterOsZoneUuid() string {
	if o == nil || IsNil(o.NextMasterOsZoneUuid) {
		var ret string
		return ret
	}
	return *o.NextMasterOsZoneUuid
}

// GetNextMasterOsZoneUuidOk returns a tuple with the NextMasterOsZoneUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSZonePeriod) GetNextMasterOsZoneUuidOk() (*string, bool) {
	if o == nil || IsNil(o.NextMasterOsZoneUuid) {
		return nil, false
	}
	return o.NextMasterOsZoneUuid, true
}

// HasNextMasterOsZoneUuid returns a boolean if a field has been set.
func (o *OSZonePeriod) HasNextMasterOsZoneUuid() bool {
	if o != nil && !IsNil(o.NextMasterOsZoneUuid) {
		return true
	}

	return false
}

// SetNextMasterOsZoneUuid gets a reference to the given string and assigns it to the NextMasterOsZoneUuid field.
func (o *OSZonePeriod) SetNextMasterOsZoneUuid(v string) {
	o.NextMasterOsZoneUuid = &v
}

// GetPeriodId returns the PeriodId field value if set, zero value otherwise.
func (o *OSZonePeriod) GetPeriodId() string {
	if o == nil || IsNil(o.PeriodId) {
		var ret string
		return ret
	}
	return *o.PeriodId
}

// GetPeriodIdOk returns a tuple with the PeriodId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSZonePeriod) GetPeriodIdOk() (*string, bool) {
	if o == nil || IsNil(o.PeriodId) {
		return nil, false
	}
	return o.PeriodId, true
}

// HasPeriodId returns a boolean if a field has been set.
func (o *OSZonePeriod) HasPeriodId() bool {
	if o != nil && !IsNil(o.PeriodId) {
		return true
	}

	return false
}

// SetPeriodId gets a reference to the given string and assigns it to the PeriodId field.
func (o *OSZonePeriod) SetPeriodId(v string) {
	o.PeriodId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *OSZonePeriod) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSZonePeriod) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *OSZonePeriod) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *OSZonePeriod) SetStatus(v string) {
	o.Status = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *OSZonePeriod) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSZonePeriod) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *OSZonePeriod) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *OSZonePeriod) SetUpdate(v time.Time) {
	o.Update = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *OSZonePeriod) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSZonePeriod) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *OSZonePeriod) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *OSZonePeriod) SetUuid(v string) {
	o.Uuid = &v
}

func (o OSZonePeriod) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OSZonePeriod) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.MasterOsZoneUuid) {
		toSerialize["master_os_zone_uuid"] = o.MasterOsZoneUuid
	}
	if !IsNil(o.NextMasterOsZoneUuid) {
		toSerialize["next_master_os_zone_uuid"] = o.NextMasterOsZoneUuid
	}
	if !IsNil(o.PeriodId) {
		toSerialize["period_id"] = o.PeriodId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	return toSerialize, nil
}

type NullableOSZonePeriod struct {
	value *OSZonePeriod
	isSet bool
}

func (v NullableOSZonePeriod) Get() *OSZonePeriod {
	return v.value
}

func (v *NullableOSZonePeriod) Set(val *OSZonePeriod) {
	v.value = val
	v.isSet = true
}

func (v NullableOSZonePeriod) IsSet() bool {
	return v.isSet
}

func (v *NullableOSZonePeriod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSZonePeriod(val *OSZonePeriod) *NullableOSZonePeriod {
	return &NullableOSZonePeriod{value: val, isSet: true}
}

func (v NullableOSZonePeriod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSZonePeriod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


