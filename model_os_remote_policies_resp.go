/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OSRemotePoliciesResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OSRemotePoliciesResp{}

// OSRemotePoliciesResp struct for OSRemotePoliciesResp
type OSRemotePoliciesResp struct {
	OsRemotePolicies []OSRemotePolicy `json:"os_remote_policies,omitempty"`
}

// NewOSRemotePoliciesResp instantiates a new OSRemotePoliciesResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOSRemotePoliciesResp() *OSRemotePoliciesResp {
	this := OSRemotePoliciesResp{}
	return &this
}

// NewOSRemotePoliciesRespWithDefaults instantiates a new OSRemotePoliciesResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOSRemotePoliciesRespWithDefaults() *OSRemotePoliciesResp {
	this := OSRemotePoliciesResp{}
	return &this
}

// GetOsRemotePolicies returns the OsRemotePolicies field value if set, zero value otherwise.
func (o *OSRemotePoliciesResp) GetOsRemotePolicies() []OSRemotePolicy {
	if o == nil || IsNil(o.OsRemotePolicies) {
		var ret []OSRemotePolicy
		return ret
	}
	return o.OsRemotePolicies
}

// GetOsRemotePoliciesOk returns a tuple with the OsRemotePolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSRemotePoliciesResp) GetOsRemotePoliciesOk() ([]OSRemotePolicy, bool) {
	if o == nil || IsNil(o.OsRemotePolicies) {
		return nil, false
	}
	return o.OsRemotePolicies, true
}

// HasOsRemotePolicies returns a boolean if a field has been set.
func (o *OSRemotePoliciesResp) HasOsRemotePolicies() bool {
	if o != nil && !IsNil(o.OsRemotePolicies) {
		return true
	}

	return false
}

// SetOsRemotePolicies gets a reference to the given []OSRemotePolicy and assigns it to the OsRemotePolicies field.
func (o *OSRemotePoliciesResp) SetOsRemotePolicies(v []OSRemotePolicy) {
	o.OsRemotePolicies = v
}

func (o OSRemotePoliciesResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OSRemotePoliciesResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OsRemotePolicies) {
		toSerialize["os_remote_policies"] = o.OsRemotePolicies
	}
	return toSerialize, nil
}

type NullableOSRemotePoliciesResp struct {
	value *OSRemotePoliciesResp
	isSet bool
}

func (v NullableOSRemotePoliciesResp) Get() *OSRemotePoliciesResp {
	return v.value
}

func (v *NullableOSRemotePoliciesResp) Set(val *OSRemotePoliciesResp) {
	v.value = val
	v.isSet = true
}

func (v NullableOSRemotePoliciesResp) IsSet() bool {
	return v.isSet
}

func (v *NullableOSRemotePoliciesResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSRemotePoliciesResp(val *OSRemotePoliciesResp) *NullableOSRemotePoliciesResp {
	return &NullableOSRemotePoliciesResp{value: val, isSet: true}
}

func (v NullableOSRemotePoliciesResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSRemotePoliciesResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


