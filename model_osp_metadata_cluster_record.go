/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the OspMetadataClusterRecord type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OspMetadataClusterRecord{}

// OspMetadataClusterRecord OspMetadataClusterRecord combines OspMetadataClusterStat and OspMetadataCluster as api response
type OspMetadataClusterRecord struct {
	ActionStatus *string `json:"action_status,omitempty"`
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	CommitProxyNum *int64 `json:"commit_proxy_num,omitempty"`
	CoordinatorHostIds []int64 `json:"coordinator_host_ids,omitempty"`
	CoordinatorNum *int64 `json:"coordinator_num,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	CurReplicationNum *int64 `json:"cur_replication_num,omitempty"`
	Datacenters []PlacementNodeNestview `json:"datacenters,omitempty"`
	DeployMode *string `json:"deploy_mode,omitempty"`
	GrvProxyNum *int64 `json:"grv_proxy_num,omitempty"`
	Id *int64 `json:"id,omitempty"`
	LogNum int64 `json:"log_num"`
	MasterDatacenter *PlacementNode `json:"master_datacenter,omitempty"`
	MinAvailableSpaceRatio *float64 `json:"min_available_space_ratio,omitempty"`
	Name *string `json:"name,omitempty"`
	ObjectStorage *NgObjectStorageNestview `json:"object_storage,omitempty"`
	PlacementNode *OspMdClusterPlacementNodeNestview `json:"placement_node,omitempty"`
	ProtectionType *string `json:"protection_type,omitempty"`
	Region *RegionNestview `json:"region,omitempty"`
	ReplicationNum *int64 `json:"replication_num,omitempty"`
	ResolverNum *int64 `json:"resolver_num,omitempty"`
	SpaceUsageFactor *float64 `json:"space_usage_factor,omitempty"`
	StatelessServerNum *int64 `json:"stateless_server_num,omitempty"`
	Status *string `json:"status,omitempty"`
	Type *string `json:"type,omitempty"`
	Update *time.Time `json:"update,omitempty"`
	Samples []OspMetadataClusterStat `json:"samples,omitempty"`
}

type _OspMetadataClusterRecord OspMetadataClusterRecord

// NewOspMetadataClusterRecord instantiates a new OspMetadataClusterRecord object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOspMetadataClusterRecord(logNum int64) *OspMetadataClusterRecord {
	this := OspMetadataClusterRecord{}
	this.LogNum = logNum
	return &this
}

// NewOspMetadataClusterRecordWithDefaults instantiates a new OspMetadataClusterRecord object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOspMetadataClusterRecordWithDefaults() *OspMetadataClusterRecord {
	this := OspMetadataClusterRecord{}
	return &this
}

// GetActionStatus returns the ActionStatus field value if set, zero value otherwise.
func (o *OspMetadataClusterRecord) GetActionStatus() string {
	if o == nil || IsNil(o.ActionStatus) {
		var ret string
		return ret
	}
	return *o.ActionStatus
}

// GetActionStatusOk returns a tuple with the ActionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataClusterRecord) GetActionStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ActionStatus) {
		return nil, false
	}
	return o.ActionStatus, true
}

// HasActionStatus returns a boolean if a field has been set.
func (o *OspMetadataClusterRecord) HasActionStatus() bool {
	if o != nil && !IsNil(o.ActionStatus) {
		return true
	}

	return false
}

// SetActionStatus gets a reference to the given string and assigns it to the ActionStatus field.
func (o *OspMetadataClusterRecord) SetActionStatus(v string) {
	o.ActionStatus = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *OspMetadataClusterRecord) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataClusterRecord) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *OspMetadataClusterRecord) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *OspMetadataClusterRecord) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetCommitProxyNum returns the CommitProxyNum field value if set, zero value otherwise.
func (o *OspMetadataClusterRecord) GetCommitProxyNum() int64 {
	if o == nil || IsNil(o.CommitProxyNum) {
		var ret int64
		return ret
	}
	return *o.CommitProxyNum
}

// GetCommitProxyNumOk returns a tuple with the CommitProxyNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataClusterRecord) GetCommitProxyNumOk() (*int64, bool) {
	if o == nil || IsNil(o.CommitProxyNum) {
		return nil, false
	}
	return o.CommitProxyNum, true
}

// HasCommitProxyNum returns a boolean if a field has been set.
func (o *OspMetadataClusterRecord) HasCommitProxyNum() bool {
	if o != nil && !IsNil(o.CommitProxyNum) {
		return true
	}

	return false
}

// SetCommitProxyNum gets a reference to the given int64 and assigns it to the CommitProxyNum field.
func (o *OspMetadataClusterRecord) SetCommitProxyNum(v int64) {
	o.CommitProxyNum = &v
}

// GetCoordinatorHostIds returns the CoordinatorHostIds field value if set, zero value otherwise.
func (o *OspMetadataClusterRecord) GetCoordinatorHostIds() []int64 {
	if o == nil || IsNil(o.CoordinatorHostIds) {
		var ret []int64
		return ret
	}
	return o.CoordinatorHostIds
}

// GetCoordinatorHostIdsOk returns a tuple with the CoordinatorHostIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataClusterRecord) GetCoordinatorHostIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.CoordinatorHostIds) {
		return nil, false
	}
	return o.CoordinatorHostIds, true
}

// HasCoordinatorHostIds returns a boolean if a field has been set.
func (o *OspMetadataClusterRecord) HasCoordinatorHostIds() bool {
	if o != nil && !IsNil(o.CoordinatorHostIds) {
		return true
	}

	return false
}

// SetCoordinatorHostIds gets a reference to the given []int64 and assigns it to the CoordinatorHostIds field.
func (o *OspMetadataClusterRecord) SetCoordinatorHostIds(v []int64) {
	o.CoordinatorHostIds = v
}

// GetCoordinatorNum returns the CoordinatorNum field value if set, zero value otherwise.
func (o *OspMetadataClusterRecord) GetCoordinatorNum() int64 {
	if o == nil || IsNil(o.CoordinatorNum) {
		var ret int64
		return ret
	}
	return *o.CoordinatorNum
}

// GetCoordinatorNumOk returns a tuple with the CoordinatorNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataClusterRecord) GetCoordinatorNumOk() (*int64, bool) {
	if o == nil || IsNil(o.CoordinatorNum) {
		return nil, false
	}
	return o.CoordinatorNum, true
}

// HasCoordinatorNum returns a boolean if a field has been set.
func (o *OspMetadataClusterRecord) HasCoordinatorNum() bool {
	if o != nil && !IsNil(o.CoordinatorNum) {
		return true
	}

	return false
}

// SetCoordinatorNum gets a reference to the given int64 and assigns it to the CoordinatorNum field.
func (o *OspMetadataClusterRecord) SetCoordinatorNum(v int64) {
	o.CoordinatorNum = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *OspMetadataClusterRecord) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataClusterRecord) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *OspMetadataClusterRecord) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *OspMetadataClusterRecord) SetCreate(v time.Time) {
	o.Create = &v
}

// GetCurReplicationNum returns the CurReplicationNum field value if set, zero value otherwise.
func (o *OspMetadataClusterRecord) GetCurReplicationNum() int64 {
	if o == nil || IsNil(o.CurReplicationNum) {
		var ret int64
		return ret
	}
	return *o.CurReplicationNum
}

// GetCurReplicationNumOk returns a tuple with the CurReplicationNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataClusterRecord) GetCurReplicationNumOk() (*int64, bool) {
	if o == nil || IsNil(o.CurReplicationNum) {
		return nil, false
	}
	return o.CurReplicationNum, true
}

// HasCurReplicationNum returns a boolean if a field has been set.
func (o *OspMetadataClusterRecord) HasCurReplicationNum() bool {
	if o != nil && !IsNil(o.CurReplicationNum) {
		return true
	}

	return false
}

// SetCurReplicationNum gets a reference to the given int64 and assigns it to the CurReplicationNum field.
func (o *OspMetadataClusterRecord) SetCurReplicationNum(v int64) {
	o.CurReplicationNum = &v
}

// GetDatacenters returns the Datacenters field value if set, zero value otherwise.
func (o *OspMetadataClusterRecord) GetDatacenters() []PlacementNodeNestview {
	if o == nil || IsNil(o.Datacenters) {
		var ret []PlacementNodeNestview
		return ret
	}
	return o.Datacenters
}

// GetDatacentersOk returns a tuple with the Datacenters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataClusterRecord) GetDatacentersOk() ([]PlacementNodeNestview, bool) {
	if o == nil || IsNil(o.Datacenters) {
		return nil, false
	}
	return o.Datacenters, true
}

// HasDatacenters returns a boolean if a field has been set.
func (o *OspMetadataClusterRecord) HasDatacenters() bool {
	if o != nil && !IsNil(o.Datacenters) {
		return true
	}

	return false
}

// SetDatacenters gets a reference to the given []PlacementNodeNestview and assigns it to the Datacenters field.
func (o *OspMetadataClusterRecord) SetDatacenters(v []PlacementNodeNestview) {
	o.Datacenters = v
}

// GetDeployMode returns the DeployMode field value if set, zero value otherwise.
func (o *OspMetadataClusterRecord) GetDeployMode() string {
	if o == nil || IsNil(o.DeployMode) {
		var ret string
		return ret
	}
	return *o.DeployMode
}

// GetDeployModeOk returns a tuple with the DeployMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataClusterRecord) GetDeployModeOk() (*string, bool) {
	if o == nil || IsNil(o.DeployMode) {
		return nil, false
	}
	return o.DeployMode, true
}

// HasDeployMode returns a boolean if a field has been set.
func (o *OspMetadataClusterRecord) HasDeployMode() bool {
	if o != nil && !IsNil(o.DeployMode) {
		return true
	}

	return false
}

// SetDeployMode gets a reference to the given string and assigns it to the DeployMode field.
func (o *OspMetadataClusterRecord) SetDeployMode(v string) {
	o.DeployMode = &v
}

// GetGrvProxyNum returns the GrvProxyNum field value if set, zero value otherwise.
func (o *OspMetadataClusterRecord) GetGrvProxyNum() int64 {
	if o == nil || IsNil(o.GrvProxyNum) {
		var ret int64
		return ret
	}
	return *o.GrvProxyNum
}

// GetGrvProxyNumOk returns a tuple with the GrvProxyNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataClusterRecord) GetGrvProxyNumOk() (*int64, bool) {
	if o == nil || IsNil(o.GrvProxyNum) {
		return nil, false
	}
	return o.GrvProxyNum, true
}

// HasGrvProxyNum returns a boolean if a field has been set.
func (o *OspMetadataClusterRecord) HasGrvProxyNum() bool {
	if o != nil && !IsNil(o.GrvProxyNum) {
		return true
	}

	return false
}

// SetGrvProxyNum gets a reference to the given int64 and assigns it to the GrvProxyNum field.
func (o *OspMetadataClusterRecord) SetGrvProxyNum(v int64) {
	o.GrvProxyNum = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OspMetadataClusterRecord) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataClusterRecord) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OspMetadataClusterRecord) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *OspMetadataClusterRecord) SetId(v int64) {
	o.Id = &v
}

// GetLogNum returns the LogNum field value
func (o *OspMetadataClusterRecord) GetLogNum() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.LogNum
}

// GetLogNumOk returns a tuple with the LogNum field value
// and a boolean to check if the value has been set.
func (o *OspMetadataClusterRecord) GetLogNumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LogNum, true
}

// SetLogNum sets field value
func (o *OspMetadataClusterRecord) SetLogNum(v int64) {
	o.LogNum = v
}

// GetMasterDatacenter returns the MasterDatacenter field value if set, zero value otherwise.
func (o *OspMetadataClusterRecord) GetMasterDatacenter() PlacementNode {
	if o == nil || IsNil(o.MasterDatacenter) {
		var ret PlacementNode
		return ret
	}
	return *o.MasterDatacenter
}

// GetMasterDatacenterOk returns a tuple with the MasterDatacenter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataClusterRecord) GetMasterDatacenterOk() (*PlacementNode, bool) {
	if o == nil || IsNil(o.MasterDatacenter) {
		return nil, false
	}
	return o.MasterDatacenter, true
}

// HasMasterDatacenter returns a boolean if a field has been set.
func (o *OspMetadataClusterRecord) HasMasterDatacenter() bool {
	if o != nil && !IsNil(o.MasterDatacenter) {
		return true
	}

	return false
}

// SetMasterDatacenter gets a reference to the given PlacementNode and assigns it to the MasterDatacenter field.
func (o *OspMetadataClusterRecord) SetMasterDatacenter(v PlacementNode) {
	o.MasterDatacenter = &v
}

// GetMinAvailableSpaceRatio returns the MinAvailableSpaceRatio field value if set, zero value otherwise.
func (o *OspMetadataClusterRecord) GetMinAvailableSpaceRatio() float64 {
	if o == nil || IsNil(o.MinAvailableSpaceRatio) {
		var ret float64
		return ret
	}
	return *o.MinAvailableSpaceRatio
}

// GetMinAvailableSpaceRatioOk returns a tuple with the MinAvailableSpaceRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataClusterRecord) GetMinAvailableSpaceRatioOk() (*float64, bool) {
	if o == nil || IsNil(o.MinAvailableSpaceRatio) {
		return nil, false
	}
	return o.MinAvailableSpaceRatio, true
}

// HasMinAvailableSpaceRatio returns a boolean if a field has been set.
func (o *OspMetadataClusterRecord) HasMinAvailableSpaceRatio() bool {
	if o != nil && !IsNil(o.MinAvailableSpaceRatio) {
		return true
	}

	return false
}

// SetMinAvailableSpaceRatio gets a reference to the given float64 and assigns it to the MinAvailableSpaceRatio field.
func (o *OspMetadataClusterRecord) SetMinAvailableSpaceRatio(v float64) {
	o.MinAvailableSpaceRatio = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OspMetadataClusterRecord) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataClusterRecord) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OspMetadataClusterRecord) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OspMetadataClusterRecord) SetName(v string) {
	o.Name = &v
}

// GetObjectStorage returns the ObjectStorage field value if set, zero value otherwise.
func (o *OspMetadataClusterRecord) GetObjectStorage() NgObjectStorageNestview {
	if o == nil || IsNil(o.ObjectStorage) {
		var ret NgObjectStorageNestview
		return ret
	}
	return *o.ObjectStorage
}

// GetObjectStorageOk returns a tuple with the ObjectStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataClusterRecord) GetObjectStorageOk() (*NgObjectStorageNestview, bool) {
	if o == nil || IsNil(o.ObjectStorage) {
		return nil, false
	}
	return o.ObjectStorage, true
}

// HasObjectStorage returns a boolean if a field has been set.
func (o *OspMetadataClusterRecord) HasObjectStorage() bool {
	if o != nil && !IsNil(o.ObjectStorage) {
		return true
	}

	return false
}

// SetObjectStorage gets a reference to the given NgObjectStorageNestview and assigns it to the ObjectStorage field.
func (o *OspMetadataClusterRecord) SetObjectStorage(v NgObjectStorageNestview) {
	o.ObjectStorage = &v
}

// GetPlacementNode returns the PlacementNode field value if set, zero value otherwise.
func (o *OspMetadataClusterRecord) GetPlacementNode() OspMdClusterPlacementNodeNestview {
	if o == nil || IsNil(o.PlacementNode) {
		var ret OspMdClusterPlacementNodeNestview
		return ret
	}
	return *o.PlacementNode
}

// GetPlacementNodeOk returns a tuple with the PlacementNode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataClusterRecord) GetPlacementNodeOk() (*OspMdClusterPlacementNodeNestview, bool) {
	if o == nil || IsNil(o.PlacementNode) {
		return nil, false
	}
	return o.PlacementNode, true
}

// HasPlacementNode returns a boolean if a field has been set.
func (o *OspMetadataClusterRecord) HasPlacementNode() bool {
	if o != nil && !IsNil(o.PlacementNode) {
		return true
	}

	return false
}

// SetPlacementNode gets a reference to the given OspMdClusterPlacementNodeNestview and assigns it to the PlacementNode field.
func (o *OspMetadataClusterRecord) SetPlacementNode(v OspMdClusterPlacementNodeNestview) {
	o.PlacementNode = &v
}

// GetProtectionType returns the ProtectionType field value if set, zero value otherwise.
func (o *OspMetadataClusterRecord) GetProtectionType() string {
	if o == nil || IsNil(o.ProtectionType) {
		var ret string
		return ret
	}
	return *o.ProtectionType
}

// GetProtectionTypeOk returns a tuple with the ProtectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataClusterRecord) GetProtectionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ProtectionType) {
		return nil, false
	}
	return o.ProtectionType, true
}

// HasProtectionType returns a boolean if a field has been set.
func (o *OspMetadataClusterRecord) HasProtectionType() bool {
	if o != nil && !IsNil(o.ProtectionType) {
		return true
	}

	return false
}

// SetProtectionType gets a reference to the given string and assigns it to the ProtectionType field.
func (o *OspMetadataClusterRecord) SetProtectionType(v string) {
	o.ProtectionType = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *OspMetadataClusterRecord) GetRegion() RegionNestview {
	if o == nil || IsNil(o.Region) {
		var ret RegionNestview
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataClusterRecord) GetRegionOk() (*RegionNestview, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *OspMetadataClusterRecord) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given RegionNestview and assigns it to the Region field.
func (o *OspMetadataClusterRecord) SetRegion(v RegionNestview) {
	o.Region = &v
}

// GetReplicationNum returns the ReplicationNum field value if set, zero value otherwise.
func (o *OspMetadataClusterRecord) GetReplicationNum() int64 {
	if o == nil || IsNil(o.ReplicationNum) {
		var ret int64
		return ret
	}
	return *o.ReplicationNum
}

// GetReplicationNumOk returns a tuple with the ReplicationNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataClusterRecord) GetReplicationNumOk() (*int64, bool) {
	if o == nil || IsNil(o.ReplicationNum) {
		return nil, false
	}
	return o.ReplicationNum, true
}

// HasReplicationNum returns a boolean if a field has been set.
func (o *OspMetadataClusterRecord) HasReplicationNum() bool {
	if o != nil && !IsNil(o.ReplicationNum) {
		return true
	}

	return false
}

// SetReplicationNum gets a reference to the given int64 and assigns it to the ReplicationNum field.
func (o *OspMetadataClusterRecord) SetReplicationNum(v int64) {
	o.ReplicationNum = &v
}

// GetResolverNum returns the ResolverNum field value if set, zero value otherwise.
func (o *OspMetadataClusterRecord) GetResolverNum() int64 {
	if o == nil || IsNil(o.ResolverNum) {
		var ret int64
		return ret
	}
	return *o.ResolverNum
}

// GetResolverNumOk returns a tuple with the ResolverNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataClusterRecord) GetResolverNumOk() (*int64, bool) {
	if o == nil || IsNil(o.ResolverNum) {
		return nil, false
	}
	return o.ResolverNum, true
}

// HasResolverNum returns a boolean if a field has been set.
func (o *OspMetadataClusterRecord) HasResolverNum() bool {
	if o != nil && !IsNil(o.ResolverNum) {
		return true
	}

	return false
}

// SetResolverNum gets a reference to the given int64 and assigns it to the ResolverNum field.
func (o *OspMetadataClusterRecord) SetResolverNum(v int64) {
	o.ResolverNum = &v
}

// GetSpaceUsageFactor returns the SpaceUsageFactor field value if set, zero value otherwise.
func (o *OspMetadataClusterRecord) GetSpaceUsageFactor() float64 {
	if o == nil || IsNil(o.SpaceUsageFactor) {
		var ret float64
		return ret
	}
	return *o.SpaceUsageFactor
}

// GetSpaceUsageFactorOk returns a tuple with the SpaceUsageFactor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataClusterRecord) GetSpaceUsageFactorOk() (*float64, bool) {
	if o == nil || IsNil(o.SpaceUsageFactor) {
		return nil, false
	}
	return o.SpaceUsageFactor, true
}

// HasSpaceUsageFactor returns a boolean if a field has been set.
func (o *OspMetadataClusterRecord) HasSpaceUsageFactor() bool {
	if o != nil && !IsNil(o.SpaceUsageFactor) {
		return true
	}

	return false
}

// SetSpaceUsageFactor gets a reference to the given float64 and assigns it to the SpaceUsageFactor field.
func (o *OspMetadataClusterRecord) SetSpaceUsageFactor(v float64) {
	o.SpaceUsageFactor = &v
}

// GetStatelessServerNum returns the StatelessServerNum field value if set, zero value otherwise.
func (o *OspMetadataClusterRecord) GetStatelessServerNum() int64 {
	if o == nil || IsNil(o.StatelessServerNum) {
		var ret int64
		return ret
	}
	return *o.StatelessServerNum
}

// GetStatelessServerNumOk returns a tuple with the StatelessServerNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataClusterRecord) GetStatelessServerNumOk() (*int64, bool) {
	if o == nil || IsNil(o.StatelessServerNum) {
		return nil, false
	}
	return o.StatelessServerNum, true
}

// HasStatelessServerNum returns a boolean if a field has been set.
func (o *OspMetadataClusterRecord) HasStatelessServerNum() bool {
	if o != nil && !IsNil(o.StatelessServerNum) {
		return true
	}

	return false
}

// SetStatelessServerNum gets a reference to the given int64 and assigns it to the StatelessServerNum field.
func (o *OspMetadataClusterRecord) SetStatelessServerNum(v int64) {
	o.StatelessServerNum = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *OspMetadataClusterRecord) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataClusterRecord) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *OspMetadataClusterRecord) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *OspMetadataClusterRecord) SetStatus(v string) {
	o.Status = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *OspMetadataClusterRecord) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataClusterRecord) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *OspMetadataClusterRecord) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *OspMetadataClusterRecord) SetType(v string) {
	o.Type = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *OspMetadataClusterRecord) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataClusterRecord) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *OspMetadataClusterRecord) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *OspMetadataClusterRecord) SetUpdate(v time.Time) {
	o.Update = &v
}

// GetSamples returns the Samples field value if set, zero value otherwise.
func (o *OspMetadataClusterRecord) GetSamples() []OspMetadataClusterStat {
	if o == nil || IsNil(o.Samples) {
		var ret []OspMetadataClusterStat
		return ret
	}
	return o.Samples
}

// GetSamplesOk returns a tuple with the Samples field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataClusterRecord) GetSamplesOk() ([]OspMetadataClusterStat, bool) {
	if o == nil || IsNil(o.Samples) {
		return nil, false
	}
	return o.Samples, true
}

// HasSamples returns a boolean if a field has been set.
func (o *OspMetadataClusterRecord) HasSamples() bool {
	if o != nil && !IsNil(o.Samples) {
		return true
	}

	return false
}

// SetSamples gets a reference to the given []OspMetadataClusterStat and assigns it to the Samples field.
func (o *OspMetadataClusterRecord) SetSamples(v []OspMetadataClusterStat) {
	o.Samples = v
}

func (o OspMetadataClusterRecord) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OspMetadataClusterRecord) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActionStatus) {
		toSerialize["action_status"] = o.ActionStatus
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.CommitProxyNum) {
		toSerialize["commit_proxy_num"] = o.CommitProxyNum
	}
	if !IsNil(o.CoordinatorHostIds) {
		toSerialize["coordinator_host_ids"] = o.CoordinatorHostIds
	}
	if !IsNil(o.CoordinatorNum) {
		toSerialize["coordinator_num"] = o.CoordinatorNum
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.CurReplicationNum) {
		toSerialize["cur_replication_num"] = o.CurReplicationNum
	}
	if !IsNil(o.Datacenters) {
		toSerialize["datacenters"] = o.Datacenters
	}
	if !IsNil(o.DeployMode) {
		toSerialize["deploy_mode"] = o.DeployMode
	}
	if !IsNil(o.GrvProxyNum) {
		toSerialize["grv_proxy_num"] = o.GrvProxyNum
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["log_num"] = o.LogNum
	if !IsNil(o.MasterDatacenter) {
		toSerialize["master_datacenter"] = o.MasterDatacenter
	}
	if !IsNil(o.MinAvailableSpaceRatio) {
		toSerialize["min_available_space_ratio"] = o.MinAvailableSpaceRatio
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ObjectStorage) {
		toSerialize["object_storage"] = o.ObjectStorage
	}
	if !IsNil(o.PlacementNode) {
		toSerialize["placement_node"] = o.PlacementNode
	}
	if !IsNil(o.ProtectionType) {
		toSerialize["protection_type"] = o.ProtectionType
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.ReplicationNum) {
		toSerialize["replication_num"] = o.ReplicationNum
	}
	if !IsNil(o.ResolverNum) {
		toSerialize["resolver_num"] = o.ResolverNum
	}
	if !IsNil(o.SpaceUsageFactor) {
		toSerialize["space_usage_factor"] = o.SpaceUsageFactor
	}
	if !IsNil(o.StatelessServerNum) {
		toSerialize["stateless_server_num"] = o.StatelessServerNum
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	if !IsNil(o.Samples) {
		toSerialize["samples"] = o.Samples
	}
	return toSerialize, nil
}

func (o *OspMetadataClusterRecord) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"log_num",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOspMetadataClusterRecord := _OspMetadataClusterRecord{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOspMetadataClusterRecord)

	if err != nil {
		return err
	}

	*o = OspMetadataClusterRecord(varOspMetadataClusterRecord)

	return err
}

type NullableOspMetadataClusterRecord struct {
	value *OspMetadataClusterRecord
	isSet bool
}

func (v NullableOspMetadataClusterRecord) Get() *OspMetadataClusterRecord {
	return v.value
}

func (v *NullableOspMetadataClusterRecord) Set(val *OspMetadataClusterRecord) {
	v.value = val
	v.isSet = true
}

func (v NullableOspMetadataClusterRecord) IsSet() bool {
	return v.isSet
}

func (v *NullableOspMetadataClusterRecord) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOspMetadataClusterRecord(val *OspMetadataClusterRecord) *NullableOspMetadataClusterRecord {
	return &NullableOspMetadataClusterRecord{value: val, isSet: true}
}

func (v NullableOspMetadataClusterRecord) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOspMetadataClusterRecord) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


