/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DpDfsSnapshotCreateReqDpDfsSnapshot type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DpDfsSnapshotCreateReqDpDfsSnapshot{}

// DpDfsSnapshotCreateReqDpDfsSnapshot struct for DpDfsSnapshotCreateReqDpDfsSnapshot
type DpDfsSnapshotCreateReqDpDfsSnapshot struct {
	DpDfsSnapshotPolicyId int64 `json:"dp_dfs_snapshot_policy_id"`
	Path string `json:"path"`
	RootfsId int64 `json:"rootfs_id"`
	Trigger bool `json:"trigger"`
}

type _DpDfsSnapshotCreateReqDpDfsSnapshot DpDfsSnapshotCreateReqDpDfsSnapshot

// NewDpDfsSnapshotCreateReqDpDfsSnapshot instantiates a new DpDfsSnapshotCreateReqDpDfsSnapshot object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDpDfsSnapshotCreateReqDpDfsSnapshot(dpDfsSnapshotPolicyId int64, path string, rootfsId int64, trigger bool) *DpDfsSnapshotCreateReqDpDfsSnapshot {
	this := DpDfsSnapshotCreateReqDpDfsSnapshot{}
	this.DpDfsSnapshotPolicyId = dpDfsSnapshotPolicyId
	this.Path = path
	this.RootfsId = rootfsId
	this.Trigger = trigger
	return &this
}

// NewDpDfsSnapshotCreateReqDpDfsSnapshotWithDefaults instantiates a new DpDfsSnapshotCreateReqDpDfsSnapshot object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDpDfsSnapshotCreateReqDpDfsSnapshotWithDefaults() *DpDfsSnapshotCreateReqDpDfsSnapshot {
	this := DpDfsSnapshotCreateReqDpDfsSnapshot{}
	return &this
}

// GetDpDfsSnapshotPolicyId returns the DpDfsSnapshotPolicyId field value
func (o *DpDfsSnapshotCreateReqDpDfsSnapshot) GetDpDfsSnapshotPolicyId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DpDfsSnapshotPolicyId
}

// GetDpDfsSnapshotPolicyIdOk returns a tuple with the DpDfsSnapshotPolicyId field value
// and a boolean to check if the value has been set.
func (o *DpDfsSnapshotCreateReqDpDfsSnapshot) GetDpDfsSnapshotPolicyIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DpDfsSnapshotPolicyId, true
}

// SetDpDfsSnapshotPolicyId sets field value
func (o *DpDfsSnapshotCreateReqDpDfsSnapshot) SetDpDfsSnapshotPolicyId(v int64) {
	o.DpDfsSnapshotPolicyId = v
}

// GetPath returns the Path field value
func (o *DpDfsSnapshotCreateReqDpDfsSnapshot) GetPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *DpDfsSnapshotCreateReqDpDfsSnapshot) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Path, true
}

// SetPath sets field value
func (o *DpDfsSnapshotCreateReqDpDfsSnapshot) SetPath(v string) {
	o.Path = v
}

// GetRootfsId returns the RootfsId field value
func (o *DpDfsSnapshotCreateReqDpDfsSnapshot) GetRootfsId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.RootfsId
}

// GetRootfsIdOk returns a tuple with the RootfsId field value
// and a boolean to check if the value has been set.
func (o *DpDfsSnapshotCreateReqDpDfsSnapshot) GetRootfsIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RootfsId, true
}

// SetRootfsId sets field value
func (o *DpDfsSnapshotCreateReqDpDfsSnapshot) SetRootfsId(v int64) {
	o.RootfsId = v
}

// GetTrigger returns the Trigger field value
func (o *DpDfsSnapshotCreateReqDpDfsSnapshot) GetTrigger() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Trigger
}

// GetTriggerOk returns a tuple with the Trigger field value
// and a boolean to check if the value has been set.
func (o *DpDfsSnapshotCreateReqDpDfsSnapshot) GetTriggerOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Trigger, true
}

// SetTrigger sets field value
func (o *DpDfsSnapshotCreateReqDpDfsSnapshot) SetTrigger(v bool) {
	o.Trigger = v
}

func (o DpDfsSnapshotCreateReqDpDfsSnapshot) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DpDfsSnapshotCreateReqDpDfsSnapshot) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dp_dfs_snapshot_policy_id"] = o.DpDfsSnapshotPolicyId
	toSerialize["path"] = o.Path
	toSerialize["rootfs_id"] = o.RootfsId
	toSerialize["trigger"] = o.Trigger
	return toSerialize, nil
}

func (o *DpDfsSnapshotCreateReqDpDfsSnapshot) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dp_dfs_snapshot_policy_id",
		"path",
		"rootfs_id",
		"trigger",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDpDfsSnapshotCreateReqDpDfsSnapshot := _DpDfsSnapshotCreateReqDpDfsSnapshot{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDpDfsSnapshotCreateReqDpDfsSnapshot)

	if err != nil {
		return err
	}

	*o = DpDfsSnapshotCreateReqDpDfsSnapshot(varDpDfsSnapshotCreateReqDpDfsSnapshot)

	return err
}

type NullableDpDfsSnapshotCreateReqDpDfsSnapshot struct {
	value *DpDfsSnapshotCreateReqDpDfsSnapshot
	isSet bool
}

func (v NullableDpDfsSnapshotCreateReqDpDfsSnapshot) Get() *DpDfsSnapshotCreateReqDpDfsSnapshot {
	return v.value
}

func (v *NullableDpDfsSnapshotCreateReqDpDfsSnapshot) Set(val *DpDfsSnapshotCreateReqDpDfsSnapshot) {
	v.value = val
	v.isSet = true
}

func (v NullableDpDfsSnapshotCreateReqDpDfsSnapshot) IsSet() bool {
	return v.isSet
}

func (v *NullableDpDfsSnapshotCreateReqDpDfsSnapshot) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDpDfsSnapshotCreateReqDpDfsSnapshot(val *DpDfsSnapshotCreateReqDpDfsSnapshot) *NullableDpDfsSnapshotCreateReqDpDfsSnapshot {
	return &NullableDpDfsSnapshotCreateReqDpDfsSnapshot{value: val, isSet: true}
}

func (v NullableDpDfsSnapshotCreateReqDpDfsSnapshot) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDpDfsSnapshotCreateReqDpDfsSnapshot) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


