/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the DpDfsSnapshot type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DpDfsSnapshot{}

// DpDfsSnapshot DpDfsSnapshot represent an active dfs snapshot
type DpDfsSnapshot struct {
	Cluster *Cluster `json:"cluster,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	DfsPath *DfsPath `json:"dfs_path,omitempty"`
	DpDfsSnapshotPolicy *DpDfsSnapshotPolicyNestview `json:"dp_dfs_snapshot_policy,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Status *string `json:"status,omitempty"`
	Update *time.Time `json:"update,omitempty"`
}

// NewDpDfsSnapshot instantiates a new DpDfsSnapshot object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDpDfsSnapshot() *DpDfsSnapshot {
	this := DpDfsSnapshot{}
	return &this
}

// NewDpDfsSnapshotWithDefaults instantiates a new DpDfsSnapshot object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDpDfsSnapshotWithDefaults() *DpDfsSnapshot {
	this := DpDfsSnapshot{}
	return &this
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *DpDfsSnapshot) GetCluster() Cluster {
	if o == nil || IsNil(o.Cluster) {
		var ret Cluster
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpDfsSnapshot) GetClusterOk() (*Cluster, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *DpDfsSnapshot) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given Cluster and assigns it to the Cluster field.
func (o *DpDfsSnapshot) SetCluster(v Cluster) {
	o.Cluster = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *DpDfsSnapshot) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpDfsSnapshot) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *DpDfsSnapshot) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *DpDfsSnapshot) SetCreate(v time.Time) {
	o.Create = &v
}

// GetDfsPath returns the DfsPath field value if set, zero value otherwise.
func (o *DpDfsSnapshot) GetDfsPath() DfsPath {
	if o == nil || IsNil(o.DfsPath) {
		var ret DfsPath
		return ret
	}
	return *o.DfsPath
}

// GetDfsPathOk returns a tuple with the DfsPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpDfsSnapshot) GetDfsPathOk() (*DfsPath, bool) {
	if o == nil || IsNil(o.DfsPath) {
		return nil, false
	}
	return o.DfsPath, true
}

// HasDfsPath returns a boolean if a field has been set.
func (o *DpDfsSnapshot) HasDfsPath() bool {
	if o != nil && !IsNil(o.DfsPath) {
		return true
	}

	return false
}

// SetDfsPath gets a reference to the given DfsPath and assigns it to the DfsPath field.
func (o *DpDfsSnapshot) SetDfsPath(v DfsPath) {
	o.DfsPath = &v
}

// GetDpDfsSnapshotPolicy returns the DpDfsSnapshotPolicy field value if set, zero value otherwise.
func (o *DpDfsSnapshot) GetDpDfsSnapshotPolicy() DpDfsSnapshotPolicyNestview {
	if o == nil || IsNil(o.DpDfsSnapshotPolicy) {
		var ret DpDfsSnapshotPolicyNestview
		return ret
	}
	return *o.DpDfsSnapshotPolicy
}

// GetDpDfsSnapshotPolicyOk returns a tuple with the DpDfsSnapshotPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpDfsSnapshot) GetDpDfsSnapshotPolicyOk() (*DpDfsSnapshotPolicyNestview, bool) {
	if o == nil || IsNil(o.DpDfsSnapshotPolicy) {
		return nil, false
	}
	return o.DpDfsSnapshotPolicy, true
}

// HasDpDfsSnapshotPolicy returns a boolean if a field has been set.
func (o *DpDfsSnapshot) HasDpDfsSnapshotPolicy() bool {
	if o != nil && !IsNil(o.DpDfsSnapshotPolicy) {
		return true
	}

	return false
}

// SetDpDfsSnapshotPolicy gets a reference to the given DpDfsSnapshotPolicyNestview and assigns it to the DpDfsSnapshotPolicy field.
func (o *DpDfsSnapshot) SetDpDfsSnapshotPolicy(v DpDfsSnapshotPolicyNestview) {
	o.DpDfsSnapshotPolicy = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DpDfsSnapshot) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpDfsSnapshot) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DpDfsSnapshot) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *DpDfsSnapshot) SetId(v int64) {
	o.Id = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DpDfsSnapshot) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpDfsSnapshot) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DpDfsSnapshot) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DpDfsSnapshot) SetStatus(v string) {
	o.Status = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *DpDfsSnapshot) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpDfsSnapshot) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *DpDfsSnapshot) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *DpDfsSnapshot) SetUpdate(v time.Time) {
	o.Update = &v
}

func (o DpDfsSnapshot) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DpDfsSnapshot) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.DfsPath) {
		toSerialize["dfs_path"] = o.DfsPath
	}
	if !IsNil(o.DpDfsSnapshotPolicy) {
		toSerialize["dp_dfs_snapshot_policy"] = o.DpDfsSnapshotPolicy
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	return toSerialize, nil
}

type NullableDpDfsSnapshot struct {
	value *DpDfsSnapshot
	isSet bool
}

func (v NullableDpDfsSnapshot) Get() *DpDfsSnapshot {
	return v.value
}

func (v *NullableDpDfsSnapshot) Set(val *DpDfsSnapshot) {
	v.value = val
	v.isSet = true
}

func (v NullableDpDfsSnapshot) IsSet() bool {
	return v.isSet
}

func (v *NullableDpDfsSnapshot) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDpDfsSnapshot(val *DpDfsSnapshot) *NullableDpDfsSnapshot {
	return &NullableDpDfsSnapshot{value: val, isSet: true}
}

func (v NullableDpDfsSnapshot) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDpDfsSnapshot) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


