/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MetadataClusterAddServicesReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetadataClusterAddServicesReq{}

// MetadataClusterAddServicesReq struct for MetadataClusterAddServicesReq
type MetadataClusterAddServicesReq struct {
	MetadataServices []MetadataClusterAddServicesReqMetadataServicesElt `json:"metadata_services,omitempty"`
}

// NewMetadataClusterAddServicesReq instantiates a new MetadataClusterAddServicesReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetadataClusterAddServicesReq() *MetadataClusterAddServicesReq {
	this := MetadataClusterAddServicesReq{}
	return &this
}

// NewMetadataClusterAddServicesReqWithDefaults instantiates a new MetadataClusterAddServicesReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetadataClusterAddServicesReqWithDefaults() *MetadataClusterAddServicesReq {
	this := MetadataClusterAddServicesReq{}
	return &this
}

// GetMetadataServices returns the MetadataServices field value if set, zero value otherwise.
func (o *MetadataClusterAddServicesReq) GetMetadataServices() []MetadataClusterAddServicesReqMetadataServicesElt {
	if o == nil || IsNil(o.MetadataServices) {
		var ret []MetadataClusterAddServicesReqMetadataServicesElt
		return ret
	}
	return o.MetadataServices
}

// GetMetadataServicesOk returns a tuple with the MetadataServices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataClusterAddServicesReq) GetMetadataServicesOk() ([]MetadataClusterAddServicesReqMetadataServicesElt, bool) {
	if o == nil || IsNil(o.MetadataServices) {
		return nil, false
	}
	return o.MetadataServices, true
}

// HasMetadataServices returns a boolean if a field has been set.
func (o *MetadataClusterAddServicesReq) HasMetadataServices() bool {
	if o != nil && !IsNil(o.MetadataServices) {
		return true
	}

	return false
}

// SetMetadataServices gets a reference to the given []MetadataClusterAddServicesReqMetadataServicesElt and assigns it to the MetadataServices field.
func (o *MetadataClusterAddServicesReq) SetMetadataServices(v []MetadataClusterAddServicesReqMetadataServicesElt) {
	o.MetadataServices = v
}

func (o MetadataClusterAddServicesReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetadataClusterAddServicesReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MetadataServices) {
		toSerialize["metadata_services"] = o.MetadataServices
	}
	return toSerialize, nil
}

type NullableMetadataClusterAddServicesReq struct {
	value *MetadataClusterAddServicesReq
	isSet bool
}

func (v NullableMetadataClusterAddServicesReq) Get() *MetadataClusterAddServicesReq {
	return v.value
}

func (v *NullableMetadataClusterAddServicesReq) Set(val *MetadataClusterAddServicesReq) {
	v.value = val
	v.isSet = true
}

func (v NullableMetadataClusterAddServicesReq) IsSet() bool {
	return v.isSet
}

func (v *NullableMetadataClusterAddServicesReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetadataClusterAddServicesReq(val *MetadataClusterAddServicesReq) *NullableMetadataClusterAddServicesReq {
	return &NullableMetadataClusterAddServicesReq{value: val, isSet: true}
}

func (v NullableMetadataClusterAddServicesReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetadataClusterAddServicesReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


