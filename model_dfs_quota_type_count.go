/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DfsQuotaTypeCount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsQuotaTypeCount{}

// DfsQuotaTypeCount DfsQuotaTypeCount defines dfs quota type count
type DfsQuotaTypeCount struct {
	AdUser *int64 `json:"ad_user,omitempty"`
	AdUserGroup *int64 `json:"ad_user_group,omitempty"`
	Dir *int64 `json:"dir,omitempty"`
	FsUser *int64 `json:"fs_user,omitempty"`
	FsUserGroup *int64 `json:"fs_user_group,omitempty"`
	LdapUser *int64 `json:"ldap_user,omitempty"`
	LdapUserGroup *int64 `json:"ldap_user_group,omitempty"`
}

// NewDfsQuotaTypeCount instantiates a new DfsQuotaTypeCount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsQuotaTypeCount() *DfsQuotaTypeCount {
	this := DfsQuotaTypeCount{}
	return &this
}

// NewDfsQuotaTypeCountWithDefaults instantiates a new DfsQuotaTypeCount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsQuotaTypeCountWithDefaults() *DfsQuotaTypeCount {
	this := DfsQuotaTypeCount{}
	return &this
}

// GetAdUser returns the AdUser field value if set, zero value otherwise.
func (o *DfsQuotaTypeCount) GetAdUser() int64 {
	if o == nil || IsNil(o.AdUser) {
		var ret int64
		return ret
	}
	return *o.AdUser
}

// GetAdUserOk returns a tuple with the AdUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQuotaTypeCount) GetAdUserOk() (*int64, bool) {
	if o == nil || IsNil(o.AdUser) {
		return nil, false
	}
	return o.AdUser, true
}

// HasAdUser returns a boolean if a field has been set.
func (o *DfsQuotaTypeCount) HasAdUser() bool {
	if o != nil && !IsNil(o.AdUser) {
		return true
	}

	return false
}

// SetAdUser gets a reference to the given int64 and assigns it to the AdUser field.
func (o *DfsQuotaTypeCount) SetAdUser(v int64) {
	o.AdUser = &v
}

// GetAdUserGroup returns the AdUserGroup field value if set, zero value otherwise.
func (o *DfsQuotaTypeCount) GetAdUserGroup() int64 {
	if o == nil || IsNil(o.AdUserGroup) {
		var ret int64
		return ret
	}
	return *o.AdUserGroup
}

// GetAdUserGroupOk returns a tuple with the AdUserGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQuotaTypeCount) GetAdUserGroupOk() (*int64, bool) {
	if o == nil || IsNil(o.AdUserGroup) {
		return nil, false
	}
	return o.AdUserGroup, true
}

// HasAdUserGroup returns a boolean if a field has been set.
func (o *DfsQuotaTypeCount) HasAdUserGroup() bool {
	if o != nil && !IsNil(o.AdUserGroup) {
		return true
	}

	return false
}

// SetAdUserGroup gets a reference to the given int64 and assigns it to the AdUserGroup field.
func (o *DfsQuotaTypeCount) SetAdUserGroup(v int64) {
	o.AdUserGroup = &v
}

// GetDir returns the Dir field value if set, zero value otherwise.
func (o *DfsQuotaTypeCount) GetDir() int64 {
	if o == nil || IsNil(o.Dir) {
		var ret int64
		return ret
	}
	return *o.Dir
}

// GetDirOk returns a tuple with the Dir field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQuotaTypeCount) GetDirOk() (*int64, bool) {
	if o == nil || IsNil(o.Dir) {
		return nil, false
	}
	return o.Dir, true
}

// HasDir returns a boolean if a field has been set.
func (o *DfsQuotaTypeCount) HasDir() bool {
	if o != nil && !IsNil(o.Dir) {
		return true
	}

	return false
}

// SetDir gets a reference to the given int64 and assigns it to the Dir field.
func (o *DfsQuotaTypeCount) SetDir(v int64) {
	o.Dir = &v
}

// GetFsUser returns the FsUser field value if set, zero value otherwise.
func (o *DfsQuotaTypeCount) GetFsUser() int64 {
	if o == nil || IsNil(o.FsUser) {
		var ret int64
		return ret
	}
	return *o.FsUser
}

// GetFsUserOk returns a tuple with the FsUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQuotaTypeCount) GetFsUserOk() (*int64, bool) {
	if o == nil || IsNil(o.FsUser) {
		return nil, false
	}
	return o.FsUser, true
}

// HasFsUser returns a boolean if a field has been set.
func (o *DfsQuotaTypeCount) HasFsUser() bool {
	if o != nil && !IsNil(o.FsUser) {
		return true
	}

	return false
}

// SetFsUser gets a reference to the given int64 and assigns it to the FsUser field.
func (o *DfsQuotaTypeCount) SetFsUser(v int64) {
	o.FsUser = &v
}

// GetFsUserGroup returns the FsUserGroup field value if set, zero value otherwise.
func (o *DfsQuotaTypeCount) GetFsUserGroup() int64 {
	if o == nil || IsNil(o.FsUserGroup) {
		var ret int64
		return ret
	}
	return *o.FsUserGroup
}

// GetFsUserGroupOk returns a tuple with the FsUserGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQuotaTypeCount) GetFsUserGroupOk() (*int64, bool) {
	if o == nil || IsNil(o.FsUserGroup) {
		return nil, false
	}
	return o.FsUserGroup, true
}

// HasFsUserGroup returns a boolean if a field has been set.
func (o *DfsQuotaTypeCount) HasFsUserGroup() bool {
	if o != nil && !IsNil(o.FsUserGroup) {
		return true
	}

	return false
}

// SetFsUserGroup gets a reference to the given int64 and assigns it to the FsUserGroup field.
func (o *DfsQuotaTypeCount) SetFsUserGroup(v int64) {
	o.FsUserGroup = &v
}

// GetLdapUser returns the LdapUser field value if set, zero value otherwise.
func (o *DfsQuotaTypeCount) GetLdapUser() int64 {
	if o == nil || IsNil(o.LdapUser) {
		var ret int64
		return ret
	}
	return *o.LdapUser
}

// GetLdapUserOk returns a tuple with the LdapUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQuotaTypeCount) GetLdapUserOk() (*int64, bool) {
	if o == nil || IsNil(o.LdapUser) {
		return nil, false
	}
	return o.LdapUser, true
}

// HasLdapUser returns a boolean if a field has been set.
func (o *DfsQuotaTypeCount) HasLdapUser() bool {
	if o != nil && !IsNil(o.LdapUser) {
		return true
	}

	return false
}

// SetLdapUser gets a reference to the given int64 and assigns it to the LdapUser field.
func (o *DfsQuotaTypeCount) SetLdapUser(v int64) {
	o.LdapUser = &v
}

// GetLdapUserGroup returns the LdapUserGroup field value if set, zero value otherwise.
func (o *DfsQuotaTypeCount) GetLdapUserGroup() int64 {
	if o == nil || IsNil(o.LdapUserGroup) {
		var ret int64
		return ret
	}
	return *o.LdapUserGroup
}

// GetLdapUserGroupOk returns a tuple with the LdapUserGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQuotaTypeCount) GetLdapUserGroupOk() (*int64, bool) {
	if o == nil || IsNil(o.LdapUserGroup) {
		return nil, false
	}
	return o.LdapUserGroup, true
}

// HasLdapUserGroup returns a boolean if a field has been set.
func (o *DfsQuotaTypeCount) HasLdapUserGroup() bool {
	if o != nil && !IsNil(o.LdapUserGroup) {
		return true
	}

	return false
}

// SetLdapUserGroup gets a reference to the given int64 and assigns it to the LdapUserGroup field.
func (o *DfsQuotaTypeCount) SetLdapUserGroup(v int64) {
	o.LdapUserGroup = &v
}

func (o DfsQuotaTypeCount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsQuotaTypeCount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdUser) {
		toSerialize["ad_user"] = o.AdUser
	}
	if !IsNil(o.AdUserGroup) {
		toSerialize["ad_user_group"] = o.AdUserGroup
	}
	if !IsNil(o.Dir) {
		toSerialize["dir"] = o.Dir
	}
	if !IsNil(o.FsUser) {
		toSerialize["fs_user"] = o.FsUser
	}
	if !IsNil(o.FsUserGroup) {
		toSerialize["fs_user_group"] = o.FsUserGroup
	}
	if !IsNil(o.LdapUser) {
		toSerialize["ldap_user"] = o.LdapUser
	}
	if !IsNil(o.LdapUserGroup) {
		toSerialize["ldap_user_group"] = o.LdapUserGroup
	}
	return toSerialize, nil
}

type NullableDfsQuotaTypeCount struct {
	value *DfsQuotaTypeCount
	isSet bool
}

func (v NullableDfsQuotaTypeCount) Get() *DfsQuotaTypeCount {
	return v.value
}

func (v *NullableDfsQuotaTypeCount) Set(val *DfsQuotaTypeCount) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsQuotaTypeCount) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsQuotaTypeCount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsQuotaTypeCount(val *DfsQuotaTypeCount) *NullableDfsQuotaTypeCount {
	return &NullableDfsQuotaTypeCount{value: val, isSet: true}
}

func (v NullableDfsQuotaTypeCount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsQuotaTypeCount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


