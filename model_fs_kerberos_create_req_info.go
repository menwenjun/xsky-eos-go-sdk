/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FSKerberosCreateReqInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FSKerberosCreateReqInfo{}

// FSKerberosCreateReqInfo struct for FSKerberosCreateReqInfo
type FSKerberosCreateReqInfo struct {
	// description of kerberos
	Description *string `json:"description,omitempty"`
	// dns ip for domain name
	Ip *string `json:"ip,omitempty"`
	// domain name or ip address of kdc server
	Kdc string `json:"kdc"`
	// name of kerberos
	Name string `json:"name"`
	// password of kerberos
	Password string `json:"password"`
	// realm of kerberos
	Realm string `json:"realm"`
	// type of kerberos
	Type *string `json:"type,omitempty"`
	// username of kerberos
	Username string `json:"username"`
}

type _FSKerberosCreateReqInfo FSKerberosCreateReqInfo

// NewFSKerberosCreateReqInfo instantiates a new FSKerberosCreateReqInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFSKerberosCreateReqInfo(kdc string, name string, password string, realm string, username string) *FSKerberosCreateReqInfo {
	this := FSKerberosCreateReqInfo{}
	this.Kdc = kdc
	this.Name = name
	this.Password = password
	this.Realm = realm
	this.Username = username
	return &this
}

// NewFSKerberosCreateReqInfoWithDefaults instantiates a new FSKerberosCreateReqInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFSKerberosCreateReqInfoWithDefaults() *FSKerberosCreateReqInfo {
	this := FSKerberosCreateReqInfo{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *FSKerberosCreateReqInfo) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FSKerberosCreateReqInfo) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *FSKerberosCreateReqInfo) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *FSKerberosCreateReqInfo) SetDescription(v string) {
	o.Description = &v
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *FSKerberosCreateReqInfo) GetIp() string {
	if o == nil || IsNil(o.Ip) {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FSKerberosCreateReqInfo) GetIpOk() (*string, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *FSKerberosCreateReqInfo) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *FSKerberosCreateReqInfo) SetIp(v string) {
	o.Ip = &v
}

// GetKdc returns the Kdc field value
func (o *FSKerberosCreateReqInfo) GetKdc() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kdc
}

// GetKdcOk returns a tuple with the Kdc field value
// and a boolean to check if the value has been set.
func (o *FSKerberosCreateReqInfo) GetKdcOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kdc, true
}

// SetKdc sets field value
func (o *FSKerberosCreateReqInfo) SetKdc(v string) {
	o.Kdc = v
}

// GetName returns the Name field value
func (o *FSKerberosCreateReqInfo) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *FSKerberosCreateReqInfo) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *FSKerberosCreateReqInfo) SetName(v string) {
	o.Name = v
}

// GetPassword returns the Password field value
func (o *FSKerberosCreateReqInfo) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *FSKerberosCreateReqInfo) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *FSKerberosCreateReqInfo) SetPassword(v string) {
	o.Password = v
}

// GetRealm returns the Realm field value
func (o *FSKerberosCreateReqInfo) GetRealm() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Realm
}

// GetRealmOk returns a tuple with the Realm field value
// and a boolean to check if the value has been set.
func (o *FSKerberosCreateReqInfo) GetRealmOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Realm, true
}

// SetRealm sets field value
func (o *FSKerberosCreateReqInfo) SetRealm(v string) {
	o.Realm = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *FSKerberosCreateReqInfo) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FSKerberosCreateReqInfo) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *FSKerberosCreateReqInfo) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *FSKerberosCreateReqInfo) SetType(v string) {
	o.Type = &v
}

// GetUsername returns the Username field value
func (o *FSKerberosCreateReqInfo) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *FSKerberosCreateReqInfo) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *FSKerberosCreateReqInfo) SetUsername(v string) {
	o.Username = v
}

func (o FSKerberosCreateReqInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FSKerberosCreateReqInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	toSerialize["kdc"] = o.Kdc
	toSerialize["name"] = o.Name
	toSerialize["password"] = o.Password
	toSerialize["realm"] = o.Realm
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	toSerialize["username"] = o.Username
	return toSerialize, nil
}

func (o *FSKerberosCreateReqInfo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"kdc",
		"name",
		"password",
		"realm",
		"username",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFSKerberosCreateReqInfo := _FSKerberosCreateReqInfo{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFSKerberosCreateReqInfo)

	if err != nil {
		return err
	}

	*o = FSKerberosCreateReqInfo(varFSKerberosCreateReqInfo)

	return err
}

type NullableFSKerberosCreateReqInfo struct {
	value *FSKerberosCreateReqInfo
	isSet bool
}

func (v NullableFSKerberosCreateReqInfo) Get() *FSKerberosCreateReqInfo {
	return v.value
}

func (v *NullableFSKerberosCreateReqInfo) Set(val *FSKerberosCreateReqInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableFSKerberosCreateReqInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableFSKerberosCreateReqInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFSKerberosCreateReqInfo(val *FSKerberosCreateReqInfo) *NullableFSKerberosCreateReqInfo {
	return &NullableFSKerberosCreateReqInfo{value: val, isSet: true}
}

func (v NullableFSKerberosCreateReqInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFSKerberosCreateReqInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


