/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the DataKbytePredictionPoint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DataKbytePredictionPoint{}

// DataKbytePredictionPoint DataKbytePredictionPoint is a point in a prediction graph
type DataKbytePredictionPoint struct {
	Create *time.Time `json:"create,omitempty"`
	DataKbyte *int64 `json:"data_kbyte,omitempty"`
}

// NewDataKbytePredictionPoint instantiates a new DataKbytePredictionPoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataKbytePredictionPoint() *DataKbytePredictionPoint {
	this := DataKbytePredictionPoint{}
	return &this
}

// NewDataKbytePredictionPointWithDefaults instantiates a new DataKbytePredictionPoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataKbytePredictionPointWithDefaults() *DataKbytePredictionPoint {
	this := DataKbytePredictionPoint{}
	return &this
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *DataKbytePredictionPoint) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataKbytePredictionPoint) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *DataKbytePredictionPoint) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *DataKbytePredictionPoint) SetCreate(v time.Time) {
	o.Create = &v
}

// GetDataKbyte returns the DataKbyte field value if set, zero value otherwise.
func (o *DataKbytePredictionPoint) GetDataKbyte() int64 {
	if o == nil || IsNil(o.DataKbyte) {
		var ret int64
		return ret
	}
	return *o.DataKbyte
}

// GetDataKbyteOk returns a tuple with the DataKbyte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataKbytePredictionPoint) GetDataKbyteOk() (*int64, bool) {
	if o == nil || IsNil(o.DataKbyte) {
		return nil, false
	}
	return o.DataKbyte, true
}

// HasDataKbyte returns a boolean if a field has been set.
func (o *DataKbytePredictionPoint) HasDataKbyte() bool {
	if o != nil && !IsNil(o.DataKbyte) {
		return true
	}

	return false
}

// SetDataKbyte gets a reference to the given int64 and assigns it to the DataKbyte field.
func (o *DataKbytePredictionPoint) SetDataKbyte(v int64) {
	o.DataKbyte = &v
}

func (o DataKbytePredictionPoint) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DataKbytePredictionPoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.DataKbyte) {
		toSerialize["data_kbyte"] = o.DataKbyte
	}
	return toSerialize, nil
}

type NullableDataKbytePredictionPoint struct {
	value *DataKbytePredictionPoint
	isSet bool
}

func (v NullableDataKbytePredictionPoint) Get() *DataKbytePredictionPoint {
	return v.value
}

func (v *NullableDataKbytePredictionPoint) Set(val *DataKbytePredictionPoint) {
	v.value = val
	v.isSet = true
}

func (v NullableDataKbytePredictionPoint) IsSet() bool {
	return v.isSet
}

func (v *NullableDataKbytePredictionPoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataKbytePredictionPoint(val *DataKbytePredictionPoint) *NullableDataKbytePredictionPoint {
	return &NullableDataKbytePredictionPoint{value: val, isSet: true}
}

func (v NullableDataKbytePredictionPoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataKbytePredictionPoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


