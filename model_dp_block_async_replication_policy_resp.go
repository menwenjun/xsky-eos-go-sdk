/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DpBlockAsyncReplicationPolicyResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DpBlockAsyncReplicationPolicyResp{}

// DpBlockAsyncReplicationPolicyResp struct for DpBlockAsyncReplicationPolicyResp
type DpBlockAsyncReplicationPolicyResp struct {
	DpBlockAsyncReplicationPolicy *DpBlockAsyncReplicationPolicy `json:"dp_block_async_replication_policy,omitempty"`
}

// NewDpBlockAsyncReplicationPolicyResp instantiates a new DpBlockAsyncReplicationPolicyResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDpBlockAsyncReplicationPolicyResp() *DpBlockAsyncReplicationPolicyResp {
	this := DpBlockAsyncReplicationPolicyResp{}
	return &this
}

// NewDpBlockAsyncReplicationPolicyRespWithDefaults instantiates a new DpBlockAsyncReplicationPolicyResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDpBlockAsyncReplicationPolicyRespWithDefaults() *DpBlockAsyncReplicationPolicyResp {
	this := DpBlockAsyncReplicationPolicyResp{}
	return &this
}

// GetDpBlockAsyncReplicationPolicy returns the DpBlockAsyncReplicationPolicy field value if set, zero value otherwise.
func (o *DpBlockAsyncReplicationPolicyResp) GetDpBlockAsyncReplicationPolicy() DpBlockAsyncReplicationPolicy {
	if o == nil || IsNil(o.DpBlockAsyncReplicationPolicy) {
		var ret DpBlockAsyncReplicationPolicy
		return ret
	}
	return *o.DpBlockAsyncReplicationPolicy
}

// GetDpBlockAsyncReplicationPolicyOk returns a tuple with the DpBlockAsyncReplicationPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpBlockAsyncReplicationPolicyResp) GetDpBlockAsyncReplicationPolicyOk() (*DpBlockAsyncReplicationPolicy, bool) {
	if o == nil || IsNil(o.DpBlockAsyncReplicationPolicy) {
		return nil, false
	}
	return o.DpBlockAsyncReplicationPolicy, true
}

// HasDpBlockAsyncReplicationPolicy returns a boolean if a field has been set.
func (o *DpBlockAsyncReplicationPolicyResp) HasDpBlockAsyncReplicationPolicy() bool {
	if o != nil && !IsNil(o.DpBlockAsyncReplicationPolicy) {
		return true
	}

	return false
}

// SetDpBlockAsyncReplicationPolicy gets a reference to the given DpBlockAsyncReplicationPolicy and assigns it to the DpBlockAsyncReplicationPolicy field.
func (o *DpBlockAsyncReplicationPolicyResp) SetDpBlockAsyncReplicationPolicy(v DpBlockAsyncReplicationPolicy) {
	o.DpBlockAsyncReplicationPolicy = &v
}

func (o DpBlockAsyncReplicationPolicyResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DpBlockAsyncReplicationPolicyResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DpBlockAsyncReplicationPolicy) {
		toSerialize["dp_block_async_replication_policy"] = o.DpBlockAsyncReplicationPolicy
	}
	return toSerialize, nil
}

type NullableDpBlockAsyncReplicationPolicyResp struct {
	value *DpBlockAsyncReplicationPolicyResp
	isSet bool
}

func (v NullableDpBlockAsyncReplicationPolicyResp) Get() *DpBlockAsyncReplicationPolicyResp {
	return v.value
}

func (v *NullableDpBlockAsyncReplicationPolicyResp) Set(val *DpBlockAsyncReplicationPolicyResp) {
	v.value = val
	v.isSet = true
}

func (v NullableDpBlockAsyncReplicationPolicyResp) IsSet() bool {
	return v.isSet
}

func (v *NullableDpBlockAsyncReplicationPolicyResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDpBlockAsyncReplicationPolicyResp(val *DpBlockAsyncReplicationPolicyResp) *NullableDpBlockAsyncReplicationPolicyResp {
	return &NullableDpBlockAsyncReplicationPolicyResp{value: val, isSet: true}
}

func (v NullableDpBlockAsyncReplicationPolicyResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDpBlockAsyncReplicationPolicyResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


