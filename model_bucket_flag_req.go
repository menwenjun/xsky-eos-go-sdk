/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BucketFlagReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BucketFlagReq{}

// BucketFlagReq struct for BucketFlagReq
type BucketFlagReq struct {
	DeleteTriggerArchiveTier *bool `json:"delete_trigger_archive_tier,omitempty"`
	GetTriggerRestore *bool `json:"get_trigger_restore,omitempty"`
	Readonly *bool `json:"readonly,omitempty"`
	TierCache *bool `json:"tier_cache,omitempty"`
	// set bucket local delete mode
	TierRetainExternalObject *bool `json:"tier_retain_external_object,omitempty"`
	TierWorm *bool `json:"tier_worm,omitempty"`
	Versioned *bool `json:"versioned,omitempty"`
	VersionsSuspended *bool `json:"versions_suspended,omitempty"`
	Worm *bool `json:"worm,omitempty"`
}

// NewBucketFlagReq instantiates a new BucketFlagReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBucketFlagReq() *BucketFlagReq {
	this := BucketFlagReq{}
	return &this
}

// NewBucketFlagReqWithDefaults instantiates a new BucketFlagReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBucketFlagReqWithDefaults() *BucketFlagReq {
	this := BucketFlagReq{}
	return &this
}

// GetDeleteTriggerArchiveTier returns the DeleteTriggerArchiveTier field value if set, zero value otherwise.
func (o *BucketFlagReq) GetDeleteTriggerArchiveTier() bool {
	if o == nil || IsNil(o.DeleteTriggerArchiveTier) {
		var ret bool
		return ret
	}
	return *o.DeleteTriggerArchiveTier
}

// GetDeleteTriggerArchiveTierOk returns a tuple with the DeleteTriggerArchiveTier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BucketFlagReq) GetDeleteTriggerArchiveTierOk() (*bool, bool) {
	if o == nil || IsNil(o.DeleteTriggerArchiveTier) {
		return nil, false
	}
	return o.DeleteTriggerArchiveTier, true
}

// HasDeleteTriggerArchiveTier returns a boolean if a field has been set.
func (o *BucketFlagReq) HasDeleteTriggerArchiveTier() bool {
	if o != nil && !IsNil(o.DeleteTriggerArchiveTier) {
		return true
	}

	return false
}

// SetDeleteTriggerArchiveTier gets a reference to the given bool and assigns it to the DeleteTriggerArchiveTier field.
func (o *BucketFlagReq) SetDeleteTriggerArchiveTier(v bool) {
	o.DeleteTriggerArchiveTier = &v
}

// GetGetTriggerRestore returns the GetTriggerRestore field value if set, zero value otherwise.
func (o *BucketFlagReq) GetGetTriggerRestore() bool {
	if o == nil || IsNil(o.GetTriggerRestore) {
		var ret bool
		return ret
	}
	return *o.GetTriggerRestore
}

// GetGetTriggerRestoreOk returns a tuple with the GetTriggerRestore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BucketFlagReq) GetGetTriggerRestoreOk() (*bool, bool) {
	if o == nil || IsNil(o.GetTriggerRestore) {
		return nil, false
	}
	return o.GetTriggerRestore, true
}

// HasGetTriggerRestore returns a boolean if a field has been set.
func (o *BucketFlagReq) HasGetTriggerRestore() bool {
	if o != nil && !IsNil(o.GetTriggerRestore) {
		return true
	}

	return false
}

// SetGetTriggerRestore gets a reference to the given bool and assigns it to the GetTriggerRestore field.
func (o *BucketFlagReq) SetGetTriggerRestore(v bool) {
	o.GetTriggerRestore = &v
}

// GetReadonly returns the Readonly field value if set, zero value otherwise.
func (o *BucketFlagReq) GetReadonly() bool {
	if o == nil || IsNil(o.Readonly) {
		var ret bool
		return ret
	}
	return *o.Readonly
}

// GetReadonlyOk returns a tuple with the Readonly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BucketFlagReq) GetReadonlyOk() (*bool, bool) {
	if o == nil || IsNil(o.Readonly) {
		return nil, false
	}
	return o.Readonly, true
}

// HasReadonly returns a boolean if a field has been set.
func (o *BucketFlagReq) HasReadonly() bool {
	if o != nil && !IsNil(o.Readonly) {
		return true
	}

	return false
}

// SetReadonly gets a reference to the given bool and assigns it to the Readonly field.
func (o *BucketFlagReq) SetReadonly(v bool) {
	o.Readonly = &v
}

// GetTierCache returns the TierCache field value if set, zero value otherwise.
func (o *BucketFlagReq) GetTierCache() bool {
	if o == nil || IsNil(o.TierCache) {
		var ret bool
		return ret
	}
	return *o.TierCache
}

// GetTierCacheOk returns a tuple with the TierCache field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BucketFlagReq) GetTierCacheOk() (*bool, bool) {
	if o == nil || IsNil(o.TierCache) {
		return nil, false
	}
	return o.TierCache, true
}

// HasTierCache returns a boolean if a field has been set.
func (o *BucketFlagReq) HasTierCache() bool {
	if o != nil && !IsNil(o.TierCache) {
		return true
	}

	return false
}

// SetTierCache gets a reference to the given bool and assigns it to the TierCache field.
func (o *BucketFlagReq) SetTierCache(v bool) {
	o.TierCache = &v
}

// GetTierRetainExternalObject returns the TierRetainExternalObject field value if set, zero value otherwise.
func (o *BucketFlagReq) GetTierRetainExternalObject() bool {
	if o == nil || IsNil(o.TierRetainExternalObject) {
		var ret bool
		return ret
	}
	return *o.TierRetainExternalObject
}

// GetTierRetainExternalObjectOk returns a tuple with the TierRetainExternalObject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BucketFlagReq) GetTierRetainExternalObjectOk() (*bool, bool) {
	if o == nil || IsNil(o.TierRetainExternalObject) {
		return nil, false
	}
	return o.TierRetainExternalObject, true
}

// HasTierRetainExternalObject returns a boolean if a field has been set.
func (o *BucketFlagReq) HasTierRetainExternalObject() bool {
	if o != nil && !IsNil(o.TierRetainExternalObject) {
		return true
	}

	return false
}

// SetTierRetainExternalObject gets a reference to the given bool and assigns it to the TierRetainExternalObject field.
func (o *BucketFlagReq) SetTierRetainExternalObject(v bool) {
	o.TierRetainExternalObject = &v
}

// GetTierWorm returns the TierWorm field value if set, zero value otherwise.
func (o *BucketFlagReq) GetTierWorm() bool {
	if o == nil || IsNil(o.TierWorm) {
		var ret bool
		return ret
	}
	return *o.TierWorm
}

// GetTierWormOk returns a tuple with the TierWorm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BucketFlagReq) GetTierWormOk() (*bool, bool) {
	if o == nil || IsNil(o.TierWorm) {
		return nil, false
	}
	return o.TierWorm, true
}

// HasTierWorm returns a boolean if a field has been set.
func (o *BucketFlagReq) HasTierWorm() bool {
	if o != nil && !IsNil(o.TierWorm) {
		return true
	}

	return false
}

// SetTierWorm gets a reference to the given bool and assigns it to the TierWorm field.
func (o *BucketFlagReq) SetTierWorm(v bool) {
	o.TierWorm = &v
}

// GetVersioned returns the Versioned field value if set, zero value otherwise.
func (o *BucketFlagReq) GetVersioned() bool {
	if o == nil || IsNil(o.Versioned) {
		var ret bool
		return ret
	}
	return *o.Versioned
}

// GetVersionedOk returns a tuple with the Versioned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BucketFlagReq) GetVersionedOk() (*bool, bool) {
	if o == nil || IsNil(o.Versioned) {
		return nil, false
	}
	return o.Versioned, true
}

// HasVersioned returns a boolean if a field has been set.
func (o *BucketFlagReq) HasVersioned() bool {
	if o != nil && !IsNil(o.Versioned) {
		return true
	}

	return false
}

// SetVersioned gets a reference to the given bool and assigns it to the Versioned field.
func (o *BucketFlagReq) SetVersioned(v bool) {
	o.Versioned = &v
}

// GetVersionsSuspended returns the VersionsSuspended field value if set, zero value otherwise.
func (o *BucketFlagReq) GetVersionsSuspended() bool {
	if o == nil || IsNil(o.VersionsSuspended) {
		var ret bool
		return ret
	}
	return *o.VersionsSuspended
}

// GetVersionsSuspendedOk returns a tuple with the VersionsSuspended field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BucketFlagReq) GetVersionsSuspendedOk() (*bool, bool) {
	if o == nil || IsNil(o.VersionsSuspended) {
		return nil, false
	}
	return o.VersionsSuspended, true
}

// HasVersionsSuspended returns a boolean if a field has been set.
func (o *BucketFlagReq) HasVersionsSuspended() bool {
	if o != nil && !IsNil(o.VersionsSuspended) {
		return true
	}

	return false
}

// SetVersionsSuspended gets a reference to the given bool and assigns it to the VersionsSuspended field.
func (o *BucketFlagReq) SetVersionsSuspended(v bool) {
	o.VersionsSuspended = &v
}

// GetWorm returns the Worm field value if set, zero value otherwise.
func (o *BucketFlagReq) GetWorm() bool {
	if o == nil || IsNil(o.Worm) {
		var ret bool
		return ret
	}
	return *o.Worm
}

// GetWormOk returns a tuple with the Worm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BucketFlagReq) GetWormOk() (*bool, bool) {
	if o == nil || IsNil(o.Worm) {
		return nil, false
	}
	return o.Worm, true
}

// HasWorm returns a boolean if a field has been set.
func (o *BucketFlagReq) HasWorm() bool {
	if o != nil && !IsNil(o.Worm) {
		return true
	}

	return false
}

// SetWorm gets a reference to the given bool and assigns it to the Worm field.
func (o *BucketFlagReq) SetWorm(v bool) {
	o.Worm = &v
}

func (o BucketFlagReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BucketFlagReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeleteTriggerArchiveTier) {
		toSerialize["delete_trigger_archive_tier"] = o.DeleteTriggerArchiveTier
	}
	if !IsNil(o.GetTriggerRestore) {
		toSerialize["get_trigger_restore"] = o.GetTriggerRestore
	}
	if !IsNil(o.Readonly) {
		toSerialize["readonly"] = o.Readonly
	}
	if !IsNil(o.TierCache) {
		toSerialize["tier_cache"] = o.TierCache
	}
	if !IsNil(o.TierRetainExternalObject) {
		toSerialize["tier_retain_external_object"] = o.TierRetainExternalObject
	}
	if !IsNil(o.TierWorm) {
		toSerialize["tier_worm"] = o.TierWorm
	}
	if !IsNil(o.Versioned) {
		toSerialize["versioned"] = o.Versioned
	}
	if !IsNil(o.VersionsSuspended) {
		toSerialize["versions_suspended"] = o.VersionsSuspended
	}
	if !IsNil(o.Worm) {
		toSerialize["worm"] = o.Worm
	}
	return toSerialize, nil
}

type NullableBucketFlagReq struct {
	value *BucketFlagReq
	isSet bool
}

func (v NullableBucketFlagReq) Get() *BucketFlagReq {
	return v.value
}

func (v *NullableBucketFlagReq) Set(val *BucketFlagReq) {
	v.value = val
	v.isSet = true
}

func (v NullableBucketFlagReq) IsSet() bool {
	return v.isSet
}

func (v *NullableBucketFlagReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBucketFlagReq(val *BucketFlagReq) *NullableBucketFlagReq {
	return &NullableBucketFlagReq{value: val, isSet: true}
}

func (v NullableBucketFlagReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBucketFlagReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


