/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DpBlockSnapshotPoliciesResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DpBlockSnapshotPoliciesResp{}

// DpBlockSnapshotPoliciesResp struct for DpBlockSnapshotPoliciesResp
type DpBlockSnapshotPoliciesResp struct {
	DpBlockSnapshotPolicies []DpBlockSnapshotPolicy `json:"dp_block_snapshot_policies,omitempty"`
}

// NewDpBlockSnapshotPoliciesResp instantiates a new DpBlockSnapshotPoliciesResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDpBlockSnapshotPoliciesResp() *DpBlockSnapshotPoliciesResp {
	this := DpBlockSnapshotPoliciesResp{}
	return &this
}

// NewDpBlockSnapshotPoliciesRespWithDefaults instantiates a new DpBlockSnapshotPoliciesResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDpBlockSnapshotPoliciesRespWithDefaults() *DpBlockSnapshotPoliciesResp {
	this := DpBlockSnapshotPoliciesResp{}
	return &this
}

// GetDpBlockSnapshotPolicies returns the DpBlockSnapshotPolicies field value if set, zero value otherwise.
func (o *DpBlockSnapshotPoliciesResp) GetDpBlockSnapshotPolicies() []DpBlockSnapshotPolicy {
	if o == nil || IsNil(o.DpBlockSnapshotPolicies) {
		var ret []DpBlockSnapshotPolicy
		return ret
	}
	return o.DpBlockSnapshotPolicies
}

// GetDpBlockSnapshotPoliciesOk returns a tuple with the DpBlockSnapshotPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpBlockSnapshotPoliciesResp) GetDpBlockSnapshotPoliciesOk() ([]DpBlockSnapshotPolicy, bool) {
	if o == nil || IsNil(o.DpBlockSnapshotPolicies) {
		return nil, false
	}
	return o.DpBlockSnapshotPolicies, true
}

// HasDpBlockSnapshotPolicies returns a boolean if a field has been set.
func (o *DpBlockSnapshotPoliciesResp) HasDpBlockSnapshotPolicies() bool {
	if o != nil && !IsNil(o.DpBlockSnapshotPolicies) {
		return true
	}

	return false
}

// SetDpBlockSnapshotPolicies gets a reference to the given []DpBlockSnapshotPolicy and assigns it to the DpBlockSnapshotPolicies field.
func (o *DpBlockSnapshotPoliciesResp) SetDpBlockSnapshotPolicies(v []DpBlockSnapshotPolicy) {
	o.DpBlockSnapshotPolicies = v
}

func (o DpBlockSnapshotPoliciesResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DpBlockSnapshotPoliciesResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DpBlockSnapshotPolicies) {
		toSerialize["dp_block_snapshot_policies"] = o.DpBlockSnapshotPolicies
	}
	return toSerialize, nil
}

type NullableDpBlockSnapshotPoliciesResp struct {
	value *DpBlockSnapshotPoliciesResp
	isSet bool
}

func (v NullableDpBlockSnapshotPoliciesResp) Get() *DpBlockSnapshotPoliciesResp {
	return v.value
}

func (v *NullableDpBlockSnapshotPoliciesResp) Set(val *DpBlockSnapshotPoliciesResp) {
	v.value = val
	v.isSet = true
}

func (v NullableDpBlockSnapshotPoliciesResp) IsSet() bool {
	return v.isSet
}

func (v *NullableDpBlockSnapshotPoliciesResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDpBlockSnapshotPoliciesResp(val *DpBlockSnapshotPoliciesResp) *NullableDpBlockSnapshotPoliciesResp {
	return &NullableDpBlockSnapshotPoliciesResp{value: val, isSet: true}
}

func (v NullableDpBlockSnapshotPoliciesResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDpBlockSnapshotPoliciesResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


