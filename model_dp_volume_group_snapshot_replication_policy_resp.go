/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DpVolumeGroupSnapshotReplicationPolicyResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DpVolumeGroupSnapshotReplicationPolicyResp{}

// DpVolumeGroupSnapshotReplicationPolicyResp struct for DpVolumeGroupSnapshotReplicationPolicyResp
type DpVolumeGroupSnapshotReplicationPolicyResp struct {
	DpVolumeGroupSnapshotReplicationPolicy *DpVolumeGroupSnapshotReplicationPolicy `json:"dp_volume_group_snapshot_replication_policy,omitempty"`
}

// NewDpVolumeGroupSnapshotReplicationPolicyResp instantiates a new DpVolumeGroupSnapshotReplicationPolicyResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDpVolumeGroupSnapshotReplicationPolicyResp() *DpVolumeGroupSnapshotReplicationPolicyResp {
	this := DpVolumeGroupSnapshotReplicationPolicyResp{}
	return &this
}

// NewDpVolumeGroupSnapshotReplicationPolicyRespWithDefaults instantiates a new DpVolumeGroupSnapshotReplicationPolicyResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDpVolumeGroupSnapshotReplicationPolicyRespWithDefaults() *DpVolumeGroupSnapshotReplicationPolicyResp {
	this := DpVolumeGroupSnapshotReplicationPolicyResp{}
	return &this
}

// GetDpVolumeGroupSnapshotReplicationPolicy returns the DpVolumeGroupSnapshotReplicationPolicy field value if set, zero value otherwise.
func (o *DpVolumeGroupSnapshotReplicationPolicyResp) GetDpVolumeGroupSnapshotReplicationPolicy() DpVolumeGroupSnapshotReplicationPolicy {
	if o == nil || IsNil(o.DpVolumeGroupSnapshotReplicationPolicy) {
		var ret DpVolumeGroupSnapshotReplicationPolicy
		return ret
	}
	return *o.DpVolumeGroupSnapshotReplicationPolicy
}

// GetDpVolumeGroupSnapshotReplicationPolicyOk returns a tuple with the DpVolumeGroupSnapshotReplicationPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DpVolumeGroupSnapshotReplicationPolicyResp) GetDpVolumeGroupSnapshotReplicationPolicyOk() (*DpVolumeGroupSnapshotReplicationPolicy, bool) {
	if o == nil || IsNil(o.DpVolumeGroupSnapshotReplicationPolicy) {
		return nil, false
	}
	return o.DpVolumeGroupSnapshotReplicationPolicy, true
}

// HasDpVolumeGroupSnapshotReplicationPolicy returns a boolean if a field has been set.
func (o *DpVolumeGroupSnapshotReplicationPolicyResp) HasDpVolumeGroupSnapshotReplicationPolicy() bool {
	if o != nil && !IsNil(o.DpVolumeGroupSnapshotReplicationPolicy) {
		return true
	}

	return false
}

// SetDpVolumeGroupSnapshotReplicationPolicy gets a reference to the given DpVolumeGroupSnapshotReplicationPolicy and assigns it to the DpVolumeGroupSnapshotReplicationPolicy field.
func (o *DpVolumeGroupSnapshotReplicationPolicyResp) SetDpVolumeGroupSnapshotReplicationPolicy(v DpVolumeGroupSnapshotReplicationPolicy) {
	o.DpVolumeGroupSnapshotReplicationPolicy = &v
}

func (o DpVolumeGroupSnapshotReplicationPolicyResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DpVolumeGroupSnapshotReplicationPolicyResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DpVolumeGroupSnapshotReplicationPolicy) {
		toSerialize["dp_volume_group_snapshot_replication_policy"] = o.DpVolumeGroupSnapshotReplicationPolicy
	}
	return toSerialize, nil
}

type NullableDpVolumeGroupSnapshotReplicationPolicyResp struct {
	value *DpVolumeGroupSnapshotReplicationPolicyResp
	isSet bool
}

func (v NullableDpVolumeGroupSnapshotReplicationPolicyResp) Get() *DpVolumeGroupSnapshotReplicationPolicyResp {
	return v.value
}

func (v *NullableDpVolumeGroupSnapshotReplicationPolicyResp) Set(val *DpVolumeGroupSnapshotReplicationPolicyResp) {
	v.value = val
	v.isSet = true
}

func (v NullableDpVolumeGroupSnapshotReplicationPolicyResp) IsSet() bool {
	return v.isSet
}

func (v *NullableDpVolumeGroupSnapshotReplicationPolicyResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDpVolumeGroupSnapshotReplicationPolicyResp(val *DpVolumeGroupSnapshotReplicationPolicyResp) *NullableDpVolumeGroupSnapshotReplicationPolicyResp {
	return &NullableDpVolumeGroupSnapshotReplicationPolicyResp{value: val, isSet: true}
}

func (v NullableDpVolumeGroupSnapshotReplicationPolicyResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDpVolumeGroupSnapshotReplicationPolicyResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


