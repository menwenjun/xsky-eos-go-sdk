/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DfsGatewayServiceSamplesResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsGatewayServiceSamplesResp{}

// DfsGatewayServiceSamplesResp struct for DfsGatewayServiceSamplesResp
type DfsGatewayServiceSamplesResp struct {
	// dfs gateway stat list
	DfsGatewayServiceSamples []DfsGatewayServiceStat `json:"dfs_gateway_service_samples,omitempty"`
}

// NewDfsGatewayServiceSamplesResp instantiates a new DfsGatewayServiceSamplesResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsGatewayServiceSamplesResp() *DfsGatewayServiceSamplesResp {
	this := DfsGatewayServiceSamplesResp{}
	return &this
}

// NewDfsGatewayServiceSamplesRespWithDefaults instantiates a new DfsGatewayServiceSamplesResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsGatewayServiceSamplesRespWithDefaults() *DfsGatewayServiceSamplesResp {
	this := DfsGatewayServiceSamplesResp{}
	return &this
}

// GetDfsGatewayServiceSamples returns the DfsGatewayServiceSamples field value if set, zero value otherwise.
func (o *DfsGatewayServiceSamplesResp) GetDfsGatewayServiceSamples() []DfsGatewayServiceStat {
	if o == nil || IsNil(o.DfsGatewayServiceSamples) {
		var ret []DfsGatewayServiceStat
		return ret
	}
	return o.DfsGatewayServiceSamples
}

// GetDfsGatewayServiceSamplesOk returns a tuple with the DfsGatewayServiceSamples field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsGatewayServiceSamplesResp) GetDfsGatewayServiceSamplesOk() ([]DfsGatewayServiceStat, bool) {
	if o == nil || IsNil(o.DfsGatewayServiceSamples) {
		return nil, false
	}
	return o.DfsGatewayServiceSamples, true
}

// HasDfsGatewayServiceSamples returns a boolean if a field has been set.
func (o *DfsGatewayServiceSamplesResp) HasDfsGatewayServiceSamples() bool {
	if o != nil && !IsNil(o.DfsGatewayServiceSamples) {
		return true
	}

	return false
}

// SetDfsGatewayServiceSamples gets a reference to the given []DfsGatewayServiceStat and assigns it to the DfsGatewayServiceSamples field.
func (o *DfsGatewayServiceSamplesResp) SetDfsGatewayServiceSamples(v []DfsGatewayServiceStat) {
	o.DfsGatewayServiceSamples = v
}

func (o DfsGatewayServiceSamplesResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsGatewayServiceSamplesResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DfsGatewayServiceSamples) {
		toSerialize["dfs_gateway_service_samples"] = o.DfsGatewayServiceSamples
	}
	return toSerialize, nil
}

type NullableDfsGatewayServiceSamplesResp struct {
	value *DfsGatewayServiceSamplesResp
	isSet bool
}

func (v NullableDfsGatewayServiceSamplesResp) Get() *DfsGatewayServiceSamplesResp {
	return v.value
}

func (v *NullableDfsGatewayServiceSamplesResp) Set(val *DfsGatewayServiceSamplesResp) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsGatewayServiceSamplesResp) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsGatewayServiceSamplesResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsGatewayServiceSamplesResp(val *DfsGatewayServiceSamplesResp) *NullableDfsGatewayServiceSamplesResp {
	return &NullableDfsGatewayServiceSamplesResp{value: val, isSet: true}
}

func (v NullableDfsGatewayServiceSamplesResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsGatewayServiceSamplesResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


