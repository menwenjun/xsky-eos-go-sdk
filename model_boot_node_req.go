/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BootNodeReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BootNodeReq{}

// BootNodeReq struct for BootNodeReq
type BootNodeReq struct {
	Bootnode BootNodeReqBootNode `json:"bootnode"`
}

type _BootNodeReq BootNodeReq

// NewBootNodeReq instantiates a new BootNodeReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBootNodeReq(bootnode BootNodeReqBootNode) *BootNodeReq {
	this := BootNodeReq{}
	this.Bootnode = bootnode
	return &this
}

// NewBootNodeReqWithDefaults instantiates a new BootNodeReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBootNodeReqWithDefaults() *BootNodeReq {
	this := BootNodeReq{}
	return &this
}

// GetBootnode returns the Bootnode field value
func (o *BootNodeReq) GetBootnode() BootNodeReqBootNode {
	if o == nil {
		var ret BootNodeReqBootNode
		return ret
	}

	return o.Bootnode
}

// GetBootnodeOk returns a tuple with the Bootnode field value
// and a boolean to check if the value has been set.
func (o *BootNodeReq) GetBootnodeOk() (*BootNodeReqBootNode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Bootnode, true
}

// SetBootnode sets field value
func (o *BootNodeReq) SetBootnode(v BootNodeReqBootNode) {
	o.Bootnode = v
}

func (o BootNodeReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BootNodeReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["bootnode"] = o.Bootnode
	return toSerialize, nil
}

func (o *BootNodeReq) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"bootnode",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBootNodeReq := _BootNodeReq{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBootNodeReq)

	if err != nil {
		return err
	}

	*o = BootNodeReq(varBootNodeReq)

	return err
}

type NullableBootNodeReq struct {
	value *BootNodeReq
	isSet bool
}

func (v NullableBootNodeReq) Get() *BootNodeReq {
	return v.value
}

func (v *NullableBootNodeReq) Set(val *BootNodeReq) {
	v.value = val
	v.isSet = true
}

func (v NullableBootNodeReq) IsSet() bool {
	return v.isSet
}

func (v *NullableBootNodeReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBootNodeReq(val *BootNodeReq) *NullableBootNodeReq {
	return &NullableBootNodeReq{value: val, isSet: true}
}

func (v NullableBootNodeReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBootNodeReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


