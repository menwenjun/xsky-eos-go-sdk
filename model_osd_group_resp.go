/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OsdGroupResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OsdGroupResp{}

// OsdGroupResp struct for OsdGroupResp
type OsdGroupResp struct {
	OsdGroup *OsdGroupRecord `json:"osd_group,omitempty"`
}

// NewOsdGroupResp instantiates a new OsdGroupResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOsdGroupResp() *OsdGroupResp {
	this := OsdGroupResp{}
	return &this
}

// NewOsdGroupRespWithDefaults instantiates a new OsdGroupResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOsdGroupRespWithDefaults() *OsdGroupResp {
	this := OsdGroupResp{}
	return &this
}

// GetOsdGroup returns the OsdGroup field value if set, zero value otherwise.
func (o *OsdGroupResp) GetOsdGroup() OsdGroupRecord {
	if o == nil || IsNil(o.OsdGroup) {
		var ret OsdGroupRecord
		return ret
	}
	return *o.OsdGroup
}

// GetOsdGroupOk returns a tuple with the OsdGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsdGroupResp) GetOsdGroupOk() (*OsdGroupRecord, bool) {
	if o == nil || IsNil(o.OsdGroup) {
		return nil, false
	}
	return o.OsdGroup, true
}

// HasOsdGroup returns a boolean if a field has been set.
func (o *OsdGroupResp) HasOsdGroup() bool {
	if o != nil && !IsNil(o.OsdGroup) {
		return true
	}

	return false
}

// SetOsdGroup gets a reference to the given OsdGroupRecord and assigns it to the OsdGroup field.
func (o *OsdGroupResp) SetOsdGroup(v OsdGroupRecord) {
	o.OsdGroup = &v
}

func (o OsdGroupResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OsdGroupResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OsdGroup) {
		toSerialize["osd_group"] = o.OsdGroup
	}
	return toSerialize, nil
}

type NullableOsdGroupResp struct {
	value *OsdGroupResp
	isSet bool
}

func (v NullableOsdGroupResp) Get() *OsdGroupResp {
	return v.value
}

func (v *NullableOsdGroupResp) Set(val *OsdGroupResp) {
	v.value = val
	v.isSet = true
}

func (v NullableOsdGroupResp) IsSet() bool {
	return v.isSet
}

func (v *NullableOsdGroupResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOsdGroupResp(val *OsdGroupResp) *NullableOsdGroupResp {
	return &NullableOsdGroupResp{value: val, isSet: true}
}

func (v NullableOsdGroupResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOsdGroupResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


