/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ObjectStorageKeyCreateReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ObjectStorageKeyCreateReq{}

// ObjectStorageKeyCreateReq struct for ObjectStorageKeyCreateReq
type ObjectStorageKeyCreateReq struct {
	OsKey *ObjectStorageKeyCreateReqKey `json:"os_key,omitempty"`
}

// NewObjectStorageKeyCreateReq instantiates a new ObjectStorageKeyCreateReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectStorageKeyCreateReq() *ObjectStorageKeyCreateReq {
	this := ObjectStorageKeyCreateReq{}
	return &this
}

// NewObjectStorageKeyCreateReqWithDefaults instantiates a new ObjectStorageKeyCreateReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectStorageKeyCreateReqWithDefaults() *ObjectStorageKeyCreateReq {
	this := ObjectStorageKeyCreateReq{}
	return &this
}

// GetOsKey returns the OsKey field value if set, zero value otherwise.
func (o *ObjectStorageKeyCreateReq) GetOsKey() ObjectStorageKeyCreateReqKey {
	if o == nil || IsNil(o.OsKey) {
		var ret ObjectStorageKeyCreateReqKey
		return ret
	}
	return *o.OsKey
}

// GetOsKeyOk returns a tuple with the OsKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageKeyCreateReq) GetOsKeyOk() (*ObjectStorageKeyCreateReqKey, bool) {
	if o == nil || IsNil(o.OsKey) {
		return nil, false
	}
	return o.OsKey, true
}

// HasOsKey returns a boolean if a field has been set.
func (o *ObjectStorageKeyCreateReq) HasOsKey() bool {
	if o != nil && !IsNil(o.OsKey) {
		return true
	}

	return false
}

// SetOsKey gets a reference to the given ObjectStorageKeyCreateReqKey and assigns it to the OsKey field.
func (o *ObjectStorageKeyCreateReq) SetOsKey(v ObjectStorageKeyCreateReqKey) {
	o.OsKey = &v
}

func (o ObjectStorageKeyCreateReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ObjectStorageKeyCreateReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OsKey) {
		toSerialize["os_key"] = o.OsKey
	}
	return toSerialize, nil
}

type NullableObjectStorageKeyCreateReq struct {
	value *ObjectStorageKeyCreateReq
	isSet bool
}

func (v NullableObjectStorageKeyCreateReq) Get() *ObjectStorageKeyCreateReq {
	return v.value
}

func (v *NullableObjectStorageKeyCreateReq) Set(val *ObjectStorageKeyCreateReq) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectStorageKeyCreateReq) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectStorageKeyCreateReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectStorageKeyCreateReq(val *ObjectStorageKeyCreateReq) *NullableObjectStorageKeyCreateReq {
	return &NullableObjectStorageKeyCreateReq{value: val, isSet: true}
}

func (v NullableObjectStorageKeyCreateReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectStorageKeyCreateReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


