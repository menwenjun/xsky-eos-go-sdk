/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the OspMetadataServerStat type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OspMetadataServerStat{}

// OspMetadataServerStat OspMetadataServerStat represents osp metadata server stat info
type OspMetadataServerStat struct {
	CpuUtil *float64 `json:"cpu_util,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	DiskUtil *float64 `json:"disk_util,omitempty"`
	MemUsagePercent *float64 `json:"mem_usage_percent,omitempty"`
	RecvBandwidthKbyte *float64 `json:"recv_bandwidth_kbyte,omitempty"`
	SendBandwidthKbyte *float64 `json:"send_bandwidth_kbyte,omitempty"`
	TotalSizeByte *int64 `json:"total_size_byte,omitempty"`
	UsedSizeByte *int64 `json:"used_size_byte,omitempty"`
}

// NewOspMetadataServerStat instantiates a new OspMetadataServerStat object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOspMetadataServerStat() *OspMetadataServerStat {
	this := OspMetadataServerStat{}
	return &this
}

// NewOspMetadataServerStatWithDefaults instantiates a new OspMetadataServerStat object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOspMetadataServerStatWithDefaults() *OspMetadataServerStat {
	this := OspMetadataServerStat{}
	return &this
}

// GetCpuUtil returns the CpuUtil field value if set, zero value otherwise.
func (o *OspMetadataServerStat) GetCpuUtil() float64 {
	if o == nil || IsNil(o.CpuUtil) {
		var ret float64
		return ret
	}
	return *o.CpuUtil
}

// GetCpuUtilOk returns a tuple with the CpuUtil field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataServerStat) GetCpuUtilOk() (*float64, bool) {
	if o == nil || IsNil(o.CpuUtil) {
		return nil, false
	}
	return o.CpuUtil, true
}

// HasCpuUtil returns a boolean if a field has been set.
func (o *OspMetadataServerStat) HasCpuUtil() bool {
	if o != nil && !IsNil(o.CpuUtil) {
		return true
	}

	return false
}

// SetCpuUtil gets a reference to the given float64 and assigns it to the CpuUtil field.
func (o *OspMetadataServerStat) SetCpuUtil(v float64) {
	o.CpuUtil = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *OspMetadataServerStat) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataServerStat) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *OspMetadataServerStat) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *OspMetadataServerStat) SetCreate(v time.Time) {
	o.Create = &v
}

// GetDiskUtil returns the DiskUtil field value if set, zero value otherwise.
func (o *OspMetadataServerStat) GetDiskUtil() float64 {
	if o == nil || IsNil(o.DiskUtil) {
		var ret float64
		return ret
	}
	return *o.DiskUtil
}

// GetDiskUtilOk returns a tuple with the DiskUtil field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataServerStat) GetDiskUtilOk() (*float64, bool) {
	if o == nil || IsNil(o.DiskUtil) {
		return nil, false
	}
	return o.DiskUtil, true
}

// HasDiskUtil returns a boolean if a field has been set.
func (o *OspMetadataServerStat) HasDiskUtil() bool {
	if o != nil && !IsNil(o.DiskUtil) {
		return true
	}

	return false
}

// SetDiskUtil gets a reference to the given float64 and assigns it to the DiskUtil field.
func (o *OspMetadataServerStat) SetDiskUtil(v float64) {
	o.DiskUtil = &v
}

// GetMemUsagePercent returns the MemUsagePercent field value if set, zero value otherwise.
func (o *OspMetadataServerStat) GetMemUsagePercent() float64 {
	if o == nil || IsNil(o.MemUsagePercent) {
		var ret float64
		return ret
	}
	return *o.MemUsagePercent
}

// GetMemUsagePercentOk returns a tuple with the MemUsagePercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataServerStat) GetMemUsagePercentOk() (*float64, bool) {
	if o == nil || IsNil(o.MemUsagePercent) {
		return nil, false
	}
	return o.MemUsagePercent, true
}

// HasMemUsagePercent returns a boolean if a field has been set.
func (o *OspMetadataServerStat) HasMemUsagePercent() bool {
	if o != nil && !IsNil(o.MemUsagePercent) {
		return true
	}

	return false
}

// SetMemUsagePercent gets a reference to the given float64 and assigns it to the MemUsagePercent field.
func (o *OspMetadataServerStat) SetMemUsagePercent(v float64) {
	o.MemUsagePercent = &v
}

// GetRecvBandwidthKbyte returns the RecvBandwidthKbyte field value if set, zero value otherwise.
func (o *OspMetadataServerStat) GetRecvBandwidthKbyte() float64 {
	if o == nil || IsNil(o.RecvBandwidthKbyte) {
		var ret float64
		return ret
	}
	return *o.RecvBandwidthKbyte
}

// GetRecvBandwidthKbyteOk returns a tuple with the RecvBandwidthKbyte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataServerStat) GetRecvBandwidthKbyteOk() (*float64, bool) {
	if o == nil || IsNil(o.RecvBandwidthKbyte) {
		return nil, false
	}
	return o.RecvBandwidthKbyte, true
}

// HasRecvBandwidthKbyte returns a boolean if a field has been set.
func (o *OspMetadataServerStat) HasRecvBandwidthKbyte() bool {
	if o != nil && !IsNil(o.RecvBandwidthKbyte) {
		return true
	}

	return false
}

// SetRecvBandwidthKbyte gets a reference to the given float64 and assigns it to the RecvBandwidthKbyte field.
func (o *OspMetadataServerStat) SetRecvBandwidthKbyte(v float64) {
	o.RecvBandwidthKbyte = &v
}

// GetSendBandwidthKbyte returns the SendBandwidthKbyte field value if set, zero value otherwise.
func (o *OspMetadataServerStat) GetSendBandwidthKbyte() float64 {
	if o == nil || IsNil(o.SendBandwidthKbyte) {
		var ret float64
		return ret
	}
	return *o.SendBandwidthKbyte
}

// GetSendBandwidthKbyteOk returns a tuple with the SendBandwidthKbyte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataServerStat) GetSendBandwidthKbyteOk() (*float64, bool) {
	if o == nil || IsNil(o.SendBandwidthKbyte) {
		return nil, false
	}
	return o.SendBandwidthKbyte, true
}

// HasSendBandwidthKbyte returns a boolean if a field has been set.
func (o *OspMetadataServerStat) HasSendBandwidthKbyte() bool {
	if o != nil && !IsNil(o.SendBandwidthKbyte) {
		return true
	}

	return false
}

// SetSendBandwidthKbyte gets a reference to the given float64 and assigns it to the SendBandwidthKbyte field.
func (o *OspMetadataServerStat) SetSendBandwidthKbyte(v float64) {
	o.SendBandwidthKbyte = &v
}

// GetTotalSizeByte returns the TotalSizeByte field value if set, zero value otherwise.
func (o *OspMetadataServerStat) GetTotalSizeByte() int64 {
	if o == nil || IsNil(o.TotalSizeByte) {
		var ret int64
		return ret
	}
	return *o.TotalSizeByte
}

// GetTotalSizeByteOk returns a tuple with the TotalSizeByte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataServerStat) GetTotalSizeByteOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalSizeByte) {
		return nil, false
	}
	return o.TotalSizeByte, true
}

// HasTotalSizeByte returns a boolean if a field has been set.
func (o *OspMetadataServerStat) HasTotalSizeByte() bool {
	if o != nil && !IsNil(o.TotalSizeByte) {
		return true
	}

	return false
}

// SetTotalSizeByte gets a reference to the given int64 and assigns it to the TotalSizeByte field.
func (o *OspMetadataServerStat) SetTotalSizeByte(v int64) {
	o.TotalSizeByte = &v
}

// GetUsedSizeByte returns the UsedSizeByte field value if set, zero value otherwise.
func (o *OspMetadataServerStat) GetUsedSizeByte() int64 {
	if o == nil || IsNil(o.UsedSizeByte) {
		var ret int64
		return ret
	}
	return *o.UsedSizeByte
}

// GetUsedSizeByteOk returns a tuple with the UsedSizeByte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspMetadataServerStat) GetUsedSizeByteOk() (*int64, bool) {
	if o == nil || IsNil(o.UsedSizeByte) {
		return nil, false
	}
	return o.UsedSizeByte, true
}

// HasUsedSizeByte returns a boolean if a field has been set.
func (o *OspMetadataServerStat) HasUsedSizeByte() bool {
	if o != nil && !IsNil(o.UsedSizeByte) {
		return true
	}

	return false
}

// SetUsedSizeByte gets a reference to the given int64 and assigns it to the UsedSizeByte field.
func (o *OspMetadataServerStat) SetUsedSizeByte(v int64) {
	o.UsedSizeByte = &v
}

func (o OspMetadataServerStat) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OspMetadataServerStat) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CpuUtil) {
		toSerialize["cpu_util"] = o.CpuUtil
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.DiskUtil) {
		toSerialize["disk_util"] = o.DiskUtil
	}
	if !IsNil(o.MemUsagePercent) {
		toSerialize["mem_usage_percent"] = o.MemUsagePercent
	}
	if !IsNil(o.RecvBandwidthKbyte) {
		toSerialize["recv_bandwidth_kbyte"] = o.RecvBandwidthKbyte
	}
	if !IsNil(o.SendBandwidthKbyte) {
		toSerialize["send_bandwidth_kbyte"] = o.SendBandwidthKbyte
	}
	if !IsNil(o.TotalSizeByte) {
		toSerialize["total_size_byte"] = o.TotalSizeByte
	}
	if !IsNil(o.UsedSizeByte) {
		toSerialize["used_size_byte"] = o.UsedSizeByte
	}
	return toSerialize, nil
}

type NullableOspMetadataServerStat struct {
	value *OspMetadataServerStat
	isSet bool
}

func (v NullableOspMetadataServerStat) Get() *OspMetadataServerStat {
	return v.value
}

func (v *NullableOspMetadataServerStat) Set(val *OspMetadataServerStat) {
	v.value = val
	v.isSet = true
}

func (v NullableOspMetadataServerStat) IsSet() bool {
	return v.isSet
}

func (v *NullableOspMetadataServerStat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOspMetadataServerStat(val *OspMetadataServerStat) *NullableOspMetadataServerStat {
	return &NullableOspMetadataServerStat{value: val, isSet: true}
}

func (v NullableOspMetadataServerStat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOspMetadataServerStat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


