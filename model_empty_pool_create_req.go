/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EmptyPoolCreateReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmptyPoolCreateReq{}

// EmptyPoolCreateReq struct for EmptyPoolCreateReq
type EmptyPoolCreateReq struct {
	Pool *EmptyPoolCreateReqPool `json:"pool,omitempty"`
}

// NewEmptyPoolCreateReq instantiates a new EmptyPoolCreateReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmptyPoolCreateReq() *EmptyPoolCreateReq {
	this := EmptyPoolCreateReq{}
	return &this
}

// NewEmptyPoolCreateReqWithDefaults instantiates a new EmptyPoolCreateReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmptyPoolCreateReqWithDefaults() *EmptyPoolCreateReq {
	this := EmptyPoolCreateReq{}
	return &this
}

// GetPool returns the Pool field value if set, zero value otherwise.
func (o *EmptyPoolCreateReq) GetPool() EmptyPoolCreateReqPool {
	if o == nil || IsNil(o.Pool) {
		var ret EmptyPoolCreateReqPool
		return ret
	}
	return *o.Pool
}

// GetPoolOk returns a tuple with the Pool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmptyPoolCreateReq) GetPoolOk() (*EmptyPoolCreateReqPool, bool) {
	if o == nil || IsNil(o.Pool) {
		return nil, false
	}
	return o.Pool, true
}

// HasPool returns a boolean if a field has been set.
func (o *EmptyPoolCreateReq) HasPool() bool {
	if o != nil && !IsNil(o.Pool) {
		return true
	}

	return false
}

// SetPool gets a reference to the given EmptyPoolCreateReqPool and assigns it to the Pool field.
func (o *EmptyPoolCreateReq) SetPool(v EmptyPoolCreateReqPool) {
	o.Pool = &v
}

func (o EmptyPoolCreateReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmptyPoolCreateReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Pool) {
		toSerialize["pool"] = o.Pool
	}
	return toSerialize, nil
}

type NullableEmptyPoolCreateReq struct {
	value *EmptyPoolCreateReq
	isSet bool
}

func (v NullableEmptyPoolCreateReq) Get() *EmptyPoolCreateReq {
	return v.value
}

func (v *NullableEmptyPoolCreateReq) Set(val *EmptyPoolCreateReq) {
	v.value = val
	v.isSet = true
}

func (v NullableEmptyPoolCreateReq) IsSet() bool {
	return v.isSet
}

func (v *NullableEmptyPoolCreateReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmptyPoolCreateReq(val *EmptyPoolCreateReq) *NullableEmptyPoolCreateReq {
	return &NullableEmptyPoolCreateReq{value: val, isSet: true}
}

func (v NullableEmptyPoolCreateReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmptyPoolCreateReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


