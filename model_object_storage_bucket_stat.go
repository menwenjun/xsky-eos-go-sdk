/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the ObjectStorageBucketStat type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ObjectStorageBucketStat{}

// ObjectStorageBucketStat ObjectStorageBucketStat define the object storage bucket statistics
type ObjectStorageBucketStat struct {
	DeleteObjCategory *OSBucketUsageCategory `json:"delete_obj_category,omitempty"`
	GetObjCategory *OSBucketUsageCategory `json:"get_obj_category,omitempty"`
	ListBucketCategory *OSBucketUsageCategory `json:"list_bucket_category,omitempty"`
	Objects *int64 `json:"objects,omitempty"`
	PostObjCategory *OSBucketUsageCategory `json:"post_obj_category,omitempty"`
	PutObjCategory *OSBucketUsageCategory `json:"put_obj_category,omitempty"`
	UsedCapacityBytes *map[string]int64 `json:"used_capacity_bytes,omitempty"`
	AllocatedObjects *int64 `json:"allocated_objects,omitempty"`
	AllocatedSize *int64 `json:"allocated_size,omitempty"`
	CacheAllocatedObjects *int64 `json:"cache_allocated_objects,omitempty"`
	CacheAllocatedSize *int64 `json:"cache_allocated_size,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	DelOpsPm *float64 `json:"del_ops_pm,omitempty"`
	DownLatencyUs *float64 `json:"down_latency_us,omitempty"`
	ExternalAllocatedObjects *int64 `json:"external_allocated_objects,omitempty"`
	ExternalAllocatedSize *int64 `json:"external_allocated_size,omitempty"`
	LatencyDown *int64 `json:"latency_down,omitempty"`
	LatencyUp *int64 `json:"latency_up,omitempty"`
	ListOpsPm *float64 `json:"list_ops_pm,omitempty"`
	LocalAllocatedObjects *int64 `json:"local_allocated_objects,omitempty"`
	LocalAllocatedSize *int64 `json:"local_allocated_size,omitempty"`
	NumDown *int64 `json:"num_down,omitempty"`
	NumUp *int64 `json:"num_up,omitempty"`
	RxBandwidthKbyte *float64 `json:"rx_bandwidth_kbyte,omitempty"`
	RxOpsPm *float64 `json:"rx_ops_pm,omitempty"`
	StorageClasses *map[string]OSStorageClassStat `json:"storage_classes,omitempty"`
	TotalDelOps *int64 `json:"total_del_ops,omitempty"`
	TotalDelSuccessOps *int64 `json:"total_del_success_ops,omitempty"`
	TotalRxBytes *int64 `json:"total_rx_bytes,omitempty"`
	TotalRxOps *int64 `json:"total_rx_ops,omitempty"`
	TotalRxSuccessOps *int64 `json:"total_rx_success_ops,omitempty"`
	TotalTxBytes *int64 `json:"total_tx_bytes,omitempty"`
	TotalTxOps *int64 `json:"total_tx_ops,omitempty"`
	TotalTxSuccessOps *int64 `json:"total_tx_success_ops,omitempty"`
	TxBandwidthKbyte *float64 `json:"tx_bandwidth_kbyte,omitempty"`
	TxOpsPm *float64 `json:"tx_ops_pm,omitempty"`
	UpLatencyUs *float64 `json:"up_latency_us,omitempty"`
}

// NewObjectStorageBucketStat instantiates a new ObjectStorageBucketStat object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectStorageBucketStat() *ObjectStorageBucketStat {
	this := ObjectStorageBucketStat{}
	return &this
}

// NewObjectStorageBucketStatWithDefaults instantiates a new ObjectStorageBucketStat object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectStorageBucketStatWithDefaults() *ObjectStorageBucketStat {
	this := ObjectStorageBucketStat{}
	return &this
}

// GetDeleteObjCategory returns the DeleteObjCategory field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetDeleteObjCategory() OSBucketUsageCategory {
	if o == nil || IsNil(o.DeleteObjCategory) {
		var ret OSBucketUsageCategory
		return ret
	}
	return *o.DeleteObjCategory
}

// GetDeleteObjCategoryOk returns a tuple with the DeleteObjCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetDeleteObjCategoryOk() (*OSBucketUsageCategory, bool) {
	if o == nil || IsNil(o.DeleteObjCategory) {
		return nil, false
	}
	return o.DeleteObjCategory, true
}

// HasDeleteObjCategory returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasDeleteObjCategory() bool {
	if o != nil && !IsNil(o.DeleteObjCategory) {
		return true
	}

	return false
}

// SetDeleteObjCategory gets a reference to the given OSBucketUsageCategory and assigns it to the DeleteObjCategory field.
func (o *ObjectStorageBucketStat) SetDeleteObjCategory(v OSBucketUsageCategory) {
	o.DeleteObjCategory = &v
}

// GetGetObjCategory returns the GetObjCategory field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetGetObjCategory() OSBucketUsageCategory {
	if o == nil || IsNil(o.GetObjCategory) {
		var ret OSBucketUsageCategory
		return ret
	}
	return *o.GetObjCategory
}

// GetGetObjCategoryOk returns a tuple with the GetObjCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetGetObjCategoryOk() (*OSBucketUsageCategory, bool) {
	if o == nil || IsNil(o.GetObjCategory) {
		return nil, false
	}
	return o.GetObjCategory, true
}

// HasGetObjCategory returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasGetObjCategory() bool {
	if o != nil && !IsNil(o.GetObjCategory) {
		return true
	}

	return false
}

// SetGetObjCategory gets a reference to the given OSBucketUsageCategory and assigns it to the GetObjCategory field.
func (o *ObjectStorageBucketStat) SetGetObjCategory(v OSBucketUsageCategory) {
	o.GetObjCategory = &v
}

// GetListBucketCategory returns the ListBucketCategory field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetListBucketCategory() OSBucketUsageCategory {
	if o == nil || IsNil(o.ListBucketCategory) {
		var ret OSBucketUsageCategory
		return ret
	}
	return *o.ListBucketCategory
}

// GetListBucketCategoryOk returns a tuple with the ListBucketCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetListBucketCategoryOk() (*OSBucketUsageCategory, bool) {
	if o == nil || IsNil(o.ListBucketCategory) {
		return nil, false
	}
	return o.ListBucketCategory, true
}

// HasListBucketCategory returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasListBucketCategory() bool {
	if o != nil && !IsNil(o.ListBucketCategory) {
		return true
	}

	return false
}

// SetListBucketCategory gets a reference to the given OSBucketUsageCategory and assigns it to the ListBucketCategory field.
func (o *ObjectStorageBucketStat) SetListBucketCategory(v OSBucketUsageCategory) {
	o.ListBucketCategory = &v
}

// GetObjects returns the Objects field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetObjects() int64 {
	if o == nil || IsNil(o.Objects) {
		var ret int64
		return ret
	}
	return *o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetObjectsOk() (*int64, bool) {
	if o == nil || IsNil(o.Objects) {
		return nil, false
	}
	return o.Objects, true
}

// HasObjects returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasObjects() bool {
	if o != nil && !IsNil(o.Objects) {
		return true
	}

	return false
}

// SetObjects gets a reference to the given int64 and assigns it to the Objects field.
func (o *ObjectStorageBucketStat) SetObjects(v int64) {
	o.Objects = &v
}

// GetPostObjCategory returns the PostObjCategory field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetPostObjCategory() OSBucketUsageCategory {
	if o == nil || IsNil(o.PostObjCategory) {
		var ret OSBucketUsageCategory
		return ret
	}
	return *o.PostObjCategory
}

// GetPostObjCategoryOk returns a tuple with the PostObjCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetPostObjCategoryOk() (*OSBucketUsageCategory, bool) {
	if o == nil || IsNil(o.PostObjCategory) {
		return nil, false
	}
	return o.PostObjCategory, true
}

// HasPostObjCategory returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasPostObjCategory() bool {
	if o != nil && !IsNil(o.PostObjCategory) {
		return true
	}

	return false
}

// SetPostObjCategory gets a reference to the given OSBucketUsageCategory and assigns it to the PostObjCategory field.
func (o *ObjectStorageBucketStat) SetPostObjCategory(v OSBucketUsageCategory) {
	o.PostObjCategory = &v
}

// GetPutObjCategory returns the PutObjCategory field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetPutObjCategory() OSBucketUsageCategory {
	if o == nil || IsNil(o.PutObjCategory) {
		var ret OSBucketUsageCategory
		return ret
	}
	return *o.PutObjCategory
}

// GetPutObjCategoryOk returns a tuple with the PutObjCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetPutObjCategoryOk() (*OSBucketUsageCategory, bool) {
	if o == nil || IsNil(o.PutObjCategory) {
		return nil, false
	}
	return o.PutObjCategory, true
}

// HasPutObjCategory returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasPutObjCategory() bool {
	if o != nil && !IsNil(o.PutObjCategory) {
		return true
	}

	return false
}

// SetPutObjCategory gets a reference to the given OSBucketUsageCategory and assigns it to the PutObjCategory field.
func (o *ObjectStorageBucketStat) SetPutObjCategory(v OSBucketUsageCategory) {
	o.PutObjCategory = &v
}

// GetUsedCapacityBytes returns the UsedCapacityBytes field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetUsedCapacityBytes() map[string]int64 {
	if o == nil || IsNil(o.UsedCapacityBytes) {
		var ret map[string]int64
		return ret
	}
	return *o.UsedCapacityBytes
}

// GetUsedCapacityBytesOk returns a tuple with the UsedCapacityBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetUsedCapacityBytesOk() (*map[string]int64, bool) {
	if o == nil || IsNil(o.UsedCapacityBytes) {
		return nil, false
	}
	return o.UsedCapacityBytes, true
}

// HasUsedCapacityBytes returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasUsedCapacityBytes() bool {
	if o != nil && !IsNil(o.UsedCapacityBytes) {
		return true
	}

	return false
}

// SetUsedCapacityBytes gets a reference to the given map[string]int64 and assigns it to the UsedCapacityBytes field.
func (o *ObjectStorageBucketStat) SetUsedCapacityBytes(v map[string]int64) {
	o.UsedCapacityBytes = &v
}

// GetAllocatedObjects returns the AllocatedObjects field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetAllocatedObjects() int64 {
	if o == nil || IsNil(o.AllocatedObjects) {
		var ret int64
		return ret
	}
	return *o.AllocatedObjects
}

// GetAllocatedObjectsOk returns a tuple with the AllocatedObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetAllocatedObjectsOk() (*int64, bool) {
	if o == nil || IsNil(o.AllocatedObjects) {
		return nil, false
	}
	return o.AllocatedObjects, true
}

// HasAllocatedObjects returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasAllocatedObjects() bool {
	if o != nil && !IsNil(o.AllocatedObjects) {
		return true
	}

	return false
}

// SetAllocatedObjects gets a reference to the given int64 and assigns it to the AllocatedObjects field.
func (o *ObjectStorageBucketStat) SetAllocatedObjects(v int64) {
	o.AllocatedObjects = &v
}

// GetAllocatedSize returns the AllocatedSize field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetAllocatedSize() int64 {
	if o == nil || IsNil(o.AllocatedSize) {
		var ret int64
		return ret
	}
	return *o.AllocatedSize
}

// GetAllocatedSizeOk returns a tuple with the AllocatedSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetAllocatedSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.AllocatedSize) {
		return nil, false
	}
	return o.AllocatedSize, true
}

// HasAllocatedSize returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasAllocatedSize() bool {
	if o != nil && !IsNil(o.AllocatedSize) {
		return true
	}

	return false
}

// SetAllocatedSize gets a reference to the given int64 and assigns it to the AllocatedSize field.
func (o *ObjectStorageBucketStat) SetAllocatedSize(v int64) {
	o.AllocatedSize = &v
}

// GetCacheAllocatedObjects returns the CacheAllocatedObjects field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetCacheAllocatedObjects() int64 {
	if o == nil || IsNil(o.CacheAllocatedObjects) {
		var ret int64
		return ret
	}
	return *o.CacheAllocatedObjects
}

// GetCacheAllocatedObjectsOk returns a tuple with the CacheAllocatedObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetCacheAllocatedObjectsOk() (*int64, bool) {
	if o == nil || IsNil(o.CacheAllocatedObjects) {
		return nil, false
	}
	return o.CacheAllocatedObjects, true
}

// HasCacheAllocatedObjects returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasCacheAllocatedObjects() bool {
	if o != nil && !IsNil(o.CacheAllocatedObjects) {
		return true
	}

	return false
}

// SetCacheAllocatedObjects gets a reference to the given int64 and assigns it to the CacheAllocatedObjects field.
func (o *ObjectStorageBucketStat) SetCacheAllocatedObjects(v int64) {
	o.CacheAllocatedObjects = &v
}

// GetCacheAllocatedSize returns the CacheAllocatedSize field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetCacheAllocatedSize() int64 {
	if o == nil || IsNil(o.CacheAllocatedSize) {
		var ret int64
		return ret
	}
	return *o.CacheAllocatedSize
}

// GetCacheAllocatedSizeOk returns a tuple with the CacheAllocatedSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetCacheAllocatedSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.CacheAllocatedSize) {
		return nil, false
	}
	return o.CacheAllocatedSize, true
}

// HasCacheAllocatedSize returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasCacheAllocatedSize() bool {
	if o != nil && !IsNil(o.CacheAllocatedSize) {
		return true
	}

	return false
}

// SetCacheAllocatedSize gets a reference to the given int64 and assigns it to the CacheAllocatedSize field.
func (o *ObjectStorageBucketStat) SetCacheAllocatedSize(v int64) {
	o.CacheAllocatedSize = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *ObjectStorageBucketStat) SetCreate(v time.Time) {
	o.Create = &v
}

// GetDelOpsPm returns the DelOpsPm field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetDelOpsPm() float64 {
	if o == nil || IsNil(o.DelOpsPm) {
		var ret float64
		return ret
	}
	return *o.DelOpsPm
}

// GetDelOpsPmOk returns a tuple with the DelOpsPm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetDelOpsPmOk() (*float64, bool) {
	if o == nil || IsNil(o.DelOpsPm) {
		return nil, false
	}
	return o.DelOpsPm, true
}

// HasDelOpsPm returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasDelOpsPm() bool {
	if o != nil && !IsNil(o.DelOpsPm) {
		return true
	}

	return false
}

// SetDelOpsPm gets a reference to the given float64 and assigns it to the DelOpsPm field.
func (o *ObjectStorageBucketStat) SetDelOpsPm(v float64) {
	o.DelOpsPm = &v
}

// GetDownLatencyUs returns the DownLatencyUs field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetDownLatencyUs() float64 {
	if o == nil || IsNil(o.DownLatencyUs) {
		var ret float64
		return ret
	}
	return *o.DownLatencyUs
}

// GetDownLatencyUsOk returns a tuple with the DownLatencyUs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetDownLatencyUsOk() (*float64, bool) {
	if o == nil || IsNil(o.DownLatencyUs) {
		return nil, false
	}
	return o.DownLatencyUs, true
}

// HasDownLatencyUs returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasDownLatencyUs() bool {
	if o != nil && !IsNil(o.DownLatencyUs) {
		return true
	}

	return false
}

// SetDownLatencyUs gets a reference to the given float64 and assigns it to the DownLatencyUs field.
func (o *ObjectStorageBucketStat) SetDownLatencyUs(v float64) {
	o.DownLatencyUs = &v
}

// GetExternalAllocatedObjects returns the ExternalAllocatedObjects field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetExternalAllocatedObjects() int64 {
	if o == nil || IsNil(o.ExternalAllocatedObjects) {
		var ret int64
		return ret
	}
	return *o.ExternalAllocatedObjects
}

// GetExternalAllocatedObjectsOk returns a tuple with the ExternalAllocatedObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetExternalAllocatedObjectsOk() (*int64, bool) {
	if o == nil || IsNil(o.ExternalAllocatedObjects) {
		return nil, false
	}
	return o.ExternalAllocatedObjects, true
}

// HasExternalAllocatedObjects returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasExternalAllocatedObjects() bool {
	if o != nil && !IsNil(o.ExternalAllocatedObjects) {
		return true
	}

	return false
}

// SetExternalAllocatedObjects gets a reference to the given int64 and assigns it to the ExternalAllocatedObjects field.
func (o *ObjectStorageBucketStat) SetExternalAllocatedObjects(v int64) {
	o.ExternalAllocatedObjects = &v
}

// GetExternalAllocatedSize returns the ExternalAllocatedSize field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetExternalAllocatedSize() int64 {
	if o == nil || IsNil(o.ExternalAllocatedSize) {
		var ret int64
		return ret
	}
	return *o.ExternalAllocatedSize
}

// GetExternalAllocatedSizeOk returns a tuple with the ExternalAllocatedSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetExternalAllocatedSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.ExternalAllocatedSize) {
		return nil, false
	}
	return o.ExternalAllocatedSize, true
}

// HasExternalAllocatedSize returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasExternalAllocatedSize() bool {
	if o != nil && !IsNil(o.ExternalAllocatedSize) {
		return true
	}

	return false
}

// SetExternalAllocatedSize gets a reference to the given int64 and assigns it to the ExternalAllocatedSize field.
func (o *ObjectStorageBucketStat) SetExternalAllocatedSize(v int64) {
	o.ExternalAllocatedSize = &v
}

// GetLatencyDown returns the LatencyDown field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetLatencyDown() int64 {
	if o == nil || IsNil(o.LatencyDown) {
		var ret int64
		return ret
	}
	return *o.LatencyDown
}

// GetLatencyDownOk returns a tuple with the LatencyDown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetLatencyDownOk() (*int64, bool) {
	if o == nil || IsNil(o.LatencyDown) {
		return nil, false
	}
	return o.LatencyDown, true
}

// HasLatencyDown returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasLatencyDown() bool {
	if o != nil && !IsNil(o.LatencyDown) {
		return true
	}

	return false
}

// SetLatencyDown gets a reference to the given int64 and assigns it to the LatencyDown field.
func (o *ObjectStorageBucketStat) SetLatencyDown(v int64) {
	o.LatencyDown = &v
}

// GetLatencyUp returns the LatencyUp field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetLatencyUp() int64 {
	if o == nil || IsNil(o.LatencyUp) {
		var ret int64
		return ret
	}
	return *o.LatencyUp
}

// GetLatencyUpOk returns a tuple with the LatencyUp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetLatencyUpOk() (*int64, bool) {
	if o == nil || IsNil(o.LatencyUp) {
		return nil, false
	}
	return o.LatencyUp, true
}

// HasLatencyUp returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasLatencyUp() bool {
	if o != nil && !IsNil(o.LatencyUp) {
		return true
	}

	return false
}

// SetLatencyUp gets a reference to the given int64 and assigns it to the LatencyUp field.
func (o *ObjectStorageBucketStat) SetLatencyUp(v int64) {
	o.LatencyUp = &v
}

// GetListOpsPm returns the ListOpsPm field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetListOpsPm() float64 {
	if o == nil || IsNil(o.ListOpsPm) {
		var ret float64
		return ret
	}
	return *o.ListOpsPm
}

// GetListOpsPmOk returns a tuple with the ListOpsPm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetListOpsPmOk() (*float64, bool) {
	if o == nil || IsNil(o.ListOpsPm) {
		return nil, false
	}
	return o.ListOpsPm, true
}

// HasListOpsPm returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasListOpsPm() bool {
	if o != nil && !IsNil(o.ListOpsPm) {
		return true
	}

	return false
}

// SetListOpsPm gets a reference to the given float64 and assigns it to the ListOpsPm field.
func (o *ObjectStorageBucketStat) SetListOpsPm(v float64) {
	o.ListOpsPm = &v
}

// GetLocalAllocatedObjects returns the LocalAllocatedObjects field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetLocalAllocatedObjects() int64 {
	if o == nil || IsNil(o.LocalAllocatedObjects) {
		var ret int64
		return ret
	}
	return *o.LocalAllocatedObjects
}

// GetLocalAllocatedObjectsOk returns a tuple with the LocalAllocatedObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetLocalAllocatedObjectsOk() (*int64, bool) {
	if o == nil || IsNil(o.LocalAllocatedObjects) {
		return nil, false
	}
	return o.LocalAllocatedObjects, true
}

// HasLocalAllocatedObjects returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasLocalAllocatedObjects() bool {
	if o != nil && !IsNil(o.LocalAllocatedObjects) {
		return true
	}

	return false
}

// SetLocalAllocatedObjects gets a reference to the given int64 and assigns it to the LocalAllocatedObjects field.
func (o *ObjectStorageBucketStat) SetLocalAllocatedObjects(v int64) {
	o.LocalAllocatedObjects = &v
}

// GetLocalAllocatedSize returns the LocalAllocatedSize field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetLocalAllocatedSize() int64 {
	if o == nil || IsNil(o.LocalAllocatedSize) {
		var ret int64
		return ret
	}
	return *o.LocalAllocatedSize
}

// GetLocalAllocatedSizeOk returns a tuple with the LocalAllocatedSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetLocalAllocatedSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.LocalAllocatedSize) {
		return nil, false
	}
	return o.LocalAllocatedSize, true
}

// HasLocalAllocatedSize returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasLocalAllocatedSize() bool {
	if o != nil && !IsNil(o.LocalAllocatedSize) {
		return true
	}

	return false
}

// SetLocalAllocatedSize gets a reference to the given int64 and assigns it to the LocalAllocatedSize field.
func (o *ObjectStorageBucketStat) SetLocalAllocatedSize(v int64) {
	o.LocalAllocatedSize = &v
}

// GetNumDown returns the NumDown field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetNumDown() int64 {
	if o == nil || IsNil(o.NumDown) {
		var ret int64
		return ret
	}
	return *o.NumDown
}

// GetNumDownOk returns a tuple with the NumDown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetNumDownOk() (*int64, bool) {
	if o == nil || IsNil(o.NumDown) {
		return nil, false
	}
	return o.NumDown, true
}

// HasNumDown returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasNumDown() bool {
	if o != nil && !IsNil(o.NumDown) {
		return true
	}

	return false
}

// SetNumDown gets a reference to the given int64 and assigns it to the NumDown field.
func (o *ObjectStorageBucketStat) SetNumDown(v int64) {
	o.NumDown = &v
}

// GetNumUp returns the NumUp field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetNumUp() int64 {
	if o == nil || IsNil(o.NumUp) {
		var ret int64
		return ret
	}
	return *o.NumUp
}

// GetNumUpOk returns a tuple with the NumUp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetNumUpOk() (*int64, bool) {
	if o == nil || IsNil(o.NumUp) {
		return nil, false
	}
	return o.NumUp, true
}

// HasNumUp returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasNumUp() bool {
	if o != nil && !IsNil(o.NumUp) {
		return true
	}

	return false
}

// SetNumUp gets a reference to the given int64 and assigns it to the NumUp field.
func (o *ObjectStorageBucketStat) SetNumUp(v int64) {
	o.NumUp = &v
}

// GetRxBandwidthKbyte returns the RxBandwidthKbyte field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetRxBandwidthKbyte() float64 {
	if o == nil || IsNil(o.RxBandwidthKbyte) {
		var ret float64
		return ret
	}
	return *o.RxBandwidthKbyte
}

// GetRxBandwidthKbyteOk returns a tuple with the RxBandwidthKbyte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetRxBandwidthKbyteOk() (*float64, bool) {
	if o == nil || IsNil(o.RxBandwidthKbyte) {
		return nil, false
	}
	return o.RxBandwidthKbyte, true
}

// HasRxBandwidthKbyte returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasRxBandwidthKbyte() bool {
	if o != nil && !IsNil(o.RxBandwidthKbyte) {
		return true
	}

	return false
}

// SetRxBandwidthKbyte gets a reference to the given float64 and assigns it to the RxBandwidthKbyte field.
func (o *ObjectStorageBucketStat) SetRxBandwidthKbyte(v float64) {
	o.RxBandwidthKbyte = &v
}

// GetRxOpsPm returns the RxOpsPm field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetRxOpsPm() float64 {
	if o == nil || IsNil(o.RxOpsPm) {
		var ret float64
		return ret
	}
	return *o.RxOpsPm
}

// GetRxOpsPmOk returns a tuple with the RxOpsPm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetRxOpsPmOk() (*float64, bool) {
	if o == nil || IsNil(o.RxOpsPm) {
		return nil, false
	}
	return o.RxOpsPm, true
}

// HasRxOpsPm returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasRxOpsPm() bool {
	if o != nil && !IsNil(o.RxOpsPm) {
		return true
	}

	return false
}

// SetRxOpsPm gets a reference to the given float64 and assigns it to the RxOpsPm field.
func (o *ObjectStorageBucketStat) SetRxOpsPm(v float64) {
	o.RxOpsPm = &v
}

// GetStorageClasses returns the StorageClasses field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetStorageClasses() map[string]OSStorageClassStat {
	if o == nil || IsNil(o.StorageClasses) {
		var ret map[string]OSStorageClassStat
		return ret
	}
	return *o.StorageClasses
}

// GetStorageClassesOk returns a tuple with the StorageClasses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetStorageClassesOk() (*map[string]OSStorageClassStat, bool) {
	if o == nil || IsNil(o.StorageClasses) {
		return nil, false
	}
	return o.StorageClasses, true
}

// HasStorageClasses returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasStorageClasses() bool {
	if o != nil && !IsNil(o.StorageClasses) {
		return true
	}

	return false
}

// SetStorageClasses gets a reference to the given map[string]OSStorageClassStat and assigns it to the StorageClasses field.
func (o *ObjectStorageBucketStat) SetStorageClasses(v map[string]OSStorageClassStat) {
	o.StorageClasses = &v
}

// GetTotalDelOps returns the TotalDelOps field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetTotalDelOps() int64 {
	if o == nil || IsNil(o.TotalDelOps) {
		var ret int64
		return ret
	}
	return *o.TotalDelOps
}

// GetTotalDelOpsOk returns a tuple with the TotalDelOps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetTotalDelOpsOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalDelOps) {
		return nil, false
	}
	return o.TotalDelOps, true
}

// HasTotalDelOps returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasTotalDelOps() bool {
	if o != nil && !IsNil(o.TotalDelOps) {
		return true
	}

	return false
}

// SetTotalDelOps gets a reference to the given int64 and assigns it to the TotalDelOps field.
func (o *ObjectStorageBucketStat) SetTotalDelOps(v int64) {
	o.TotalDelOps = &v
}

// GetTotalDelSuccessOps returns the TotalDelSuccessOps field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetTotalDelSuccessOps() int64 {
	if o == nil || IsNil(o.TotalDelSuccessOps) {
		var ret int64
		return ret
	}
	return *o.TotalDelSuccessOps
}

// GetTotalDelSuccessOpsOk returns a tuple with the TotalDelSuccessOps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetTotalDelSuccessOpsOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalDelSuccessOps) {
		return nil, false
	}
	return o.TotalDelSuccessOps, true
}

// HasTotalDelSuccessOps returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasTotalDelSuccessOps() bool {
	if o != nil && !IsNil(o.TotalDelSuccessOps) {
		return true
	}

	return false
}

// SetTotalDelSuccessOps gets a reference to the given int64 and assigns it to the TotalDelSuccessOps field.
func (o *ObjectStorageBucketStat) SetTotalDelSuccessOps(v int64) {
	o.TotalDelSuccessOps = &v
}

// GetTotalRxBytes returns the TotalRxBytes field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetTotalRxBytes() int64 {
	if o == nil || IsNil(o.TotalRxBytes) {
		var ret int64
		return ret
	}
	return *o.TotalRxBytes
}

// GetTotalRxBytesOk returns a tuple with the TotalRxBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetTotalRxBytesOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalRxBytes) {
		return nil, false
	}
	return o.TotalRxBytes, true
}

// HasTotalRxBytes returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasTotalRxBytes() bool {
	if o != nil && !IsNil(o.TotalRxBytes) {
		return true
	}

	return false
}

// SetTotalRxBytes gets a reference to the given int64 and assigns it to the TotalRxBytes field.
func (o *ObjectStorageBucketStat) SetTotalRxBytes(v int64) {
	o.TotalRxBytes = &v
}

// GetTotalRxOps returns the TotalRxOps field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetTotalRxOps() int64 {
	if o == nil || IsNil(o.TotalRxOps) {
		var ret int64
		return ret
	}
	return *o.TotalRxOps
}

// GetTotalRxOpsOk returns a tuple with the TotalRxOps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetTotalRxOpsOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalRxOps) {
		return nil, false
	}
	return o.TotalRxOps, true
}

// HasTotalRxOps returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasTotalRxOps() bool {
	if o != nil && !IsNil(o.TotalRxOps) {
		return true
	}

	return false
}

// SetTotalRxOps gets a reference to the given int64 and assigns it to the TotalRxOps field.
func (o *ObjectStorageBucketStat) SetTotalRxOps(v int64) {
	o.TotalRxOps = &v
}

// GetTotalRxSuccessOps returns the TotalRxSuccessOps field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetTotalRxSuccessOps() int64 {
	if o == nil || IsNil(o.TotalRxSuccessOps) {
		var ret int64
		return ret
	}
	return *o.TotalRxSuccessOps
}

// GetTotalRxSuccessOpsOk returns a tuple with the TotalRxSuccessOps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetTotalRxSuccessOpsOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalRxSuccessOps) {
		return nil, false
	}
	return o.TotalRxSuccessOps, true
}

// HasTotalRxSuccessOps returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasTotalRxSuccessOps() bool {
	if o != nil && !IsNil(o.TotalRxSuccessOps) {
		return true
	}

	return false
}

// SetTotalRxSuccessOps gets a reference to the given int64 and assigns it to the TotalRxSuccessOps field.
func (o *ObjectStorageBucketStat) SetTotalRxSuccessOps(v int64) {
	o.TotalRxSuccessOps = &v
}

// GetTotalTxBytes returns the TotalTxBytes field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetTotalTxBytes() int64 {
	if o == nil || IsNil(o.TotalTxBytes) {
		var ret int64
		return ret
	}
	return *o.TotalTxBytes
}

// GetTotalTxBytesOk returns a tuple with the TotalTxBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetTotalTxBytesOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalTxBytes) {
		return nil, false
	}
	return o.TotalTxBytes, true
}

// HasTotalTxBytes returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasTotalTxBytes() bool {
	if o != nil && !IsNil(o.TotalTxBytes) {
		return true
	}

	return false
}

// SetTotalTxBytes gets a reference to the given int64 and assigns it to the TotalTxBytes field.
func (o *ObjectStorageBucketStat) SetTotalTxBytes(v int64) {
	o.TotalTxBytes = &v
}

// GetTotalTxOps returns the TotalTxOps field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetTotalTxOps() int64 {
	if o == nil || IsNil(o.TotalTxOps) {
		var ret int64
		return ret
	}
	return *o.TotalTxOps
}

// GetTotalTxOpsOk returns a tuple with the TotalTxOps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetTotalTxOpsOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalTxOps) {
		return nil, false
	}
	return o.TotalTxOps, true
}

// HasTotalTxOps returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasTotalTxOps() bool {
	if o != nil && !IsNil(o.TotalTxOps) {
		return true
	}

	return false
}

// SetTotalTxOps gets a reference to the given int64 and assigns it to the TotalTxOps field.
func (o *ObjectStorageBucketStat) SetTotalTxOps(v int64) {
	o.TotalTxOps = &v
}

// GetTotalTxSuccessOps returns the TotalTxSuccessOps field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetTotalTxSuccessOps() int64 {
	if o == nil || IsNil(o.TotalTxSuccessOps) {
		var ret int64
		return ret
	}
	return *o.TotalTxSuccessOps
}

// GetTotalTxSuccessOpsOk returns a tuple with the TotalTxSuccessOps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetTotalTxSuccessOpsOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalTxSuccessOps) {
		return nil, false
	}
	return o.TotalTxSuccessOps, true
}

// HasTotalTxSuccessOps returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasTotalTxSuccessOps() bool {
	if o != nil && !IsNil(o.TotalTxSuccessOps) {
		return true
	}

	return false
}

// SetTotalTxSuccessOps gets a reference to the given int64 and assigns it to the TotalTxSuccessOps field.
func (o *ObjectStorageBucketStat) SetTotalTxSuccessOps(v int64) {
	o.TotalTxSuccessOps = &v
}

// GetTxBandwidthKbyte returns the TxBandwidthKbyte field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetTxBandwidthKbyte() float64 {
	if o == nil || IsNil(o.TxBandwidthKbyte) {
		var ret float64
		return ret
	}
	return *o.TxBandwidthKbyte
}

// GetTxBandwidthKbyteOk returns a tuple with the TxBandwidthKbyte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetTxBandwidthKbyteOk() (*float64, bool) {
	if o == nil || IsNil(o.TxBandwidthKbyte) {
		return nil, false
	}
	return o.TxBandwidthKbyte, true
}

// HasTxBandwidthKbyte returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasTxBandwidthKbyte() bool {
	if o != nil && !IsNil(o.TxBandwidthKbyte) {
		return true
	}

	return false
}

// SetTxBandwidthKbyte gets a reference to the given float64 and assigns it to the TxBandwidthKbyte field.
func (o *ObjectStorageBucketStat) SetTxBandwidthKbyte(v float64) {
	o.TxBandwidthKbyte = &v
}

// GetTxOpsPm returns the TxOpsPm field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetTxOpsPm() float64 {
	if o == nil || IsNil(o.TxOpsPm) {
		var ret float64
		return ret
	}
	return *o.TxOpsPm
}

// GetTxOpsPmOk returns a tuple with the TxOpsPm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetTxOpsPmOk() (*float64, bool) {
	if o == nil || IsNil(o.TxOpsPm) {
		return nil, false
	}
	return o.TxOpsPm, true
}

// HasTxOpsPm returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasTxOpsPm() bool {
	if o != nil && !IsNil(o.TxOpsPm) {
		return true
	}

	return false
}

// SetTxOpsPm gets a reference to the given float64 and assigns it to the TxOpsPm field.
func (o *ObjectStorageBucketStat) SetTxOpsPm(v float64) {
	o.TxOpsPm = &v
}

// GetUpLatencyUs returns the UpLatencyUs field value if set, zero value otherwise.
func (o *ObjectStorageBucketStat) GetUpLatencyUs() float64 {
	if o == nil || IsNil(o.UpLatencyUs) {
		var ret float64
		return ret
	}
	return *o.UpLatencyUs
}

// GetUpLatencyUsOk returns a tuple with the UpLatencyUs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageBucketStat) GetUpLatencyUsOk() (*float64, bool) {
	if o == nil || IsNil(o.UpLatencyUs) {
		return nil, false
	}
	return o.UpLatencyUs, true
}

// HasUpLatencyUs returns a boolean if a field has been set.
func (o *ObjectStorageBucketStat) HasUpLatencyUs() bool {
	if o != nil && !IsNil(o.UpLatencyUs) {
		return true
	}

	return false
}

// SetUpLatencyUs gets a reference to the given float64 and assigns it to the UpLatencyUs field.
func (o *ObjectStorageBucketStat) SetUpLatencyUs(v float64) {
	o.UpLatencyUs = &v
}

func (o ObjectStorageBucketStat) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ObjectStorageBucketStat) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeleteObjCategory) {
		toSerialize["delete_obj_category"] = o.DeleteObjCategory
	}
	if !IsNil(o.GetObjCategory) {
		toSerialize["get_obj_category"] = o.GetObjCategory
	}
	if !IsNil(o.ListBucketCategory) {
		toSerialize["list_bucket_category"] = o.ListBucketCategory
	}
	if !IsNil(o.Objects) {
		toSerialize["objects"] = o.Objects
	}
	if !IsNil(o.PostObjCategory) {
		toSerialize["post_obj_category"] = o.PostObjCategory
	}
	if !IsNil(o.PutObjCategory) {
		toSerialize["put_obj_category"] = o.PutObjCategory
	}
	if !IsNil(o.UsedCapacityBytes) {
		toSerialize["used_capacity_bytes"] = o.UsedCapacityBytes
	}
	if !IsNil(o.AllocatedObjects) {
		toSerialize["allocated_objects"] = o.AllocatedObjects
	}
	if !IsNil(o.AllocatedSize) {
		toSerialize["allocated_size"] = o.AllocatedSize
	}
	if !IsNil(o.CacheAllocatedObjects) {
		toSerialize["cache_allocated_objects"] = o.CacheAllocatedObjects
	}
	if !IsNil(o.CacheAllocatedSize) {
		toSerialize["cache_allocated_size"] = o.CacheAllocatedSize
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.DelOpsPm) {
		toSerialize["del_ops_pm"] = o.DelOpsPm
	}
	if !IsNil(o.DownLatencyUs) {
		toSerialize["down_latency_us"] = o.DownLatencyUs
	}
	if !IsNil(o.ExternalAllocatedObjects) {
		toSerialize["external_allocated_objects"] = o.ExternalAllocatedObjects
	}
	if !IsNil(o.ExternalAllocatedSize) {
		toSerialize["external_allocated_size"] = o.ExternalAllocatedSize
	}
	if !IsNil(o.LatencyDown) {
		toSerialize["latency_down"] = o.LatencyDown
	}
	if !IsNil(o.LatencyUp) {
		toSerialize["latency_up"] = o.LatencyUp
	}
	if !IsNil(o.ListOpsPm) {
		toSerialize["list_ops_pm"] = o.ListOpsPm
	}
	if !IsNil(o.LocalAllocatedObjects) {
		toSerialize["local_allocated_objects"] = o.LocalAllocatedObjects
	}
	if !IsNil(o.LocalAllocatedSize) {
		toSerialize["local_allocated_size"] = o.LocalAllocatedSize
	}
	if !IsNil(o.NumDown) {
		toSerialize["num_down"] = o.NumDown
	}
	if !IsNil(o.NumUp) {
		toSerialize["num_up"] = o.NumUp
	}
	if !IsNil(o.RxBandwidthKbyte) {
		toSerialize["rx_bandwidth_kbyte"] = o.RxBandwidthKbyte
	}
	if !IsNil(o.RxOpsPm) {
		toSerialize["rx_ops_pm"] = o.RxOpsPm
	}
	if !IsNil(o.StorageClasses) {
		toSerialize["storage_classes"] = o.StorageClasses
	}
	if !IsNil(o.TotalDelOps) {
		toSerialize["total_del_ops"] = o.TotalDelOps
	}
	if !IsNil(o.TotalDelSuccessOps) {
		toSerialize["total_del_success_ops"] = o.TotalDelSuccessOps
	}
	if !IsNil(o.TotalRxBytes) {
		toSerialize["total_rx_bytes"] = o.TotalRxBytes
	}
	if !IsNil(o.TotalRxOps) {
		toSerialize["total_rx_ops"] = o.TotalRxOps
	}
	if !IsNil(o.TotalRxSuccessOps) {
		toSerialize["total_rx_success_ops"] = o.TotalRxSuccessOps
	}
	if !IsNil(o.TotalTxBytes) {
		toSerialize["total_tx_bytes"] = o.TotalTxBytes
	}
	if !IsNil(o.TotalTxOps) {
		toSerialize["total_tx_ops"] = o.TotalTxOps
	}
	if !IsNil(o.TotalTxSuccessOps) {
		toSerialize["total_tx_success_ops"] = o.TotalTxSuccessOps
	}
	if !IsNil(o.TxBandwidthKbyte) {
		toSerialize["tx_bandwidth_kbyte"] = o.TxBandwidthKbyte
	}
	if !IsNil(o.TxOpsPm) {
		toSerialize["tx_ops_pm"] = o.TxOpsPm
	}
	if !IsNil(o.UpLatencyUs) {
		toSerialize["up_latency_us"] = o.UpLatencyUs
	}
	return toSerialize, nil
}

type NullableObjectStorageBucketStat struct {
	value *ObjectStorageBucketStat
	isSet bool
}

func (v NullableObjectStorageBucketStat) Get() *ObjectStorageBucketStat {
	return v.value
}

func (v *NullableObjectStorageBucketStat) Set(val *ObjectStorageBucketStat) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectStorageBucketStat) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectStorageBucketStat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectStorageBucketStat(val *ObjectStorageBucketStat) *NullableObjectStorageBucketStat {
	return &NullableObjectStorageBucketStat{value: val, isSet: true}
}

func (v NullableObjectStorageBucketStat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectStorageBucketStat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


