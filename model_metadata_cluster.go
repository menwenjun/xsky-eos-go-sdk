/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the MetadataCluster type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetadataCluster{}

// MetadataCluster MetadataCluster is the model of metadata cluster
type MetadataCluster struct {
	ActionStatus *string `json:"action_status,omitempty"`
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	// name in ceph
	ClusterName *string `json:"cluster_name,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	DfsRootfs *DfsRootfsNestview `json:"dfs_rootfs,omitempty"`
	Id *int64 `json:"id,omitempty"`
	MetadataServiceNum *int64 `json:"metadata_service_num,omitempty"`
	// name for user
	Name *string `json:"name,omitempty"`
	Primary *MetadataServiceNestview `json:"primary,omitempty"`
	PrimaryPlacementNode *PlacementNodeNestview `json:"primary_placement_node,omitempty"`
	Status *string `json:"status,omitempty"`
	Stretched *bool `json:"stretched,omitempty"`
	TransLocator *string `json:"trans_locator,omitempty"`
	Update *time.Time `json:"update,omitempty"`
}

// NewMetadataCluster instantiates a new MetadataCluster object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetadataCluster() *MetadataCluster {
	this := MetadataCluster{}
	return &this
}

// NewMetadataClusterWithDefaults instantiates a new MetadataCluster object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetadataClusterWithDefaults() *MetadataCluster {
	this := MetadataCluster{}
	return &this
}

// GetActionStatus returns the ActionStatus field value if set, zero value otherwise.
func (o *MetadataCluster) GetActionStatus() string {
	if o == nil || IsNil(o.ActionStatus) {
		var ret string
		return ret
	}
	return *o.ActionStatus
}

// GetActionStatusOk returns a tuple with the ActionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataCluster) GetActionStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ActionStatus) {
		return nil, false
	}
	return o.ActionStatus, true
}

// HasActionStatus returns a boolean if a field has been set.
func (o *MetadataCluster) HasActionStatus() bool {
	if o != nil && !IsNil(o.ActionStatus) {
		return true
	}

	return false
}

// SetActionStatus gets a reference to the given string and assigns it to the ActionStatus field.
func (o *MetadataCluster) SetActionStatus(v string) {
	o.ActionStatus = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *MetadataCluster) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataCluster) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *MetadataCluster) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *MetadataCluster) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetClusterName returns the ClusterName field value if set, zero value otherwise.
func (o *MetadataCluster) GetClusterName() string {
	if o == nil || IsNil(o.ClusterName) {
		var ret string
		return ret
	}
	return *o.ClusterName
}

// GetClusterNameOk returns a tuple with the ClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataCluster) GetClusterNameOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterName) {
		return nil, false
	}
	return o.ClusterName, true
}

// HasClusterName returns a boolean if a field has been set.
func (o *MetadataCluster) HasClusterName() bool {
	if o != nil && !IsNil(o.ClusterName) {
		return true
	}

	return false
}

// SetClusterName gets a reference to the given string and assigns it to the ClusterName field.
func (o *MetadataCluster) SetClusterName(v string) {
	o.ClusterName = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *MetadataCluster) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataCluster) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *MetadataCluster) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *MetadataCluster) SetCreate(v time.Time) {
	o.Create = &v
}

// GetDfsRootfs returns the DfsRootfs field value if set, zero value otherwise.
func (o *MetadataCluster) GetDfsRootfs() DfsRootfsNestview {
	if o == nil || IsNil(o.DfsRootfs) {
		var ret DfsRootfsNestview
		return ret
	}
	return *o.DfsRootfs
}

// GetDfsRootfsOk returns a tuple with the DfsRootfs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataCluster) GetDfsRootfsOk() (*DfsRootfsNestview, bool) {
	if o == nil || IsNil(o.DfsRootfs) {
		return nil, false
	}
	return o.DfsRootfs, true
}

// HasDfsRootfs returns a boolean if a field has been set.
func (o *MetadataCluster) HasDfsRootfs() bool {
	if o != nil && !IsNil(o.DfsRootfs) {
		return true
	}

	return false
}

// SetDfsRootfs gets a reference to the given DfsRootfsNestview and assigns it to the DfsRootfs field.
func (o *MetadataCluster) SetDfsRootfs(v DfsRootfsNestview) {
	o.DfsRootfs = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MetadataCluster) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataCluster) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MetadataCluster) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *MetadataCluster) SetId(v int64) {
	o.Id = &v
}

// GetMetadataServiceNum returns the MetadataServiceNum field value if set, zero value otherwise.
func (o *MetadataCluster) GetMetadataServiceNum() int64 {
	if o == nil || IsNil(o.MetadataServiceNum) {
		var ret int64
		return ret
	}
	return *o.MetadataServiceNum
}

// GetMetadataServiceNumOk returns a tuple with the MetadataServiceNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataCluster) GetMetadataServiceNumOk() (*int64, bool) {
	if o == nil || IsNil(o.MetadataServiceNum) {
		return nil, false
	}
	return o.MetadataServiceNum, true
}

// HasMetadataServiceNum returns a boolean if a field has been set.
func (o *MetadataCluster) HasMetadataServiceNum() bool {
	if o != nil && !IsNil(o.MetadataServiceNum) {
		return true
	}

	return false
}

// SetMetadataServiceNum gets a reference to the given int64 and assigns it to the MetadataServiceNum field.
func (o *MetadataCluster) SetMetadataServiceNum(v int64) {
	o.MetadataServiceNum = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MetadataCluster) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataCluster) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MetadataCluster) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MetadataCluster) SetName(v string) {
	o.Name = &v
}

// GetPrimary returns the Primary field value if set, zero value otherwise.
func (o *MetadataCluster) GetPrimary() MetadataServiceNestview {
	if o == nil || IsNil(o.Primary) {
		var ret MetadataServiceNestview
		return ret
	}
	return *o.Primary
}

// GetPrimaryOk returns a tuple with the Primary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataCluster) GetPrimaryOk() (*MetadataServiceNestview, bool) {
	if o == nil || IsNil(o.Primary) {
		return nil, false
	}
	return o.Primary, true
}

// HasPrimary returns a boolean if a field has been set.
func (o *MetadataCluster) HasPrimary() bool {
	if o != nil && !IsNil(o.Primary) {
		return true
	}

	return false
}

// SetPrimary gets a reference to the given MetadataServiceNestview and assigns it to the Primary field.
func (o *MetadataCluster) SetPrimary(v MetadataServiceNestview) {
	o.Primary = &v
}

// GetPrimaryPlacementNode returns the PrimaryPlacementNode field value if set, zero value otherwise.
func (o *MetadataCluster) GetPrimaryPlacementNode() PlacementNodeNestview {
	if o == nil || IsNil(o.PrimaryPlacementNode) {
		var ret PlacementNodeNestview
		return ret
	}
	return *o.PrimaryPlacementNode
}

// GetPrimaryPlacementNodeOk returns a tuple with the PrimaryPlacementNode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataCluster) GetPrimaryPlacementNodeOk() (*PlacementNodeNestview, bool) {
	if o == nil || IsNil(o.PrimaryPlacementNode) {
		return nil, false
	}
	return o.PrimaryPlacementNode, true
}

// HasPrimaryPlacementNode returns a boolean if a field has been set.
func (o *MetadataCluster) HasPrimaryPlacementNode() bool {
	if o != nil && !IsNil(o.PrimaryPlacementNode) {
		return true
	}

	return false
}

// SetPrimaryPlacementNode gets a reference to the given PlacementNodeNestview and assigns it to the PrimaryPlacementNode field.
func (o *MetadataCluster) SetPrimaryPlacementNode(v PlacementNodeNestview) {
	o.PrimaryPlacementNode = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *MetadataCluster) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataCluster) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MetadataCluster) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *MetadataCluster) SetStatus(v string) {
	o.Status = &v
}

// GetStretched returns the Stretched field value if set, zero value otherwise.
func (o *MetadataCluster) GetStretched() bool {
	if o == nil || IsNil(o.Stretched) {
		var ret bool
		return ret
	}
	return *o.Stretched
}

// GetStretchedOk returns a tuple with the Stretched field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataCluster) GetStretchedOk() (*bool, bool) {
	if o == nil || IsNil(o.Stretched) {
		return nil, false
	}
	return o.Stretched, true
}

// HasStretched returns a boolean if a field has been set.
func (o *MetadataCluster) HasStretched() bool {
	if o != nil && !IsNil(o.Stretched) {
		return true
	}

	return false
}

// SetStretched gets a reference to the given bool and assigns it to the Stretched field.
func (o *MetadataCluster) SetStretched(v bool) {
	o.Stretched = &v
}

// GetTransLocator returns the TransLocator field value if set, zero value otherwise.
func (o *MetadataCluster) GetTransLocator() string {
	if o == nil || IsNil(o.TransLocator) {
		var ret string
		return ret
	}
	return *o.TransLocator
}

// GetTransLocatorOk returns a tuple with the TransLocator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataCluster) GetTransLocatorOk() (*string, bool) {
	if o == nil || IsNil(o.TransLocator) {
		return nil, false
	}
	return o.TransLocator, true
}

// HasTransLocator returns a boolean if a field has been set.
func (o *MetadataCluster) HasTransLocator() bool {
	if o != nil && !IsNil(o.TransLocator) {
		return true
	}

	return false
}

// SetTransLocator gets a reference to the given string and assigns it to the TransLocator field.
func (o *MetadataCluster) SetTransLocator(v string) {
	o.TransLocator = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *MetadataCluster) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataCluster) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *MetadataCluster) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *MetadataCluster) SetUpdate(v time.Time) {
	o.Update = &v
}

func (o MetadataCluster) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetadataCluster) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActionStatus) {
		toSerialize["action_status"] = o.ActionStatus
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.ClusterName) {
		toSerialize["cluster_name"] = o.ClusterName
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.DfsRootfs) {
		toSerialize["dfs_rootfs"] = o.DfsRootfs
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.MetadataServiceNum) {
		toSerialize["metadata_service_num"] = o.MetadataServiceNum
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Primary) {
		toSerialize["primary"] = o.Primary
	}
	if !IsNil(o.PrimaryPlacementNode) {
		toSerialize["primary_placement_node"] = o.PrimaryPlacementNode
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Stretched) {
		toSerialize["stretched"] = o.Stretched
	}
	if !IsNil(o.TransLocator) {
		toSerialize["trans_locator"] = o.TransLocator
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	return toSerialize, nil
}

type NullableMetadataCluster struct {
	value *MetadataCluster
	isSet bool
}

func (v NullableMetadataCluster) Get() *MetadataCluster {
	return v.value
}

func (v *NullableMetadataCluster) Set(val *MetadataCluster) {
	v.value = val
	v.isSet = true
}

func (v NullableMetadataCluster) IsSet() bool {
	return v.isSet
}

func (v *NullableMetadataCluster) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetadataCluster(val *MetadataCluster) *NullableMetadataCluster {
	return &NullableMetadataCluster{value: val, isSet: true}
}

func (v NullableMetadataCluster) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetadataCluster) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


