/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the NetworkDiagnosisStat type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkDiagnosisStat{}

// NetworkDiagnosisStat NetworkDiagnosisStat defines model of network diagnosis stat
type NetworkDiagnosisStat struct {
	Bandwidth *int64 `json:"bandwidth,omitempty"`
	CollPkgs *int64 `json:"coll_pkgs,omitempty"`
	ErrPkgRatio *float64 `json:"err_pkg_ratio,omitempty"`
	LostPkgRatio *float64 `json:"lost_pkg_ratio,omitempty"`
	RecvBytes *int64 `json:"recv_bytes,omitempty"`
	RecvPkgs *int64 `json:"recv_pkgs,omitempty"`
	SendBytes *int64 `json:"send_bytes,omitempty"`
	SendPkgs *int64 `json:"send_pkgs,omitempty"`
	TcpConnErrs *int64 `json:"tcp_conn_errs,omitempty"`
	TcpSegmentRetrans *int64 `json:"tcp_segment_retrans,omitempty"`
}

// NewNetworkDiagnosisStat instantiates a new NetworkDiagnosisStat object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkDiagnosisStat() *NetworkDiagnosisStat {
	this := NetworkDiagnosisStat{}
	return &this
}

// NewNetworkDiagnosisStatWithDefaults instantiates a new NetworkDiagnosisStat object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkDiagnosisStatWithDefaults() *NetworkDiagnosisStat {
	this := NetworkDiagnosisStat{}
	return &this
}

// GetBandwidth returns the Bandwidth field value if set, zero value otherwise.
func (o *NetworkDiagnosisStat) GetBandwidth() int64 {
	if o == nil || IsNil(o.Bandwidth) {
		var ret int64
		return ret
	}
	return *o.Bandwidth
}

// GetBandwidthOk returns a tuple with the Bandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDiagnosisStat) GetBandwidthOk() (*int64, bool) {
	if o == nil || IsNil(o.Bandwidth) {
		return nil, false
	}
	return o.Bandwidth, true
}

// HasBandwidth returns a boolean if a field has been set.
func (o *NetworkDiagnosisStat) HasBandwidth() bool {
	if o != nil && !IsNil(o.Bandwidth) {
		return true
	}

	return false
}

// SetBandwidth gets a reference to the given int64 and assigns it to the Bandwidth field.
func (o *NetworkDiagnosisStat) SetBandwidth(v int64) {
	o.Bandwidth = &v
}

// GetCollPkgs returns the CollPkgs field value if set, zero value otherwise.
func (o *NetworkDiagnosisStat) GetCollPkgs() int64 {
	if o == nil || IsNil(o.CollPkgs) {
		var ret int64
		return ret
	}
	return *o.CollPkgs
}

// GetCollPkgsOk returns a tuple with the CollPkgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDiagnosisStat) GetCollPkgsOk() (*int64, bool) {
	if o == nil || IsNil(o.CollPkgs) {
		return nil, false
	}
	return o.CollPkgs, true
}

// HasCollPkgs returns a boolean if a field has been set.
func (o *NetworkDiagnosisStat) HasCollPkgs() bool {
	if o != nil && !IsNil(o.CollPkgs) {
		return true
	}

	return false
}

// SetCollPkgs gets a reference to the given int64 and assigns it to the CollPkgs field.
func (o *NetworkDiagnosisStat) SetCollPkgs(v int64) {
	o.CollPkgs = &v
}

// GetErrPkgRatio returns the ErrPkgRatio field value if set, zero value otherwise.
func (o *NetworkDiagnosisStat) GetErrPkgRatio() float64 {
	if o == nil || IsNil(o.ErrPkgRatio) {
		var ret float64
		return ret
	}
	return *o.ErrPkgRatio
}

// GetErrPkgRatioOk returns a tuple with the ErrPkgRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDiagnosisStat) GetErrPkgRatioOk() (*float64, bool) {
	if o == nil || IsNil(o.ErrPkgRatio) {
		return nil, false
	}
	return o.ErrPkgRatio, true
}

// HasErrPkgRatio returns a boolean if a field has been set.
func (o *NetworkDiagnosisStat) HasErrPkgRatio() bool {
	if o != nil && !IsNil(o.ErrPkgRatio) {
		return true
	}

	return false
}

// SetErrPkgRatio gets a reference to the given float64 and assigns it to the ErrPkgRatio field.
func (o *NetworkDiagnosisStat) SetErrPkgRatio(v float64) {
	o.ErrPkgRatio = &v
}

// GetLostPkgRatio returns the LostPkgRatio field value if set, zero value otherwise.
func (o *NetworkDiagnosisStat) GetLostPkgRatio() float64 {
	if o == nil || IsNil(o.LostPkgRatio) {
		var ret float64
		return ret
	}
	return *o.LostPkgRatio
}

// GetLostPkgRatioOk returns a tuple with the LostPkgRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDiagnosisStat) GetLostPkgRatioOk() (*float64, bool) {
	if o == nil || IsNil(o.LostPkgRatio) {
		return nil, false
	}
	return o.LostPkgRatio, true
}

// HasLostPkgRatio returns a boolean if a field has been set.
func (o *NetworkDiagnosisStat) HasLostPkgRatio() bool {
	if o != nil && !IsNil(o.LostPkgRatio) {
		return true
	}

	return false
}

// SetLostPkgRatio gets a reference to the given float64 and assigns it to the LostPkgRatio field.
func (o *NetworkDiagnosisStat) SetLostPkgRatio(v float64) {
	o.LostPkgRatio = &v
}

// GetRecvBytes returns the RecvBytes field value if set, zero value otherwise.
func (o *NetworkDiagnosisStat) GetRecvBytes() int64 {
	if o == nil || IsNil(o.RecvBytes) {
		var ret int64
		return ret
	}
	return *o.RecvBytes
}

// GetRecvBytesOk returns a tuple with the RecvBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDiagnosisStat) GetRecvBytesOk() (*int64, bool) {
	if o == nil || IsNil(o.RecvBytes) {
		return nil, false
	}
	return o.RecvBytes, true
}

// HasRecvBytes returns a boolean if a field has been set.
func (o *NetworkDiagnosisStat) HasRecvBytes() bool {
	if o != nil && !IsNil(o.RecvBytes) {
		return true
	}

	return false
}

// SetRecvBytes gets a reference to the given int64 and assigns it to the RecvBytes field.
func (o *NetworkDiagnosisStat) SetRecvBytes(v int64) {
	o.RecvBytes = &v
}

// GetRecvPkgs returns the RecvPkgs field value if set, zero value otherwise.
func (o *NetworkDiagnosisStat) GetRecvPkgs() int64 {
	if o == nil || IsNil(o.RecvPkgs) {
		var ret int64
		return ret
	}
	return *o.RecvPkgs
}

// GetRecvPkgsOk returns a tuple with the RecvPkgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDiagnosisStat) GetRecvPkgsOk() (*int64, bool) {
	if o == nil || IsNil(o.RecvPkgs) {
		return nil, false
	}
	return o.RecvPkgs, true
}

// HasRecvPkgs returns a boolean if a field has been set.
func (o *NetworkDiagnosisStat) HasRecvPkgs() bool {
	if o != nil && !IsNil(o.RecvPkgs) {
		return true
	}

	return false
}

// SetRecvPkgs gets a reference to the given int64 and assigns it to the RecvPkgs field.
func (o *NetworkDiagnosisStat) SetRecvPkgs(v int64) {
	o.RecvPkgs = &v
}

// GetSendBytes returns the SendBytes field value if set, zero value otherwise.
func (o *NetworkDiagnosisStat) GetSendBytes() int64 {
	if o == nil || IsNil(o.SendBytes) {
		var ret int64
		return ret
	}
	return *o.SendBytes
}

// GetSendBytesOk returns a tuple with the SendBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDiagnosisStat) GetSendBytesOk() (*int64, bool) {
	if o == nil || IsNil(o.SendBytes) {
		return nil, false
	}
	return o.SendBytes, true
}

// HasSendBytes returns a boolean if a field has been set.
func (o *NetworkDiagnosisStat) HasSendBytes() bool {
	if o != nil && !IsNil(o.SendBytes) {
		return true
	}

	return false
}

// SetSendBytes gets a reference to the given int64 and assigns it to the SendBytes field.
func (o *NetworkDiagnosisStat) SetSendBytes(v int64) {
	o.SendBytes = &v
}

// GetSendPkgs returns the SendPkgs field value if set, zero value otherwise.
func (o *NetworkDiagnosisStat) GetSendPkgs() int64 {
	if o == nil || IsNil(o.SendPkgs) {
		var ret int64
		return ret
	}
	return *o.SendPkgs
}

// GetSendPkgsOk returns a tuple with the SendPkgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDiagnosisStat) GetSendPkgsOk() (*int64, bool) {
	if o == nil || IsNil(o.SendPkgs) {
		return nil, false
	}
	return o.SendPkgs, true
}

// HasSendPkgs returns a boolean if a field has been set.
func (o *NetworkDiagnosisStat) HasSendPkgs() bool {
	if o != nil && !IsNil(o.SendPkgs) {
		return true
	}

	return false
}

// SetSendPkgs gets a reference to the given int64 and assigns it to the SendPkgs field.
func (o *NetworkDiagnosisStat) SetSendPkgs(v int64) {
	o.SendPkgs = &v
}

// GetTcpConnErrs returns the TcpConnErrs field value if set, zero value otherwise.
func (o *NetworkDiagnosisStat) GetTcpConnErrs() int64 {
	if o == nil || IsNil(o.TcpConnErrs) {
		var ret int64
		return ret
	}
	return *o.TcpConnErrs
}

// GetTcpConnErrsOk returns a tuple with the TcpConnErrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDiagnosisStat) GetTcpConnErrsOk() (*int64, bool) {
	if o == nil || IsNil(o.TcpConnErrs) {
		return nil, false
	}
	return o.TcpConnErrs, true
}

// HasTcpConnErrs returns a boolean if a field has been set.
func (o *NetworkDiagnosisStat) HasTcpConnErrs() bool {
	if o != nil && !IsNil(o.TcpConnErrs) {
		return true
	}

	return false
}

// SetTcpConnErrs gets a reference to the given int64 and assigns it to the TcpConnErrs field.
func (o *NetworkDiagnosisStat) SetTcpConnErrs(v int64) {
	o.TcpConnErrs = &v
}

// GetTcpSegmentRetrans returns the TcpSegmentRetrans field value if set, zero value otherwise.
func (o *NetworkDiagnosisStat) GetTcpSegmentRetrans() int64 {
	if o == nil || IsNil(o.TcpSegmentRetrans) {
		var ret int64
		return ret
	}
	return *o.TcpSegmentRetrans
}

// GetTcpSegmentRetransOk returns a tuple with the TcpSegmentRetrans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDiagnosisStat) GetTcpSegmentRetransOk() (*int64, bool) {
	if o == nil || IsNil(o.TcpSegmentRetrans) {
		return nil, false
	}
	return o.TcpSegmentRetrans, true
}

// HasTcpSegmentRetrans returns a boolean if a field has been set.
func (o *NetworkDiagnosisStat) HasTcpSegmentRetrans() bool {
	if o != nil && !IsNil(o.TcpSegmentRetrans) {
		return true
	}

	return false
}

// SetTcpSegmentRetrans gets a reference to the given int64 and assigns it to the TcpSegmentRetrans field.
func (o *NetworkDiagnosisStat) SetTcpSegmentRetrans(v int64) {
	o.TcpSegmentRetrans = &v
}

func (o NetworkDiagnosisStat) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkDiagnosisStat) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Bandwidth) {
		toSerialize["bandwidth"] = o.Bandwidth
	}
	if !IsNil(o.CollPkgs) {
		toSerialize["coll_pkgs"] = o.CollPkgs
	}
	if !IsNil(o.ErrPkgRatio) {
		toSerialize["err_pkg_ratio"] = o.ErrPkgRatio
	}
	if !IsNil(o.LostPkgRatio) {
		toSerialize["lost_pkg_ratio"] = o.LostPkgRatio
	}
	if !IsNil(o.RecvBytes) {
		toSerialize["recv_bytes"] = o.RecvBytes
	}
	if !IsNil(o.RecvPkgs) {
		toSerialize["recv_pkgs"] = o.RecvPkgs
	}
	if !IsNil(o.SendBytes) {
		toSerialize["send_bytes"] = o.SendBytes
	}
	if !IsNil(o.SendPkgs) {
		toSerialize["send_pkgs"] = o.SendPkgs
	}
	if !IsNil(o.TcpConnErrs) {
		toSerialize["tcp_conn_errs"] = o.TcpConnErrs
	}
	if !IsNil(o.TcpSegmentRetrans) {
		toSerialize["tcp_segment_retrans"] = o.TcpSegmentRetrans
	}
	return toSerialize, nil
}

type NullableNetworkDiagnosisStat struct {
	value *NetworkDiagnosisStat
	isSet bool
}

func (v NullableNetworkDiagnosisStat) Get() *NetworkDiagnosisStat {
	return v.value
}

func (v *NullableNetworkDiagnosisStat) Set(val *NetworkDiagnosisStat) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkDiagnosisStat) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkDiagnosisStat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkDiagnosisStat(val *NetworkDiagnosisStat) *NullableNetworkDiagnosisStat {
	return &NullableNetworkDiagnosisStat{value: val, isSet: true}
}

func (v NullableNetworkDiagnosisStat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkDiagnosisStat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


