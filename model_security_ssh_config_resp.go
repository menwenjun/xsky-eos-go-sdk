/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SecuritySSHConfigResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecuritySSHConfigResp{}

// SecuritySSHConfigResp struct for SecuritySSHConfigResp
type SecuritySSHConfigResp struct {
	SshConfig *SecuritySSHConfig `json:"ssh_config,omitempty"`
}

// NewSecuritySSHConfigResp instantiates a new SecuritySSHConfigResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecuritySSHConfigResp() *SecuritySSHConfigResp {
	this := SecuritySSHConfigResp{}
	return &this
}

// NewSecuritySSHConfigRespWithDefaults instantiates a new SecuritySSHConfigResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecuritySSHConfigRespWithDefaults() *SecuritySSHConfigResp {
	this := SecuritySSHConfigResp{}
	return &this
}

// GetSshConfig returns the SshConfig field value if set, zero value otherwise.
func (o *SecuritySSHConfigResp) GetSshConfig() SecuritySSHConfig {
	if o == nil || IsNil(o.SshConfig) {
		var ret SecuritySSHConfig
		return ret
	}
	return *o.SshConfig
}

// GetSshConfigOk returns a tuple with the SshConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySSHConfigResp) GetSshConfigOk() (*SecuritySSHConfig, bool) {
	if o == nil || IsNil(o.SshConfig) {
		return nil, false
	}
	return o.SshConfig, true
}

// HasSshConfig returns a boolean if a field has been set.
func (o *SecuritySSHConfigResp) HasSshConfig() bool {
	if o != nil && !IsNil(o.SshConfig) {
		return true
	}

	return false
}

// SetSshConfig gets a reference to the given SecuritySSHConfig and assigns it to the SshConfig field.
func (o *SecuritySSHConfigResp) SetSshConfig(v SecuritySSHConfig) {
	o.SshConfig = &v
}

func (o SecuritySSHConfigResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecuritySSHConfigResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SshConfig) {
		toSerialize["ssh_config"] = o.SshConfig
	}
	return toSerialize, nil
}

type NullableSecuritySSHConfigResp struct {
	value *SecuritySSHConfigResp
	isSet bool
}

func (v NullableSecuritySSHConfigResp) Get() *SecuritySSHConfigResp {
	return v.value
}

func (v *NullableSecuritySSHConfigResp) Set(val *SecuritySSHConfigResp) {
	v.value = val
	v.isSet = true
}

func (v NullableSecuritySSHConfigResp) IsSet() bool {
	return v.isSet
}

func (v *NullableSecuritySSHConfigResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecuritySSHConfigResp(val *SecuritySSHConfigResp) *NullableSecuritySSHConfigResp {
	return &NullableSecuritySSHConfigResp{value: val, isSet: true}
}

func (v NullableSecuritySSHConfigResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecuritySSHConfigResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


