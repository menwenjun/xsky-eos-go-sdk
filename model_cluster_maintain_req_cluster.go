/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ClusterMaintainReqCluster type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterMaintainReqCluster{}

// ClusterMaintainReqCluster struct for ClusterMaintainReqCluster
type ClusterMaintainReqCluster struct {
	ClusterId *int64 `json:"cluster_id,omitempty"`
	Maintained bool `json:"maintained"`
}

type _ClusterMaintainReqCluster ClusterMaintainReqCluster

// NewClusterMaintainReqCluster instantiates a new ClusterMaintainReqCluster object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterMaintainReqCluster(maintained bool) *ClusterMaintainReqCluster {
	this := ClusterMaintainReqCluster{}
	this.Maintained = maintained
	return &this
}

// NewClusterMaintainReqClusterWithDefaults instantiates a new ClusterMaintainReqCluster object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterMaintainReqClusterWithDefaults() *ClusterMaintainReqCluster {
	this := ClusterMaintainReqCluster{}
	return &this
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise.
func (o *ClusterMaintainReqCluster) GetClusterId() int64 {
	if o == nil || IsNil(o.ClusterId) {
		var ret int64
		return ret
	}
	return *o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterMaintainReqCluster) GetClusterIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ClusterId) {
		return nil, false
	}
	return o.ClusterId, true
}

// HasClusterId returns a boolean if a field has been set.
func (o *ClusterMaintainReqCluster) HasClusterId() bool {
	if o != nil && !IsNil(o.ClusterId) {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given int64 and assigns it to the ClusterId field.
func (o *ClusterMaintainReqCluster) SetClusterId(v int64) {
	o.ClusterId = &v
}

// GetMaintained returns the Maintained field value
func (o *ClusterMaintainReqCluster) GetMaintained() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Maintained
}

// GetMaintainedOk returns a tuple with the Maintained field value
// and a boolean to check if the value has been set.
func (o *ClusterMaintainReqCluster) GetMaintainedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Maintained, true
}

// SetMaintained sets field value
func (o *ClusterMaintainReqCluster) SetMaintained(v bool) {
	o.Maintained = v
}

func (o ClusterMaintainReqCluster) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterMaintainReqCluster) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClusterId) {
		toSerialize["cluster_id"] = o.ClusterId
	}
	toSerialize["maintained"] = o.Maintained
	return toSerialize, nil
}

func (o *ClusterMaintainReqCluster) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"maintained",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varClusterMaintainReqCluster := _ClusterMaintainReqCluster{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varClusterMaintainReqCluster)

	if err != nil {
		return err
	}

	*o = ClusterMaintainReqCluster(varClusterMaintainReqCluster)

	return err
}

type NullableClusterMaintainReqCluster struct {
	value *ClusterMaintainReqCluster
	isSet bool
}

func (v NullableClusterMaintainReqCluster) Get() *ClusterMaintainReqCluster {
	return v.value
}

func (v *NullableClusterMaintainReqCluster) Set(val *ClusterMaintainReqCluster) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterMaintainReqCluster) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterMaintainReqCluster) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterMaintainReqCluster(val *ClusterMaintainReqCluster) *NullableClusterMaintainReqCluster {
	return &NullableClusterMaintainReqCluster{value: val, isSet: true}
}

func (v NullableClusterMaintainReqCluster) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterMaintainReqCluster) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


