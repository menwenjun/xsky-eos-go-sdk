/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the ObjectStorageGatewayRecord type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ObjectStorageGatewayRecord{}

// ObjectStorageGatewayRecord ObjectStorageGatewayRecord combine ObjectStorageGateway and ObjectStorageGatewayStat as API response
type ObjectStorageGatewayRecord struct {
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	Description *string `json:"description,omitempty"`
	Etag *string `json:"etag,omitempty"`
	GatewayIp *string `json:"gateway_ip,omitempty"`
	GatewayName *string `json:"gateway_name,omitempty"`
	Host *HostNestview `json:"host,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	OsZone *ObjectStorageZoneNestview `json:"os_zone,omitempty"`
	Port *int64 `json:"port,omitempty"`
	Role *string `json:"role,omitempty"`
	Status *string `json:"status,omitempty"`
	Update *time.Time `json:"update,omitempty"`
	Samples []ObjectStorageGatewayStat `json:"samples,omitempty"`
}

// NewObjectStorageGatewayRecord instantiates a new ObjectStorageGatewayRecord object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectStorageGatewayRecord() *ObjectStorageGatewayRecord {
	this := ObjectStorageGatewayRecord{}
	return &this
}

// NewObjectStorageGatewayRecordWithDefaults instantiates a new ObjectStorageGatewayRecord object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectStorageGatewayRecordWithDefaults() *ObjectStorageGatewayRecord {
	this := ObjectStorageGatewayRecord{}
	return &this
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *ObjectStorageGatewayRecord) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageGatewayRecord) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *ObjectStorageGatewayRecord) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *ObjectStorageGatewayRecord) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *ObjectStorageGatewayRecord) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageGatewayRecord) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *ObjectStorageGatewayRecord) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *ObjectStorageGatewayRecord) SetCreate(v time.Time) {
	o.Create = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ObjectStorageGatewayRecord) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageGatewayRecord) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ObjectStorageGatewayRecord) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ObjectStorageGatewayRecord) SetDescription(v string) {
	o.Description = &v
}

// GetEtag returns the Etag field value if set, zero value otherwise.
func (o *ObjectStorageGatewayRecord) GetEtag() string {
	if o == nil || IsNil(o.Etag) {
		var ret string
		return ret
	}
	return *o.Etag
}

// GetEtagOk returns a tuple with the Etag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageGatewayRecord) GetEtagOk() (*string, bool) {
	if o == nil || IsNil(o.Etag) {
		return nil, false
	}
	return o.Etag, true
}

// HasEtag returns a boolean if a field has been set.
func (o *ObjectStorageGatewayRecord) HasEtag() bool {
	if o != nil && !IsNil(o.Etag) {
		return true
	}

	return false
}

// SetEtag gets a reference to the given string and assigns it to the Etag field.
func (o *ObjectStorageGatewayRecord) SetEtag(v string) {
	o.Etag = &v
}

// GetGatewayIp returns the GatewayIp field value if set, zero value otherwise.
func (o *ObjectStorageGatewayRecord) GetGatewayIp() string {
	if o == nil || IsNil(o.GatewayIp) {
		var ret string
		return ret
	}
	return *o.GatewayIp
}

// GetGatewayIpOk returns a tuple with the GatewayIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageGatewayRecord) GetGatewayIpOk() (*string, bool) {
	if o == nil || IsNil(o.GatewayIp) {
		return nil, false
	}
	return o.GatewayIp, true
}

// HasGatewayIp returns a boolean if a field has been set.
func (o *ObjectStorageGatewayRecord) HasGatewayIp() bool {
	if o != nil && !IsNil(o.GatewayIp) {
		return true
	}

	return false
}

// SetGatewayIp gets a reference to the given string and assigns it to the GatewayIp field.
func (o *ObjectStorageGatewayRecord) SetGatewayIp(v string) {
	o.GatewayIp = &v
}

// GetGatewayName returns the GatewayName field value if set, zero value otherwise.
func (o *ObjectStorageGatewayRecord) GetGatewayName() string {
	if o == nil || IsNil(o.GatewayName) {
		var ret string
		return ret
	}
	return *o.GatewayName
}

// GetGatewayNameOk returns a tuple with the GatewayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageGatewayRecord) GetGatewayNameOk() (*string, bool) {
	if o == nil || IsNil(o.GatewayName) {
		return nil, false
	}
	return o.GatewayName, true
}

// HasGatewayName returns a boolean if a field has been set.
func (o *ObjectStorageGatewayRecord) HasGatewayName() bool {
	if o != nil && !IsNil(o.GatewayName) {
		return true
	}

	return false
}

// SetGatewayName gets a reference to the given string and assigns it to the GatewayName field.
func (o *ObjectStorageGatewayRecord) SetGatewayName(v string) {
	o.GatewayName = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *ObjectStorageGatewayRecord) GetHost() HostNestview {
	if o == nil || IsNil(o.Host) {
		var ret HostNestview
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageGatewayRecord) GetHostOk() (*HostNestview, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *ObjectStorageGatewayRecord) HasHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given HostNestview and assigns it to the Host field.
func (o *ObjectStorageGatewayRecord) SetHost(v HostNestview) {
	o.Host = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ObjectStorageGatewayRecord) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageGatewayRecord) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ObjectStorageGatewayRecord) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ObjectStorageGatewayRecord) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ObjectStorageGatewayRecord) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageGatewayRecord) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ObjectStorageGatewayRecord) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ObjectStorageGatewayRecord) SetName(v string) {
	o.Name = &v
}

// GetOsZone returns the OsZone field value if set, zero value otherwise.
func (o *ObjectStorageGatewayRecord) GetOsZone() ObjectStorageZoneNestview {
	if o == nil || IsNil(o.OsZone) {
		var ret ObjectStorageZoneNestview
		return ret
	}
	return *o.OsZone
}

// GetOsZoneOk returns a tuple with the OsZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageGatewayRecord) GetOsZoneOk() (*ObjectStorageZoneNestview, bool) {
	if o == nil || IsNil(o.OsZone) {
		return nil, false
	}
	return o.OsZone, true
}

// HasOsZone returns a boolean if a field has been set.
func (o *ObjectStorageGatewayRecord) HasOsZone() bool {
	if o != nil && !IsNil(o.OsZone) {
		return true
	}

	return false
}

// SetOsZone gets a reference to the given ObjectStorageZoneNestview and assigns it to the OsZone field.
func (o *ObjectStorageGatewayRecord) SetOsZone(v ObjectStorageZoneNestview) {
	o.OsZone = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *ObjectStorageGatewayRecord) GetPort() int64 {
	if o == nil || IsNil(o.Port) {
		var ret int64
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageGatewayRecord) GetPortOk() (*int64, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *ObjectStorageGatewayRecord) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int64 and assigns it to the Port field.
func (o *ObjectStorageGatewayRecord) SetPort(v int64) {
	o.Port = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *ObjectStorageGatewayRecord) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageGatewayRecord) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *ObjectStorageGatewayRecord) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *ObjectStorageGatewayRecord) SetRole(v string) {
	o.Role = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ObjectStorageGatewayRecord) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageGatewayRecord) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ObjectStorageGatewayRecord) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ObjectStorageGatewayRecord) SetStatus(v string) {
	o.Status = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *ObjectStorageGatewayRecord) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageGatewayRecord) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *ObjectStorageGatewayRecord) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *ObjectStorageGatewayRecord) SetUpdate(v time.Time) {
	o.Update = &v
}

// GetSamples returns the Samples field value if set, zero value otherwise.
func (o *ObjectStorageGatewayRecord) GetSamples() []ObjectStorageGatewayStat {
	if o == nil || IsNil(o.Samples) {
		var ret []ObjectStorageGatewayStat
		return ret
	}
	return o.Samples
}

// GetSamplesOk returns a tuple with the Samples field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectStorageGatewayRecord) GetSamplesOk() ([]ObjectStorageGatewayStat, bool) {
	if o == nil || IsNil(o.Samples) {
		return nil, false
	}
	return o.Samples, true
}

// HasSamples returns a boolean if a field has been set.
func (o *ObjectStorageGatewayRecord) HasSamples() bool {
	if o != nil && !IsNil(o.Samples) {
		return true
	}

	return false
}

// SetSamples gets a reference to the given []ObjectStorageGatewayStat and assigns it to the Samples field.
func (o *ObjectStorageGatewayRecord) SetSamples(v []ObjectStorageGatewayStat) {
	o.Samples = v
}

func (o ObjectStorageGatewayRecord) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ObjectStorageGatewayRecord) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Etag) {
		toSerialize["etag"] = o.Etag
	}
	if !IsNil(o.GatewayIp) {
		toSerialize["gateway_ip"] = o.GatewayIp
	}
	if !IsNil(o.GatewayName) {
		toSerialize["gateway_name"] = o.GatewayName
	}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OsZone) {
		toSerialize["os_zone"] = o.OsZone
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	if !IsNil(o.Samples) {
		toSerialize["samples"] = o.Samples
	}
	return toSerialize, nil
}

type NullableObjectStorageGatewayRecord struct {
	value *ObjectStorageGatewayRecord
	isSet bool
}

func (v NullableObjectStorageGatewayRecord) Get() *ObjectStorageGatewayRecord {
	return v.value
}

func (v *NullableObjectStorageGatewayRecord) Set(val *ObjectStorageGatewayRecord) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectStorageGatewayRecord) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectStorageGatewayRecord) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectStorageGatewayRecord(val *ObjectStorageGatewayRecord) *NullableObjectStorageGatewayRecord {
	return &NullableObjectStorageGatewayRecord{value: val, isSet: true}
}

func (v NullableObjectStorageGatewayRecord) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectStorageGatewayRecord) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


