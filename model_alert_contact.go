/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the AlertContact type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertContact{}

// AlertContact AlertContact defines contact for alert
type AlertContact struct {
	ActionStatus *string `json:"action_status,omitempty"`
	AlertStrategies []AlertStrategyNestview `json:"alert_strategies,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	EmailAddr *string `json:"email_addr,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Status *string `json:"status,omitempty"`
	Update *time.Time `json:"update,omitempty"`
	WechatContactType *string `json:"wechat_contact_type,omitempty"`
	WechatId *string `json:"wechat_id,omitempty"`
}

// NewAlertContact instantiates a new AlertContact object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertContact() *AlertContact {
	this := AlertContact{}
	return &this
}

// NewAlertContactWithDefaults instantiates a new AlertContact object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertContactWithDefaults() *AlertContact {
	this := AlertContact{}
	return &this
}

// GetActionStatus returns the ActionStatus field value if set, zero value otherwise.
func (o *AlertContact) GetActionStatus() string {
	if o == nil || IsNil(o.ActionStatus) {
		var ret string
		return ret
	}
	return *o.ActionStatus
}

// GetActionStatusOk returns a tuple with the ActionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertContact) GetActionStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ActionStatus) {
		return nil, false
	}
	return o.ActionStatus, true
}

// HasActionStatus returns a boolean if a field has been set.
func (o *AlertContact) HasActionStatus() bool {
	if o != nil && !IsNil(o.ActionStatus) {
		return true
	}

	return false
}

// SetActionStatus gets a reference to the given string and assigns it to the ActionStatus field.
func (o *AlertContact) SetActionStatus(v string) {
	o.ActionStatus = &v
}

// GetAlertStrategies returns the AlertStrategies field value if set, zero value otherwise.
func (o *AlertContact) GetAlertStrategies() []AlertStrategyNestview {
	if o == nil || IsNil(o.AlertStrategies) {
		var ret []AlertStrategyNestview
		return ret
	}
	return o.AlertStrategies
}

// GetAlertStrategiesOk returns a tuple with the AlertStrategies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertContact) GetAlertStrategiesOk() ([]AlertStrategyNestview, bool) {
	if o == nil || IsNil(o.AlertStrategies) {
		return nil, false
	}
	return o.AlertStrategies, true
}

// HasAlertStrategies returns a boolean if a field has been set.
func (o *AlertContact) HasAlertStrategies() bool {
	if o != nil && !IsNil(o.AlertStrategies) {
		return true
	}

	return false
}

// SetAlertStrategies gets a reference to the given []AlertStrategyNestview and assigns it to the AlertStrategies field.
func (o *AlertContact) SetAlertStrategies(v []AlertStrategyNestview) {
	o.AlertStrategies = v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *AlertContact) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertContact) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *AlertContact) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *AlertContact) SetCreate(v time.Time) {
	o.Create = &v
}

// GetEmailAddr returns the EmailAddr field value if set, zero value otherwise.
func (o *AlertContact) GetEmailAddr() string {
	if o == nil || IsNil(o.EmailAddr) {
		var ret string
		return ret
	}
	return *o.EmailAddr
}

// GetEmailAddrOk returns a tuple with the EmailAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertContact) GetEmailAddrOk() (*string, bool) {
	if o == nil || IsNil(o.EmailAddr) {
		return nil, false
	}
	return o.EmailAddr, true
}

// HasEmailAddr returns a boolean if a field has been set.
func (o *AlertContact) HasEmailAddr() bool {
	if o != nil && !IsNil(o.EmailAddr) {
		return true
	}

	return false
}

// SetEmailAddr gets a reference to the given string and assigns it to the EmailAddr field.
func (o *AlertContact) SetEmailAddr(v string) {
	o.EmailAddr = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AlertContact) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertContact) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AlertContact) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *AlertContact) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AlertContact) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertContact) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AlertContact) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AlertContact) SetName(v string) {
	o.Name = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AlertContact) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertContact) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AlertContact) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *AlertContact) SetStatus(v string) {
	o.Status = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *AlertContact) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertContact) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *AlertContact) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *AlertContact) SetUpdate(v time.Time) {
	o.Update = &v
}

// GetWechatContactType returns the WechatContactType field value if set, zero value otherwise.
func (o *AlertContact) GetWechatContactType() string {
	if o == nil || IsNil(o.WechatContactType) {
		var ret string
		return ret
	}
	return *o.WechatContactType
}

// GetWechatContactTypeOk returns a tuple with the WechatContactType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertContact) GetWechatContactTypeOk() (*string, bool) {
	if o == nil || IsNil(o.WechatContactType) {
		return nil, false
	}
	return o.WechatContactType, true
}

// HasWechatContactType returns a boolean if a field has been set.
func (o *AlertContact) HasWechatContactType() bool {
	if o != nil && !IsNil(o.WechatContactType) {
		return true
	}

	return false
}

// SetWechatContactType gets a reference to the given string and assigns it to the WechatContactType field.
func (o *AlertContact) SetWechatContactType(v string) {
	o.WechatContactType = &v
}

// GetWechatId returns the WechatId field value if set, zero value otherwise.
func (o *AlertContact) GetWechatId() string {
	if o == nil || IsNil(o.WechatId) {
		var ret string
		return ret
	}
	return *o.WechatId
}

// GetWechatIdOk returns a tuple with the WechatId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertContact) GetWechatIdOk() (*string, bool) {
	if o == nil || IsNil(o.WechatId) {
		return nil, false
	}
	return o.WechatId, true
}

// HasWechatId returns a boolean if a field has been set.
func (o *AlertContact) HasWechatId() bool {
	if o != nil && !IsNil(o.WechatId) {
		return true
	}

	return false
}

// SetWechatId gets a reference to the given string and assigns it to the WechatId field.
func (o *AlertContact) SetWechatId(v string) {
	o.WechatId = &v
}

func (o AlertContact) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertContact) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActionStatus) {
		toSerialize["action_status"] = o.ActionStatus
	}
	if !IsNil(o.AlertStrategies) {
		toSerialize["alert_strategies"] = o.AlertStrategies
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.EmailAddr) {
		toSerialize["email_addr"] = o.EmailAddr
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	if !IsNil(o.WechatContactType) {
		toSerialize["wechat_contact_type"] = o.WechatContactType
	}
	if !IsNil(o.WechatId) {
		toSerialize["wechat_id"] = o.WechatId
	}
	return toSerialize, nil
}

type NullableAlertContact struct {
	value *AlertContact
	isSet bool
}

func (v NullableAlertContact) Get() *AlertContact {
	return v.value
}

func (v *NullableAlertContact) Set(val *AlertContact) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertContact) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertContact) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertContact(val *AlertContact) *NullableAlertContact {
	return &NullableAlertContact{value: val, isSet: true}
}

func (v NullableAlertContact) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertContact) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


