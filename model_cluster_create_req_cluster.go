/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ClusterCreateReqCluster type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterCreateReqCluster{}

// ClusterCreateReqCluster struct for ClusterCreateReqCluster
type ClusterCreateReqCluster struct {
	Bootnode *ClusterCreateBootNodeReq `json:"bootnode,omitempty"`
	// cluster fs id
	FsId string `json:"fs_id"`
	// cluster name
	Name string `json:"name"`
	Network *ClusterCreateNetworkReq `json:"network,omitempty"`
	// cluster type: ceph or osp
	Type *string `json:"type,omitempty"`
}

type _ClusterCreateReqCluster ClusterCreateReqCluster

// NewClusterCreateReqCluster instantiates a new ClusterCreateReqCluster object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterCreateReqCluster(fsId string, name string) *ClusterCreateReqCluster {
	this := ClusterCreateReqCluster{}
	this.FsId = fsId
	this.Name = name
	return &this
}

// NewClusterCreateReqClusterWithDefaults instantiates a new ClusterCreateReqCluster object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterCreateReqClusterWithDefaults() *ClusterCreateReqCluster {
	this := ClusterCreateReqCluster{}
	return &this
}

// GetBootnode returns the Bootnode field value if set, zero value otherwise.
func (o *ClusterCreateReqCluster) GetBootnode() ClusterCreateBootNodeReq {
	if o == nil || IsNil(o.Bootnode) {
		var ret ClusterCreateBootNodeReq
		return ret
	}
	return *o.Bootnode
}

// GetBootnodeOk returns a tuple with the Bootnode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterCreateReqCluster) GetBootnodeOk() (*ClusterCreateBootNodeReq, bool) {
	if o == nil || IsNil(o.Bootnode) {
		return nil, false
	}
	return o.Bootnode, true
}

// HasBootnode returns a boolean if a field has been set.
func (o *ClusterCreateReqCluster) HasBootnode() bool {
	if o != nil && !IsNil(o.Bootnode) {
		return true
	}

	return false
}

// SetBootnode gets a reference to the given ClusterCreateBootNodeReq and assigns it to the Bootnode field.
func (o *ClusterCreateReqCluster) SetBootnode(v ClusterCreateBootNodeReq) {
	o.Bootnode = &v
}

// GetFsId returns the FsId field value
func (o *ClusterCreateReqCluster) GetFsId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FsId
}

// GetFsIdOk returns a tuple with the FsId field value
// and a boolean to check if the value has been set.
func (o *ClusterCreateReqCluster) GetFsIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FsId, true
}

// SetFsId sets field value
func (o *ClusterCreateReqCluster) SetFsId(v string) {
	o.FsId = v
}

// GetName returns the Name field value
func (o *ClusterCreateReqCluster) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ClusterCreateReqCluster) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ClusterCreateReqCluster) SetName(v string) {
	o.Name = v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *ClusterCreateReqCluster) GetNetwork() ClusterCreateNetworkReq {
	if o == nil || IsNil(o.Network) {
		var ret ClusterCreateNetworkReq
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterCreateReqCluster) GetNetworkOk() (*ClusterCreateNetworkReq, bool) {
	if o == nil || IsNil(o.Network) {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *ClusterCreateReqCluster) HasNetwork() bool {
	if o != nil && !IsNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given ClusterCreateNetworkReq and assigns it to the Network field.
func (o *ClusterCreateReqCluster) SetNetwork(v ClusterCreateNetworkReq) {
	o.Network = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ClusterCreateReqCluster) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterCreateReqCluster) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ClusterCreateReqCluster) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ClusterCreateReqCluster) SetType(v string) {
	o.Type = &v
}

func (o ClusterCreateReqCluster) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterCreateReqCluster) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Bootnode) {
		toSerialize["bootnode"] = o.Bootnode
	}
	toSerialize["fs_id"] = o.FsId
	toSerialize["name"] = o.Name
	if !IsNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

func (o *ClusterCreateReqCluster) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"fs_id",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varClusterCreateReqCluster := _ClusterCreateReqCluster{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varClusterCreateReqCluster)

	if err != nil {
		return err
	}

	*o = ClusterCreateReqCluster(varClusterCreateReqCluster)

	return err
}

type NullableClusterCreateReqCluster struct {
	value *ClusterCreateReqCluster
	isSet bool
}

func (v NullableClusterCreateReqCluster) Get() *ClusterCreateReqCluster {
	return v.value
}

func (v *NullableClusterCreateReqCluster) Set(val *ClusterCreateReqCluster) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterCreateReqCluster) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterCreateReqCluster) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterCreateReqCluster(val *ClusterCreateReqCluster) *NullableClusterCreateReqCluster {
	return &NullableClusterCreateReqCluster{value: val, isSet: true}
}

func (v NullableClusterCreateReqCluster) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterCreateReqCluster) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


