/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AlertContactResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertContactResp{}

// AlertContactResp struct for AlertContactResp
type AlertContactResp struct {
	AlertContact AlertContact `json:"alert_contact"`
}

type _AlertContactResp AlertContactResp

// NewAlertContactResp instantiates a new AlertContactResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertContactResp(alertContact AlertContact) *AlertContactResp {
	this := AlertContactResp{}
	this.AlertContact = alertContact
	return &this
}

// NewAlertContactRespWithDefaults instantiates a new AlertContactResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertContactRespWithDefaults() *AlertContactResp {
	this := AlertContactResp{}
	return &this
}

// GetAlertContact returns the AlertContact field value
func (o *AlertContactResp) GetAlertContact() AlertContact {
	if o == nil {
		var ret AlertContact
		return ret
	}

	return o.AlertContact
}

// GetAlertContactOk returns a tuple with the AlertContact field value
// and a boolean to check if the value has been set.
func (o *AlertContactResp) GetAlertContactOk() (*AlertContact, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AlertContact, true
}

// SetAlertContact sets field value
func (o *AlertContactResp) SetAlertContact(v AlertContact) {
	o.AlertContact = v
}

func (o AlertContactResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertContactResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["alert_contact"] = o.AlertContact
	return toSerialize, nil
}

func (o *AlertContactResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"alert_contact",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAlertContactResp := _AlertContactResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAlertContactResp)

	if err != nil {
		return err
	}

	*o = AlertContactResp(varAlertContactResp)

	return err
}

type NullableAlertContactResp struct {
	value *AlertContactResp
	isSet bool
}

func (v NullableAlertContactResp) Get() *AlertContactResp {
	return v.value
}

func (v *NullableAlertContactResp) Set(val *AlertContactResp) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertContactResp) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertContactResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertContactResp(val *AlertContactResp) *NullableAlertContactResp {
	return &NullableAlertContactResp{value: val, isSet: true}
}

func (v NullableAlertContactResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertContactResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


