/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DfsQuotaCreateReqQuota type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsQuotaCreateReqQuota{}

// DfsQuotaCreateReqQuota struct for DfsQuotaCreateReqQuota
type DfsQuotaCreateReqQuota struct {
	// ad id
	AdId *int64 `json:"ad_id,omitempty"`
	// id of dfs rootfs
	DfsRootfsId int64 `json:"dfs_rootfs_id"`
	// grace time for files soft quota
	FilesGraceTime *int64 `json:"files_grace_time,omitempty"`
	// hard quota of files
	FilesHardQuota *int64 `json:"files_hard_quota,omitempty"`
	// ratio of files
	FilesRatio *float32 `json:"files_ratio,omitempty"`
	// soft quota of files
	FilesSoftQuota *int64 `json:"files_soft_quota,omitempty"`
	// suggest quota of files
	FilesSuggestQuota *int64 `json:"files_suggest_quota,omitempty"`
	// fs user group id
	FsUserGroupId *int64 `json:"fs_user_group_id,omitempty"`
	// fs user id
	FsUserId *int64 `json:"fs_user_id,omitempty"`
	// ldap id
	LdapId *int64 `json:"ldap_id,omitempty"`
	// path of quota
	Path string `json:"path"`
	// grace time for size soft quota
	SizeGraceTime *int64 `json:"size_grace_time,omitempty"`
	// hard quota of size
	SizeHardQuota *int64 `json:"size_hard_quota,omitempty"`
	// ratio of size
	SizeRatio *float32 `json:"size_ratio,omitempty"`
	// soft quota of size
	SizeSoftQuota *int64 `json:"size_soft_quota,omitempty"`
	// suggest quota of size
	SizeSuggestQuota *int64 `json:"size_suggest_quota,omitempty"`
	// type of dfs quota
	Type *string `json:"type,omitempty"`
	// user group name
	UserGroupName *string `json:"user_group_name,omitempty"`
	// user name
	UserName *string `json:"user_name,omitempty"`
}

type _DfsQuotaCreateReqQuota DfsQuotaCreateReqQuota

// NewDfsQuotaCreateReqQuota instantiates a new DfsQuotaCreateReqQuota object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsQuotaCreateReqQuota(dfsRootfsId int64, path string) *DfsQuotaCreateReqQuota {
	this := DfsQuotaCreateReqQuota{}
	this.DfsRootfsId = dfsRootfsId
	this.Path = path
	return &this
}

// NewDfsQuotaCreateReqQuotaWithDefaults instantiates a new DfsQuotaCreateReqQuota object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsQuotaCreateReqQuotaWithDefaults() *DfsQuotaCreateReqQuota {
	this := DfsQuotaCreateReqQuota{}
	return &this
}

// GetAdId returns the AdId field value if set, zero value otherwise.
func (o *DfsQuotaCreateReqQuota) GetAdId() int64 {
	if o == nil || IsNil(o.AdId) {
		var ret int64
		return ret
	}
	return *o.AdId
}

// GetAdIdOk returns a tuple with the AdId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQuotaCreateReqQuota) GetAdIdOk() (*int64, bool) {
	if o == nil || IsNil(o.AdId) {
		return nil, false
	}
	return o.AdId, true
}

// HasAdId returns a boolean if a field has been set.
func (o *DfsQuotaCreateReqQuota) HasAdId() bool {
	if o != nil && !IsNil(o.AdId) {
		return true
	}

	return false
}

// SetAdId gets a reference to the given int64 and assigns it to the AdId field.
func (o *DfsQuotaCreateReqQuota) SetAdId(v int64) {
	o.AdId = &v
}

// GetDfsRootfsId returns the DfsRootfsId field value
func (o *DfsQuotaCreateReqQuota) GetDfsRootfsId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DfsRootfsId
}

// GetDfsRootfsIdOk returns a tuple with the DfsRootfsId field value
// and a boolean to check if the value has been set.
func (o *DfsQuotaCreateReqQuota) GetDfsRootfsIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DfsRootfsId, true
}

// SetDfsRootfsId sets field value
func (o *DfsQuotaCreateReqQuota) SetDfsRootfsId(v int64) {
	o.DfsRootfsId = v
}

// GetFilesGraceTime returns the FilesGraceTime field value if set, zero value otherwise.
func (o *DfsQuotaCreateReqQuota) GetFilesGraceTime() int64 {
	if o == nil || IsNil(o.FilesGraceTime) {
		var ret int64
		return ret
	}
	return *o.FilesGraceTime
}

// GetFilesGraceTimeOk returns a tuple with the FilesGraceTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQuotaCreateReqQuota) GetFilesGraceTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.FilesGraceTime) {
		return nil, false
	}
	return o.FilesGraceTime, true
}

// HasFilesGraceTime returns a boolean if a field has been set.
func (o *DfsQuotaCreateReqQuota) HasFilesGraceTime() bool {
	if o != nil && !IsNil(o.FilesGraceTime) {
		return true
	}

	return false
}

// SetFilesGraceTime gets a reference to the given int64 and assigns it to the FilesGraceTime field.
func (o *DfsQuotaCreateReqQuota) SetFilesGraceTime(v int64) {
	o.FilesGraceTime = &v
}

// GetFilesHardQuota returns the FilesHardQuota field value if set, zero value otherwise.
func (o *DfsQuotaCreateReqQuota) GetFilesHardQuota() int64 {
	if o == nil || IsNil(o.FilesHardQuota) {
		var ret int64
		return ret
	}
	return *o.FilesHardQuota
}

// GetFilesHardQuotaOk returns a tuple with the FilesHardQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQuotaCreateReqQuota) GetFilesHardQuotaOk() (*int64, bool) {
	if o == nil || IsNil(o.FilesHardQuota) {
		return nil, false
	}
	return o.FilesHardQuota, true
}

// HasFilesHardQuota returns a boolean if a field has been set.
func (o *DfsQuotaCreateReqQuota) HasFilesHardQuota() bool {
	if o != nil && !IsNil(o.FilesHardQuota) {
		return true
	}

	return false
}

// SetFilesHardQuota gets a reference to the given int64 and assigns it to the FilesHardQuota field.
func (o *DfsQuotaCreateReqQuota) SetFilesHardQuota(v int64) {
	o.FilesHardQuota = &v
}

// GetFilesRatio returns the FilesRatio field value if set, zero value otherwise.
func (o *DfsQuotaCreateReqQuota) GetFilesRatio() float32 {
	if o == nil || IsNil(o.FilesRatio) {
		var ret float32
		return ret
	}
	return *o.FilesRatio
}

// GetFilesRatioOk returns a tuple with the FilesRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQuotaCreateReqQuota) GetFilesRatioOk() (*float32, bool) {
	if o == nil || IsNil(o.FilesRatio) {
		return nil, false
	}
	return o.FilesRatio, true
}

// HasFilesRatio returns a boolean if a field has been set.
func (o *DfsQuotaCreateReqQuota) HasFilesRatio() bool {
	if o != nil && !IsNil(o.FilesRatio) {
		return true
	}

	return false
}

// SetFilesRatio gets a reference to the given float32 and assigns it to the FilesRatio field.
func (o *DfsQuotaCreateReqQuota) SetFilesRatio(v float32) {
	o.FilesRatio = &v
}

// GetFilesSoftQuota returns the FilesSoftQuota field value if set, zero value otherwise.
func (o *DfsQuotaCreateReqQuota) GetFilesSoftQuota() int64 {
	if o == nil || IsNil(o.FilesSoftQuota) {
		var ret int64
		return ret
	}
	return *o.FilesSoftQuota
}

// GetFilesSoftQuotaOk returns a tuple with the FilesSoftQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQuotaCreateReqQuota) GetFilesSoftQuotaOk() (*int64, bool) {
	if o == nil || IsNil(o.FilesSoftQuota) {
		return nil, false
	}
	return o.FilesSoftQuota, true
}

// HasFilesSoftQuota returns a boolean if a field has been set.
func (o *DfsQuotaCreateReqQuota) HasFilesSoftQuota() bool {
	if o != nil && !IsNil(o.FilesSoftQuota) {
		return true
	}

	return false
}

// SetFilesSoftQuota gets a reference to the given int64 and assigns it to the FilesSoftQuota field.
func (o *DfsQuotaCreateReqQuota) SetFilesSoftQuota(v int64) {
	o.FilesSoftQuota = &v
}

// GetFilesSuggestQuota returns the FilesSuggestQuota field value if set, zero value otherwise.
func (o *DfsQuotaCreateReqQuota) GetFilesSuggestQuota() int64 {
	if o == nil || IsNil(o.FilesSuggestQuota) {
		var ret int64
		return ret
	}
	return *o.FilesSuggestQuota
}

// GetFilesSuggestQuotaOk returns a tuple with the FilesSuggestQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQuotaCreateReqQuota) GetFilesSuggestQuotaOk() (*int64, bool) {
	if o == nil || IsNil(o.FilesSuggestQuota) {
		return nil, false
	}
	return o.FilesSuggestQuota, true
}

// HasFilesSuggestQuota returns a boolean if a field has been set.
func (o *DfsQuotaCreateReqQuota) HasFilesSuggestQuota() bool {
	if o != nil && !IsNil(o.FilesSuggestQuota) {
		return true
	}

	return false
}

// SetFilesSuggestQuota gets a reference to the given int64 and assigns it to the FilesSuggestQuota field.
func (o *DfsQuotaCreateReqQuota) SetFilesSuggestQuota(v int64) {
	o.FilesSuggestQuota = &v
}

// GetFsUserGroupId returns the FsUserGroupId field value if set, zero value otherwise.
func (o *DfsQuotaCreateReqQuota) GetFsUserGroupId() int64 {
	if o == nil || IsNil(o.FsUserGroupId) {
		var ret int64
		return ret
	}
	return *o.FsUserGroupId
}

// GetFsUserGroupIdOk returns a tuple with the FsUserGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQuotaCreateReqQuota) GetFsUserGroupIdOk() (*int64, bool) {
	if o == nil || IsNil(o.FsUserGroupId) {
		return nil, false
	}
	return o.FsUserGroupId, true
}

// HasFsUserGroupId returns a boolean if a field has been set.
func (o *DfsQuotaCreateReqQuota) HasFsUserGroupId() bool {
	if o != nil && !IsNil(o.FsUserGroupId) {
		return true
	}

	return false
}

// SetFsUserGroupId gets a reference to the given int64 and assigns it to the FsUserGroupId field.
func (o *DfsQuotaCreateReqQuota) SetFsUserGroupId(v int64) {
	o.FsUserGroupId = &v
}

// GetFsUserId returns the FsUserId field value if set, zero value otherwise.
func (o *DfsQuotaCreateReqQuota) GetFsUserId() int64 {
	if o == nil || IsNil(o.FsUserId) {
		var ret int64
		return ret
	}
	return *o.FsUserId
}

// GetFsUserIdOk returns a tuple with the FsUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQuotaCreateReqQuota) GetFsUserIdOk() (*int64, bool) {
	if o == nil || IsNil(o.FsUserId) {
		return nil, false
	}
	return o.FsUserId, true
}

// HasFsUserId returns a boolean if a field has been set.
func (o *DfsQuotaCreateReqQuota) HasFsUserId() bool {
	if o != nil && !IsNil(o.FsUserId) {
		return true
	}

	return false
}

// SetFsUserId gets a reference to the given int64 and assigns it to the FsUserId field.
func (o *DfsQuotaCreateReqQuota) SetFsUserId(v int64) {
	o.FsUserId = &v
}

// GetLdapId returns the LdapId field value if set, zero value otherwise.
func (o *DfsQuotaCreateReqQuota) GetLdapId() int64 {
	if o == nil || IsNil(o.LdapId) {
		var ret int64
		return ret
	}
	return *o.LdapId
}

// GetLdapIdOk returns a tuple with the LdapId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQuotaCreateReqQuota) GetLdapIdOk() (*int64, bool) {
	if o == nil || IsNil(o.LdapId) {
		return nil, false
	}
	return o.LdapId, true
}

// HasLdapId returns a boolean if a field has been set.
func (o *DfsQuotaCreateReqQuota) HasLdapId() bool {
	if o != nil && !IsNil(o.LdapId) {
		return true
	}

	return false
}

// SetLdapId gets a reference to the given int64 and assigns it to the LdapId field.
func (o *DfsQuotaCreateReqQuota) SetLdapId(v int64) {
	o.LdapId = &v
}

// GetPath returns the Path field value
func (o *DfsQuotaCreateReqQuota) GetPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *DfsQuotaCreateReqQuota) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Path, true
}

// SetPath sets field value
func (o *DfsQuotaCreateReqQuota) SetPath(v string) {
	o.Path = v
}

// GetSizeGraceTime returns the SizeGraceTime field value if set, zero value otherwise.
func (o *DfsQuotaCreateReqQuota) GetSizeGraceTime() int64 {
	if o == nil || IsNil(o.SizeGraceTime) {
		var ret int64
		return ret
	}
	return *o.SizeGraceTime
}

// GetSizeGraceTimeOk returns a tuple with the SizeGraceTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQuotaCreateReqQuota) GetSizeGraceTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.SizeGraceTime) {
		return nil, false
	}
	return o.SizeGraceTime, true
}

// HasSizeGraceTime returns a boolean if a field has been set.
func (o *DfsQuotaCreateReqQuota) HasSizeGraceTime() bool {
	if o != nil && !IsNil(o.SizeGraceTime) {
		return true
	}

	return false
}

// SetSizeGraceTime gets a reference to the given int64 and assigns it to the SizeGraceTime field.
func (o *DfsQuotaCreateReqQuota) SetSizeGraceTime(v int64) {
	o.SizeGraceTime = &v
}

// GetSizeHardQuota returns the SizeHardQuota field value if set, zero value otherwise.
func (o *DfsQuotaCreateReqQuota) GetSizeHardQuota() int64 {
	if o == nil || IsNil(o.SizeHardQuota) {
		var ret int64
		return ret
	}
	return *o.SizeHardQuota
}

// GetSizeHardQuotaOk returns a tuple with the SizeHardQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQuotaCreateReqQuota) GetSizeHardQuotaOk() (*int64, bool) {
	if o == nil || IsNil(o.SizeHardQuota) {
		return nil, false
	}
	return o.SizeHardQuota, true
}

// HasSizeHardQuota returns a boolean if a field has been set.
func (o *DfsQuotaCreateReqQuota) HasSizeHardQuota() bool {
	if o != nil && !IsNil(o.SizeHardQuota) {
		return true
	}

	return false
}

// SetSizeHardQuota gets a reference to the given int64 and assigns it to the SizeHardQuota field.
func (o *DfsQuotaCreateReqQuota) SetSizeHardQuota(v int64) {
	o.SizeHardQuota = &v
}

// GetSizeRatio returns the SizeRatio field value if set, zero value otherwise.
func (o *DfsQuotaCreateReqQuota) GetSizeRatio() float32 {
	if o == nil || IsNil(o.SizeRatio) {
		var ret float32
		return ret
	}
	return *o.SizeRatio
}

// GetSizeRatioOk returns a tuple with the SizeRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQuotaCreateReqQuota) GetSizeRatioOk() (*float32, bool) {
	if o == nil || IsNil(o.SizeRatio) {
		return nil, false
	}
	return o.SizeRatio, true
}

// HasSizeRatio returns a boolean if a field has been set.
func (o *DfsQuotaCreateReqQuota) HasSizeRatio() bool {
	if o != nil && !IsNil(o.SizeRatio) {
		return true
	}

	return false
}

// SetSizeRatio gets a reference to the given float32 and assigns it to the SizeRatio field.
func (o *DfsQuotaCreateReqQuota) SetSizeRatio(v float32) {
	o.SizeRatio = &v
}

// GetSizeSoftQuota returns the SizeSoftQuota field value if set, zero value otherwise.
func (o *DfsQuotaCreateReqQuota) GetSizeSoftQuota() int64 {
	if o == nil || IsNil(o.SizeSoftQuota) {
		var ret int64
		return ret
	}
	return *o.SizeSoftQuota
}

// GetSizeSoftQuotaOk returns a tuple with the SizeSoftQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQuotaCreateReqQuota) GetSizeSoftQuotaOk() (*int64, bool) {
	if o == nil || IsNil(o.SizeSoftQuota) {
		return nil, false
	}
	return o.SizeSoftQuota, true
}

// HasSizeSoftQuota returns a boolean if a field has been set.
func (o *DfsQuotaCreateReqQuota) HasSizeSoftQuota() bool {
	if o != nil && !IsNil(o.SizeSoftQuota) {
		return true
	}

	return false
}

// SetSizeSoftQuota gets a reference to the given int64 and assigns it to the SizeSoftQuota field.
func (o *DfsQuotaCreateReqQuota) SetSizeSoftQuota(v int64) {
	o.SizeSoftQuota = &v
}

// GetSizeSuggestQuota returns the SizeSuggestQuota field value if set, zero value otherwise.
func (o *DfsQuotaCreateReqQuota) GetSizeSuggestQuota() int64 {
	if o == nil || IsNil(o.SizeSuggestQuota) {
		var ret int64
		return ret
	}
	return *o.SizeSuggestQuota
}

// GetSizeSuggestQuotaOk returns a tuple with the SizeSuggestQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQuotaCreateReqQuota) GetSizeSuggestQuotaOk() (*int64, bool) {
	if o == nil || IsNil(o.SizeSuggestQuota) {
		return nil, false
	}
	return o.SizeSuggestQuota, true
}

// HasSizeSuggestQuota returns a boolean if a field has been set.
func (o *DfsQuotaCreateReqQuota) HasSizeSuggestQuota() bool {
	if o != nil && !IsNil(o.SizeSuggestQuota) {
		return true
	}

	return false
}

// SetSizeSuggestQuota gets a reference to the given int64 and assigns it to the SizeSuggestQuota field.
func (o *DfsQuotaCreateReqQuota) SetSizeSuggestQuota(v int64) {
	o.SizeSuggestQuota = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *DfsQuotaCreateReqQuota) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQuotaCreateReqQuota) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *DfsQuotaCreateReqQuota) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *DfsQuotaCreateReqQuota) SetType(v string) {
	o.Type = &v
}

// GetUserGroupName returns the UserGroupName field value if set, zero value otherwise.
func (o *DfsQuotaCreateReqQuota) GetUserGroupName() string {
	if o == nil || IsNil(o.UserGroupName) {
		var ret string
		return ret
	}
	return *o.UserGroupName
}

// GetUserGroupNameOk returns a tuple with the UserGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQuotaCreateReqQuota) GetUserGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserGroupName) {
		return nil, false
	}
	return o.UserGroupName, true
}

// HasUserGroupName returns a boolean if a field has been set.
func (o *DfsQuotaCreateReqQuota) HasUserGroupName() bool {
	if o != nil && !IsNil(o.UserGroupName) {
		return true
	}

	return false
}

// SetUserGroupName gets a reference to the given string and assigns it to the UserGroupName field.
func (o *DfsQuotaCreateReqQuota) SetUserGroupName(v string) {
	o.UserGroupName = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *DfsQuotaCreateReqQuota) GetUserName() string {
	if o == nil || IsNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQuotaCreateReqQuota) GetUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *DfsQuotaCreateReqQuota) HasUserName() bool {
	if o != nil && !IsNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *DfsQuotaCreateReqQuota) SetUserName(v string) {
	o.UserName = &v
}

func (o DfsQuotaCreateReqQuota) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsQuotaCreateReqQuota) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdId) {
		toSerialize["ad_id"] = o.AdId
	}
	toSerialize["dfs_rootfs_id"] = o.DfsRootfsId
	if !IsNil(o.FilesGraceTime) {
		toSerialize["files_grace_time"] = o.FilesGraceTime
	}
	if !IsNil(o.FilesHardQuota) {
		toSerialize["files_hard_quota"] = o.FilesHardQuota
	}
	if !IsNil(o.FilesRatio) {
		toSerialize["files_ratio"] = o.FilesRatio
	}
	if !IsNil(o.FilesSoftQuota) {
		toSerialize["files_soft_quota"] = o.FilesSoftQuota
	}
	if !IsNil(o.FilesSuggestQuota) {
		toSerialize["files_suggest_quota"] = o.FilesSuggestQuota
	}
	if !IsNil(o.FsUserGroupId) {
		toSerialize["fs_user_group_id"] = o.FsUserGroupId
	}
	if !IsNil(o.FsUserId) {
		toSerialize["fs_user_id"] = o.FsUserId
	}
	if !IsNil(o.LdapId) {
		toSerialize["ldap_id"] = o.LdapId
	}
	toSerialize["path"] = o.Path
	if !IsNil(o.SizeGraceTime) {
		toSerialize["size_grace_time"] = o.SizeGraceTime
	}
	if !IsNil(o.SizeHardQuota) {
		toSerialize["size_hard_quota"] = o.SizeHardQuota
	}
	if !IsNil(o.SizeRatio) {
		toSerialize["size_ratio"] = o.SizeRatio
	}
	if !IsNil(o.SizeSoftQuota) {
		toSerialize["size_soft_quota"] = o.SizeSoftQuota
	}
	if !IsNil(o.SizeSuggestQuota) {
		toSerialize["size_suggest_quota"] = o.SizeSuggestQuota
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.UserGroupName) {
		toSerialize["user_group_name"] = o.UserGroupName
	}
	if !IsNil(o.UserName) {
		toSerialize["user_name"] = o.UserName
	}
	return toSerialize, nil
}

func (o *DfsQuotaCreateReqQuota) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dfs_rootfs_id",
		"path",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDfsQuotaCreateReqQuota := _DfsQuotaCreateReqQuota{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDfsQuotaCreateReqQuota)

	if err != nil {
		return err
	}

	*o = DfsQuotaCreateReqQuota(varDfsQuotaCreateReqQuota)

	return err
}

type NullableDfsQuotaCreateReqQuota struct {
	value *DfsQuotaCreateReqQuota
	isSet bool
}

func (v NullableDfsQuotaCreateReqQuota) Get() *DfsQuotaCreateReqQuota {
	return v.value
}

func (v *NullableDfsQuotaCreateReqQuota) Set(val *DfsQuotaCreateReqQuota) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsQuotaCreateReqQuota) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsQuotaCreateReqQuota) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsQuotaCreateReqQuota(val *DfsQuotaCreateReqQuota) *NullableDfsQuotaCreateReqQuota {
	return &NullableDfsQuotaCreateReqQuota{value: val, isSet: true}
}

func (v NullableDfsQuotaCreateReqQuota) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsQuotaCreateReqQuota) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


