/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the LoadBalancerInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LoadBalancerInfo{}

// LoadBalancerInfo LoadBalancerInfo defines load balancer info
type LoadBalancerInfo struct {
	AccessHttpsPort *int64 `json:"access_https_port,omitempty"`
	AccessPort *int64 `json:"access_port,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Status *string `json:"status,omitempty"`
	SyncPort *int64 `json:"sync_port,omitempty"`
	Vips []string `json:"vips,omitempty"`
}

// NewLoadBalancerInfo instantiates a new LoadBalancerInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoadBalancerInfo() *LoadBalancerInfo {
	this := LoadBalancerInfo{}
	return &this
}

// NewLoadBalancerInfoWithDefaults instantiates a new LoadBalancerInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoadBalancerInfoWithDefaults() *LoadBalancerInfo {
	this := LoadBalancerInfo{}
	return &this
}

// GetAccessHttpsPort returns the AccessHttpsPort field value if set, zero value otherwise.
func (o *LoadBalancerInfo) GetAccessHttpsPort() int64 {
	if o == nil || IsNil(o.AccessHttpsPort) {
		var ret int64
		return ret
	}
	return *o.AccessHttpsPort
}

// GetAccessHttpsPortOk returns a tuple with the AccessHttpsPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancerInfo) GetAccessHttpsPortOk() (*int64, bool) {
	if o == nil || IsNil(o.AccessHttpsPort) {
		return nil, false
	}
	return o.AccessHttpsPort, true
}

// HasAccessHttpsPort returns a boolean if a field has been set.
func (o *LoadBalancerInfo) HasAccessHttpsPort() bool {
	if o != nil && !IsNil(o.AccessHttpsPort) {
		return true
	}

	return false
}

// SetAccessHttpsPort gets a reference to the given int64 and assigns it to the AccessHttpsPort field.
func (o *LoadBalancerInfo) SetAccessHttpsPort(v int64) {
	o.AccessHttpsPort = &v
}

// GetAccessPort returns the AccessPort field value if set, zero value otherwise.
func (o *LoadBalancerInfo) GetAccessPort() int64 {
	if o == nil || IsNil(o.AccessPort) {
		var ret int64
		return ret
	}
	return *o.AccessPort
}

// GetAccessPortOk returns a tuple with the AccessPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancerInfo) GetAccessPortOk() (*int64, bool) {
	if o == nil || IsNil(o.AccessPort) {
		return nil, false
	}
	return o.AccessPort, true
}

// HasAccessPort returns a boolean if a field has been set.
func (o *LoadBalancerInfo) HasAccessPort() bool {
	if o != nil && !IsNil(o.AccessPort) {
		return true
	}

	return false
}

// SetAccessPort gets a reference to the given int64 and assigns it to the AccessPort field.
func (o *LoadBalancerInfo) SetAccessPort(v int64) {
	o.AccessPort = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *LoadBalancerInfo) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancerInfo) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *LoadBalancerInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *LoadBalancerInfo) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *LoadBalancerInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancerInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *LoadBalancerInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *LoadBalancerInfo) SetName(v string) {
	o.Name = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *LoadBalancerInfo) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancerInfo) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *LoadBalancerInfo) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *LoadBalancerInfo) SetStatus(v string) {
	o.Status = &v
}

// GetSyncPort returns the SyncPort field value if set, zero value otherwise.
func (o *LoadBalancerInfo) GetSyncPort() int64 {
	if o == nil || IsNil(o.SyncPort) {
		var ret int64
		return ret
	}
	return *o.SyncPort
}

// GetSyncPortOk returns a tuple with the SyncPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancerInfo) GetSyncPortOk() (*int64, bool) {
	if o == nil || IsNil(o.SyncPort) {
		return nil, false
	}
	return o.SyncPort, true
}

// HasSyncPort returns a boolean if a field has been set.
func (o *LoadBalancerInfo) HasSyncPort() bool {
	if o != nil && !IsNil(o.SyncPort) {
		return true
	}

	return false
}

// SetSyncPort gets a reference to the given int64 and assigns it to the SyncPort field.
func (o *LoadBalancerInfo) SetSyncPort(v int64) {
	o.SyncPort = &v
}

// GetVips returns the Vips field value if set, zero value otherwise.
func (o *LoadBalancerInfo) GetVips() []string {
	if o == nil || IsNil(o.Vips) {
		var ret []string
		return ret
	}
	return o.Vips
}

// GetVipsOk returns a tuple with the Vips field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadBalancerInfo) GetVipsOk() ([]string, bool) {
	if o == nil || IsNil(o.Vips) {
		return nil, false
	}
	return o.Vips, true
}

// HasVips returns a boolean if a field has been set.
func (o *LoadBalancerInfo) HasVips() bool {
	if o != nil && !IsNil(o.Vips) {
		return true
	}

	return false
}

// SetVips gets a reference to the given []string and assigns it to the Vips field.
func (o *LoadBalancerInfo) SetVips(v []string) {
	o.Vips = v
}

func (o LoadBalancerInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LoadBalancerInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessHttpsPort) {
		toSerialize["access_https_port"] = o.AccessHttpsPort
	}
	if !IsNil(o.AccessPort) {
		toSerialize["access_port"] = o.AccessPort
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.SyncPort) {
		toSerialize["sync_port"] = o.SyncPort
	}
	if !IsNil(o.Vips) {
		toSerialize["vips"] = o.Vips
	}
	return toSerialize, nil
}

type NullableLoadBalancerInfo struct {
	value *LoadBalancerInfo
	isSet bool
}

func (v NullableLoadBalancerInfo) Get() *LoadBalancerInfo {
	return v.value
}

func (v *NullableLoadBalancerInfo) Set(val *LoadBalancerInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableLoadBalancerInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableLoadBalancerInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoadBalancerInfo(val *LoadBalancerInfo) *NullableLoadBalancerInfo {
	return &NullableLoadBalancerInfo{value: val, isSet: true}
}

func (v NullableLoadBalancerInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoadBalancerInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


