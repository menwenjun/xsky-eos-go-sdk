/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ActionLogUpdateReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActionLogUpdateReq{}

// ActionLogUpdateReq struct for ActionLogUpdateReq
type ActionLogUpdateReq struct {
	ActionLog *ActionLogUpdateReqActionLog `json:"action_log,omitempty"`
}

// NewActionLogUpdateReq instantiates a new ActionLogUpdateReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionLogUpdateReq() *ActionLogUpdateReq {
	this := ActionLogUpdateReq{}
	return &this
}

// NewActionLogUpdateReqWithDefaults instantiates a new ActionLogUpdateReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionLogUpdateReqWithDefaults() *ActionLogUpdateReq {
	this := ActionLogUpdateReq{}
	return &this
}

// GetActionLog returns the ActionLog field value if set, zero value otherwise.
func (o *ActionLogUpdateReq) GetActionLog() ActionLogUpdateReqActionLog {
	if o == nil || IsNil(o.ActionLog) {
		var ret ActionLogUpdateReqActionLog
		return ret
	}
	return *o.ActionLog
}

// GetActionLogOk returns a tuple with the ActionLog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionLogUpdateReq) GetActionLogOk() (*ActionLogUpdateReqActionLog, bool) {
	if o == nil || IsNil(o.ActionLog) {
		return nil, false
	}
	return o.ActionLog, true
}

// HasActionLog returns a boolean if a field has been set.
func (o *ActionLogUpdateReq) HasActionLog() bool {
	if o != nil && !IsNil(o.ActionLog) {
		return true
	}

	return false
}

// SetActionLog gets a reference to the given ActionLogUpdateReqActionLog and assigns it to the ActionLog field.
func (o *ActionLogUpdateReq) SetActionLog(v ActionLogUpdateReqActionLog) {
	o.ActionLog = &v
}

func (o ActionLogUpdateReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActionLogUpdateReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActionLog) {
		toSerialize["action_log"] = o.ActionLog
	}
	return toSerialize, nil
}

type NullableActionLogUpdateReq struct {
	value *ActionLogUpdateReq
	isSet bool
}

func (v NullableActionLogUpdateReq) Get() *ActionLogUpdateReq {
	return v.value
}

func (v *NullableActionLogUpdateReq) Set(val *ActionLogUpdateReq) {
	v.value = val
	v.isSet = true
}

func (v NullableActionLogUpdateReq) IsSet() bool {
	return v.isSet
}

func (v *NullableActionLogUpdateReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionLogUpdateReq(val *ActionLogUpdateReq) *NullableActionLogUpdateReq {
	return &NullableActionLogUpdateReq{value: val, isSet: true}
}

func (v NullableActionLogUpdateReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionLogUpdateReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


