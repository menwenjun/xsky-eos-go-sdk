/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AlertRuleResourceBlacklistResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertRuleResourceBlacklistResp{}

// AlertRuleResourceBlacklistResp struct for AlertRuleResourceBlacklistResp
type AlertRuleResourceBlacklistResp struct {
	// resource black list response
	Resources map[string]interface{} `json:"resources,omitempty"`
}

// NewAlertRuleResourceBlacklistResp instantiates a new AlertRuleResourceBlacklistResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertRuleResourceBlacklistResp() *AlertRuleResourceBlacklistResp {
	this := AlertRuleResourceBlacklistResp{}
	return &this
}

// NewAlertRuleResourceBlacklistRespWithDefaults instantiates a new AlertRuleResourceBlacklistResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertRuleResourceBlacklistRespWithDefaults() *AlertRuleResourceBlacklistResp {
	this := AlertRuleResourceBlacklistResp{}
	return &this
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *AlertRuleResourceBlacklistResp) GetResources() map[string]interface{} {
	if o == nil || IsNil(o.Resources) {
		var ret map[string]interface{}
		return ret
	}
	return o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertRuleResourceBlacklistResp) GetResourcesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Resources) {
		return map[string]interface{}{}, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *AlertRuleResourceBlacklistResp) HasResources() bool {
	if o != nil && !IsNil(o.Resources) {
		return true
	}

	return false
}

// SetResources gets a reference to the given map[string]interface{} and assigns it to the Resources field.
func (o *AlertRuleResourceBlacklistResp) SetResources(v map[string]interface{}) {
	o.Resources = v
}

func (o AlertRuleResourceBlacklistResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertRuleResourceBlacklistResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Resources) {
		toSerialize["resources"] = o.Resources
	}
	return toSerialize, nil
}

type NullableAlertRuleResourceBlacklistResp struct {
	value *AlertRuleResourceBlacklistResp
	isSet bool
}

func (v NullableAlertRuleResourceBlacklistResp) Get() *AlertRuleResourceBlacklistResp {
	return v.value
}

func (v *NullableAlertRuleResourceBlacklistResp) Set(val *AlertRuleResourceBlacklistResp) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertRuleResourceBlacklistResp) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertRuleResourceBlacklistResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertRuleResourceBlacklistResp(val *AlertRuleResourceBlacklistResp) *NullableAlertRuleResourceBlacklistResp {
	return &NullableAlertRuleResourceBlacklistResp{value: val, isSet: true}
}

func (v NullableAlertRuleResourceBlacklistResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertRuleResourceBlacklistResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


