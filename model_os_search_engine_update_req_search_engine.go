/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OSSearchEngineUpdateReqSearchEngine type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OSSearchEngineUpdateReqSearchEngine{}

// OSSearchEngineUpdateReqSearchEngine struct for OSSearchEngineUpdateReqSearchEngine
type OSSearchEngineUpdateReqSearchEngine struct {
	GatewayDataSize *int64 `json:"gateway_data_size,omitempty"`
	GatewayFlavorId *int64 `json:"gateway_flavor_id,omitempty"`
}

// NewOSSearchEngineUpdateReqSearchEngine instantiates a new OSSearchEngineUpdateReqSearchEngine object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOSSearchEngineUpdateReqSearchEngine() *OSSearchEngineUpdateReqSearchEngine {
	this := OSSearchEngineUpdateReqSearchEngine{}
	return &this
}

// NewOSSearchEngineUpdateReqSearchEngineWithDefaults instantiates a new OSSearchEngineUpdateReqSearchEngine object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOSSearchEngineUpdateReqSearchEngineWithDefaults() *OSSearchEngineUpdateReqSearchEngine {
	this := OSSearchEngineUpdateReqSearchEngine{}
	return &this
}

// GetGatewayDataSize returns the GatewayDataSize field value if set, zero value otherwise.
func (o *OSSearchEngineUpdateReqSearchEngine) GetGatewayDataSize() int64 {
	if o == nil || IsNil(o.GatewayDataSize) {
		var ret int64
		return ret
	}
	return *o.GatewayDataSize
}

// GetGatewayDataSizeOk returns a tuple with the GatewayDataSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSSearchEngineUpdateReqSearchEngine) GetGatewayDataSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.GatewayDataSize) {
		return nil, false
	}
	return o.GatewayDataSize, true
}

// HasGatewayDataSize returns a boolean if a field has been set.
func (o *OSSearchEngineUpdateReqSearchEngine) HasGatewayDataSize() bool {
	if o != nil && !IsNil(o.GatewayDataSize) {
		return true
	}

	return false
}

// SetGatewayDataSize gets a reference to the given int64 and assigns it to the GatewayDataSize field.
func (o *OSSearchEngineUpdateReqSearchEngine) SetGatewayDataSize(v int64) {
	o.GatewayDataSize = &v
}

// GetGatewayFlavorId returns the GatewayFlavorId field value if set, zero value otherwise.
func (o *OSSearchEngineUpdateReqSearchEngine) GetGatewayFlavorId() int64 {
	if o == nil || IsNil(o.GatewayFlavorId) {
		var ret int64
		return ret
	}
	return *o.GatewayFlavorId
}

// GetGatewayFlavorIdOk returns a tuple with the GatewayFlavorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSSearchEngineUpdateReqSearchEngine) GetGatewayFlavorIdOk() (*int64, bool) {
	if o == nil || IsNil(o.GatewayFlavorId) {
		return nil, false
	}
	return o.GatewayFlavorId, true
}

// HasGatewayFlavorId returns a boolean if a field has been set.
func (o *OSSearchEngineUpdateReqSearchEngine) HasGatewayFlavorId() bool {
	if o != nil && !IsNil(o.GatewayFlavorId) {
		return true
	}

	return false
}

// SetGatewayFlavorId gets a reference to the given int64 and assigns it to the GatewayFlavorId field.
func (o *OSSearchEngineUpdateReqSearchEngine) SetGatewayFlavorId(v int64) {
	o.GatewayFlavorId = &v
}

func (o OSSearchEngineUpdateReqSearchEngine) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OSSearchEngineUpdateReqSearchEngine) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GatewayDataSize) {
		toSerialize["gateway_data_size"] = o.GatewayDataSize
	}
	if !IsNil(o.GatewayFlavorId) {
		toSerialize["gateway_flavor_id"] = o.GatewayFlavorId
	}
	return toSerialize, nil
}

type NullableOSSearchEngineUpdateReqSearchEngine struct {
	value *OSSearchEngineUpdateReqSearchEngine
	isSet bool
}

func (v NullableOSSearchEngineUpdateReqSearchEngine) Get() *OSSearchEngineUpdateReqSearchEngine {
	return v.value
}

func (v *NullableOSSearchEngineUpdateReqSearchEngine) Set(val *OSSearchEngineUpdateReqSearchEngine) {
	v.value = val
	v.isSet = true
}

func (v NullableOSSearchEngineUpdateReqSearchEngine) IsSet() bool {
	return v.isSet
}

func (v *NullableOSSearchEngineUpdateReqSearchEngine) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSSearchEngineUpdateReqSearchEngine(val *OSSearchEngineUpdateReqSearchEngine) *NullableOSSearchEngineUpdateReqSearchEngine {
	return &NullableOSSearchEngineUpdateReqSearchEngine{value: val, isSet: true}
}

func (v NullableOSSearchEngineUpdateReqSearchEngine) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSSearchEngineUpdateReqSearchEngine) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


