/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DfsHdfsRemoveIPWhiteListReqHdfs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsHdfsRemoveIPWhiteListReqHdfs{}

// DfsHdfsRemoveIPWhiteListReqHdfs struct for DfsHdfsRemoveIPWhiteListReqHdfs
type DfsHdfsRemoveIPWhiteListReqHdfs struct {
	DfsHdfsIpWhiteListIds []int64 `json:"dfs_hdfs_ip_white_list_ids"`
}

type _DfsHdfsRemoveIPWhiteListReqHdfs DfsHdfsRemoveIPWhiteListReqHdfs

// NewDfsHdfsRemoveIPWhiteListReqHdfs instantiates a new DfsHdfsRemoveIPWhiteListReqHdfs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsHdfsRemoveIPWhiteListReqHdfs(dfsHdfsIpWhiteListIds []int64) *DfsHdfsRemoveIPWhiteListReqHdfs {
	this := DfsHdfsRemoveIPWhiteListReqHdfs{}
	this.DfsHdfsIpWhiteListIds = dfsHdfsIpWhiteListIds
	return &this
}

// NewDfsHdfsRemoveIPWhiteListReqHdfsWithDefaults instantiates a new DfsHdfsRemoveIPWhiteListReqHdfs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsHdfsRemoveIPWhiteListReqHdfsWithDefaults() *DfsHdfsRemoveIPWhiteListReqHdfs {
	this := DfsHdfsRemoveIPWhiteListReqHdfs{}
	return &this
}

// GetDfsHdfsIpWhiteListIds returns the DfsHdfsIpWhiteListIds field value
func (o *DfsHdfsRemoveIPWhiteListReqHdfs) GetDfsHdfsIpWhiteListIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}

	return o.DfsHdfsIpWhiteListIds
}

// GetDfsHdfsIpWhiteListIdsOk returns a tuple with the DfsHdfsIpWhiteListIds field value
// and a boolean to check if the value has been set.
func (o *DfsHdfsRemoveIPWhiteListReqHdfs) GetDfsHdfsIpWhiteListIdsOk() ([]int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.DfsHdfsIpWhiteListIds, true
}

// SetDfsHdfsIpWhiteListIds sets field value
func (o *DfsHdfsRemoveIPWhiteListReqHdfs) SetDfsHdfsIpWhiteListIds(v []int64) {
	o.DfsHdfsIpWhiteListIds = v
}

func (o DfsHdfsRemoveIPWhiteListReqHdfs) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsHdfsRemoveIPWhiteListReqHdfs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dfs_hdfs_ip_white_list_ids"] = o.DfsHdfsIpWhiteListIds
	return toSerialize, nil
}

func (o *DfsHdfsRemoveIPWhiteListReqHdfs) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dfs_hdfs_ip_white_list_ids",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDfsHdfsRemoveIPWhiteListReqHdfs := _DfsHdfsRemoveIPWhiteListReqHdfs{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDfsHdfsRemoveIPWhiteListReqHdfs)

	if err != nil {
		return err
	}

	*o = DfsHdfsRemoveIPWhiteListReqHdfs(varDfsHdfsRemoveIPWhiteListReqHdfs)

	return err
}

type NullableDfsHdfsRemoveIPWhiteListReqHdfs struct {
	value *DfsHdfsRemoveIPWhiteListReqHdfs
	isSet bool
}

func (v NullableDfsHdfsRemoveIPWhiteListReqHdfs) Get() *DfsHdfsRemoveIPWhiteListReqHdfs {
	return v.value
}

func (v *NullableDfsHdfsRemoveIPWhiteListReqHdfs) Set(val *DfsHdfsRemoveIPWhiteListReqHdfs) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsHdfsRemoveIPWhiteListReqHdfs) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsHdfsRemoveIPWhiteListReqHdfs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsHdfsRemoveIPWhiteListReqHdfs(val *DfsHdfsRemoveIPWhiteListReqHdfs) *NullableDfsHdfsRemoveIPWhiteListReqHdfs {
	return &NullableDfsHdfsRemoveIPWhiteListReqHdfs{value: val, isSet: true}
}

func (v NullableDfsHdfsRemoveIPWhiteListReqHdfs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsHdfsRemoveIPWhiteListReqHdfs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


