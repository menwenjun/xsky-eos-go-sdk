/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OSBucketQosUserRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OSBucketQosUserRequest{}

// OSBucketQosUserRequest OSBucketQosUserRequest defines os bucket user request qos info
type OSBucketQosUserRequest struct {
	MaxBandwidthBytes int64 `json:"max_bandwidth_bytes"`
	RequestsPerSecond int64 `json:"requests_per_second"`
	SuddenBandwidthBytes *int64 `json:"sudden_bandwidth_bytes,omitempty"`
}

type _OSBucketQosUserRequest OSBucketQosUserRequest

// NewOSBucketQosUserRequest instantiates a new OSBucketQosUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOSBucketQosUserRequest(maxBandwidthBytes int64, requestsPerSecond int64) *OSBucketQosUserRequest {
	this := OSBucketQosUserRequest{}
	this.MaxBandwidthBytes = maxBandwidthBytes
	this.RequestsPerSecond = requestsPerSecond
	return &this
}

// NewOSBucketQosUserRequestWithDefaults instantiates a new OSBucketQosUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOSBucketQosUserRequestWithDefaults() *OSBucketQosUserRequest {
	this := OSBucketQosUserRequest{}
	return &this
}

// GetMaxBandwidthBytes returns the MaxBandwidthBytes field value
func (o *OSBucketQosUserRequest) GetMaxBandwidthBytes() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.MaxBandwidthBytes
}

// GetMaxBandwidthBytesOk returns a tuple with the MaxBandwidthBytes field value
// and a boolean to check if the value has been set.
func (o *OSBucketQosUserRequest) GetMaxBandwidthBytesOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxBandwidthBytes, true
}

// SetMaxBandwidthBytes sets field value
func (o *OSBucketQosUserRequest) SetMaxBandwidthBytes(v int64) {
	o.MaxBandwidthBytes = v
}

// GetRequestsPerSecond returns the RequestsPerSecond field value
func (o *OSBucketQosUserRequest) GetRequestsPerSecond() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.RequestsPerSecond
}

// GetRequestsPerSecondOk returns a tuple with the RequestsPerSecond field value
// and a boolean to check if the value has been set.
func (o *OSBucketQosUserRequest) GetRequestsPerSecondOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestsPerSecond, true
}

// SetRequestsPerSecond sets field value
func (o *OSBucketQosUserRequest) SetRequestsPerSecond(v int64) {
	o.RequestsPerSecond = v
}

// GetSuddenBandwidthBytes returns the SuddenBandwidthBytes field value if set, zero value otherwise.
func (o *OSBucketQosUserRequest) GetSuddenBandwidthBytes() int64 {
	if o == nil || IsNil(o.SuddenBandwidthBytes) {
		var ret int64
		return ret
	}
	return *o.SuddenBandwidthBytes
}

// GetSuddenBandwidthBytesOk returns a tuple with the SuddenBandwidthBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSBucketQosUserRequest) GetSuddenBandwidthBytesOk() (*int64, bool) {
	if o == nil || IsNil(o.SuddenBandwidthBytes) {
		return nil, false
	}
	return o.SuddenBandwidthBytes, true
}

// HasSuddenBandwidthBytes returns a boolean if a field has been set.
func (o *OSBucketQosUserRequest) HasSuddenBandwidthBytes() bool {
	if o != nil && !IsNil(o.SuddenBandwidthBytes) {
		return true
	}

	return false
}

// SetSuddenBandwidthBytes gets a reference to the given int64 and assigns it to the SuddenBandwidthBytes field.
func (o *OSBucketQosUserRequest) SetSuddenBandwidthBytes(v int64) {
	o.SuddenBandwidthBytes = &v
}

func (o OSBucketQosUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OSBucketQosUserRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["max_bandwidth_bytes"] = o.MaxBandwidthBytes
	toSerialize["requests_per_second"] = o.RequestsPerSecond
	if !IsNil(o.SuddenBandwidthBytes) {
		toSerialize["sudden_bandwidth_bytes"] = o.SuddenBandwidthBytes
	}
	return toSerialize, nil
}

func (o *OSBucketQosUserRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"max_bandwidth_bytes",
		"requests_per_second",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOSBucketQosUserRequest := _OSBucketQosUserRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOSBucketQosUserRequest)

	if err != nil {
		return err
	}

	*o = OSBucketQosUserRequest(varOSBucketQosUserRequest)

	return err
}

type NullableOSBucketQosUserRequest struct {
	value *OSBucketQosUserRequest
	isSet bool
}

func (v NullableOSBucketQosUserRequest) Get() *OSBucketQosUserRequest {
	return v.value
}

func (v *NullableOSBucketQosUserRequest) Set(val *OSBucketQosUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOSBucketQosUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOSBucketQosUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSBucketQosUserRequest(val *OSBucketQosUserRequest) *NullableOSBucketQosUserRequest {
	return &NullableOSBucketQosUserRequest{value: val, isSet: true}
}

func (v NullableOSBucketQosUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSBucketQosUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


