/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ZoneExtendedInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ZoneExtendedInfo{}

// ZoneExtendedInfo ZoneExtendedInfo defines the response content of osp extended zone info related API
type ZoneExtendedInfo struct {
	Datacenters []DataCenter `json:"datacenters,omitempty"`
	Fsid *string `json:"fsid,omitempty"`
	Gateways []Gateway `json:"gateways,omitempty"`
	HostNodes []HostNode `json:"host_nodes,omitempty"`
	Id *int64 `json:"id,omitempty"`
	MetadataActionStatus *string `json:"metadata_action_status,omitempty"`
	MetadataName *string `json:"metadata_name,omitempty"`
	MetadataStatus *string `json:"metadata_status,omitempty"`
	Name *string `json:"name,omitempty"`
	Routings []Routing `json:"routings,omitempty"`
}

// NewZoneExtendedInfo instantiates a new ZoneExtendedInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewZoneExtendedInfo() *ZoneExtendedInfo {
	this := ZoneExtendedInfo{}
	return &this
}

// NewZoneExtendedInfoWithDefaults instantiates a new ZoneExtendedInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewZoneExtendedInfoWithDefaults() *ZoneExtendedInfo {
	this := ZoneExtendedInfo{}
	return &this
}

// GetDatacenters returns the Datacenters field value if set, zero value otherwise.
func (o *ZoneExtendedInfo) GetDatacenters() []DataCenter {
	if o == nil || IsNil(o.Datacenters) {
		var ret []DataCenter
		return ret
	}
	return o.Datacenters
}

// GetDatacentersOk returns a tuple with the Datacenters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneExtendedInfo) GetDatacentersOk() ([]DataCenter, bool) {
	if o == nil || IsNil(o.Datacenters) {
		return nil, false
	}
	return o.Datacenters, true
}

// HasDatacenters returns a boolean if a field has been set.
func (o *ZoneExtendedInfo) HasDatacenters() bool {
	if o != nil && !IsNil(o.Datacenters) {
		return true
	}

	return false
}

// SetDatacenters gets a reference to the given []DataCenter and assigns it to the Datacenters field.
func (o *ZoneExtendedInfo) SetDatacenters(v []DataCenter) {
	o.Datacenters = v
}

// GetFsid returns the Fsid field value if set, zero value otherwise.
func (o *ZoneExtendedInfo) GetFsid() string {
	if o == nil || IsNil(o.Fsid) {
		var ret string
		return ret
	}
	return *o.Fsid
}

// GetFsidOk returns a tuple with the Fsid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneExtendedInfo) GetFsidOk() (*string, bool) {
	if o == nil || IsNil(o.Fsid) {
		return nil, false
	}
	return o.Fsid, true
}

// HasFsid returns a boolean if a field has been set.
func (o *ZoneExtendedInfo) HasFsid() bool {
	if o != nil && !IsNil(o.Fsid) {
		return true
	}

	return false
}

// SetFsid gets a reference to the given string and assigns it to the Fsid field.
func (o *ZoneExtendedInfo) SetFsid(v string) {
	o.Fsid = &v
}

// GetGateways returns the Gateways field value if set, zero value otherwise.
func (o *ZoneExtendedInfo) GetGateways() []Gateway {
	if o == nil || IsNil(o.Gateways) {
		var ret []Gateway
		return ret
	}
	return o.Gateways
}

// GetGatewaysOk returns a tuple with the Gateways field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneExtendedInfo) GetGatewaysOk() ([]Gateway, bool) {
	if o == nil || IsNil(o.Gateways) {
		return nil, false
	}
	return o.Gateways, true
}

// HasGateways returns a boolean if a field has been set.
func (o *ZoneExtendedInfo) HasGateways() bool {
	if o != nil && !IsNil(o.Gateways) {
		return true
	}

	return false
}

// SetGateways gets a reference to the given []Gateway and assigns it to the Gateways field.
func (o *ZoneExtendedInfo) SetGateways(v []Gateway) {
	o.Gateways = v
}

// GetHostNodes returns the HostNodes field value if set, zero value otherwise.
func (o *ZoneExtendedInfo) GetHostNodes() []HostNode {
	if o == nil || IsNil(o.HostNodes) {
		var ret []HostNode
		return ret
	}
	return o.HostNodes
}

// GetHostNodesOk returns a tuple with the HostNodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneExtendedInfo) GetHostNodesOk() ([]HostNode, bool) {
	if o == nil || IsNil(o.HostNodes) {
		return nil, false
	}
	return o.HostNodes, true
}

// HasHostNodes returns a boolean if a field has been set.
func (o *ZoneExtendedInfo) HasHostNodes() bool {
	if o != nil && !IsNil(o.HostNodes) {
		return true
	}

	return false
}

// SetHostNodes gets a reference to the given []HostNode and assigns it to the HostNodes field.
func (o *ZoneExtendedInfo) SetHostNodes(v []HostNode) {
	o.HostNodes = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ZoneExtendedInfo) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneExtendedInfo) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ZoneExtendedInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ZoneExtendedInfo) SetId(v int64) {
	o.Id = &v
}

// GetMetadataActionStatus returns the MetadataActionStatus field value if set, zero value otherwise.
func (o *ZoneExtendedInfo) GetMetadataActionStatus() string {
	if o == nil || IsNil(o.MetadataActionStatus) {
		var ret string
		return ret
	}
	return *o.MetadataActionStatus
}

// GetMetadataActionStatusOk returns a tuple with the MetadataActionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneExtendedInfo) GetMetadataActionStatusOk() (*string, bool) {
	if o == nil || IsNil(o.MetadataActionStatus) {
		return nil, false
	}
	return o.MetadataActionStatus, true
}

// HasMetadataActionStatus returns a boolean if a field has been set.
func (o *ZoneExtendedInfo) HasMetadataActionStatus() bool {
	if o != nil && !IsNil(o.MetadataActionStatus) {
		return true
	}

	return false
}

// SetMetadataActionStatus gets a reference to the given string and assigns it to the MetadataActionStatus field.
func (o *ZoneExtendedInfo) SetMetadataActionStatus(v string) {
	o.MetadataActionStatus = &v
}

// GetMetadataName returns the MetadataName field value if set, zero value otherwise.
func (o *ZoneExtendedInfo) GetMetadataName() string {
	if o == nil || IsNil(o.MetadataName) {
		var ret string
		return ret
	}
	return *o.MetadataName
}

// GetMetadataNameOk returns a tuple with the MetadataName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneExtendedInfo) GetMetadataNameOk() (*string, bool) {
	if o == nil || IsNil(o.MetadataName) {
		return nil, false
	}
	return o.MetadataName, true
}

// HasMetadataName returns a boolean if a field has been set.
func (o *ZoneExtendedInfo) HasMetadataName() bool {
	if o != nil && !IsNil(o.MetadataName) {
		return true
	}

	return false
}

// SetMetadataName gets a reference to the given string and assigns it to the MetadataName field.
func (o *ZoneExtendedInfo) SetMetadataName(v string) {
	o.MetadataName = &v
}

// GetMetadataStatus returns the MetadataStatus field value if set, zero value otherwise.
func (o *ZoneExtendedInfo) GetMetadataStatus() string {
	if o == nil || IsNil(o.MetadataStatus) {
		var ret string
		return ret
	}
	return *o.MetadataStatus
}

// GetMetadataStatusOk returns a tuple with the MetadataStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneExtendedInfo) GetMetadataStatusOk() (*string, bool) {
	if o == nil || IsNil(o.MetadataStatus) {
		return nil, false
	}
	return o.MetadataStatus, true
}

// HasMetadataStatus returns a boolean if a field has been set.
func (o *ZoneExtendedInfo) HasMetadataStatus() bool {
	if o != nil && !IsNil(o.MetadataStatus) {
		return true
	}

	return false
}

// SetMetadataStatus gets a reference to the given string and assigns it to the MetadataStatus field.
func (o *ZoneExtendedInfo) SetMetadataStatus(v string) {
	o.MetadataStatus = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ZoneExtendedInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneExtendedInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ZoneExtendedInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ZoneExtendedInfo) SetName(v string) {
	o.Name = &v
}

// GetRoutings returns the Routings field value if set, zero value otherwise.
func (o *ZoneExtendedInfo) GetRoutings() []Routing {
	if o == nil || IsNil(o.Routings) {
		var ret []Routing
		return ret
	}
	return o.Routings
}

// GetRoutingsOk returns a tuple with the Routings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ZoneExtendedInfo) GetRoutingsOk() ([]Routing, bool) {
	if o == nil || IsNil(o.Routings) {
		return nil, false
	}
	return o.Routings, true
}

// HasRoutings returns a boolean if a field has been set.
func (o *ZoneExtendedInfo) HasRoutings() bool {
	if o != nil && !IsNil(o.Routings) {
		return true
	}

	return false
}

// SetRoutings gets a reference to the given []Routing and assigns it to the Routings field.
func (o *ZoneExtendedInfo) SetRoutings(v []Routing) {
	o.Routings = v
}

func (o ZoneExtendedInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ZoneExtendedInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Datacenters) {
		toSerialize["datacenters"] = o.Datacenters
	}
	if !IsNil(o.Fsid) {
		toSerialize["fsid"] = o.Fsid
	}
	if !IsNil(o.Gateways) {
		toSerialize["gateways"] = o.Gateways
	}
	if !IsNil(o.HostNodes) {
		toSerialize["host_nodes"] = o.HostNodes
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.MetadataActionStatus) {
		toSerialize["metadata_action_status"] = o.MetadataActionStatus
	}
	if !IsNil(o.MetadataName) {
		toSerialize["metadata_name"] = o.MetadataName
	}
	if !IsNil(o.MetadataStatus) {
		toSerialize["metadata_status"] = o.MetadataStatus
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Routings) {
		toSerialize["routings"] = o.Routings
	}
	return toSerialize, nil
}

type NullableZoneExtendedInfo struct {
	value *ZoneExtendedInfo
	isSet bool
}

func (v NullableZoneExtendedInfo) Get() *ZoneExtendedInfo {
	return v.value
}

func (v *NullableZoneExtendedInfo) Set(val *ZoneExtendedInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableZoneExtendedInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableZoneExtendedInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableZoneExtendedInfo(val *ZoneExtendedInfo) *NullableZoneExtendedInfo {
	return &NullableZoneExtendedInfo{value: val, isSet: true}
}

func (v NullableZoneExtendedInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableZoneExtendedInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


