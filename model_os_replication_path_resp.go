/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OSReplicationPathResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OSReplicationPathResp{}

// OSReplicationPathResp struct for OSReplicationPathResp
type OSReplicationPathResp struct {
	OsReplicationPath *OSReplicationPath `json:"os_replication_path,omitempty"`
}

// NewOSReplicationPathResp instantiates a new OSReplicationPathResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOSReplicationPathResp() *OSReplicationPathResp {
	this := OSReplicationPathResp{}
	return &this
}

// NewOSReplicationPathRespWithDefaults instantiates a new OSReplicationPathResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOSReplicationPathRespWithDefaults() *OSReplicationPathResp {
	this := OSReplicationPathResp{}
	return &this
}

// GetOsReplicationPath returns the OsReplicationPath field value if set, zero value otherwise.
func (o *OSReplicationPathResp) GetOsReplicationPath() OSReplicationPath {
	if o == nil || IsNil(o.OsReplicationPath) {
		var ret OSReplicationPath
		return ret
	}
	return *o.OsReplicationPath
}

// GetOsReplicationPathOk returns a tuple with the OsReplicationPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSReplicationPathResp) GetOsReplicationPathOk() (*OSReplicationPath, bool) {
	if o == nil || IsNil(o.OsReplicationPath) {
		return nil, false
	}
	return o.OsReplicationPath, true
}

// HasOsReplicationPath returns a boolean if a field has been set.
func (o *OSReplicationPathResp) HasOsReplicationPath() bool {
	if o != nil && !IsNil(o.OsReplicationPath) {
		return true
	}

	return false
}

// SetOsReplicationPath gets a reference to the given OSReplicationPath and assigns it to the OsReplicationPath field.
func (o *OSReplicationPathResp) SetOsReplicationPath(v OSReplicationPath) {
	o.OsReplicationPath = &v
}

func (o OSReplicationPathResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OSReplicationPathResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OsReplicationPath) {
		toSerialize["os_replication_path"] = o.OsReplicationPath
	}
	return toSerialize, nil
}

type NullableOSReplicationPathResp struct {
	value *OSReplicationPathResp
	isSet bool
}

func (v NullableOSReplicationPathResp) Get() *OSReplicationPathResp {
	return v.value
}

func (v *NullableOSReplicationPathResp) Set(val *OSReplicationPathResp) {
	v.value = val
	v.isSet = true
}

func (v NullableOSReplicationPathResp) IsSet() bool {
	return v.isSet
}

func (v *NullableOSReplicationPathResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSReplicationPathResp(val *OSReplicationPathResp) *NullableOSReplicationPathResp {
	return &NullableOSReplicationPathResp{value: val, isSet: true}
}

func (v NullableOSReplicationPathResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSReplicationPathResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


