/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the HostEncSpecCreateReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HostEncSpecCreateReq{}

// HostEncSpecCreateReq struct for HostEncSpecCreateReq
type HostEncSpecCreateReq struct {
	HostEncSpec *HostEncSpecCreateReqHostEncSpec `json:"host_enc_spec,omitempty"`
}

// NewHostEncSpecCreateReq instantiates a new HostEncSpecCreateReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHostEncSpecCreateReq() *HostEncSpecCreateReq {
	this := HostEncSpecCreateReq{}
	return &this
}

// NewHostEncSpecCreateReqWithDefaults instantiates a new HostEncSpecCreateReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHostEncSpecCreateReqWithDefaults() *HostEncSpecCreateReq {
	this := HostEncSpecCreateReq{}
	return &this
}

// GetHostEncSpec returns the HostEncSpec field value if set, zero value otherwise.
func (o *HostEncSpecCreateReq) GetHostEncSpec() HostEncSpecCreateReqHostEncSpec {
	if o == nil || IsNil(o.HostEncSpec) {
		var ret HostEncSpecCreateReqHostEncSpec
		return ret
	}
	return *o.HostEncSpec
}

// GetHostEncSpecOk returns a tuple with the HostEncSpec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostEncSpecCreateReq) GetHostEncSpecOk() (*HostEncSpecCreateReqHostEncSpec, bool) {
	if o == nil || IsNil(o.HostEncSpec) {
		return nil, false
	}
	return o.HostEncSpec, true
}

// HasHostEncSpec returns a boolean if a field has been set.
func (o *HostEncSpecCreateReq) HasHostEncSpec() bool {
	if o != nil && !IsNil(o.HostEncSpec) {
		return true
	}

	return false
}

// SetHostEncSpec gets a reference to the given HostEncSpecCreateReqHostEncSpec and assigns it to the HostEncSpec field.
func (o *HostEncSpecCreateReq) SetHostEncSpec(v HostEncSpecCreateReqHostEncSpec) {
	o.HostEncSpec = &v
}

func (o HostEncSpecCreateReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HostEncSpecCreateReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HostEncSpec) {
		toSerialize["host_enc_spec"] = o.HostEncSpec
	}
	return toSerialize, nil
}

type NullableHostEncSpecCreateReq struct {
	value *HostEncSpecCreateReq
	isSet bool
}

func (v NullableHostEncSpecCreateReq) Get() *HostEncSpecCreateReq {
	return v.value
}

func (v *NullableHostEncSpecCreateReq) Set(val *HostEncSpecCreateReq) {
	v.value = val
	v.isSet = true
}

func (v NullableHostEncSpecCreateReq) IsSet() bool {
	return v.isSet
}

func (v *NullableHostEncSpecCreateReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHostEncSpecCreateReq(val *HostEncSpecCreateReq) *NullableHostEncSpecCreateReq {
	return &NullableHostEncSpecCreateReq{value: val, isSet: true}
}

func (v NullableHostEncSpecCreateReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHostEncSpecCreateReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


