/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the NetworkDiagnosisCreateReqDiagnosis type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkDiagnosisCreateReqDiagnosis{}

// NetworkDiagnosisCreateReqDiagnosis struct for NetworkDiagnosisCreateReqDiagnosis
type NetworkDiagnosisCreateReqDiagnosis struct {
	// ids of host
	HostIds []int64 `json:"host_ids"`
	// host scope
	HostScope string `json:"host_scope"`
	// network types
	Networks []string `json:"networks"`
}

type _NetworkDiagnosisCreateReqDiagnosis NetworkDiagnosisCreateReqDiagnosis

// NewNetworkDiagnosisCreateReqDiagnosis instantiates a new NetworkDiagnosisCreateReqDiagnosis object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkDiagnosisCreateReqDiagnosis(hostIds []int64, hostScope string, networks []string) *NetworkDiagnosisCreateReqDiagnosis {
	this := NetworkDiagnosisCreateReqDiagnosis{}
	this.HostIds = hostIds
	this.HostScope = hostScope
	this.Networks = networks
	return &this
}

// NewNetworkDiagnosisCreateReqDiagnosisWithDefaults instantiates a new NetworkDiagnosisCreateReqDiagnosis object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkDiagnosisCreateReqDiagnosisWithDefaults() *NetworkDiagnosisCreateReqDiagnosis {
	this := NetworkDiagnosisCreateReqDiagnosis{}
	return &this
}

// GetHostIds returns the HostIds field value
func (o *NetworkDiagnosisCreateReqDiagnosis) GetHostIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}

	return o.HostIds
}

// GetHostIdsOk returns a tuple with the HostIds field value
// and a boolean to check if the value has been set.
func (o *NetworkDiagnosisCreateReqDiagnosis) GetHostIdsOk() ([]int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.HostIds, true
}

// SetHostIds sets field value
func (o *NetworkDiagnosisCreateReqDiagnosis) SetHostIds(v []int64) {
	o.HostIds = v
}

// GetHostScope returns the HostScope field value
func (o *NetworkDiagnosisCreateReqDiagnosis) GetHostScope() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HostScope
}

// GetHostScopeOk returns a tuple with the HostScope field value
// and a boolean to check if the value has been set.
func (o *NetworkDiagnosisCreateReqDiagnosis) GetHostScopeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HostScope, true
}

// SetHostScope sets field value
func (o *NetworkDiagnosisCreateReqDiagnosis) SetHostScope(v string) {
	o.HostScope = v
}

// GetNetworks returns the Networks field value
func (o *NetworkDiagnosisCreateReqDiagnosis) GetNetworks() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Networks
}

// GetNetworksOk returns a tuple with the Networks field value
// and a boolean to check if the value has been set.
func (o *NetworkDiagnosisCreateReqDiagnosis) GetNetworksOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Networks, true
}

// SetNetworks sets field value
func (o *NetworkDiagnosisCreateReqDiagnosis) SetNetworks(v []string) {
	o.Networks = v
}

func (o NetworkDiagnosisCreateReqDiagnosis) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkDiagnosisCreateReqDiagnosis) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["host_ids"] = o.HostIds
	toSerialize["host_scope"] = o.HostScope
	toSerialize["networks"] = o.Networks
	return toSerialize, nil
}

func (o *NetworkDiagnosisCreateReqDiagnosis) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"host_ids",
		"host_scope",
		"networks",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNetworkDiagnosisCreateReqDiagnosis := _NetworkDiagnosisCreateReqDiagnosis{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varNetworkDiagnosisCreateReqDiagnosis)

	if err != nil {
		return err
	}

	*o = NetworkDiagnosisCreateReqDiagnosis(varNetworkDiagnosisCreateReqDiagnosis)

	return err
}

type NullableNetworkDiagnosisCreateReqDiagnosis struct {
	value *NetworkDiagnosisCreateReqDiagnosis
	isSet bool
}

func (v NullableNetworkDiagnosisCreateReqDiagnosis) Get() *NetworkDiagnosisCreateReqDiagnosis {
	return v.value
}

func (v *NullableNetworkDiagnosisCreateReqDiagnosis) Set(val *NetworkDiagnosisCreateReqDiagnosis) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkDiagnosisCreateReqDiagnosis) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkDiagnosisCreateReqDiagnosis) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkDiagnosisCreateReqDiagnosis(val *NetworkDiagnosisCreateReqDiagnosis) *NullableNetworkDiagnosisCreateReqDiagnosis {
	return &NullableNetworkDiagnosisCreateReqDiagnosis{value: val, isSet: true}
}

func (v NullableNetworkDiagnosisCreateReqDiagnosis) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkDiagnosisCreateReqDiagnosis) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


