/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EmptyPoolCreateReqPool type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmptyPoolCreateReqPool{}

// EmptyPoolCreateReqPool struct for EmptyPoolCreateReqPool
type EmptyPoolCreateReqPool struct {
	Cache *EmptyPoolCreateReqPoolCache `json:"cache,omitempty"`
	ClusterId *int64 `json:"cluster_id,omitempty"`
	CodingChunkNum *int64 `json:"coding_chunk_num,omitempty"`
	DataChunkNum *int64 `json:"data_chunk_num,omitempty"`
	DeviceType *string `json:"device_type,omitempty"`
	EncryptEnabled *bool `json:"encrypt_enabled,omitempty"`
	FailureDomainType *string `json:"failure_domain_type,omitempty"`
	MinAllocSize *int64 `json:"min_alloc_size,omitempty"`
	Name *string `json:"name,omitempty"`
	NumaBindPolicy *string `json:"numa_bind_policy,omitempty"`
	NumaEnabled *bool `json:"numa_enabled,omitempty"`
	OsdNumPerHost *int64 `json:"osd_num_per_host,omitempty"`
	OutFailureDomainNum *int64 `json:"out_failure_domain_num,omitempty"`
	PoolName *string `json:"pool_name,omitempty"`
	PoolRole *string `json:"pool_role,omitempty"`
	PoolType *string `json:"pool_type,omitempty"`
	ProductType *string `json:"product_type,omitempty"`
	ProtectionDomainId *int64 `json:"protection_domain_id,omitempty"`
	Size *int64 `json:"size,omitempty"`
	SizePerOsd *int64 `json:"size_per_osd,omitempty"`
	Stretched *bool `json:"stretched,omitempty"`
	ThinProvisioned *bool `json:"thin_provisioned,omitempty"`
	TransportMode *string `json:"transport_mode,omitempty"`
}

// NewEmptyPoolCreateReqPool instantiates a new EmptyPoolCreateReqPool object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmptyPoolCreateReqPool() *EmptyPoolCreateReqPool {
	this := EmptyPoolCreateReqPool{}
	return &this
}

// NewEmptyPoolCreateReqPoolWithDefaults instantiates a new EmptyPoolCreateReqPool object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmptyPoolCreateReqPoolWithDefaults() *EmptyPoolCreateReqPool {
	this := EmptyPoolCreateReqPool{}
	return &this
}

// GetCache returns the Cache field value if set, zero value otherwise.
func (o *EmptyPoolCreateReqPool) GetCache() EmptyPoolCreateReqPoolCache {
	if o == nil || IsNil(o.Cache) {
		var ret EmptyPoolCreateReqPoolCache
		return ret
	}
	return *o.Cache
}

// GetCacheOk returns a tuple with the Cache field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmptyPoolCreateReqPool) GetCacheOk() (*EmptyPoolCreateReqPoolCache, bool) {
	if o == nil || IsNil(o.Cache) {
		return nil, false
	}
	return o.Cache, true
}

// HasCache returns a boolean if a field has been set.
func (o *EmptyPoolCreateReqPool) HasCache() bool {
	if o != nil && !IsNil(o.Cache) {
		return true
	}

	return false
}

// SetCache gets a reference to the given EmptyPoolCreateReqPoolCache and assigns it to the Cache field.
func (o *EmptyPoolCreateReqPool) SetCache(v EmptyPoolCreateReqPoolCache) {
	o.Cache = &v
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise.
func (o *EmptyPoolCreateReqPool) GetClusterId() int64 {
	if o == nil || IsNil(o.ClusterId) {
		var ret int64
		return ret
	}
	return *o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmptyPoolCreateReqPool) GetClusterIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ClusterId) {
		return nil, false
	}
	return o.ClusterId, true
}

// HasClusterId returns a boolean if a field has been set.
func (o *EmptyPoolCreateReqPool) HasClusterId() bool {
	if o != nil && !IsNil(o.ClusterId) {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given int64 and assigns it to the ClusterId field.
func (o *EmptyPoolCreateReqPool) SetClusterId(v int64) {
	o.ClusterId = &v
}

// GetCodingChunkNum returns the CodingChunkNum field value if set, zero value otherwise.
func (o *EmptyPoolCreateReqPool) GetCodingChunkNum() int64 {
	if o == nil || IsNil(o.CodingChunkNum) {
		var ret int64
		return ret
	}
	return *o.CodingChunkNum
}

// GetCodingChunkNumOk returns a tuple with the CodingChunkNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmptyPoolCreateReqPool) GetCodingChunkNumOk() (*int64, bool) {
	if o == nil || IsNil(o.CodingChunkNum) {
		return nil, false
	}
	return o.CodingChunkNum, true
}

// HasCodingChunkNum returns a boolean if a field has been set.
func (o *EmptyPoolCreateReqPool) HasCodingChunkNum() bool {
	if o != nil && !IsNil(o.CodingChunkNum) {
		return true
	}

	return false
}

// SetCodingChunkNum gets a reference to the given int64 and assigns it to the CodingChunkNum field.
func (o *EmptyPoolCreateReqPool) SetCodingChunkNum(v int64) {
	o.CodingChunkNum = &v
}

// GetDataChunkNum returns the DataChunkNum field value if set, zero value otherwise.
func (o *EmptyPoolCreateReqPool) GetDataChunkNum() int64 {
	if o == nil || IsNil(o.DataChunkNum) {
		var ret int64
		return ret
	}
	return *o.DataChunkNum
}

// GetDataChunkNumOk returns a tuple with the DataChunkNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmptyPoolCreateReqPool) GetDataChunkNumOk() (*int64, bool) {
	if o == nil || IsNil(o.DataChunkNum) {
		return nil, false
	}
	return o.DataChunkNum, true
}

// HasDataChunkNum returns a boolean if a field has been set.
func (o *EmptyPoolCreateReqPool) HasDataChunkNum() bool {
	if o != nil && !IsNil(o.DataChunkNum) {
		return true
	}

	return false
}

// SetDataChunkNum gets a reference to the given int64 and assigns it to the DataChunkNum field.
func (o *EmptyPoolCreateReqPool) SetDataChunkNum(v int64) {
	o.DataChunkNum = &v
}

// GetDeviceType returns the DeviceType field value if set, zero value otherwise.
func (o *EmptyPoolCreateReqPool) GetDeviceType() string {
	if o == nil || IsNil(o.DeviceType) {
		var ret string
		return ret
	}
	return *o.DeviceType
}

// GetDeviceTypeOk returns a tuple with the DeviceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmptyPoolCreateReqPool) GetDeviceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DeviceType) {
		return nil, false
	}
	return o.DeviceType, true
}

// HasDeviceType returns a boolean if a field has been set.
func (o *EmptyPoolCreateReqPool) HasDeviceType() bool {
	if o != nil && !IsNil(o.DeviceType) {
		return true
	}

	return false
}

// SetDeviceType gets a reference to the given string and assigns it to the DeviceType field.
func (o *EmptyPoolCreateReqPool) SetDeviceType(v string) {
	o.DeviceType = &v
}

// GetEncryptEnabled returns the EncryptEnabled field value if set, zero value otherwise.
func (o *EmptyPoolCreateReqPool) GetEncryptEnabled() bool {
	if o == nil || IsNil(o.EncryptEnabled) {
		var ret bool
		return ret
	}
	return *o.EncryptEnabled
}

// GetEncryptEnabledOk returns a tuple with the EncryptEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmptyPoolCreateReqPool) GetEncryptEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.EncryptEnabled) {
		return nil, false
	}
	return o.EncryptEnabled, true
}

// HasEncryptEnabled returns a boolean if a field has been set.
func (o *EmptyPoolCreateReqPool) HasEncryptEnabled() bool {
	if o != nil && !IsNil(o.EncryptEnabled) {
		return true
	}

	return false
}

// SetEncryptEnabled gets a reference to the given bool and assigns it to the EncryptEnabled field.
func (o *EmptyPoolCreateReqPool) SetEncryptEnabled(v bool) {
	o.EncryptEnabled = &v
}

// GetFailureDomainType returns the FailureDomainType field value if set, zero value otherwise.
func (o *EmptyPoolCreateReqPool) GetFailureDomainType() string {
	if o == nil || IsNil(o.FailureDomainType) {
		var ret string
		return ret
	}
	return *o.FailureDomainType
}

// GetFailureDomainTypeOk returns a tuple with the FailureDomainType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmptyPoolCreateReqPool) GetFailureDomainTypeOk() (*string, bool) {
	if o == nil || IsNil(o.FailureDomainType) {
		return nil, false
	}
	return o.FailureDomainType, true
}

// HasFailureDomainType returns a boolean if a field has been set.
func (o *EmptyPoolCreateReqPool) HasFailureDomainType() bool {
	if o != nil && !IsNil(o.FailureDomainType) {
		return true
	}

	return false
}

// SetFailureDomainType gets a reference to the given string and assigns it to the FailureDomainType field.
func (o *EmptyPoolCreateReqPool) SetFailureDomainType(v string) {
	o.FailureDomainType = &v
}

// GetMinAllocSize returns the MinAllocSize field value if set, zero value otherwise.
func (o *EmptyPoolCreateReqPool) GetMinAllocSize() int64 {
	if o == nil || IsNil(o.MinAllocSize) {
		var ret int64
		return ret
	}
	return *o.MinAllocSize
}

// GetMinAllocSizeOk returns a tuple with the MinAllocSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmptyPoolCreateReqPool) GetMinAllocSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.MinAllocSize) {
		return nil, false
	}
	return o.MinAllocSize, true
}

// HasMinAllocSize returns a boolean if a field has been set.
func (o *EmptyPoolCreateReqPool) HasMinAllocSize() bool {
	if o != nil && !IsNil(o.MinAllocSize) {
		return true
	}

	return false
}

// SetMinAllocSize gets a reference to the given int64 and assigns it to the MinAllocSize field.
func (o *EmptyPoolCreateReqPool) SetMinAllocSize(v int64) {
	o.MinAllocSize = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *EmptyPoolCreateReqPool) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmptyPoolCreateReqPool) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *EmptyPoolCreateReqPool) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *EmptyPoolCreateReqPool) SetName(v string) {
	o.Name = &v
}

// GetNumaBindPolicy returns the NumaBindPolicy field value if set, zero value otherwise.
func (o *EmptyPoolCreateReqPool) GetNumaBindPolicy() string {
	if o == nil || IsNil(o.NumaBindPolicy) {
		var ret string
		return ret
	}
	return *o.NumaBindPolicy
}

// GetNumaBindPolicyOk returns a tuple with the NumaBindPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmptyPoolCreateReqPool) GetNumaBindPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.NumaBindPolicy) {
		return nil, false
	}
	return o.NumaBindPolicy, true
}

// HasNumaBindPolicy returns a boolean if a field has been set.
func (o *EmptyPoolCreateReqPool) HasNumaBindPolicy() bool {
	if o != nil && !IsNil(o.NumaBindPolicy) {
		return true
	}

	return false
}

// SetNumaBindPolicy gets a reference to the given string and assigns it to the NumaBindPolicy field.
func (o *EmptyPoolCreateReqPool) SetNumaBindPolicy(v string) {
	o.NumaBindPolicy = &v
}

// GetNumaEnabled returns the NumaEnabled field value if set, zero value otherwise.
func (o *EmptyPoolCreateReqPool) GetNumaEnabled() bool {
	if o == nil || IsNil(o.NumaEnabled) {
		var ret bool
		return ret
	}
	return *o.NumaEnabled
}

// GetNumaEnabledOk returns a tuple with the NumaEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmptyPoolCreateReqPool) GetNumaEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.NumaEnabled) {
		return nil, false
	}
	return o.NumaEnabled, true
}

// HasNumaEnabled returns a boolean if a field has been set.
func (o *EmptyPoolCreateReqPool) HasNumaEnabled() bool {
	if o != nil && !IsNil(o.NumaEnabled) {
		return true
	}

	return false
}

// SetNumaEnabled gets a reference to the given bool and assigns it to the NumaEnabled field.
func (o *EmptyPoolCreateReqPool) SetNumaEnabled(v bool) {
	o.NumaEnabled = &v
}

// GetOsdNumPerHost returns the OsdNumPerHost field value if set, zero value otherwise.
func (o *EmptyPoolCreateReqPool) GetOsdNumPerHost() int64 {
	if o == nil || IsNil(o.OsdNumPerHost) {
		var ret int64
		return ret
	}
	return *o.OsdNumPerHost
}

// GetOsdNumPerHostOk returns a tuple with the OsdNumPerHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmptyPoolCreateReqPool) GetOsdNumPerHostOk() (*int64, bool) {
	if o == nil || IsNil(o.OsdNumPerHost) {
		return nil, false
	}
	return o.OsdNumPerHost, true
}

// HasOsdNumPerHost returns a boolean if a field has been set.
func (o *EmptyPoolCreateReqPool) HasOsdNumPerHost() bool {
	if o != nil && !IsNil(o.OsdNumPerHost) {
		return true
	}

	return false
}

// SetOsdNumPerHost gets a reference to the given int64 and assigns it to the OsdNumPerHost field.
func (o *EmptyPoolCreateReqPool) SetOsdNumPerHost(v int64) {
	o.OsdNumPerHost = &v
}

// GetOutFailureDomainNum returns the OutFailureDomainNum field value if set, zero value otherwise.
func (o *EmptyPoolCreateReqPool) GetOutFailureDomainNum() int64 {
	if o == nil || IsNil(o.OutFailureDomainNum) {
		var ret int64
		return ret
	}
	return *o.OutFailureDomainNum
}

// GetOutFailureDomainNumOk returns a tuple with the OutFailureDomainNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmptyPoolCreateReqPool) GetOutFailureDomainNumOk() (*int64, bool) {
	if o == nil || IsNil(o.OutFailureDomainNum) {
		return nil, false
	}
	return o.OutFailureDomainNum, true
}

// HasOutFailureDomainNum returns a boolean if a field has been set.
func (o *EmptyPoolCreateReqPool) HasOutFailureDomainNum() bool {
	if o != nil && !IsNil(o.OutFailureDomainNum) {
		return true
	}

	return false
}

// SetOutFailureDomainNum gets a reference to the given int64 and assigns it to the OutFailureDomainNum field.
func (o *EmptyPoolCreateReqPool) SetOutFailureDomainNum(v int64) {
	o.OutFailureDomainNum = &v
}

// GetPoolName returns the PoolName field value if set, zero value otherwise.
func (o *EmptyPoolCreateReqPool) GetPoolName() string {
	if o == nil || IsNil(o.PoolName) {
		var ret string
		return ret
	}
	return *o.PoolName
}

// GetPoolNameOk returns a tuple with the PoolName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmptyPoolCreateReqPool) GetPoolNameOk() (*string, bool) {
	if o == nil || IsNil(o.PoolName) {
		return nil, false
	}
	return o.PoolName, true
}

// HasPoolName returns a boolean if a field has been set.
func (o *EmptyPoolCreateReqPool) HasPoolName() bool {
	if o != nil && !IsNil(o.PoolName) {
		return true
	}

	return false
}

// SetPoolName gets a reference to the given string and assigns it to the PoolName field.
func (o *EmptyPoolCreateReqPool) SetPoolName(v string) {
	o.PoolName = &v
}

// GetPoolRole returns the PoolRole field value if set, zero value otherwise.
func (o *EmptyPoolCreateReqPool) GetPoolRole() string {
	if o == nil || IsNil(o.PoolRole) {
		var ret string
		return ret
	}
	return *o.PoolRole
}

// GetPoolRoleOk returns a tuple with the PoolRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmptyPoolCreateReqPool) GetPoolRoleOk() (*string, bool) {
	if o == nil || IsNil(o.PoolRole) {
		return nil, false
	}
	return o.PoolRole, true
}

// HasPoolRole returns a boolean if a field has been set.
func (o *EmptyPoolCreateReqPool) HasPoolRole() bool {
	if o != nil && !IsNil(o.PoolRole) {
		return true
	}

	return false
}

// SetPoolRole gets a reference to the given string and assigns it to the PoolRole field.
func (o *EmptyPoolCreateReqPool) SetPoolRole(v string) {
	o.PoolRole = &v
}

// GetPoolType returns the PoolType field value if set, zero value otherwise.
func (o *EmptyPoolCreateReqPool) GetPoolType() string {
	if o == nil || IsNil(o.PoolType) {
		var ret string
		return ret
	}
	return *o.PoolType
}

// GetPoolTypeOk returns a tuple with the PoolType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmptyPoolCreateReqPool) GetPoolTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PoolType) {
		return nil, false
	}
	return o.PoolType, true
}

// HasPoolType returns a boolean if a field has been set.
func (o *EmptyPoolCreateReqPool) HasPoolType() bool {
	if o != nil && !IsNil(o.PoolType) {
		return true
	}

	return false
}

// SetPoolType gets a reference to the given string and assigns it to the PoolType field.
func (o *EmptyPoolCreateReqPool) SetPoolType(v string) {
	o.PoolType = &v
}

// GetProductType returns the ProductType field value if set, zero value otherwise.
func (o *EmptyPoolCreateReqPool) GetProductType() string {
	if o == nil || IsNil(o.ProductType) {
		var ret string
		return ret
	}
	return *o.ProductType
}

// GetProductTypeOk returns a tuple with the ProductType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmptyPoolCreateReqPool) GetProductTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ProductType) {
		return nil, false
	}
	return o.ProductType, true
}

// HasProductType returns a boolean if a field has been set.
func (o *EmptyPoolCreateReqPool) HasProductType() bool {
	if o != nil && !IsNil(o.ProductType) {
		return true
	}

	return false
}

// SetProductType gets a reference to the given string and assigns it to the ProductType field.
func (o *EmptyPoolCreateReqPool) SetProductType(v string) {
	o.ProductType = &v
}

// GetProtectionDomainId returns the ProtectionDomainId field value if set, zero value otherwise.
func (o *EmptyPoolCreateReqPool) GetProtectionDomainId() int64 {
	if o == nil || IsNil(o.ProtectionDomainId) {
		var ret int64
		return ret
	}
	return *o.ProtectionDomainId
}

// GetProtectionDomainIdOk returns a tuple with the ProtectionDomainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmptyPoolCreateReqPool) GetProtectionDomainIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ProtectionDomainId) {
		return nil, false
	}
	return o.ProtectionDomainId, true
}

// HasProtectionDomainId returns a boolean if a field has been set.
func (o *EmptyPoolCreateReqPool) HasProtectionDomainId() bool {
	if o != nil && !IsNil(o.ProtectionDomainId) {
		return true
	}

	return false
}

// SetProtectionDomainId gets a reference to the given int64 and assigns it to the ProtectionDomainId field.
func (o *EmptyPoolCreateReqPool) SetProtectionDomainId(v int64) {
	o.ProtectionDomainId = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *EmptyPoolCreateReqPool) GetSize() int64 {
	if o == nil || IsNil(o.Size) {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmptyPoolCreateReqPool) GetSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *EmptyPoolCreateReqPool) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *EmptyPoolCreateReqPool) SetSize(v int64) {
	o.Size = &v
}

// GetSizePerOsd returns the SizePerOsd field value if set, zero value otherwise.
func (o *EmptyPoolCreateReqPool) GetSizePerOsd() int64 {
	if o == nil || IsNil(o.SizePerOsd) {
		var ret int64
		return ret
	}
	return *o.SizePerOsd
}

// GetSizePerOsdOk returns a tuple with the SizePerOsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmptyPoolCreateReqPool) GetSizePerOsdOk() (*int64, bool) {
	if o == nil || IsNil(o.SizePerOsd) {
		return nil, false
	}
	return o.SizePerOsd, true
}

// HasSizePerOsd returns a boolean if a field has been set.
func (o *EmptyPoolCreateReqPool) HasSizePerOsd() bool {
	if o != nil && !IsNil(o.SizePerOsd) {
		return true
	}

	return false
}

// SetSizePerOsd gets a reference to the given int64 and assigns it to the SizePerOsd field.
func (o *EmptyPoolCreateReqPool) SetSizePerOsd(v int64) {
	o.SizePerOsd = &v
}

// GetStretched returns the Stretched field value if set, zero value otherwise.
func (o *EmptyPoolCreateReqPool) GetStretched() bool {
	if o == nil || IsNil(o.Stretched) {
		var ret bool
		return ret
	}
	return *o.Stretched
}

// GetStretchedOk returns a tuple with the Stretched field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmptyPoolCreateReqPool) GetStretchedOk() (*bool, bool) {
	if o == nil || IsNil(o.Stretched) {
		return nil, false
	}
	return o.Stretched, true
}

// HasStretched returns a boolean if a field has been set.
func (o *EmptyPoolCreateReqPool) HasStretched() bool {
	if o != nil && !IsNil(o.Stretched) {
		return true
	}

	return false
}

// SetStretched gets a reference to the given bool and assigns it to the Stretched field.
func (o *EmptyPoolCreateReqPool) SetStretched(v bool) {
	o.Stretched = &v
}

// GetThinProvisioned returns the ThinProvisioned field value if set, zero value otherwise.
func (o *EmptyPoolCreateReqPool) GetThinProvisioned() bool {
	if o == nil || IsNil(o.ThinProvisioned) {
		var ret bool
		return ret
	}
	return *o.ThinProvisioned
}

// GetThinProvisionedOk returns a tuple with the ThinProvisioned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmptyPoolCreateReqPool) GetThinProvisionedOk() (*bool, bool) {
	if o == nil || IsNil(o.ThinProvisioned) {
		return nil, false
	}
	return o.ThinProvisioned, true
}

// HasThinProvisioned returns a boolean if a field has been set.
func (o *EmptyPoolCreateReqPool) HasThinProvisioned() bool {
	if o != nil && !IsNil(o.ThinProvisioned) {
		return true
	}

	return false
}

// SetThinProvisioned gets a reference to the given bool and assigns it to the ThinProvisioned field.
func (o *EmptyPoolCreateReqPool) SetThinProvisioned(v bool) {
	o.ThinProvisioned = &v
}

// GetTransportMode returns the TransportMode field value if set, zero value otherwise.
func (o *EmptyPoolCreateReqPool) GetTransportMode() string {
	if o == nil || IsNil(o.TransportMode) {
		var ret string
		return ret
	}
	return *o.TransportMode
}

// GetTransportModeOk returns a tuple with the TransportMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmptyPoolCreateReqPool) GetTransportModeOk() (*string, bool) {
	if o == nil || IsNil(o.TransportMode) {
		return nil, false
	}
	return o.TransportMode, true
}

// HasTransportMode returns a boolean if a field has been set.
func (o *EmptyPoolCreateReqPool) HasTransportMode() bool {
	if o != nil && !IsNil(o.TransportMode) {
		return true
	}

	return false
}

// SetTransportMode gets a reference to the given string and assigns it to the TransportMode field.
func (o *EmptyPoolCreateReqPool) SetTransportMode(v string) {
	o.TransportMode = &v
}

func (o EmptyPoolCreateReqPool) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmptyPoolCreateReqPool) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cache) {
		toSerialize["cache"] = o.Cache
	}
	if !IsNil(o.ClusterId) {
		toSerialize["cluster_id"] = o.ClusterId
	}
	if !IsNil(o.CodingChunkNum) {
		toSerialize["coding_chunk_num"] = o.CodingChunkNum
	}
	if !IsNil(o.DataChunkNum) {
		toSerialize["data_chunk_num"] = o.DataChunkNum
	}
	if !IsNil(o.DeviceType) {
		toSerialize["device_type"] = o.DeviceType
	}
	if !IsNil(o.EncryptEnabled) {
		toSerialize["encrypt_enabled"] = o.EncryptEnabled
	}
	if !IsNil(o.FailureDomainType) {
		toSerialize["failure_domain_type"] = o.FailureDomainType
	}
	if !IsNil(o.MinAllocSize) {
		toSerialize["min_alloc_size"] = o.MinAllocSize
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NumaBindPolicy) {
		toSerialize["numa_bind_policy"] = o.NumaBindPolicy
	}
	if !IsNil(o.NumaEnabled) {
		toSerialize["numa_enabled"] = o.NumaEnabled
	}
	if !IsNil(o.OsdNumPerHost) {
		toSerialize["osd_num_per_host"] = o.OsdNumPerHost
	}
	if !IsNil(o.OutFailureDomainNum) {
		toSerialize["out_failure_domain_num"] = o.OutFailureDomainNum
	}
	if !IsNil(o.PoolName) {
		toSerialize["pool_name"] = o.PoolName
	}
	if !IsNil(o.PoolRole) {
		toSerialize["pool_role"] = o.PoolRole
	}
	if !IsNil(o.PoolType) {
		toSerialize["pool_type"] = o.PoolType
	}
	if !IsNil(o.ProductType) {
		toSerialize["product_type"] = o.ProductType
	}
	if !IsNil(o.ProtectionDomainId) {
		toSerialize["protection_domain_id"] = o.ProtectionDomainId
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.SizePerOsd) {
		toSerialize["size_per_osd"] = o.SizePerOsd
	}
	if !IsNil(o.Stretched) {
		toSerialize["stretched"] = o.Stretched
	}
	if !IsNil(o.ThinProvisioned) {
		toSerialize["thin_provisioned"] = o.ThinProvisioned
	}
	if !IsNil(o.TransportMode) {
		toSerialize["transport_mode"] = o.TransportMode
	}
	return toSerialize, nil
}

type NullableEmptyPoolCreateReqPool struct {
	value *EmptyPoolCreateReqPool
	isSet bool
}

func (v NullableEmptyPoolCreateReqPool) Get() *EmptyPoolCreateReqPool {
	return v.value
}

func (v *NullableEmptyPoolCreateReqPool) Set(val *EmptyPoolCreateReqPool) {
	v.value = val
	v.isSet = true
}

func (v NullableEmptyPoolCreateReqPool) IsSet() bool {
	return v.isSet
}

func (v *NullableEmptyPoolCreateReqPool) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmptyPoolCreateReqPool(val *EmptyPoolCreateReqPool) *NullableEmptyPoolCreateReqPool {
	return &NullableEmptyPoolCreateReqPool{value: val, isSet: true}
}

func (v NullableEmptyPoolCreateReqPool) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmptyPoolCreateReqPool) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


