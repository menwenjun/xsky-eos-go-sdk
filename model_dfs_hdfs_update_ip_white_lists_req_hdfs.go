/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DfsHdfsUpdateIPWhiteListsReqHdfs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsHdfsUpdateIPWhiteListsReqHdfs{}

// DfsHdfsUpdateIPWhiteListsReqHdfs struct for DfsHdfsUpdateIPWhiteListsReqHdfs
type DfsHdfsUpdateIPWhiteListsReqHdfs struct {
	DfsHdfsIpWhiteLists []DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt `json:"dfs_hdfs_ip_white_lists,omitempty"`
}

// NewDfsHdfsUpdateIPWhiteListsReqHdfs instantiates a new DfsHdfsUpdateIPWhiteListsReqHdfs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsHdfsUpdateIPWhiteListsReqHdfs() *DfsHdfsUpdateIPWhiteListsReqHdfs {
	this := DfsHdfsUpdateIPWhiteListsReqHdfs{}
	return &this
}

// NewDfsHdfsUpdateIPWhiteListsReqHdfsWithDefaults instantiates a new DfsHdfsUpdateIPWhiteListsReqHdfs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsHdfsUpdateIPWhiteListsReqHdfsWithDefaults() *DfsHdfsUpdateIPWhiteListsReqHdfs {
	this := DfsHdfsUpdateIPWhiteListsReqHdfs{}
	return &this
}

// GetDfsHdfsIpWhiteLists returns the DfsHdfsIpWhiteLists field value if set, zero value otherwise.
func (o *DfsHdfsUpdateIPWhiteListsReqHdfs) GetDfsHdfsIpWhiteLists() []DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt {
	if o == nil || IsNil(o.DfsHdfsIpWhiteLists) {
		var ret []DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt
		return ret
	}
	return o.DfsHdfsIpWhiteLists
}

// GetDfsHdfsIpWhiteListsOk returns a tuple with the DfsHdfsIpWhiteLists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfsUpdateIPWhiteListsReqHdfs) GetDfsHdfsIpWhiteListsOk() ([]DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt, bool) {
	if o == nil || IsNil(o.DfsHdfsIpWhiteLists) {
		return nil, false
	}
	return o.DfsHdfsIpWhiteLists, true
}

// HasDfsHdfsIpWhiteLists returns a boolean if a field has been set.
func (o *DfsHdfsUpdateIPWhiteListsReqHdfs) HasDfsHdfsIpWhiteLists() bool {
	if o != nil && !IsNil(o.DfsHdfsIpWhiteLists) {
		return true
	}

	return false
}

// SetDfsHdfsIpWhiteLists gets a reference to the given []DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt and assigns it to the DfsHdfsIpWhiteLists field.
func (o *DfsHdfsUpdateIPWhiteListsReqHdfs) SetDfsHdfsIpWhiteLists(v []DfsHdfsUpdateIPWhiteListsReqHdfsIPWhiteListsElt) {
	o.DfsHdfsIpWhiteLists = v
}

func (o DfsHdfsUpdateIPWhiteListsReqHdfs) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsHdfsUpdateIPWhiteListsReqHdfs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DfsHdfsIpWhiteLists) {
		toSerialize["dfs_hdfs_ip_white_lists"] = o.DfsHdfsIpWhiteLists
	}
	return toSerialize, nil
}

type NullableDfsHdfsUpdateIPWhiteListsReqHdfs struct {
	value *DfsHdfsUpdateIPWhiteListsReqHdfs
	isSet bool
}

func (v NullableDfsHdfsUpdateIPWhiteListsReqHdfs) Get() *DfsHdfsUpdateIPWhiteListsReqHdfs {
	return v.value
}

func (v *NullableDfsHdfsUpdateIPWhiteListsReqHdfs) Set(val *DfsHdfsUpdateIPWhiteListsReqHdfs) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsHdfsUpdateIPWhiteListsReqHdfs) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsHdfsUpdateIPWhiteListsReqHdfs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsHdfsUpdateIPWhiteListsReqHdfs(val *DfsHdfsUpdateIPWhiteListsReqHdfs) *NullableDfsHdfsUpdateIPWhiteListsReqHdfs {
	return &NullableDfsHdfsUpdateIPWhiteListsReqHdfs{value: val, isSet: true}
}

func (v NullableDfsHdfsUpdateIPWhiteListsReqHdfs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsHdfsUpdateIPWhiteListsReqHdfs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


