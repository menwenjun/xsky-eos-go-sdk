/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AlertInfoResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertInfoResp{}

// AlertInfoResp struct for AlertInfoResp
type AlertInfoResp struct {
	AlertInfo AlertInfo `json:"alert_info"`
}

type _AlertInfoResp AlertInfoResp

// NewAlertInfoResp instantiates a new AlertInfoResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertInfoResp(alertInfo AlertInfo) *AlertInfoResp {
	this := AlertInfoResp{}
	this.AlertInfo = alertInfo
	return &this
}

// NewAlertInfoRespWithDefaults instantiates a new AlertInfoResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertInfoRespWithDefaults() *AlertInfoResp {
	this := AlertInfoResp{}
	return &this
}

// GetAlertInfo returns the AlertInfo field value
func (o *AlertInfoResp) GetAlertInfo() AlertInfo {
	if o == nil {
		var ret AlertInfo
		return ret
	}

	return o.AlertInfo
}

// GetAlertInfoOk returns a tuple with the AlertInfo field value
// and a boolean to check if the value has been set.
func (o *AlertInfoResp) GetAlertInfoOk() (*AlertInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AlertInfo, true
}

// SetAlertInfo sets field value
func (o *AlertInfoResp) SetAlertInfo(v AlertInfo) {
	o.AlertInfo = v
}

func (o AlertInfoResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertInfoResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["alert_info"] = o.AlertInfo
	return toSerialize, nil
}

func (o *AlertInfoResp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"alert_info",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAlertInfoResp := _AlertInfoResp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAlertInfoResp)

	if err != nil {
		return err
	}

	*o = AlertInfoResp(varAlertInfoResp)

	return err
}

type NullableAlertInfoResp struct {
	value *AlertInfoResp
	isSet bool
}

func (v NullableAlertInfoResp) Get() *AlertInfoResp {
	return v.value
}

func (v *NullableAlertInfoResp) Set(val *AlertInfoResp) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertInfoResp) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertInfoResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertInfoResp(val *AlertInfoResp) *NullableAlertInfoResp {
	return &NullableAlertInfoResp{value: val, isSet: true}
}

func (v NullableAlertInfoResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertInfoResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


