/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CloudPlatformsResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloudPlatformsResp{}

// CloudPlatformsResp struct for CloudPlatformsResp
type CloudPlatformsResp struct {
	// cloud platforms
	CloudPlatforms []CloudPlatform `json:"cloud_platforms,omitempty"`
}

// NewCloudPlatformsResp instantiates a new CloudPlatformsResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudPlatformsResp() *CloudPlatformsResp {
	this := CloudPlatformsResp{}
	return &this
}

// NewCloudPlatformsRespWithDefaults instantiates a new CloudPlatformsResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudPlatformsRespWithDefaults() *CloudPlatformsResp {
	this := CloudPlatformsResp{}
	return &this
}

// GetCloudPlatforms returns the CloudPlatforms field value if set, zero value otherwise.
func (o *CloudPlatformsResp) GetCloudPlatforms() []CloudPlatform {
	if o == nil || IsNil(o.CloudPlatforms) {
		var ret []CloudPlatform
		return ret
	}
	return o.CloudPlatforms
}

// GetCloudPlatformsOk returns a tuple with the CloudPlatforms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudPlatformsResp) GetCloudPlatformsOk() ([]CloudPlatform, bool) {
	if o == nil || IsNil(o.CloudPlatforms) {
		return nil, false
	}
	return o.CloudPlatforms, true
}

// HasCloudPlatforms returns a boolean if a field has been set.
func (o *CloudPlatformsResp) HasCloudPlatforms() bool {
	if o != nil && !IsNil(o.CloudPlatforms) {
		return true
	}

	return false
}

// SetCloudPlatforms gets a reference to the given []CloudPlatform and assigns it to the CloudPlatforms field.
func (o *CloudPlatformsResp) SetCloudPlatforms(v []CloudPlatform) {
	o.CloudPlatforms = v
}

func (o CloudPlatformsResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudPlatformsResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CloudPlatforms) {
		toSerialize["cloud_platforms"] = o.CloudPlatforms
	}
	return toSerialize, nil
}

type NullableCloudPlatformsResp struct {
	value *CloudPlatformsResp
	isSet bool
}

func (v NullableCloudPlatformsResp) Get() *CloudPlatformsResp {
	return v.value
}

func (v *NullableCloudPlatformsResp) Set(val *CloudPlatformsResp) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudPlatformsResp) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudPlatformsResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudPlatformsResp(val *CloudPlatformsResp) *NullableCloudPlatformsResp {
	return &NullableCloudPlatformsResp{value: val, isSet: true}
}

func (v NullableCloudPlatformsResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudPlatformsResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


