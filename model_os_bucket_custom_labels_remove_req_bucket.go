/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OSBucketCustomLabelsRemoveReqBucket type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OSBucketCustomLabelsRemoveReqBucket{}

// OSBucketCustomLabelsRemoveReqBucket struct for OSBucketCustomLabelsRemoveReqBucket
type OSBucketCustomLabelsRemoveReqBucket struct {
	LabelIds []int64 `json:"label_ids"`
}

type _OSBucketCustomLabelsRemoveReqBucket OSBucketCustomLabelsRemoveReqBucket

// NewOSBucketCustomLabelsRemoveReqBucket instantiates a new OSBucketCustomLabelsRemoveReqBucket object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOSBucketCustomLabelsRemoveReqBucket(labelIds []int64) *OSBucketCustomLabelsRemoveReqBucket {
	this := OSBucketCustomLabelsRemoveReqBucket{}
	this.LabelIds = labelIds
	return &this
}

// NewOSBucketCustomLabelsRemoveReqBucketWithDefaults instantiates a new OSBucketCustomLabelsRemoveReqBucket object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOSBucketCustomLabelsRemoveReqBucketWithDefaults() *OSBucketCustomLabelsRemoveReqBucket {
	this := OSBucketCustomLabelsRemoveReqBucket{}
	return &this
}

// GetLabelIds returns the LabelIds field value
func (o *OSBucketCustomLabelsRemoveReqBucket) GetLabelIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}

	return o.LabelIds
}

// GetLabelIdsOk returns a tuple with the LabelIds field value
// and a boolean to check if the value has been set.
func (o *OSBucketCustomLabelsRemoveReqBucket) GetLabelIdsOk() ([]int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.LabelIds, true
}

// SetLabelIds sets field value
func (o *OSBucketCustomLabelsRemoveReqBucket) SetLabelIds(v []int64) {
	o.LabelIds = v
}

func (o OSBucketCustomLabelsRemoveReqBucket) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OSBucketCustomLabelsRemoveReqBucket) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["label_ids"] = o.LabelIds
	return toSerialize, nil
}

func (o *OSBucketCustomLabelsRemoveReqBucket) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"label_ids",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOSBucketCustomLabelsRemoveReqBucket := _OSBucketCustomLabelsRemoveReqBucket{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOSBucketCustomLabelsRemoveReqBucket)

	if err != nil {
		return err
	}

	*o = OSBucketCustomLabelsRemoveReqBucket(varOSBucketCustomLabelsRemoveReqBucket)

	return err
}

type NullableOSBucketCustomLabelsRemoveReqBucket struct {
	value *OSBucketCustomLabelsRemoveReqBucket
	isSet bool
}

func (v NullableOSBucketCustomLabelsRemoveReqBucket) Get() *OSBucketCustomLabelsRemoveReqBucket {
	return v.value
}

func (v *NullableOSBucketCustomLabelsRemoveReqBucket) Set(val *OSBucketCustomLabelsRemoveReqBucket) {
	v.value = val
	v.isSet = true
}

func (v NullableOSBucketCustomLabelsRemoveReqBucket) IsSet() bool {
	return v.isSet
}

func (v *NullableOSBucketCustomLabelsRemoveReqBucket) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSBucketCustomLabelsRemoveReqBucket(val *OSBucketCustomLabelsRemoveReqBucket) *NullableOSBucketCustomLabelsRemoveReqBucket {
	return &NullableOSBucketCustomLabelsRemoveReqBucket{value: val, isSet: true}
}

func (v NullableOSBucketCustomLabelsRemoveReqBucket) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSBucketCustomLabelsRemoveReqBucket) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


