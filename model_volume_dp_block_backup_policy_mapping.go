/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the VolumeDpBlockBackupPolicyMapping type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeDpBlockBackupPolicyMapping{}

// VolumeDpBlockBackupPolicyMapping VolumeDpBlockBackupPolicyMapping represent the mapping relationship of volume and dp block backup policies
type VolumeDpBlockBackupPolicyMapping struct {
	DpBlockBackupPolicy *DpBlockBackupPolicyNestview `json:"dp_block_backup_policy,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Status *string `json:"status,omitempty"`
	Volume *VolumeNestview `json:"volume,omitempty"`
}

// NewVolumeDpBlockBackupPolicyMapping instantiates a new VolumeDpBlockBackupPolicyMapping object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeDpBlockBackupPolicyMapping() *VolumeDpBlockBackupPolicyMapping {
	this := VolumeDpBlockBackupPolicyMapping{}
	return &this
}

// NewVolumeDpBlockBackupPolicyMappingWithDefaults instantiates a new VolumeDpBlockBackupPolicyMapping object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeDpBlockBackupPolicyMappingWithDefaults() *VolumeDpBlockBackupPolicyMapping {
	this := VolumeDpBlockBackupPolicyMapping{}
	return &this
}

// GetDpBlockBackupPolicy returns the DpBlockBackupPolicy field value if set, zero value otherwise.
func (o *VolumeDpBlockBackupPolicyMapping) GetDpBlockBackupPolicy() DpBlockBackupPolicyNestview {
	if o == nil || IsNil(o.DpBlockBackupPolicy) {
		var ret DpBlockBackupPolicyNestview
		return ret
	}
	return *o.DpBlockBackupPolicy
}

// GetDpBlockBackupPolicyOk returns a tuple with the DpBlockBackupPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeDpBlockBackupPolicyMapping) GetDpBlockBackupPolicyOk() (*DpBlockBackupPolicyNestview, bool) {
	if o == nil || IsNil(o.DpBlockBackupPolicy) {
		return nil, false
	}
	return o.DpBlockBackupPolicy, true
}

// HasDpBlockBackupPolicy returns a boolean if a field has been set.
func (o *VolumeDpBlockBackupPolicyMapping) HasDpBlockBackupPolicy() bool {
	if o != nil && !IsNil(o.DpBlockBackupPolicy) {
		return true
	}

	return false
}

// SetDpBlockBackupPolicy gets a reference to the given DpBlockBackupPolicyNestview and assigns it to the DpBlockBackupPolicy field.
func (o *VolumeDpBlockBackupPolicyMapping) SetDpBlockBackupPolicy(v DpBlockBackupPolicyNestview) {
	o.DpBlockBackupPolicy = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VolumeDpBlockBackupPolicyMapping) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeDpBlockBackupPolicyMapping) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VolumeDpBlockBackupPolicyMapping) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *VolumeDpBlockBackupPolicyMapping) SetId(v int64) {
	o.Id = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *VolumeDpBlockBackupPolicyMapping) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeDpBlockBackupPolicyMapping) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *VolumeDpBlockBackupPolicyMapping) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *VolumeDpBlockBackupPolicyMapping) SetStatus(v string) {
	o.Status = &v
}

// GetVolume returns the Volume field value if set, zero value otherwise.
func (o *VolumeDpBlockBackupPolicyMapping) GetVolume() VolumeNestview {
	if o == nil || IsNil(o.Volume) {
		var ret VolumeNestview
		return ret
	}
	return *o.Volume
}

// GetVolumeOk returns a tuple with the Volume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeDpBlockBackupPolicyMapping) GetVolumeOk() (*VolumeNestview, bool) {
	if o == nil || IsNil(o.Volume) {
		return nil, false
	}
	return o.Volume, true
}

// HasVolume returns a boolean if a field has been set.
func (o *VolumeDpBlockBackupPolicyMapping) HasVolume() bool {
	if o != nil && !IsNil(o.Volume) {
		return true
	}

	return false
}

// SetVolume gets a reference to the given VolumeNestview and assigns it to the Volume field.
func (o *VolumeDpBlockBackupPolicyMapping) SetVolume(v VolumeNestview) {
	o.Volume = &v
}

func (o VolumeDpBlockBackupPolicyMapping) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeDpBlockBackupPolicyMapping) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DpBlockBackupPolicy) {
		toSerialize["dp_block_backup_policy"] = o.DpBlockBackupPolicy
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Volume) {
		toSerialize["volume"] = o.Volume
	}
	return toSerialize, nil
}

type NullableVolumeDpBlockBackupPolicyMapping struct {
	value *VolumeDpBlockBackupPolicyMapping
	isSet bool
}

func (v NullableVolumeDpBlockBackupPolicyMapping) Get() *VolumeDpBlockBackupPolicyMapping {
	return v.value
}

func (v *NullableVolumeDpBlockBackupPolicyMapping) Set(val *VolumeDpBlockBackupPolicyMapping) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeDpBlockBackupPolicyMapping) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeDpBlockBackupPolicyMapping) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeDpBlockBackupPolicyMapping(val *VolumeDpBlockBackupPolicyMapping) *NullableVolumeDpBlockBackupPolicyMapping {
	return &NullableVolumeDpBlockBackupPolicyMapping{value: val, isSet: true}
}

func (v NullableVolumeDpBlockBackupPolicyMapping) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeDpBlockBackupPolicyMapping) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


