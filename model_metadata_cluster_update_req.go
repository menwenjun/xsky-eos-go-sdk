/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MetadataClusterUpdateReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetadataClusterUpdateReq{}

// MetadataClusterUpdateReq struct for MetadataClusterUpdateReq
type MetadataClusterUpdateReq struct {
	MetadataCluster *MetadataClusterUpdateReqMetadataCluster `json:"metadata_cluster,omitempty"`
}

// NewMetadataClusterUpdateReq instantiates a new MetadataClusterUpdateReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetadataClusterUpdateReq() *MetadataClusterUpdateReq {
	this := MetadataClusterUpdateReq{}
	return &this
}

// NewMetadataClusterUpdateReqWithDefaults instantiates a new MetadataClusterUpdateReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetadataClusterUpdateReqWithDefaults() *MetadataClusterUpdateReq {
	this := MetadataClusterUpdateReq{}
	return &this
}

// GetMetadataCluster returns the MetadataCluster field value if set, zero value otherwise.
func (o *MetadataClusterUpdateReq) GetMetadataCluster() MetadataClusterUpdateReqMetadataCluster {
	if o == nil || IsNil(o.MetadataCluster) {
		var ret MetadataClusterUpdateReqMetadataCluster
		return ret
	}
	return *o.MetadataCluster
}

// GetMetadataClusterOk returns a tuple with the MetadataCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataClusterUpdateReq) GetMetadataClusterOk() (*MetadataClusterUpdateReqMetadataCluster, bool) {
	if o == nil || IsNil(o.MetadataCluster) {
		return nil, false
	}
	return o.MetadataCluster, true
}

// HasMetadataCluster returns a boolean if a field has been set.
func (o *MetadataClusterUpdateReq) HasMetadataCluster() bool {
	if o != nil && !IsNil(o.MetadataCluster) {
		return true
	}

	return false
}

// SetMetadataCluster gets a reference to the given MetadataClusterUpdateReqMetadataCluster and assigns it to the MetadataCluster field.
func (o *MetadataClusterUpdateReq) SetMetadataCluster(v MetadataClusterUpdateReqMetadataCluster) {
	o.MetadataCluster = &v
}

func (o MetadataClusterUpdateReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetadataClusterUpdateReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MetadataCluster) {
		toSerialize["metadata_cluster"] = o.MetadataCluster
	}
	return toSerialize, nil
}

type NullableMetadataClusterUpdateReq struct {
	value *MetadataClusterUpdateReq
	isSet bool
}

func (v NullableMetadataClusterUpdateReq) Get() *MetadataClusterUpdateReq {
	return v.value
}

func (v *NullableMetadataClusterUpdateReq) Set(val *MetadataClusterUpdateReq) {
	v.value = val
	v.isSet = true
}

func (v NullableMetadataClusterUpdateReq) IsSet() bool {
	return v.isSet
}

func (v *NullableMetadataClusterUpdateReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetadataClusterUpdateReq(val *MetadataClusterUpdateReq) *NullableMetadataClusterUpdateReq {
	return &NullableMetadataClusterUpdateReq{value: val, isSet: true}
}

func (v NullableMetadataClusterUpdateReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetadataClusterUpdateReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


