/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DfsSnapshotUpdateReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsSnapshotUpdateReq{}

// DfsSnapshotUpdateReq struct for DfsSnapshotUpdateReq
type DfsSnapshotUpdateReq struct {
	DfsSnapshot DfsSnapshotUpdateReqDfsSnapshot `json:"dfs_snapshot"`
}

type _DfsSnapshotUpdateReq DfsSnapshotUpdateReq

// NewDfsSnapshotUpdateReq instantiates a new DfsSnapshotUpdateReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsSnapshotUpdateReq(dfsSnapshot DfsSnapshotUpdateReqDfsSnapshot) *DfsSnapshotUpdateReq {
	this := DfsSnapshotUpdateReq{}
	this.DfsSnapshot = dfsSnapshot
	return &this
}

// NewDfsSnapshotUpdateReqWithDefaults instantiates a new DfsSnapshotUpdateReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsSnapshotUpdateReqWithDefaults() *DfsSnapshotUpdateReq {
	this := DfsSnapshotUpdateReq{}
	return &this
}

// GetDfsSnapshot returns the DfsSnapshot field value
func (o *DfsSnapshotUpdateReq) GetDfsSnapshot() DfsSnapshotUpdateReqDfsSnapshot {
	if o == nil {
		var ret DfsSnapshotUpdateReqDfsSnapshot
		return ret
	}

	return o.DfsSnapshot
}

// GetDfsSnapshotOk returns a tuple with the DfsSnapshot field value
// and a boolean to check if the value has been set.
func (o *DfsSnapshotUpdateReq) GetDfsSnapshotOk() (*DfsSnapshotUpdateReqDfsSnapshot, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DfsSnapshot, true
}

// SetDfsSnapshot sets field value
func (o *DfsSnapshotUpdateReq) SetDfsSnapshot(v DfsSnapshotUpdateReqDfsSnapshot) {
	o.DfsSnapshot = v
}

func (o DfsSnapshotUpdateReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsSnapshotUpdateReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dfs_snapshot"] = o.DfsSnapshot
	return toSerialize, nil
}

func (o *DfsSnapshotUpdateReq) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dfs_snapshot",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDfsSnapshotUpdateReq := _DfsSnapshotUpdateReq{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDfsSnapshotUpdateReq)

	if err != nil {
		return err
	}

	*o = DfsSnapshotUpdateReq(varDfsSnapshotUpdateReq)

	return err
}

type NullableDfsSnapshotUpdateReq struct {
	value *DfsSnapshotUpdateReq
	isSet bool
}

func (v NullableDfsSnapshotUpdateReq) Get() *DfsSnapshotUpdateReq {
	return v.value
}

func (v *NullableDfsSnapshotUpdateReq) Set(val *DfsSnapshotUpdateReq) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsSnapshotUpdateReq) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsSnapshotUpdateReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsSnapshotUpdateReq(val *DfsSnapshotUpdateReq) *NullableDfsSnapshotUpdateReq {
	return &NullableDfsSnapshotUpdateReq{value: val, isSet: true}
}

func (v NullableDfsSnapshotUpdateReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsSnapshotUpdateReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


