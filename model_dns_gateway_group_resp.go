/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DNSGatewayGroupResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DNSGatewayGroupResp{}

// DNSGatewayGroupResp struct for DNSGatewayGroupResp
type DNSGatewayGroupResp struct {
	DnsGatewayGroup *DNSGatewayGroup `json:"dns_gateway_group,omitempty"`
}

// NewDNSGatewayGroupResp instantiates a new DNSGatewayGroupResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDNSGatewayGroupResp() *DNSGatewayGroupResp {
	this := DNSGatewayGroupResp{}
	return &this
}

// NewDNSGatewayGroupRespWithDefaults instantiates a new DNSGatewayGroupResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDNSGatewayGroupRespWithDefaults() *DNSGatewayGroupResp {
	this := DNSGatewayGroupResp{}
	return &this
}

// GetDnsGatewayGroup returns the DnsGatewayGroup field value if set, zero value otherwise.
func (o *DNSGatewayGroupResp) GetDnsGatewayGroup() DNSGatewayGroup {
	if o == nil || IsNil(o.DnsGatewayGroup) {
		var ret DNSGatewayGroup
		return ret
	}
	return *o.DnsGatewayGroup
}

// GetDnsGatewayGroupOk returns a tuple with the DnsGatewayGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DNSGatewayGroupResp) GetDnsGatewayGroupOk() (*DNSGatewayGroup, bool) {
	if o == nil || IsNil(o.DnsGatewayGroup) {
		return nil, false
	}
	return o.DnsGatewayGroup, true
}

// HasDnsGatewayGroup returns a boolean if a field has been set.
func (o *DNSGatewayGroupResp) HasDnsGatewayGroup() bool {
	if o != nil && !IsNil(o.DnsGatewayGroup) {
		return true
	}

	return false
}

// SetDnsGatewayGroup gets a reference to the given DNSGatewayGroup and assigns it to the DnsGatewayGroup field.
func (o *DNSGatewayGroupResp) SetDnsGatewayGroup(v DNSGatewayGroup) {
	o.DnsGatewayGroup = &v
}

func (o DNSGatewayGroupResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DNSGatewayGroupResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DnsGatewayGroup) {
		toSerialize["dns_gateway_group"] = o.DnsGatewayGroup
	}
	return toSerialize, nil
}

type NullableDNSGatewayGroupResp struct {
	value *DNSGatewayGroupResp
	isSet bool
}

func (v NullableDNSGatewayGroupResp) Get() *DNSGatewayGroupResp {
	return v.value
}

func (v *NullableDNSGatewayGroupResp) Set(val *DNSGatewayGroupResp) {
	v.value = val
	v.isSet = true
}

func (v NullableDNSGatewayGroupResp) IsSet() bool {
	return v.isSet
}

func (v *NullableDNSGatewayGroupResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDNSGatewayGroupResp(val *DNSGatewayGroupResp) *NullableDNSGatewayGroupResp {
	return &NullableDNSGatewayGroupResp{value: val, isSet: true}
}

func (v NullableDNSGatewayGroupResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDNSGatewayGroupResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


