/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the DfsHdfsConnection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsHdfsConnection{}

// DfsHdfsConnection DfsHdfsConnection defines model of dfs hdfs connection
type DfsHdfsConnection struct {
	ClientIp *string `json:"client_ip,omitempty"`
	ClientPort *int64 `json:"client_port,omitempty"`
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	ConnectedAt *time.Time `json:"connected_at,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	DfsGateway *DfsGatewayNestview `json:"dfs_gateway,omitempty"`
	DfsGatewayZone *DfsGatewayZoneNestview `json:"dfs_gateway_zone,omitempty"`
	Hdfs *DfsHdfsNestview `json:"hdfs,omitempty"`
	Id *int64 `json:"id,omitempty"`
	ProtocolVersion *string `json:"protocol_version,omitempty"`
	Update *time.Time `json:"update,omitempty"`
	Username *string `json:"username,omitempty"`
}

// NewDfsHdfsConnection instantiates a new DfsHdfsConnection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsHdfsConnection() *DfsHdfsConnection {
	this := DfsHdfsConnection{}
	return &this
}

// NewDfsHdfsConnectionWithDefaults instantiates a new DfsHdfsConnection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsHdfsConnectionWithDefaults() *DfsHdfsConnection {
	this := DfsHdfsConnection{}
	return &this
}

// GetClientIp returns the ClientIp field value if set, zero value otherwise.
func (o *DfsHdfsConnection) GetClientIp() string {
	if o == nil || IsNil(o.ClientIp) {
		var ret string
		return ret
	}
	return *o.ClientIp
}

// GetClientIpOk returns a tuple with the ClientIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfsConnection) GetClientIpOk() (*string, bool) {
	if o == nil || IsNil(o.ClientIp) {
		return nil, false
	}
	return o.ClientIp, true
}

// HasClientIp returns a boolean if a field has been set.
func (o *DfsHdfsConnection) HasClientIp() bool {
	if o != nil && !IsNil(o.ClientIp) {
		return true
	}

	return false
}

// SetClientIp gets a reference to the given string and assigns it to the ClientIp field.
func (o *DfsHdfsConnection) SetClientIp(v string) {
	o.ClientIp = &v
}

// GetClientPort returns the ClientPort field value if set, zero value otherwise.
func (o *DfsHdfsConnection) GetClientPort() int64 {
	if o == nil || IsNil(o.ClientPort) {
		var ret int64
		return ret
	}
	return *o.ClientPort
}

// GetClientPortOk returns a tuple with the ClientPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfsConnection) GetClientPortOk() (*int64, bool) {
	if o == nil || IsNil(o.ClientPort) {
		return nil, false
	}
	return o.ClientPort, true
}

// HasClientPort returns a boolean if a field has been set.
func (o *DfsHdfsConnection) HasClientPort() bool {
	if o != nil && !IsNil(o.ClientPort) {
		return true
	}

	return false
}

// SetClientPort gets a reference to the given int64 and assigns it to the ClientPort field.
func (o *DfsHdfsConnection) SetClientPort(v int64) {
	o.ClientPort = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *DfsHdfsConnection) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfsConnection) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *DfsHdfsConnection) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *DfsHdfsConnection) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetConnectedAt returns the ConnectedAt field value if set, zero value otherwise.
func (o *DfsHdfsConnection) GetConnectedAt() time.Time {
	if o == nil || IsNil(o.ConnectedAt) {
		var ret time.Time
		return ret
	}
	return *o.ConnectedAt
}

// GetConnectedAtOk returns a tuple with the ConnectedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfsConnection) GetConnectedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ConnectedAt) {
		return nil, false
	}
	return o.ConnectedAt, true
}

// HasConnectedAt returns a boolean if a field has been set.
func (o *DfsHdfsConnection) HasConnectedAt() bool {
	if o != nil && !IsNil(o.ConnectedAt) {
		return true
	}

	return false
}

// SetConnectedAt gets a reference to the given time.Time and assigns it to the ConnectedAt field.
func (o *DfsHdfsConnection) SetConnectedAt(v time.Time) {
	o.ConnectedAt = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *DfsHdfsConnection) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfsConnection) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *DfsHdfsConnection) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *DfsHdfsConnection) SetCreate(v time.Time) {
	o.Create = &v
}

// GetDfsGateway returns the DfsGateway field value if set, zero value otherwise.
func (o *DfsHdfsConnection) GetDfsGateway() DfsGatewayNestview {
	if o == nil || IsNil(o.DfsGateway) {
		var ret DfsGatewayNestview
		return ret
	}
	return *o.DfsGateway
}

// GetDfsGatewayOk returns a tuple with the DfsGateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfsConnection) GetDfsGatewayOk() (*DfsGatewayNestview, bool) {
	if o == nil || IsNil(o.DfsGateway) {
		return nil, false
	}
	return o.DfsGateway, true
}

// HasDfsGateway returns a boolean if a field has been set.
func (o *DfsHdfsConnection) HasDfsGateway() bool {
	if o != nil && !IsNil(o.DfsGateway) {
		return true
	}

	return false
}

// SetDfsGateway gets a reference to the given DfsGatewayNestview and assigns it to the DfsGateway field.
func (o *DfsHdfsConnection) SetDfsGateway(v DfsGatewayNestview) {
	o.DfsGateway = &v
}

// GetDfsGatewayZone returns the DfsGatewayZone field value if set, zero value otherwise.
func (o *DfsHdfsConnection) GetDfsGatewayZone() DfsGatewayZoneNestview {
	if o == nil || IsNil(o.DfsGatewayZone) {
		var ret DfsGatewayZoneNestview
		return ret
	}
	return *o.DfsGatewayZone
}

// GetDfsGatewayZoneOk returns a tuple with the DfsGatewayZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfsConnection) GetDfsGatewayZoneOk() (*DfsGatewayZoneNestview, bool) {
	if o == nil || IsNil(o.DfsGatewayZone) {
		return nil, false
	}
	return o.DfsGatewayZone, true
}

// HasDfsGatewayZone returns a boolean if a field has been set.
func (o *DfsHdfsConnection) HasDfsGatewayZone() bool {
	if o != nil && !IsNil(o.DfsGatewayZone) {
		return true
	}

	return false
}

// SetDfsGatewayZone gets a reference to the given DfsGatewayZoneNestview and assigns it to the DfsGatewayZone field.
func (o *DfsHdfsConnection) SetDfsGatewayZone(v DfsGatewayZoneNestview) {
	o.DfsGatewayZone = &v
}

// GetHdfs returns the Hdfs field value if set, zero value otherwise.
func (o *DfsHdfsConnection) GetHdfs() DfsHdfsNestview {
	if o == nil || IsNil(o.Hdfs) {
		var ret DfsHdfsNestview
		return ret
	}
	return *o.Hdfs
}

// GetHdfsOk returns a tuple with the Hdfs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfsConnection) GetHdfsOk() (*DfsHdfsNestview, bool) {
	if o == nil || IsNil(o.Hdfs) {
		return nil, false
	}
	return o.Hdfs, true
}

// HasHdfs returns a boolean if a field has been set.
func (o *DfsHdfsConnection) HasHdfs() bool {
	if o != nil && !IsNil(o.Hdfs) {
		return true
	}

	return false
}

// SetHdfs gets a reference to the given DfsHdfsNestview and assigns it to the Hdfs field.
func (o *DfsHdfsConnection) SetHdfs(v DfsHdfsNestview) {
	o.Hdfs = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DfsHdfsConnection) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfsConnection) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DfsHdfsConnection) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *DfsHdfsConnection) SetId(v int64) {
	o.Id = &v
}

// GetProtocolVersion returns the ProtocolVersion field value if set, zero value otherwise.
func (o *DfsHdfsConnection) GetProtocolVersion() string {
	if o == nil || IsNil(o.ProtocolVersion) {
		var ret string
		return ret
	}
	return *o.ProtocolVersion
}

// GetProtocolVersionOk returns a tuple with the ProtocolVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfsConnection) GetProtocolVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ProtocolVersion) {
		return nil, false
	}
	return o.ProtocolVersion, true
}

// HasProtocolVersion returns a boolean if a field has been set.
func (o *DfsHdfsConnection) HasProtocolVersion() bool {
	if o != nil && !IsNil(o.ProtocolVersion) {
		return true
	}

	return false
}

// SetProtocolVersion gets a reference to the given string and assigns it to the ProtocolVersion field.
func (o *DfsHdfsConnection) SetProtocolVersion(v string) {
	o.ProtocolVersion = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *DfsHdfsConnection) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfsConnection) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *DfsHdfsConnection) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *DfsHdfsConnection) SetUpdate(v time.Time) {
	o.Update = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *DfsHdfsConnection) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfsConnection) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *DfsHdfsConnection) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *DfsHdfsConnection) SetUsername(v string) {
	o.Username = &v
}

func (o DfsHdfsConnection) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsHdfsConnection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClientIp) {
		toSerialize["client_ip"] = o.ClientIp
	}
	if !IsNil(o.ClientPort) {
		toSerialize["client_port"] = o.ClientPort
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.ConnectedAt) {
		toSerialize["connected_at"] = o.ConnectedAt
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.DfsGateway) {
		toSerialize["dfs_gateway"] = o.DfsGateway
	}
	if !IsNil(o.DfsGatewayZone) {
		toSerialize["dfs_gateway_zone"] = o.DfsGatewayZone
	}
	if !IsNil(o.Hdfs) {
		toSerialize["hdfs"] = o.Hdfs
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ProtocolVersion) {
		toSerialize["protocol_version"] = o.ProtocolVersion
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	return toSerialize, nil
}

type NullableDfsHdfsConnection struct {
	value *DfsHdfsConnection
	isSet bool
}

func (v NullableDfsHdfsConnection) Get() *DfsHdfsConnection {
	return v.value
}

func (v *NullableDfsHdfsConnection) Set(val *DfsHdfsConnection) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsHdfsConnection) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsHdfsConnection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsHdfsConnection(val *DfsHdfsConnection) *NullableDfsHdfsConnection {
	return &NullableDfsHdfsConnection{value: val, isSet: true}
}

func (v NullableDfsHdfsConnection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsHdfsConnection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


