/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DfsHdfsUpdateProxyUsersReqHdfs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsHdfsUpdateProxyUsersReqHdfs{}

// DfsHdfsUpdateProxyUsersReqHdfs struct for DfsHdfsUpdateProxyUsersReqHdfs
type DfsHdfsUpdateProxyUsersReqHdfs struct {
	DfsHdfsProxyUsers []DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt `json:"dfs_hdfs_proxy_users,omitempty"`
}

// NewDfsHdfsUpdateProxyUsersReqHdfs instantiates a new DfsHdfsUpdateProxyUsersReqHdfs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsHdfsUpdateProxyUsersReqHdfs() *DfsHdfsUpdateProxyUsersReqHdfs {
	this := DfsHdfsUpdateProxyUsersReqHdfs{}
	return &this
}

// NewDfsHdfsUpdateProxyUsersReqHdfsWithDefaults instantiates a new DfsHdfsUpdateProxyUsersReqHdfs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsHdfsUpdateProxyUsersReqHdfsWithDefaults() *DfsHdfsUpdateProxyUsersReqHdfs {
	this := DfsHdfsUpdateProxyUsersReqHdfs{}
	return &this
}

// GetDfsHdfsProxyUsers returns the DfsHdfsProxyUsers field value if set, zero value otherwise.
func (o *DfsHdfsUpdateProxyUsersReqHdfs) GetDfsHdfsProxyUsers() []DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt {
	if o == nil || IsNil(o.DfsHdfsProxyUsers) {
		var ret []DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt
		return ret
	}
	return o.DfsHdfsProxyUsers
}

// GetDfsHdfsProxyUsersOk returns a tuple with the DfsHdfsProxyUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsHdfsUpdateProxyUsersReqHdfs) GetDfsHdfsProxyUsersOk() ([]DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt, bool) {
	if o == nil || IsNil(o.DfsHdfsProxyUsers) {
		return nil, false
	}
	return o.DfsHdfsProxyUsers, true
}

// HasDfsHdfsProxyUsers returns a boolean if a field has been set.
func (o *DfsHdfsUpdateProxyUsersReqHdfs) HasDfsHdfsProxyUsers() bool {
	if o != nil && !IsNil(o.DfsHdfsProxyUsers) {
		return true
	}

	return false
}

// SetDfsHdfsProxyUsers gets a reference to the given []DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt and assigns it to the DfsHdfsProxyUsers field.
func (o *DfsHdfsUpdateProxyUsersReqHdfs) SetDfsHdfsProxyUsers(v []DfsHdfsUpdateProxyUsersReqHdfsProxyUsersElt) {
	o.DfsHdfsProxyUsers = v
}

func (o DfsHdfsUpdateProxyUsersReqHdfs) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsHdfsUpdateProxyUsersReqHdfs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DfsHdfsProxyUsers) {
		toSerialize["dfs_hdfs_proxy_users"] = o.DfsHdfsProxyUsers
	}
	return toSerialize, nil
}

type NullableDfsHdfsUpdateProxyUsersReqHdfs struct {
	value *DfsHdfsUpdateProxyUsersReqHdfs
	isSet bool
}

func (v NullableDfsHdfsUpdateProxyUsersReqHdfs) Get() *DfsHdfsUpdateProxyUsersReqHdfs {
	return v.value
}

func (v *NullableDfsHdfsUpdateProxyUsersReqHdfs) Set(val *DfsHdfsUpdateProxyUsersReqHdfs) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsHdfsUpdateProxyUsersReqHdfs) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsHdfsUpdateProxyUsersReqHdfs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsHdfsUpdateProxyUsersReqHdfs(val *DfsHdfsUpdateProxyUsersReqHdfs) *NullableDfsHdfsUpdateProxyUsersReqHdfs {
	return &NullableDfsHdfsUpdateProxyUsersReqHdfs{value: val, isSet: true}
}

func (v NullableDfsHdfsUpdateProxyUsersReqHdfs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsHdfsUpdateProxyUsersReqHdfs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


