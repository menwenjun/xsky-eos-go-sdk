/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OsdGroupNestview type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OsdGroupNestview{}

// OsdGroupNestview struct for OsdGroupNestview
type OsdGroupNestview struct {
	Id *int64 `json:"id,omitempty"`
	NumaEnabled *bool `json:"numa_enabled,omitempty"`
}

// NewOsdGroupNestview instantiates a new OsdGroupNestview object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOsdGroupNestview() *OsdGroupNestview {
	this := OsdGroupNestview{}
	return &this
}

// NewOsdGroupNestviewWithDefaults instantiates a new OsdGroupNestview object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOsdGroupNestviewWithDefaults() *OsdGroupNestview {
	this := OsdGroupNestview{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OsdGroupNestview) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsdGroupNestview) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OsdGroupNestview) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *OsdGroupNestview) SetId(v int64) {
	o.Id = &v
}

// GetNumaEnabled returns the NumaEnabled field value if set, zero value otherwise.
func (o *OsdGroupNestview) GetNumaEnabled() bool {
	if o == nil || IsNil(o.NumaEnabled) {
		var ret bool
		return ret
	}
	return *o.NumaEnabled
}

// GetNumaEnabledOk returns a tuple with the NumaEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OsdGroupNestview) GetNumaEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.NumaEnabled) {
		return nil, false
	}
	return o.NumaEnabled, true
}

// HasNumaEnabled returns a boolean if a field has been set.
func (o *OsdGroupNestview) HasNumaEnabled() bool {
	if o != nil && !IsNil(o.NumaEnabled) {
		return true
	}

	return false
}

// SetNumaEnabled gets a reference to the given bool and assigns it to the NumaEnabled field.
func (o *OsdGroupNestview) SetNumaEnabled(v bool) {
	o.NumaEnabled = &v
}

func (o OsdGroupNestview) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OsdGroupNestview) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.NumaEnabled) {
		toSerialize["numa_enabled"] = o.NumaEnabled
	}
	return toSerialize, nil
}

type NullableOsdGroupNestview struct {
	value *OsdGroupNestview
	isSet bool
}

func (v NullableOsdGroupNestview) Get() *OsdGroupNestview {
	return v.value
}

func (v *NullableOsdGroupNestview) Set(val *OsdGroupNestview) {
	v.value = val
	v.isSet = true
}

func (v NullableOsdGroupNestview) IsSet() bool {
	return v.isSet
}

func (v *NullableOsdGroupNestview) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOsdGroupNestview(val *OsdGroupNestview) *NullableOsdGroupNestview {
	return &NullableOsdGroupNestview{value: val, isSet: true}
}

func (v NullableOsdGroupNestview) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOsdGroupNestview) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


