/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the DfsSMBWindowsACLsSetJob type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsSMBWindowsACLsSetJob{}

// DfsSMBWindowsACLsSetJob DfsSMBWindowsACLsSetJob defines model of dfs smb windows acls set job
type DfsSMBWindowsACLsSetJob struct {
	AceInfo map[string]interface{} `json:"ace_info,omitempty"`
	Cluster *ClusterNestview `json:"cluster,omitempty"`
	Create *time.Time `json:"create,omitempty"`
	CurrentAceNum *int64 `json:"current_ace_num,omitempty"`
	CurrentPath *string `json:"current_path,omitempty"`
	DfsGateway *DfsGatewayNestview `json:"dfs_gateway,omitempty"`
	DfsRootfs *DfsRootfsNestview `json:"dfs_rootfs,omitempty"`
	Id *int64 `json:"id,omitempty"`
	InheritanceType *string `json:"inheritance_type,omitempty"`
	Inode *int64 `json:"inode,omitempty"`
	Path *string `json:"path,omitempty"`
	Pid *int64 `json:"pid,omitempty"`
	RemainFiles *int64 `json:"remain_files,omitempty"`
	ReplacePermission *bool `json:"replace_permission,omitempty"`
	Resume *bool `json:"resume,omitempty"`
	Status *string `json:"status,omitempty"`
	TotalFiles *int64 `json:"total_files,omitempty"`
	Update *time.Time `json:"update,omitempty"`
}

// NewDfsSMBWindowsACLsSetJob instantiates a new DfsSMBWindowsACLsSetJob object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsSMBWindowsACLsSetJob() *DfsSMBWindowsACLsSetJob {
	this := DfsSMBWindowsACLsSetJob{}
	return &this
}

// NewDfsSMBWindowsACLsSetJobWithDefaults instantiates a new DfsSMBWindowsACLsSetJob object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsSMBWindowsACLsSetJobWithDefaults() *DfsSMBWindowsACLsSetJob {
	this := DfsSMBWindowsACLsSetJob{}
	return &this
}

// GetAceInfo returns the AceInfo field value if set, zero value otherwise.
func (o *DfsSMBWindowsACLsSetJob) GetAceInfo() map[string]interface{} {
	if o == nil || IsNil(o.AceInfo) {
		var ret map[string]interface{}
		return ret
	}
	return o.AceInfo
}

// GetAceInfoOk returns a tuple with the AceInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSMBWindowsACLsSetJob) GetAceInfoOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AceInfo) {
		return map[string]interface{}{}, false
	}
	return o.AceInfo, true
}

// HasAceInfo returns a boolean if a field has been set.
func (o *DfsSMBWindowsACLsSetJob) HasAceInfo() bool {
	if o != nil && !IsNil(o.AceInfo) {
		return true
	}

	return false
}

// SetAceInfo gets a reference to the given map[string]interface{} and assigns it to the AceInfo field.
func (o *DfsSMBWindowsACLsSetJob) SetAceInfo(v map[string]interface{}) {
	o.AceInfo = v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *DfsSMBWindowsACLsSetJob) GetCluster() ClusterNestview {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterNestview
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSMBWindowsACLsSetJob) GetClusterOk() (*ClusterNestview, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *DfsSMBWindowsACLsSetJob) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterNestview and assigns it to the Cluster field.
func (o *DfsSMBWindowsACLsSetJob) SetCluster(v ClusterNestview) {
	o.Cluster = &v
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *DfsSMBWindowsACLsSetJob) GetCreate() time.Time {
	if o == nil || IsNil(o.Create) {
		var ret time.Time
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSMBWindowsACLsSetJob) GetCreateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *DfsSMBWindowsACLsSetJob) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given time.Time and assigns it to the Create field.
func (o *DfsSMBWindowsACLsSetJob) SetCreate(v time.Time) {
	o.Create = &v
}

// GetCurrentAceNum returns the CurrentAceNum field value if set, zero value otherwise.
func (o *DfsSMBWindowsACLsSetJob) GetCurrentAceNum() int64 {
	if o == nil || IsNil(o.CurrentAceNum) {
		var ret int64
		return ret
	}
	return *o.CurrentAceNum
}

// GetCurrentAceNumOk returns a tuple with the CurrentAceNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSMBWindowsACLsSetJob) GetCurrentAceNumOk() (*int64, bool) {
	if o == nil || IsNil(o.CurrentAceNum) {
		return nil, false
	}
	return o.CurrentAceNum, true
}

// HasCurrentAceNum returns a boolean if a field has been set.
func (o *DfsSMBWindowsACLsSetJob) HasCurrentAceNum() bool {
	if o != nil && !IsNil(o.CurrentAceNum) {
		return true
	}

	return false
}

// SetCurrentAceNum gets a reference to the given int64 and assigns it to the CurrentAceNum field.
func (o *DfsSMBWindowsACLsSetJob) SetCurrentAceNum(v int64) {
	o.CurrentAceNum = &v
}

// GetCurrentPath returns the CurrentPath field value if set, zero value otherwise.
func (o *DfsSMBWindowsACLsSetJob) GetCurrentPath() string {
	if o == nil || IsNil(o.CurrentPath) {
		var ret string
		return ret
	}
	return *o.CurrentPath
}

// GetCurrentPathOk returns a tuple with the CurrentPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSMBWindowsACLsSetJob) GetCurrentPathOk() (*string, bool) {
	if o == nil || IsNil(o.CurrentPath) {
		return nil, false
	}
	return o.CurrentPath, true
}

// HasCurrentPath returns a boolean if a field has been set.
func (o *DfsSMBWindowsACLsSetJob) HasCurrentPath() bool {
	if o != nil && !IsNil(o.CurrentPath) {
		return true
	}

	return false
}

// SetCurrentPath gets a reference to the given string and assigns it to the CurrentPath field.
func (o *DfsSMBWindowsACLsSetJob) SetCurrentPath(v string) {
	o.CurrentPath = &v
}

// GetDfsGateway returns the DfsGateway field value if set, zero value otherwise.
func (o *DfsSMBWindowsACLsSetJob) GetDfsGateway() DfsGatewayNestview {
	if o == nil || IsNil(o.DfsGateway) {
		var ret DfsGatewayNestview
		return ret
	}
	return *o.DfsGateway
}

// GetDfsGatewayOk returns a tuple with the DfsGateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSMBWindowsACLsSetJob) GetDfsGatewayOk() (*DfsGatewayNestview, bool) {
	if o == nil || IsNil(o.DfsGateway) {
		return nil, false
	}
	return o.DfsGateway, true
}

// HasDfsGateway returns a boolean if a field has been set.
func (o *DfsSMBWindowsACLsSetJob) HasDfsGateway() bool {
	if o != nil && !IsNil(o.DfsGateway) {
		return true
	}

	return false
}

// SetDfsGateway gets a reference to the given DfsGatewayNestview and assigns it to the DfsGateway field.
func (o *DfsSMBWindowsACLsSetJob) SetDfsGateway(v DfsGatewayNestview) {
	o.DfsGateway = &v
}

// GetDfsRootfs returns the DfsRootfs field value if set, zero value otherwise.
func (o *DfsSMBWindowsACLsSetJob) GetDfsRootfs() DfsRootfsNestview {
	if o == nil || IsNil(o.DfsRootfs) {
		var ret DfsRootfsNestview
		return ret
	}
	return *o.DfsRootfs
}

// GetDfsRootfsOk returns a tuple with the DfsRootfs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSMBWindowsACLsSetJob) GetDfsRootfsOk() (*DfsRootfsNestview, bool) {
	if o == nil || IsNil(o.DfsRootfs) {
		return nil, false
	}
	return o.DfsRootfs, true
}

// HasDfsRootfs returns a boolean if a field has been set.
func (o *DfsSMBWindowsACLsSetJob) HasDfsRootfs() bool {
	if o != nil && !IsNil(o.DfsRootfs) {
		return true
	}

	return false
}

// SetDfsRootfs gets a reference to the given DfsRootfsNestview and assigns it to the DfsRootfs field.
func (o *DfsSMBWindowsACLsSetJob) SetDfsRootfs(v DfsRootfsNestview) {
	o.DfsRootfs = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DfsSMBWindowsACLsSetJob) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSMBWindowsACLsSetJob) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DfsSMBWindowsACLsSetJob) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *DfsSMBWindowsACLsSetJob) SetId(v int64) {
	o.Id = &v
}

// GetInheritanceType returns the InheritanceType field value if set, zero value otherwise.
func (o *DfsSMBWindowsACLsSetJob) GetInheritanceType() string {
	if o == nil || IsNil(o.InheritanceType) {
		var ret string
		return ret
	}
	return *o.InheritanceType
}

// GetInheritanceTypeOk returns a tuple with the InheritanceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSMBWindowsACLsSetJob) GetInheritanceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.InheritanceType) {
		return nil, false
	}
	return o.InheritanceType, true
}

// HasInheritanceType returns a boolean if a field has been set.
func (o *DfsSMBWindowsACLsSetJob) HasInheritanceType() bool {
	if o != nil && !IsNil(o.InheritanceType) {
		return true
	}

	return false
}

// SetInheritanceType gets a reference to the given string and assigns it to the InheritanceType field.
func (o *DfsSMBWindowsACLsSetJob) SetInheritanceType(v string) {
	o.InheritanceType = &v
}

// GetInode returns the Inode field value if set, zero value otherwise.
func (o *DfsSMBWindowsACLsSetJob) GetInode() int64 {
	if o == nil || IsNil(o.Inode) {
		var ret int64
		return ret
	}
	return *o.Inode
}

// GetInodeOk returns a tuple with the Inode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSMBWindowsACLsSetJob) GetInodeOk() (*int64, bool) {
	if o == nil || IsNil(o.Inode) {
		return nil, false
	}
	return o.Inode, true
}

// HasInode returns a boolean if a field has been set.
func (o *DfsSMBWindowsACLsSetJob) HasInode() bool {
	if o != nil && !IsNil(o.Inode) {
		return true
	}

	return false
}

// SetInode gets a reference to the given int64 and assigns it to the Inode field.
func (o *DfsSMBWindowsACLsSetJob) SetInode(v int64) {
	o.Inode = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *DfsSMBWindowsACLsSetJob) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSMBWindowsACLsSetJob) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *DfsSMBWindowsACLsSetJob) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *DfsSMBWindowsACLsSetJob) SetPath(v string) {
	o.Path = &v
}

// GetPid returns the Pid field value if set, zero value otherwise.
func (o *DfsSMBWindowsACLsSetJob) GetPid() int64 {
	if o == nil || IsNil(o.Pid) {
		var ret int64
		return ret
	}
	return *o.Pid
}

// GetPidOk returns a tuple with the Pid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSMBWindowsACLsSetJob) GetPidOk() (*int64, bool) {
	if o == nil || IsNil(o.Pid) {
		return nil, false
	}
	return o.Pid, true
}

// HasPid returns a boolean if a field has been set.
func (o *DfsSMBWindowsACLsSetJob) HasPid() bool {
	if o != nil && !IsNil(o.Pid) {
		return true
	}

	return false
}

// SetPid gets a reference to the given int64 and assigns it to the Pid field.
func (o *DfsSMBWindowsACLsSetJob) SetPid(v int64) {
	o.Pid = &v
}

// GetRemainFiles returns the RemainFiles field value if set, zero value otherwise.
func (o *DfsSMBWindowsACLsSetJob) GetRemainFiles() int64 {
	if o == nil || IsNil(o.RemainFiles) {
		var ret int64
		return ret
	}
	return *o.RemainFiles
}

// GetRemainFilesOk returns a tuple with the RemainFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSMBWindowsACLsSetJob) GetRemainFilesOk() (*int64, bool) {
	if o == nil || IsNil(o.RemainFiles) {
		return nil, false
	}
	return o.RemainFiles, true
}

// HasRemainFiles returns a boolean if a field has been set.
func (o *DfsSMBWindowsACLsSetJob) HasRemainFiles() bool {
	if o != nil && !IsNil(o.RemainFiles) {
		return true
	}

	return false
}

// SetRemainFiles gets a reference to the given int64 and assigns it to the RemainFiles field.
func (o *DfsSMBWindowsACLsSetJob) SetRemainFiles(v int64) {
	o.RemainFiles = &v
}

// GetReplacePermission returns the ReplacePermission field value if set, zero value otherwise.
func (o *DfsSMBWindowsACLsSetJob) GetReplacePermission() bool {
	if o == nil || IsNil(o.ReplacePermission) {
		var ret bool
		return ret
	}
	return *o.ReplacePermission
}

// GetReplacePermissionOk returns a tuple with the ReplacePermission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSMBWindowsACLsSetJob) GetReplacePermissionOk() (*bool, bool) {
	if o == nil || IsNil(o.ReplacePermission) {
		return nil, false
	}
	return o.ReplacePermission, true
}

// HasReplacePermission returns a boolean if a field has been set.
func (o *DfsSMBWindowsACLsSetJob) HasReplacePermission() bool {
	if o != nil && !IsNil(o.ReplacePermission) {
		return true
	}

	return false
}

// SetReplacePermission gets a reference to the given bool and assigns it to the ReplacePermission field.
func (o *DfsSMBWindowsACLsSetJob) SetReplacePermission(v bool) {
	o.ReplacePermission = &v
}

// GetResume returns the Resume field value if set, zero value otherwise.
func (o *DfsSMBWindowsACLsSetJob) GetResume() bool {
	if o == nil || IsNil(o.Resume) {
		var ret bool
		return ret
	}
	return *o.Resume
}

// GetResumeOk returns a tuple with the Resume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSMBWindowsACLsSetJob) GetResumeOk() (*bool, bool) {
	if o == nil || IsNil(o.Resume) {
		return nil, false
	}
	return o.Resume, true
}

// HasResume returns a boolean if a field has been set.
func (o *DfsSMBWindowsACLsSetJob) HasResume() bool {
	if o != nil && !IsNil(o.Resume) {
		return true
	}

	return false
}

// SetResume gets a reference to the given bool and assigns it to the Resume field.
func (o *DfsSMBWindowsACLsSetJob) SetResume(v bool) {
	o.Resume = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DfsSMBWindowsACLsSetJob) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSMBWindowsACLsSetJob) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DfsSMBWindowsACLsSetJob) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DfsSMBWindowsACLsSetJob) SetStatus(v string) {
	o.Status = &v
}

// GetTotalFiles returns the TotalFiles field value if set, zero value otherwise.
func (o *DfsSMBWindowsACLsSetJob) GetTotalFiles() int64 {
	if o == nil || IsNil(o.TotalFiles) {
		var ret int64
		return ret
	}
	return *o.TotalFiles
}

// GetTotalFilesOk returns a tuple with the TotalFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSMBWindowsACLsSetJob) GetTotalFilesOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalFiles) {
		return nil, false
	}
	return o.TotalFiles, true
}

// HasTotalFiles returns a boolean if a field has been set.
func (o *DfsSMBWindowsACLsSetJob) HasTotalFiles() bool {
	if o != nil && !IsNil(o.TotalFiles) {
		return true
	}

	return false
}

// SetTotalFiles gets a reference to the given int64 and assigns it to the TotalFiles field.
func (o *DfsSMBWindowsACLsSetJob) SetTotalFiles(v int64) {
	o.TotalFiles = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *DfsSMBWindowsACLsSetJob) GetUpdate() time.Time {
	if o == nil || IsNil(o.Update) {
		var ret time.Time
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsSMBWindowsACLsSetJob) GetUpdateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *DfsSMBWindowsACLsSetJob) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given time.Time and assigns it to the Update field.
func (o *DfsSMBWindowsACLsSetJob) SetUpdate(v time.Time) {
	o.Update = &v
}

func (o DfsSMBWindowsACLsSetJob) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsSMBWindowsACLsSetJob) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AceInfo) {
		toSerialize["ace_info"] = o.AceInfo
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.CurrentAceNum) {
		toSerialize["current_ace_num"] = o.CurrentAceNum
	}
	if !IsNil(o.CurrentPath) {
		toSerialize["current_path"] = o.CurrentPath
	}
	if !IsNil(o.DfsGateway) {
		toSerialize["dfs_gateway"] = o.DfsGateway
	}
	if !IsNil(o.DfsRootfs) {
		toSerialize["dfs_rootfs"] = o.DfsRootfs
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.InheritanceType) {
		toSerialize["inheritance_type"] = o.InheritanceType
	}
	if !IsNil(o.Inode) {
		toSerialize["inode"] = o.Inode
	}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.Pid) {
		toSerialize["pid"] = o.Pid
	}
	if !IsNil(o.RemainFiles) {
		toSerialize["remain_files"] = o.RemainFiles
	}
	if !IsNil(o.ReplacePermission) {
		toSerialize["replace_permission"] = o.ReplacePermission
	}
	if !IsNil(o.Resume) {
		toSerialize["resume"] = o.Resume
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.TotalFiles) {
		toSerialize["total_files"] = o.TotalFiles
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	return toSerialize, nil
}

type NullableDfsSMBWindowsACLsSetJob struct {
	value *DfsSMBWindowsACLsSetJob
	isSet bool
}

func (v NullableDfsSMBWindowsACLsSetJob) Get() *DfsSMBWindowsACLsSetJob {
	return v.value
}

func (v *NullableDfsSMBWindowsACLsSetJob) Set(val *DfsSMBWindowsACLsSetJob) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsSMBWindowsACLsSetJob) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsSMBWindowsACLsSetJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsSMBWindowsACLsSetJob(val *DfsSMBWindowsACLsSetJob) *NullableDfsSMBWindowsACLsSetJob {
	return &NullableDfsSMBWindowsACLsSetJob{value: val, isSet: true}
}

func (v NullableDfsSMBWindowsACLsSetJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsSMBWindowsACLsSetJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


