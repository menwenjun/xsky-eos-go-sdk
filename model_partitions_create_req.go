/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PartitionsCreateReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PartitionsCreateReq{}

// PartitionsCreateReq struct for PartitionsCreateReq
type PartitionsCreateReq struct {
	Partitions *PartitionsCreateReqPartitions `json:"partitions,omitempty"`
}

// NewPartitionsCreateReq instantiates a new PartitionsCreateReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPartitionsCreateReq() *PartitionsCreateReq {
	this := PartitionsCreateReq{}
	return &this
}

// NewPartitionsCreateReqWithDefaults instantiates a new PartitionsCreateReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPartitionsCreateReqWithDefaults() *PartitionsCreateReq {
	this := PartitionsCreateReq{}
	return &this
}

// GetPartitions returns the Partitions field value if set, zero value otherwise.
func (o *PartitionsCreateReq) GetPartitions() PartitionsCreateReqPartitions {
	if o == nil || IsNil(o.Partitions) {
		var ret PartitionsCreateReqPartitions
		return ret
	}
	return *o.Partitions
}

// GetPartitionsOk returns a tuple with the Partitions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PartitionsCreateReq) GetPartitionsOk() (*PartitionsCreateReqPartitions, bool) {
	if o == nil || IsNil(o.Partitions) {
		return nil, false
	}
	return o.Partitions, true
}

// HasPartitions returns a boolean if a field has been set.
func (o *PartitionsCreateReq) HasPartitions() bool {
	if o != nil && !IsNil(o.Partitions) {
		return true
	}

	return false
}

// SetPartitions gets a reference to the given PartitionsCreateReqPartitions and assigns it to the Partitions field.
func (o *PartitionsCreateReq) SetPartitions(v PartitionsCreateReqPartitions) {
	o.Partitions = &v
}

func (o PartitionsCreateReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PartitionsCreateReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Partitions) {
		toSerialize["partitions"] = o.Partitions
	}
	return toSerialize, nil
}

type NullablePartitionsCreateReq struct {
	value *PartitionsCreateReq
	isSet bool
}

func (v NullablePartitionsCreateReq) Get() *PartitionsCreateReq {
	return v.value
}

func (v *NullablePartitionsCreateReq) Set(val *PartitionsCreateReq) {
	v.value = val
	v.isSet = true
}

func (v NullablePartitionsCreateReq) IsSet() bool {
	return v.isSet
}

func (v *NullablePartitionsCreateReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePartitionsCreateReq(val *PartitionsCreateReq) *NullablePartitionsCreateReq {
	return &NullablePartitionsCreateReq{value: val, isSet: true}
}

func (v NullablePartitionsCreateReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePartitionsCreateReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


