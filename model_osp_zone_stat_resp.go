/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OspZoneStatResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OspZoneStatResp{}

// OspZoneStatResp struct for OspZoneStatResp
type OspZoneStatResp struct {
	SumSamples *SumOspGatewayStat `json:"sum_samples,omitempty"`
}

// NewOspZoneStatResp instantiates a new OspZoneStatResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOspZoneStatResp() *OspZoneStatResp {
	this := OspZoneStatResp{}
	return &this
}

// NewOspZoneStatRespWithDefaults instantiates a new OspZoneStatResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOspZoneStatRespWithDefaults() *OspZoneStatResp {
	this := OspZoneStatResp{}
	return &this
}

// GetSumSamples returns the SumSamples field value if set, zero value otherwise.
func (o *OspZoneStatResp) GetSumSamples() SumOspGatewayStat {
	if o == nil || IsNil(o.SumSamples) {
		var ret SumOspGatewayStat
		return ret
	}
	return *o.SumSamples
}

// GetSumSamplesOk returns a tuple with the SumSamples field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OspZoneStatResp) GetSumSamplesOk() (*SumOspGatewayStat, bool) {
	if o == nil || IsNil(o.SumSamples) {
		return nil, false
	}
	return o.SumSamples, true
}

// HasSumSamples returns a boolean if a field has been set.
func (o *OspZoneStatResp) HasSumSamples() bool {
	if o != nil && !IsNil(o.SumSamples) {
		return true
	}

	return false
}

// SetSumSamples gets a reference to the given SumOspGatewayStat and assigns it to the SumSamples field.
func (o *OspZoneStatResp) SetSumSamples(v SumOspGatewayStat) {
	o.SumSamples = &v
}

func (o OspZoneStatResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OspZoneStatResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SumSamples) {
		toSerialize["sum_samples"] = o.SumSamples
	}
	return toSerialize, nil
}

type NullableOspZoneStatResp struct {
	value *OspZoneStatResp
	isSet bool
}

func (v NullableOspZoneStatResp) Get() *OspZoneStatResp {
	return v.value
}

func (v *NullableOspZoneStatResp) Set(val *OspZoneStatResp) {
	v.value = val
	v.isSet = true
}

func (v NullableOspZoneStatResp) IsSet() bool {
	return v.isSet
}

func (v *NullableOspZoneStatResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOspZoneStatResp(val *OspZoneStatResp) *NullableOspZoneStatResp {
	return &NullableOspZoneStatResp{value: val, isSet: true}
}

func (v NullableOspZoneStatResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOspZoneStatResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


