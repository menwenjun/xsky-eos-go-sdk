/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the IdentityProvidersRespDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentityProvidersRespDetail{}

// IdentityProvidersRespDetail struct for IdentityProvidersRespDetail
type IdentityProvidersRespDetail struct {
	Name *string `json:"name,omitempty"`
	Type *string `json:"type,omitempty"`
	Url *string `json:"url,omitempty"`
	Uuid *string `json:"uuid,omitempty"`
	Vendor *string `json:"vendor,omitempty"`
}

// NewIdentityProvidersRespDetail instantiates a new IdentityProvidersRespDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityProvidersRespDetail() *IdentityProvidersRespDetail {
	this := IdentityProvidersRespDetail{}
	return &this
}

// NewIdentityProvidersRespDetailWithDefaults instantiates a new IdentityProvidersRespDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityProvidersRespDetailWithDefaults() *IdentityProvidersRespDetail {
	this := IdentityProvidersRespDetail{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IdentityProvidersRespDetail) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProvidersRespDetail) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IdentityProvidersRespDetail) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IdentityProvidersRespDetail) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *IdentityProvidersRespDetail) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProvidersRespDetail) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *IdentityProvidersRespDetail) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *IdentityProvidersRespDetail) SetType(v string) {
	o.Type = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *IdentityProvidersRespDetail) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProvidersRespDetail) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *IdentityProvidersRespDetail) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *IdentityProvidersRespDetail) SetUrl(v string) {
	o.Url = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *IdentityProvidersRespDetail) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProvidersRespDetail) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *IdentityProvidersRespDetail) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *IdentityProvidersRespDetail) SetUuid(v string) {
	o.Uuid = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *IdentityProvidersRespDetail) GetVendor() string {
	if o == nil || IsNil(o.Vendor) {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityProvidersRespDetail) GetVendorOk() (*string, bool) {
	if o == nil || IsNil(o.Vendor) {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *IdentityProvidersRespDetail) HasVendor() bool {
	if o != nil && !IsNil(o.Vendor) {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *IdentityProvidersRespDetail) SetVendor(v string) {
	o.Vendor = &v
}

func (o IdentityProvidersRespDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentityProvidersRespDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	if !IsNil(o.Vendor) {
		toSerialize["vendor"] = o.Vendor
	}
	return toSerialize, nil
}

type NullableIdentityProvidersRespDetail struct {
	value *IdentityProvidersRespDetail
	isSet bool
}

func (v NullableIdentityProvidersRespDetail) Get() *IdentityProvidersRespDetail {
	return v.value
}

func (v *NullableIdentityProvidersRespDetail) Set(val *IdentityProvidersRespDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityProvidersRespDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityProvidersRespDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityProvidersRespDetail(val *IdentityProvidersRespDetail) *NullableIdentityProvidersRespDetail {
	return &NullableIdentityProvidersRespDetail{value: val, isSet: true}
}

func (v NullableIdentityProvidersRespDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityProvidersRespDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


