/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DfsPathPerformanceResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsPathPerformanceResp{}

// DfsPathPerformanceResp struct for DfsPathPerformanceResp
type DfsPathPerformanceResp struct {
	DfsPathPerformance *DfsPathPerformance `json:"dfs_path_performance,omitempty"`
}

// NewDfsPathPerformanceResp instantiates a new DfsPathPerformanceResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsPathPerformanceResp() *DfsPathPerformanceResp {
	this := DfsPathPerformanceResp{}
	return &this
}

// NewDfsPathPerformanceRespWithDefaults instantiates a new DfsPathPerformanceResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsPathPerformanceRespWithDefaults() *DfsPathPerformanceResp {
	this := DfsPathPerformanceResp{}
	return &this
}

// GetDfsPathPerformance returns the DfsPathPerformance field value if set, zero value otherwise.
func (o *DfsPathPerformanceResp) GetDfsPathPerformance() DfsPathPerformance {
	if o == nil || IsNil(o.DfsPathPerformance) {
		var ret DfsPathPerformance
		return ret
	}
	return *o.DfsPathPerformance
}

// GetDfsPathPerformanceOk returns a tuple with the DfsPathPerformance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsPathPerformanceResp) GetDfsPathPerformanceOk() (*DfsPathPerformance, bool) {
	if o == nil || IsNil(o.DfsPathPerformance) {
		return nil, false
	}
	return o.DfsPathPerformance, true
}

// HasDfsPathPerformance returns a boolean if a field has been set.
func (o *DfsPathPerformanceResp) HasDfsPathPerformance() bool {
	if o != nil && !IsNil(o.DfsPathPerformance) {
		return true
	}

	return false
}

// SetDfsPathPerformance gets a reference to the given DfsPathPerformance and assigns it to the DfsPathPerformance field.
func (o *DfsPathPerformanceResp) SetDfsPathPerformance(v DfsPathPerformance) {
	o.DfsPathPerformance = &v
}

func (o DfsPathPerformanceResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsPathPerformanceResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DfsPathPerformance) {
		toSerialize["dfs_path_performance"] = o.DfsPathPerformance
	}
	return toSerialize, nil
}

type NullableDfsPathPerformanceResp struct {
	value *DfsPathPerformanceResp
	isSet bool
}

func (v NullableDfsPathPerformanceResp) Get() *DfsPathPerformanceResp {
	return v.value
}

func (v *NullableDfsPathPerformanceResp) Set(val *DfsPathPerformanceResp) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsPathPerformanceResp) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsPathPerformanceResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsPathPerformanceResp(val *DfsPathPerformanceResp) *NullableDfsPathPerformanceResp {
	return &NullableDfsPathPerformanceResp{value: val, isSet: true}
}

func (v NullableDfsPathPerformanceResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsPathPerformanceResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


