/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DNSGatewayGroupRemoveGatewayReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DNSGatewayGroupRemoveGatewayReq{}

// DNSGatewayGroupRemoveGatewayReq struct for DNSGatewayGroupRemoveGatewayReq
type DNSGatewayGroupRemoveGatewayReq struct {
	DnsGateways []DNSGatewayGroupRemoveGatewayReqGatewaysElt `json:"dns_gateways,omitempty"`
}

// NewDNSGatewayGroupRemoveGatewayReq instantiates a new DNSGatewayGroupRemoveGatewayReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDNSGatewayGroupRemoveGatewayReq() *DNSGatewayGroupRemoveGatewayReq {
	this := DNSGatewayGroupRemoveGatewayReq{}
	return &this
}

// NewDNSGatewayGroupRemoveGatewayReqWithDefaults instantiates a new DNSGatewayGroupRemoveGatewayReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDNSGatewayGroupRemoveGatewayReqWithDefaults() *DNSGatewayGroupRemoveGatewayReq {
	this := DNSGatewayGroupRemoveGatewayReq{}
	return &this
}

// GetDnsGateways returns the DnsGateways field value if set, zero value otherwise.
func (o *DNSGatewayGroupRemoveGatewayReq) GetDnsGateways() []DNSGatewayGroupRemoveGatewayReqGatewaysElt {
	if o == nil || IsNil(o.DnsGateways) {
		var ret []DNSGatewayGroupRemoveGatewayReqGatewaysElt
		return ret
	}
	return o.DnsGateways
}

// GetDnsGatewaysOk returns a tuple with the DnsGateways field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DNSGatewayGroupRemoveGatewayReq) GetDnsGatewaysOk() ([]DNSGatewayGroupRemoveGatewayReqGatewaysElt, bool) {
	if o == nil || IsNil(o.DnsGateways) {
		return nil, false
	}
	return o.DnsGateways, true
}

// HasDnsGateways returns a boolean if a field has been set.
func (o *DNSGatewayGroupRemoveGatewayReq) HasDnsGateways() bool {
	if o != nil && !IsNil(o.DnsGateways) {
		return true
	}

	return false
}

// SetDnsGateways gets a reference to the given []DNSGatewayGroupRemoveGatewayReqGatewaysElt and assigns it to the DnsGateways field.
func (o *DNSGatewayGroupRemoveGatewayReq) SetDnsGateways(v []DNSGatewayGroupRemoveGatewayReqGatewaysElt) {
	o.DnsGateways = v
}

func (o DNSGatewayGroupRemoveGatewayReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DNSGatewayGroupRemoveGatewayReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DnsGateways) {
		toSerialize["dns_gateways"] = o.DnsGateways
	}
	return toSerialize, nil
}

type NullableDNSGatewayGroupRemoveGatewayReq struct {
	value *DNSGatewayGroupRemoveGatewayReq
	isSet bool
}

func (v NullableDNSGatewayGroupRemoveGatewayReq) Get() *DNSGatewayGroupRemoveGatewayReq {
	return v.value
}

func (v *NullableDNSGatewayGroupRemoveGatewayReq) Set(val *DNSGatewayGroupRemoveGatewayReq) {
	v.value = val
	v.isSet = true
}

func (v NullableDNSGatewayGroupRemoveGatewayReq) IsSet() bool {
	return v.isSet
}

func (v *NullableDNSGatewayGroupRemoveGatewayReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDNSGatewayGroupRemoveGatewayReq(val *DNSGatewayGroupRemoveGatewayReq) *NullableDNSGatewayGroupRemoveGatewayReq {
	return &NullableDNSGatewayGroupRemoveGatewayReq{value: val, isSet: true}
}

func (v NullableDNSGatewayGroupRemoveGatewayReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDNSGatewayGroupRemoveGatewayReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


