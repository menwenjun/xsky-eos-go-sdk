/*
XMS API

XMS is the controller of distributed storage system

API version: XSCALEROS_6.4.000.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DfsQuotaSamplesResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DfsQuotaSamplesResp{}

// DfsQuotaSamplesResp struct for DfsQuotaSamplesResp
type DfsQuotaSamplesResp struct {
	DfsQuotaSamples []DfsQuotaStat `json:"dfs_quota_samples,omitempty"`
}

// NewDfsQuotaSamplesResp instantiates a new DfsQuotaSamplesResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDfsQuotaSamplesResp() *DfsQuotaSamplesResp {
	this := DfsQuotaSamplesResp{}
	return &this
}

// NewDfsQuotaSamplesRespWithDefaults instantiates a new DfsQuotaSamplesResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDfsQuotaSamplesRespWithDefaults() *DfsQuotaSamplesResp {
	this := DfsQuotaSamplesResp{}
	return &this
}

// GetDfsQuotaSamples returns the DfsQuotaSamples field value if set, zero value otherwise.
func (o *DfsQuotaSamplesResp) GetDfsQuotaSamples() []DfsQuotaStat {
	if o == nil || IsNil(o.DfsQuotaSamples) {
		var ret []DfsQuotaStat
		return ret
	}
	return o.DfsQuotaSamples
}

// GetDfsQuotaSamplesOk returns a tuple with the DfsQuotaSamples field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DfsQuotaSamplesResp) GetDfsQuotaSamplesOk() ([]DfsQuotaStat, bool) {
	if o == nil || IsNil(o.DfsQuotaSamples) {
		return nil, false
	}
	return o.DfsQuotaSamples, true
}

// HasDfsQuotaSamples returns a boolean if a field has been set.
func (o *DfsQuotaSamplesResp) HasDfsQuotaSamples() bool {
	if o != nil && !IsNil(o.DfsQuotaSamples) {
		return true
	}

	return false
}

// SetDfsQuotaSamples gets a reference to the given []DfsQuotaStat and assigns it to the DfsQuotaSamples field.
func (o *DfsQuotaSamplesResp) SetDfsQuotaSamples(v []DfsQuotaStat) {
	o.DfsQuotaSamples = v
}

func (o DfsQuotaSamplesResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DfsQuotaSamplesResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DfsQuotaSamples) {
		toSerialize["dfs_quota_samples"] = o.DfsQuotaSamples
	}
	return toSerialize, nil
}

type NullableDfsQuotaSamplesResp struct {
	value *DfsQuotaSamplesResp
	isSet bool
}

func (v NullableDfsQuotaSamplesResp) Get() *DfsQuotaSamplesResp {
	return v.value
}

func (v *NullableDfsQuotaSamplesResp) Set(val *DfsQuotaSamplesResp) {
	v.value = val
	v.isSet = true
}

func (v NullableDfsQuotaSamplesResp) IsSet() bool {
	return v.isSet
}

func (v *NullableDfsQuotaSamplesResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDfsQuotaSamplesResp(val *DfsQuotaSamplesResp) *NullableDfsQuotaSamplesResp {
	return &NullableDfsQuotaSamplesResp{value: val, isSet: true}
}

func (v NullableDfsQuotaSamplesResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDfsQuotaSamplesResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


